var Jk=Object.defineProperty;var Zk=(t,e,n)=>e in t?Jk(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var W=(t,e,n)=>Zk(t,typeof e!="symbol"?e+"":e,n);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function n(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(s){if(s.ep)return;s.ep=!0;const r=n(s);fetch(s.href,r)}})();/**
* @vue/shared v3.5.16
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function Un(t){const e=Object.create(null);for(const n of t.split(","))e[n]=1;return n=>n in e}const bt={},ra=[],Mn=()=>{},rc=()=>!1,ko=t=>t.charCodeAt(0)===111&&t.charCodeAt(1)===110&&(t.charCodeAt(2)>122||t.charCodeAt(2)<97),Jh=t=>t.startsWith("onUpdate:"),St=Object.assign,Zh=(t,e)=>{const n=t.indexOf(e);n>-1&&t.splice(n,1)},Kk=Object.prototype.hasOwnProperty,kt=(t,e)=>Kk.call(t,e),Ne=Array.isArray,oa=t=>wa(t)==="[object Map]",Do=t=>wa(t)==="[object Set]",Km=t=>wa(t)==="[object Date]",$x=t=>wa(t)==="[object RegExp]",Xe=t=>typeof t=="function",ze=t=>typeof t=="string",pi=t=>typeof t=="symbol",Rt=t=>t!==null&&typeof t=="object",Kh=t=>(Rt(t)||Xe(t))&&Xe(t.then)&&Xe(t.catch),Jg=Object.prototype.toString,wa=t=>Jg.call(t),eT=t=>wa(t).slice(8,-1),bu=t=>wa(t)==="[object Object]",Qh=t=>ze(t)&&t!=="NaN"&&t[0]!=="-"&&""+parseInt(t,10)===t,Nr=Un(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),tT=Un("bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"),Gh=t=>{const e=Object.create(null);return n=>e[n]||(e[n]=t(n))},Qk=/-(\w)/g,Qt=Gh(t=>t.replace(Qk,(e,n)=>n?n.toUpperCase():"")),Gk=/\B([A-Z])/g,Jn=Gh(t=>t.replace(Gk,"-$1").toLowerCase()),Oo=Gh(t=>t.charAt(0).toUpperCase()+t.slice(1)),aa=Gh(t=>t?`on${Oo(t)}`:""),zn=(t,e)=>!Object.is(t,e),ca=(t,...e)=>{for(let n=0;n<t.length;n++)t[n](...e)},Zg=(t,e,n,i=!1)=>{Object.defineProperty(t,e,{configurable:!0,enumerable:!1,writable:i,value:n})},zl=t=>{const e=parseFloat(t);return isNaN(e)?t:e},Yl=t=>{const e=ze(t)?Number(t):NaN;return isNaN(e)?t:e};let Lb;const Su=()=>Lb||(Lb=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{}),_k=/^[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*$/;function $k(t){return _k.test(t)?`__props.${t}`:`__props[${JSON.stringify(t)}]`}function eD(t,e){return t+JSON.stringify(e,(n,i)=>typeof i=="function"?i.toString():i)}const tD={TEXT:1,1:"TEXT",CLASS:2,2:"CLASS",STYLE:4,4:"STYLE",PROPS:8,8:"PROPS",FULL_PROPS:16,16:"FULL_PROPS",NEED_HYDRATION:32,32:"NEED_HYDRATION",STABLE_FRAGMENT:64,64:"STABLE_FRAGMENT",KEYED_FRAGMENT:128,128:"KEYED_FRAGMENT",UNKEYED_FRAGMENT:256,256:"UNKEYED_FRAGMENT",NEED_PATCH:512,512:"NEED_PATCH",DYNAMIC_SLOTS:1024,1024:"DYNAMIC_SLOTS",DEV_ROOT_FRAGMENT:2048,2048:"DEV_ROOT_FRAGMENT",CACHED:-1,"-1":"CACHED",BAIL:-2,"-2":"BAIL"},nD={1:"TEXT",2:"CLASS",4:"STYLE",8:"PROPS",16:"FULL_PROPS",32:"NEED_HYDRATION",64:"STABLE_FRAGMENT",128:"KEYED_FRAGMENT",256:"UNKEYED_FRAGMENT",512:"NEED_PATCH",1024:"DYNAMIC_SLOTS",2048:"DEV_ROOT_FRAGMENT",[-1]:"HOISTED",[-2]:"BAIL"},iD={ELEMENT:1,1:"ELEMENT",FUNCTIONAL_COMPONENT:2,2:"FUNCTIONAL_COMPONENT",STATEFUL_COMPONENT:4,4:"STATEFUL_COMPONENT",TEXT_CHILDREN:8,8:"TEXT_CHILDREN",ARRAY_CHILDREN:16,16:"ARRAY_CHILDREN",SLOTS_CHILDREN:32,32:"SLOTS_CHILDREN",TELEPORT:64,64:"TELEPORT",SUSPENSE:128,128:"SUSPENSE",COMPONENT_SHOULD_KEEP_ALIVE:256,256:"COMPONENT_SHOULD_KEEP_ALIVE",COMPONENT_KEPT_ALIVE:512,512:"COMPONENT_KEPT_ALIVE",COMPONENT:6,6:"COMPONENT"},sD={STABLE:1,1:"STABLE",DYNAMIC:2,2:"DYNAMIC",FORWARDED:3,3:"FORWARDED"},rD={1:"STABLE",2:"DYNAMIC",3:"FORWARDED"},oD="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error,Symbol",Kg=Un(oD),aD=Kg,Mb=2;function nT(t,e=0,n=t.length){if(e=Math.max(0,Math.min(e,t.length)),n=Math.max(0,Math.min(n,t.length)),e>n)return"";let i=t.split(/(\r?\n)/);const s=i.filter((a,c)=>c%2===1);i=i.filter((a,c)=>c%2===0);let r=0;const o=[];for(let a=0;a<i.length;a++)if(r+=i[a].length+(s[a]&&s[a].length||0),r>=e){for(let c=a-Mb;c<=a+Mb||n>r;c++){if(c<0||c>=i.length)continue;const l=c+1;o.push(`${l}${" ".repeat(Math.max(3-String(l).length,0))}|  ${i[c]}`);const u=i[c].length,d=s[c]&&s[c].length||0;if(c===a){const h=e-(r-(u+d)),f=Math.max(1,n>r?u-h:n-e);o.push("   |  "+" ".repeat(h)+"^".repeat(f))}else if(c>a){if(n>r){const h=Math.max(Math.min(n-r,u),1);o.push("   |  "+"^".repeat(h))}r+=u+d}}break}return o.join(`
`)}function vt(t){if(Ne(t)){const e={};for(let n=0;n<t.length;n++){const i=t[n],s=ze(i)?Qg(i):vt(i);if(s)for(const r in s)e[r]=s[r]}return e}else if(ze(t)||Rt(t))return t}const cD=/;(?![^(]*\))/g,lD=/:([^]+)/,uD=/\/\*[^]*?\*\//g;function Qg(t){const e={};return t.replace(uD,"").split(cD).forEach(n=>{if(n){const i=n.split(lD);i.length>1&&(e[i[0].trim()]=i[1].trim())}}),e}function dD(t){if(!t)return"";if(ze(t))return t;let e="";for(const n in t){const i=t[n];if(ze(i)||typeof i=="number"){const s=n.startsWith("--")?n:Jn(n);e+=`${s}:${i};`}}return e}function Dt(t){let e="";if(ze(t))e=t;else if(Ne(t))for(let n=0;n<t.length;n++){const i=Dt(t[n]);i&&(e+=i+" ")}else if(Rt(t))for(const n in t)t[n]&&(e+=n+" ");return e.trim()}function iT(t){if(!t)return null;let{class:e,style:n}=t;return e&&!ze(e)&&(t.class=Dt(e)),n&&(t.style=vt(n)),t}const hD="html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot",fD="svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view",pD="annotation,annotation-xml,maction,maligngroup,malignmark,math,menclose,merror,mfenced,mfrac,mfraction,mglyph,mi,mlabeledtr,mlongdiv,mmultiscripts,mn,mo,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,none,semantics",mD="area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr",sT=Un(hD),rT=Un(fD),oT=Un(pD),aT=Un(mD),cT="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",lT=Un(cT),gD=Un(cT+",async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected");function Gg(t){return!!t||t===""}const ED=/[>/="'\u0009\u000a\u000c\u0020]/,Jp={};function vD(t){if(Jp.hasOwnProperty(t))return Jp[t];const e=ED.test(t);return e&&console.error(`unsafe attribute name: ${t}`),Jp[t]=!e}const bD={acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},SD=Un("accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap"),xD=Un("xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan"),TD=Un("accent,accentunder,actiontype,align,alignmentscope,altimg,altimg-height,altimg-valign,altimg-width,alttext,bevelled,close,columnsalign,columnlines,columnspan,denomalign,depth,dir,display,displaystyle,encoding,equalcolumns,equalrows,fence,fontstyle,fontweight,form,frame,framespacing,groupalign,height,href,id,indentalign,indentalignfirst,indentalignlast,indentshift,indentshiftfirst,indentshiftlast,indextype,justify,largetop,largeop,lquote,lspace,mathbackground,mathcolor,mathsize,mathvariant,maxsize,minlabelspacing,mode,other,overflow,position,rowalign,rowlines,rowspan,rquote,rspace,scriptlevel,scriptminsize,scriptsizemultiplier,selection,separator,separators,shift,side,src,stackalign,stretchy,subscriptshift,superscriptshift,symmetric,voffset,width,widths,xlink:href,xlink:show,xlink:type,xmlns");function CD(t){if(t==null)return!1;const e=typeof t;return e==="string"||e==="number"||e==="boolean"}const wD=/["'&<>]/;function AD(t){const e=""+t,n=wD.exec(e);if(!n)return e;let i="",s,r,o=0;for(r=n.index;r<e.length;r++){switch(e.charCodeAt(r)){case 34:s="&quot;";break;case 38:s="&amp;";break;case 39:s="&#39;";break;case 60:s="&lt;";break;case 62:s="&gt;";break;default:continue}o!==r&&(i+=e.slice(o,r)),o=r+1,i+=s}return o!==r?i+e.slice(o,r):i}const ND=/^-?>|<!--|-->|--!>|<!-$/g;function yD(t){return t.replace(ND,"")}const uT=/[ !"#$%&'()*+,./:;<=>?@[\\\]^`{|}~]/g;function kD(t,e){return t.replace(uT,n=>e?n==='"'?'\\\\\\"':`\\\\${n}`:`\\${n}`)}function DD(t,e){if(t.length!==e.length)return!1;let n=!0;for(let i=0;n&&i<t.length;i++)n=Rr(t[i],e[i]);return n}function Rr(t,e){if(t===e)return!0;let n=Km(t),i=Km(e);if(n||i)return n&&i?t.getTime()===e.getTime():!1;if(n=pi(t),i=pi(e),n||i)return t===e;if(n=Ne(t),i=Ne(e),n||i)return n&&i?DD(t,e):!1;if(n=Rt(t),i=Rt(e),n||i){if(!n||!i)return!1;const s=Object.keys(t).length,r=Object.keys(e).length;if(s!==r)return!1;for(const o in t){const a=t.hasOwnProperty(o),c=e.hasOwnProperty(o);if(a&&!c||!a&&c||!Rr(t[o],e[o]))return!1}}return String(t)===String(e)}function xu(t,e){return t.findIndex(n=>Rr(n,e))}const dT=t=>!!(t&&t.__v_isRef===!0),ce=t=>ze(t)?t:t==null?"":Ne(t)||Rt(t)&&(t.toString===Jg||!Xe(t.toString))?dT(t)?ce(t.value):JSON.stringify(t,hT,2):String(t),hT=(t,e)=>dT(e)?hT(t,e.value):oa(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((n,[i,s],r)=>(n[Zp(i,r)+" =>"]=s,n),{})}:Do(e)?{[`Set(${e.size})`]:[...e.values()].map(n=>Zp(n))}:pi(e)?Zp(e):Rt(e)&&!Ne(e)&&!bu(e)?String(e):e,Zp=(t,e="")=>{var n;return pi(t)?`Symbol(${(n=t.description)!=null?n:e})`:t},OD=Object.freeze(Object.defineProperty({__proto__:null,EMPTY_ARR:ra,EMPTY_OBJ:bt,NO:rc,NOOP:Mn,PatchFlagNames:nD,PatchFlags:tD,ShapeFlags:iD,SlotFlags:sD,camelize:Qt,capitalize:Oo,cssVarNameEscapeSymbolsRE:uT,def:Zg,escapeHtml:AD,escapeHtmlComment:yD,extend:St,genCacheKey:eD,genPropsAccessExp:$k,generateCodeFrame:nT,getEscapedCssVarName:kD,getGlobalThis:Su,hasChanged:zn,hasOwn:kt,hyphenate:Jn,includeBooleanAttr:Gg,invokeArrayFns:ca,isArray:Ne,isBooleanAttr:gD,isBuiltInDirective:tT,isDate:Km,isFunction:Xe,isGloballyAllowed:Kg,isGloballyWhitelisted:aD,isHTMLTag:sT,isIntegerKey:Qh,isKnownHtmlAttr:SD,isKnownMathMLAttr:TD,isKnownSvgAttr:xD,isMap:oa,isMathMLTag:oT,isModelListener:Jh,isObject:Rt,isOn:ko,isPlainObject:bu,isPromise:Kh,isRegExp:$x,isRenderableAttrValue:CD,isReservedProp:Nr,isSSRSafeAttrName:vD,isSVGTag:rT,isSet:Do,isSpecialBooleanAttr:lT,isString:ze,isSymbol:pi,isVoidTag:aT,looseEqual:Rr,looseIndexOf:xu,looseToNumber:zl,makeMap:Un,normalizeClass:Dt,normalizeProps:iT,normalizeStyle:vt,objectToString:Jg,parseStringStyle:Qg,propsToAttrMap:bD,remove:Zh,slotFlagsText:rD,stringifyStyle:dD,toDisplayString:ce,toHandlerKey:aa,toNumber:Yl,toRawType:eT,toTypeString:wa},Symbol.toStringTag,{value:"Module"}));/**
* @vue/reactivity v3.5.16
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let jn;class _g{constructor(e=!1){this.detached=e,this._active=!0,this._on=0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=jn,!e&&jn&&(this.index=(jn.scopes||(jn.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let e,n;if(this.scopes)for(e=0,n=this.scopes.length;e<n;e++)this.scopes[e].pause();for(e=0,n=this.effects.length;e<n;e++)this.effects[e].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let e,n;if(this.scopes)for(e=0,n=this.scopes.length;e<n;e++)this.scopes[e].resume();for(e=0,n=this.effects.length;e<n;e++)this.effects[e].resume()}}run(e){if(this._active){const n=jn;try{return jn=this,e()}finally{jn=n}}}on(){++this._on===1&&(this.prevScope=jn,jn=this)}off(){this._on>0&&--this._on===0&&(jn=this.prevScope,this.prevScope=void 0)}stop(e){if(this._active){this._active=!1;let n,i;for(n=0,i=this.effects.length;n<i;n++)this.effects[n].stop();for(this.effects.length=0,n=0,i=this.cleanups.length;n<i;n++)this.cleanups[n]();if(this.cleanups.length=0,this.scopes){for(n=0,i=this.scopes.length;n<i;n++)this.scopes[n].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!e){const s=this.parent.scopes.pop();s&&s!==this&&(this.parent.scopes[this.index]=s,s.index=this.index)}this.parent=void 0}}}function $g(t){return new _g(t)}function eE(){return jn}function fT(t,e=!1){jn&&jn.cleanups.push(t)}let Kt;const Kp=new WeakSet;class Jl{constructor(e){this.fn=e,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,jn&&jn.active&&jn.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,Kp.has(this)&&(Kp.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||mT(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,Bb(this),gT(this);const e=Kt,n=Ds;Kt=this,Ds=!0;try{return this.fn()}finally{ET(this),Kt=e,Ds=n,this.flags&=-3}}stop(){if(this.flags&1){for(let e=this.deps;e;e=e.nextDep)iE(e);this.deps=this.depsTail=void 0,Bb(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?Kp.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){Qm(this)&&this.run()}get dirty(){return Qm(this)}}let pT=0,Ll,Ml;function mT(t,e=!1){if(t.flags|=8,e){t.next=Ml,Ml=t;return}t.next=Ll,Ll=t}function tE(){pT++}function nE(){if(--pT>0)return;if(Ml){let e=Ml;for(Ml=void 0;e;){const n=e.next;e.next=void 0,e.flags&=-9,e=n}}let t;for(;Ll;){let e=Ll;for(Ll=void 0;e;){const n=e.next;if(e.next=void 0,e.flags&=-9,e.flags&1)try{e.trigger()}catch(i){t||(t=i)}e=n}}if(t)throw t}function gT(t){for(let e=t.deps;e;e=e.nextDep)e.version=-1,e.prevActiveLink=e.dep.activeLink,e.dep.activeLink=e}function ET(t){let e,n=t.depsTail,i=n;for(;i;){const s=i.prevDep;i.version===-1?(i===n&&(n=s),iE(i),PD(i)):e=i,i.dep.activeLink=i.prevActiveLink,i.prevActiveLink=void 0,i=s}t.deps=e,t.depsTail=n}function Qm(t){for(let e=t.deps;e;e=e.nextDep)if(e.dep.version!==e.version||e.dep.computed&&(vT(e.dep.computed)||e.dep.version!==e.version))return!0;return!!t._dirty}function vT(t){if(t.flags&4&&!(t.flags&16)||(t.flags&=-17,t.globalVersion===Zl)||(t.globalVersion=Zl,!t.isSSR&&t.flags&128&&(!t.deps&&!t._dirty||!Qm(t))))return;t.flags|=2;const e=t.dep,n=Kt,i=Ds;Kt=t,Ds=!0;try{gT(t);const s=t.fn(t._value);(e.version===0||zn(s,t._value))&&(t.flags|=128,t._value=s,e.version++)}catch(s){throw e.version++,s}finally{Kt=n,Ds=i,ET(t),t.flags&=-3}}function iE(t,e=!1){const{dep:n,prevSub:i,nextSub:s}=t;if(i&&(i.nextSub=s,t.prevSub=void 0),s&&(s.prevSub=i,t.nextSub=void 0),n.subs===t&&(n.subs=i,!i&&n.computed)){n.computed.flags&=-5;for(let r=n.computed.deps;r;r=r.nextDep)iE(r,!0)}!e&&!--n.sc&&n.map&&n.map.delete(n.key)}function PD(t){const{prevDep:e,nextDep:n}=t;e&&(e.nextDep=n,t.prevDep=void 0),n&&(n.prevDep=e,t.nextDep=void 0)}function ID(t,e){t.effect instanceof Jl&&(t=t.effect.fn);const n=new Jl(t);e&&St(n,e);try{n.run()}catch(s){throw n.stop(),s}const i=n.run.bind(n);return i.effect=n,i}function RD(t){t.effect.stop()}let Ds=!0;const bT=[];function Lr(){bT.push(Ds),Ds=!1}function Mr(){const t=bT.pop();Ds=t===void 0?!0:t}function Bb(t){const{cleanup:e}=t;if(t.cleanup=void 0,e){const n=Kt;Kt=void 0;try{e()}finally{Kt=n}}}let Zl=0;class LD{constructor(e,n){this.sub=e,this.dep=n,this.version=n.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class _h{constructor(e){this.computed=e,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0}track(e){if(!Kt||!Ds||Kt===this.computed)return;let n=this.activeLink;if(n===void 0||n.sub!==Kt)n=this.activeLink=new LD(Kt,this),Kt.deps?(n.prevDep=Kt.depsTail,Kt.depsTail.nextDep=n,Kt.depsTail=n):Kt.deps=Kt.depsTail=n,ST(n);else if(n.version===-1&&(n.version=this.version,n.nextDep)){const i=n.nextDep;i.prevDep=n.prevDep,n.prevDep&&(n.prevDep.nextDep=i),n.prevDep=Kt.depsTail,n.nextDep=void 0,Kt.depsTail.nextDep=n,Kt.depsTail=n,Kt.deps===n&&(Kt.deps=i)}return n}trigger(e){this.version++,Zl++,this.notify(e)}notify(e){tE();try{for(let n=this.subs;n;n=n.prevSub)n.sub.notify()&&n.sub.dep.notify()}finally{nE()}}}function ST(t){if(t.dep.sc++,t.sub.flags&4){const e=t.dep.computed;if(e&&!t.dep.subs){e.flags|=20;for(let i=e.deps;i;i=i.nextDep)ST(i)}const n=t.dep.subs;n!==t&&(t.prevSub=n,n&&(n.nextSub=t)),t.dep.subs=t}}const oh=new WeakMap,la=Symbol(""),Gm=Symbol(""),Kl=Symbol("");function Yn(t,e,n){if(Ds&&Kt){let i=oh.get(t);i||oh.set(t,i=new Map);let s=i.get(n);s||(i.set(n,s=new _h),s.map=i,s.key=n),s.track()}}function Tr(t,e,n,i,s,r){const o=oh.get(t);if(!o){Zl++;return}const a=c=>{c&&c.trigger()};if(tE(),e==="clear")o.forEach(a);else{const c=Ne(t),l=c&&Qh(n);if(c&&n==="length"){const u=Number(i);o.forEach((d,h)=>{(h==="length"||h===Kl||!pi(h)&&h>=u)&&a(d)})}else switch((n!==void 0||o.has(void 0))&&a(o.get(n)),l&&a(o.get(Kl)),e){case"add":c?l&&a(o.get("length")):(a(o.get(la)),oa(t)&&a(o.get(Gm)));break;case"delete":c||(a(o.get(la)),oa(t)&&a(o.get(Gm)));break;case"set":oa(t)&&a(o.get(la));break}}nE()}function MD(t,e){const n=oh.get(t);return n&&n.get(e)}function Ya(t){const e=Ct(t);return e===t?e:(Yn(e,"iterate",Kl),Bi(t)?e:e.map(Wn))}function $h(t){return Yn(t=Ct(t),"iterate",Kl),t}const BD={__proto__:null,[Symbol.iterator](){return Qp(this,Symbol.iterator,Wn)},concat(...t){return Ya(this).concat(...t.map(e=>Ne(e)?Ya(e):e))},entries(){return Qp(this,"entries",t=>(t[1]=Wn(t[1]),t))},every(t,e){return fr(this,"every",t,e,void 0,arguments)},filter(t,e){return fr(this,"filter",t,e,n=>n.map(Wn),arguments)},find(t,e){return fr(this,"find",t,e,Wn,arguments)},findIndex(t,e){return fr(this,"findIndex",t,e,void 0,arguments)},findLast(t,e){return fr(this,"findLast",t,e,Wn,arguments)},findLastIndex(t,e){return fr(this,"findLastIndex",t,e,void 0,arguments)},forEach(t,e){return fr(this,"forEach",t,e,void 0,arguments)},includes(...t){return Gp(this,"includes",t)},indexOf(...t){return Gp(this,"indexOf",t)},join(t){return Ya(this).join(t)},lastIndexOf(...t){return Gp(this,"lastIndexOf",t)},map(t,e){return fr(this,"map",t,e,void 0,arguments)},pop(){return ml(this,"pop")},push(...t){return ml(this,"push",t)},reduce(t,...e){return Fb(this,"reduce",t,e)},reduceRight(t,...e){return Fb(this,"reduceRight",t,e)},shift(){return ml(this,"shift")},some(t,e){return fr(this,"some",t,e,void 0,arguments)},splice(...t){return ml(this,"splice",t)},toReversed(){return Ya(this).toReversed()},toSorted(t){return Ya(this).toSorted(t)},toSpliced(...t){return Ya(this).toSpliced(...t)},unshift(...t){return ml(this,"unshift",t)},values(){return Qp(this,"values",Wn)}};function Qp(t,e,n){const i=$h(t),s=i[e]();return i!==t&&!Bi(t)&&(s._next=s.next,s.next=()=>{const r=s._next();return r.value&&(r.value=n(r.value)),r}),s}const FD=Array.prototype;function fr(t,e,n,i,s,r){const o=$h(t),a=o!==t&&!Bi(t),c=o[e];if(c!==FD[e]){const d=c.apply(t,r);return a?Wn(d):d}let l=n;o!==t&&(a?l=function(d,h){return n.call(this,Wn(d),h,t)}:n.length>2&&(l=function(d,h){return n.call(this,d,h,t)}));const u=c.call(o,l,i);return a&&s?s(u):u}function Fb(t,e,n,i){const s=$h(t);let r=n;return s!==t&&(Bi(t)?n.length>3&&(r=function(o,a,c){return n.call(this,o,a,c,t)}):r=function(o,a,c){return n.call(this,o,Wn(a),c,t)}),s[e](r,...i)}function Gp(t,e,n){const i=Ct(t);Yn(i,"iterate",Kl);const s=i[e](...n);return(s===-1||s===!1)&&nf(n[0])?(n[0]=Ct(n[0]),i[e](...n)):s}function ml(t,e,n=[]){Lr(),tE();const i=Ct(t)[e].apply(t,n);return nE(),Mr(),i}const UD=Un("__proto__,__v_isRef,__isVue"),xT=new Set(Object.getOwnPropertyNames(Symbol).filter(t=>t!=="arguments"&&t!=="caller").map(t=>Symbol[t]).filter(pi));function VD(t){pi(t)||(t=String(t));const e=Ct(this);return Yn(e,"has",t),e.hasOwnProperty(t)}class TT{constructor(e=!1,n=!1){this._isReadonly=e,this._isShallow=n}get(e,n,i){if(n==="__v_skip")return e.__v_skip;const s=this._isReadonly,r=this._isShallow;if(n==="__v_isReactive")return!s;if(n==="__v_isReadonly")return s;if(n==="__v_isShallow")return r;if(n==="__v_raw")return i===(s?r?kT:yT:r?NT:AT).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(i)?e:void 0;const o=Ne(e);if(!s){let c;if(o&&(c=BD[n]))return c;if(n==="hasOwnProperty")return VD}const a=Reflect.get(e,n,cn(e)?e:i);return(pi(n)?xT.has(n):UD(n))||(s||Yn(e,"get",n),r)?a:cn(a)?o&&Qh(n)?a:a.value:Rt(a)?s?rE(a):Po(a):a}}class CT extends TT{constructor(e=!1){super(!1,e)}set(e,n,i,s){let r=e[n];if(!this._isShallow){const c=Br(r);if(!Bi(i)&&!Br(i)&&(r=Ct(r),i=Ct(i)),!Ne(e)&&cn(r)&&!cn(i))return c?!1:(r.value=i,!0)}const o=Ne(e)&&Qh(n)?Number(n)<e.length:kt(e,n),a=Reflect.set(e,n,i,cn(e)?e:s);return e===Ct(s)&&(o?zn(i,r)&&Tr(e,"set",n,i):Tr(e,"add",n,i)),a}deleteProperty(e,n){const i=kt(e,n);e[n];const s=Reflect.deleteProperty(e,n);return s&&i&&Tr(e,"delete",n,void 0),s}has(e,n){const i=Reflect.has(e,n);return(!pi(n)||!xT.has(n))&&Yn(e,"has",n),i}ownKeys(e){return Yn(e,"iterate",Ne(e)?"length":la),Reflect.ownKeys(e)}}class wT extends TT{constructor(e=!1){super(!0,e)}set(e,n){return!0}deleteProperty(e,n){return!0}}const WD=new CT,HD=new wT,XD=new CT(!0),jD=new wT(!0),_m=t=>t,fd=t=>Reflect.getPrototypeOf(t);function qD(t,e,n){return function(...i){const s=this.__v_raw,r=Ct(s),o=oa(r),a=t==="entries"||t===Symbol.iterator&&o,c=t==="keys"&&o,l=s[t](...i),u=n?_m:e?ah:Wn;return!e&&Yn(r,"iterate",c?Gm:la),{next(){const{value:d,done:h}=l.next();return h?{value:d,done:h}:{value:a?[u(d[0]),u(d[1])]:u(d),done:h}},[Symbol.iterator](){return this}}}}function pd(t){return function(...e){return t==="delete"?!1:t==="clear"?void 0:this}}function zD(t,e){const n={get(s){const r=this.__v_raw,o=Ct(r),a=Ct(s);t||(zn(s,a)&&Yn(o,"get",s),Yn(o,"get",a));const{has:c}=fd(o),l=e?_m:t?ah:Wn;if(c.call(o,s))return l(r.get(s));if(c.call(o,a))return l(r.get(a));r!==o&&r.get(s)},get size(){const s=this.__v_raw;return!t&&Yn(Ct(s),"iterate",la),Reflect.get(s,"size",s)},has(s){const r=this.__v_raw,o=Ct(r),a=Ct(s);return t||(zn(s,a)&&Yn(o,"has",s),Yn(o,"has",a)),s===a?r.has(s):r.has(s)||r.has(a)},forEach(s,r){const o=this,a=o.__v_raw,c=Ct(a),l=e?_m:t?ah:Wn;return!t&&Yn(c,"iterate",la),a.forEach((u,d)=>s.call(r,l(u),l(d),o))}};return St(n,t?{add:pd("add"),set:pd("set"),delete:pd("delete"),clear:pd("clear")}:{add(s){!e&&!Bi(s)&&!Br(s)&&(s=Ct(s));const r=Ct(this);return fd(r).has.call(r,s)||(r.add(s),Tr(r,"add",s,s)),this},set(s,r){!e&&!Bi(r)&&!Br(r)&&(r=Ct(r));const o=Ct(this),{has:a,get:c}=fd(o);let l=a.call(o,s);l||(s=Ct(s),l=a.call(o,s));const u=c.call(o,s);return o.set(s,r),l?zn(r,u)&&Tr(o,"set",s,r):Tr(o,"add",s,r),this},delete(s){const r=Ct(this),{has:o,get:a}=fd(r);let c=o.call(r,s);c||(s=Ct(s),c=o.call(r,s)),a&&a.call(r,s);const l=r.delete(s);return c&&Tr(r,"delete",s,void 0),l},clear(){const s=Ct(this),r=s.size!==0,o=s.clear();return r&&Tr(s,"clear",void 0,void 0),o}}),["keys","values","entries",Symbol.iterator].forEach(s=>{n[s]=qD(s,t,e)}),n}function ef(t,e){const n=zD(t,e);return(i,s,r)=>s==="__v_isReactive"?!t:s==="__v_isReadonly"?t:s==="__v_raw"?i:Reflect.get(kt(n,s)&&s in i?n:i,s,r)}const YD={get:ef(!1,!1)},JD={get:ef(!1,!0)},ZD={get:ef(!0,!1)},KD={get:ef(!0,!0)},AT=new WeakMap,NT=new WeakMap,yT=new WeakMap,kT=new WeakMap;function QD(t){switch(t){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function GD(t){return t.__v_skip||!Object.isExtensible(t)?0:QD(eT(t))}function Po(t){return Br(t)?t:tf(t,!1,WD,YD,AT)}function sE(t){return tf(t,!1,XD,JD,NT)}function rE(t){return tf(t,!0,HD,ZD,yT)}function _D(t){return tf(t,!0,jD,KD,kT)}function tf(t,e,n,i,s){if(!Rt(t)||t.__v_raw&&!(e&&t.__v_isReactive))return t;const r=GD(t);if(r===0)return t;const o=s.get(t);if(o)return o;const a=new Proxy(t,r===2?i:n);return s.set(t,a),a}function Js(t){return Br(t)?Js(t.__v_raw):!!(t&&t.__v_isReactive)}function Br(t){return!!(t&&t.__v_isReadonly)}function Bi(t){return!!(t&&t.__v_isShallow)}function nf(t){return t?!!t.__v_raw:!1}function Ct(t){const e=t&&t.__v_raw;return e?Ct(e):t}function sf(t){return!kt(t,"__v_skip")&&Object.isExtensible(t)&&Zg(t,"__v_skip",!0),t}const Wn=t=>Rt(t)?Po(t):t,ah=t=>Rt(t)?rE(t):t;function cn(t){return t?t.__v_isRef===!0:!1}function J(t){return DT(t,!1)}function oE(t){return DT(t,!0)}function DT(t,e){return cn(t)?t:new $D(t,e)}class $D{constructor(e,n){this.dep=new _h,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=n?e:Ct(e),this._value=n?e:Wn(e),this.__v_isShallow=n}get value(){return this.dep.track(),this._value}set value(e){const n=this._rawValue,i=this.__v_isShallow||Bi(e)||Br(e);e=i?e:Ct(e),zn(e,n)&&(this._rawValue=e,this._value=i?e:Wn(e),this.dep.trigger())}}function eO(t){t.dep&&t.dep.trigger()}function ie(t){return cn(t)?t.value:t}function tO(t){return Xe(t)?t():ie(t)}const nO={get:(t,e,n)=>e==="__v_raw"?t:ie(Reflect.get(t,e,n)),set:(t,e,n,i)=>{const s=t[e];return cn(s)&&!cn(n)?(s.value=n,!0):Reflect.set(t,e,n,i)}};function aE(t){return Js(t)?t:new Proxy(t,nO)}class iO{constructor(e){this.__v_isRef=!0,this._value=void 0;const n=this.dep=new _h,{get:i,set:s}=e(n.track.bind(n),n.trigger.bind(n));this._get=i,this._set=s}get value(){return this._value=this._get()}set value(e){this._set(e)}}function OT(t){return new iO(t)}function PT(t){const e=Ne(t)?new Array(t.length):{};for(const n in t)e[n]=IT(t,n);return e}class sO{constructor(e,n,i){this._object=e,this._key=n,this._defaultValue=i,this.__v_isRef=!0,this._value=void 0}get value(){const e=this._object[this._key];return this._value=e===void 0?this._defaultValue:e}set value(e){this._object[this._key]=e}get dep(){return MD(Ct(this._object),this._key)}}class rO{constructor(e){this._getter=e,this.__v_isRef=!0,this.__v_isReadonly=!0,this._value=void 0}get value(){return this._value=this._getter()}}function oO(t,e,n){return cn(t)?t:Xe(t)?new rO(t):Rt(t)&&arguments.length>1?IT(t,e,n):J(t)}function IT(t,e,n){const i=t[e];return cn(i)?i:new sO(t,e,n)}class aO{constructor(e,n,i){this.fn=e,this.setter=n,this._value=void 0,this.dep=new _h(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=Zl-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!n,this.isSSR=i}notify(){if(this.flags|=16,!(this.flags&8)&&Kt!==this)return mT(this,!0),!0}get value(){const e=this.dep.track();return vT(this),e&&(e.version=this.dep.version),this._value}set value(e){this.setter&&this.setter(e)}}function cO(t,e,n=!1){let i,s;return Xe(t)?i=t:(i=t.get,s=t.set),new aO(i,s,n)}const lO={GET:"get",HAS:"has",ITERATE:"iterate"},uO={SET:"set",ADD:"add",DELETE:"delete",CLEAR:"clear"},md={},ch=new WeakMap;let so;function dO(){return so}function RT(t,e=!1,n=so){if(n){let i=ch.get(n);i||ch.set(n,i=[]),i.push(t)}}function hO(t,e,n=bt){const{immediate:i,deep:s,once:r,scheduler:o,augmentJob:a,call:c}=n,l=v=>s?v:Bi(v)||s===!1||s===0?Cr(v,1):Cr(v);let u,d,h,f,p=!1,m=!1;if(cn(t)?(d=()=>t.value,p=Bi(t)):Js(t)?(d=()=>l(t),p=!0):Ne(t)?(m=!0,p=t.some(v=>Js(v)||Bi(v)),d=()=>t.map(v=>{if(cn(v))return v.value;if(Js(v))return l(v);if(Xe(v))return c?c(v,2):v()})):Xe(t)?e?d=c?()=>c(t,2):t:d=()=>{if(h){Lr();try{h()}finally{Mr()}}const v=so;so=u;try{return c?c(t,3,[f]):t(f)}finally{so=v}}:d=Mn,e&&s){const v=d,T=s===!0?1/0:s;d=()=>Cr(v(),T)}const b=eE(),E=()=>{u.stop(),b&&b.active&&Zh(b.effects,u)};if(r&&e){const v=e;e=(...T)=>{v(...T),E()}}let x=m?new Array(t.length).fill(md):md;const S=v=>{if(!(!(u.flags&1)||!u.dirty&&!v))if(e){const T=u.run();if(s||p||(m?T.some((w,D)=>zn(w,x[D])):zn(T,x))){h&&h();const w=so;so=u;try{const D=[T,x===md?void 0:m&&x[0]===md?[]:x,f];x=T,c?c(e,3,D):e(...D)}finally{so=w}}}else u.run()};return a&&a(S),u=new Jl(d),u.scheduler=o?()=>o(S,!1):S,f=v=>RT(v,!1,u),h=u.onStop=()=>{const v=ch.get(u);if(v){if(c)c(v,4);else for(const T of v)T();ch.delete(u)}},e?i?S(!0):x=u.run():o?o(S.bind(null,!0),!0):u.run(),E.pause=u.pause.bind(u),E.resume=u.resume.bind(u),E.stop=E,E}function Cr(t,e=1/0,n){if(e<=0||!Rt(t)||t.__v_skip||(n=n||new Set,n.has(t)))return t;if(n.add(t),e--,cn(t))Cr(t.value,e,n);else if(Ne(t))for(let i=0;i<t.length;i++)Cr(t[i],e,n);else if(Do(t)||oa(t))t.forEach(i=>{Cr(i,e,n)});else if(bu(t)){for(const i in t)Cr(t[i],e,n);for(const i of Object.getOwnPropertySymbols(t))Object.prototype.propertyIsEnumerable.call(t,i)&&Cr(t[i],e,n)}return t}/**
* @vue/runtime-core v3.5.16
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const LT=[];function fO(t){LT.push(t)}function pO(){LT.pop()}function mO(t,e){}const gO={SETUP_FUNCTION:0,0:"SETUP_FUNCTION",RENDER_FUNCTION:1,1:"RENDER_FUNCTION",NATIVE_EVENT_HANDLER:5,5:"NATIVE_EVENT_HANDLER",COMPONENT_EVENT_HANDLER:6,6:"COMPONENT_EVENT_HANDLER",VNODE_HOOK:7,7:"VNODE_HOOK",DIRECTIVE_HOOK:8,8:"DIRECTIVE_HOOK",TRANSITION_HOOK:9,9:"TRANSITION_HOOK",APP_ERROR_HANDLER:10,10:"APP_ERROR_HANDLER",APP_WARN_HANDLER:11,11:"APP_WARN_HANDLER",FUNCTION_REF:12,12:"FUNCTION_REF",ASYNC_COMPONENT_LOADER:13,13:"ASYNC_COMPONENT_LOADER",SCHEDULER:14,14:"SCHEDULER",COMPONENT_UPDATE:15,15:"COMPONENT_UPDATE",APP_UNMOUNT_CLEANUP:16,16:"APP_UNMOUNT_CLEANUP"},EO={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",0:"setup function",1:"render function",2:"watcher getter",3:"watcher callback",4:"watcher cleanup function",5:"native event handler",6:"component event handler",7:"vnode hook",8:"directive hook",9:"transition hook",10:"app errorHandler",11:"app warnHandler",12:"ref function",13:"async component loader",14:"scheduler flush",15:"component update",16:"app unmount cleanup function"};function Jc(t,e,n,i){try{return i?t(...i):t()}catch(s){Aa(s,e,n)}}function os(t,e,n,i){if(Xe(t)){const s=Jc(t,e,n,i);return s&&Kh(s)&&s.catch(r=>{Aa(r,e,n)}),s}if(Ne(t)){const s=[];for(let r=0;r<t.length;r++)s.push(os(t[r],e,n,i));return s}}function Aa(t,e,n,i=!0){const s=e?e.vnode:null,{errorHandler:r,throwUnhandledErrorInProduction:o}=e&&e.appContext.config||bt;if(e){let a=e.parent;const c=e.proxy,l=`https://vuejs.org/error-reference/#runtime-${n}`;for(;a;){const u=a.ec;if(u){for(let d=0;d<u.length;d++)if(u[d](t,c,l)===!1)return}a=a.parent}if(r){Lr(),Jc(r,null,10,[t,c,l]),Mr();return}}vO(t,n,s,i,o)}function vO(t,e,n,i=!0,s=!1){if(s)throw t;console.error(t)}const oi=[];let qs=-1;const dc=[];let ro=null,ec=0;const MT=Promise.resolve();let lh=null;function Zc(t){const e=lh||MT;return t?e.then(this?t.bind(this):t):e}function bO(t){let e=qs+1,n=oi.length;for(;e<n;){const i=e+n>>>1,s=oi[i],r=Gl(s);r<t||r===t&&s.flags&2?e=i+1:n=i}return e}function cE(t){if(!(t.flags&1)){const e=Gl(t),n=oi[oi.length-1];!n||!(t.flags&2)&&e>=Gl(n)?oi.push(t):oi.splice(bO(e),0,t),t.flags|=1,BT()}}function BT(){lh||(lh=MT.then(FT))}function Ql(t){Ne(t)?dc.push(...t):ro&&t.id===-1?ro.splice(ec+1,0,t):t.flags&1||(dc.push(t),t.flags|=1),BT()}function Ub(t,e,n=qs+1){for(;n<oi.length;n++){const i=oi[n];if(i&&i.flags&2){if(t&&i.id!==t.uid)continue;oi.splice(n,1),n--,i.flags&4&&(i.flags&=-2),i(),i.flags&4||(i.flags&=-2)}}}function uh(t){if(dc.length){const e=[...new Set(dc)].sort((n,i)=>Gl(n)-Gl(i));if(dc.length=0,ro){ro.push(...e);return}for(ro=e,ec=0;ec<ro.length;ec++){const n=ro[ec];n.flags&4&&(n.flags&=-2),n.flags&8||n(),n.flags&=-2}ro=null,ec=0}}const Gl=t=>t.id==null?t.flags&2?-1:1/0:t.id;function FT(t){try{for(qs=0;qs<oi.length;qs++){const e=oi[qs];e&&!(e.flags&8)&&(e.flags&4&&(e.flags&=-2),Jc(e,e.i,e.i?15:14),e.flags&4||(e.flags&=-2))}}finally{for(;qs<oi.length;qs++){const e=oi[qs];e&&(e.flags&=-2)}qs=-1,oi.length=0,uh(),lh=null,(oi.length||dc.length)&&FT()}}let tc,gd=[];function UT(t,e){var n,i;tc=t,tc?(tc.enabled=!0,gd.forEach(({event:s,args:r})=>tc.emit(s,...r)),gd=[]):typeof window<"u"&&window.HTMLElement&&!((i=(n=window.navigator)==null?void 0:n.userAgent)!=null&&i.includes("jsdom"))?((e.__VUE_DEVTOOLS_HOOK_REPLAY__=e.__VUE_DEVTOOLS_HOOK_REPLAY__||[]).push(r=>{UT(r,e)}),setTimeout(()=>{tc||(e.__VUE_DEVTOOLS_HOOK_REPLAY__=null,gd=[])},3e3)):gd=[]}let Pn=null,rf=null;function _l(t){const e=Pn;return Pn=t,rf=t&&t.type.__scopeId||null,e}function SO(t){rf=t}function xO(){rf=null}const TO=t=>Tu;function Tu(t,e=Pn,n){if(!e||t._n)return t;const i=(...s)=>{i._d&&og(-1);const r=_l(e);let o;try{o=t(...s)}finally{_l(r),i._d&&og(1)}return o};return i._n=!0,i._c=!0,i._d=!0,i}function lt(t,e){if(Pn===null)return t;const n=Nu(Pn),i=t.dirs||(t.dirs=[]);for(let s=0;s<e.length;s++){let[r,o,a,c=bt]=e[s];r&&(Xe(r)&&(r={mounted:r,updated:r}),r.deep&&Cr(o),i.push({dir:r,instance:n,value:o,oldValue:void 0,arg:a,modifiers:c}))}return t}function zs(t,e,n,i){const s=t.dirs,r=e&&e.dirs;for(let o=0;o<s.length;o++){const a=s[o];r&&(a.oldValue=r[o].value);let c=a.dir[i];c&&(Lr(),os(c,n,8,[t.el,a,t,e]),Mr())}}const VT=Symbol("_vte"),WT=t=>t.__isTeleport,Bl=t=>t&&(t.disabled||t.disabled===""),Vb=t=>t&&(t.defer||t.defer===""),Wb=t=>typeof SVGElement<"u"&&t instanceof SVGElement,Hb=t=>typeof MathMLElement=="function"&&t instanceof MathMLElement,$m=(t,e)=>{const n=t&&t.to;return ze(n)?e?e(n):null:n},HT={name:"Teleport",__isTeleport:!0,process(t,e,n,i,s,r,o,a,c,l){const{mc:u,pc:d,pbc:h,o:{insert:f,querySelector:p,createText:m,createComment:b}}=l,E=Bl(e.props);let{shapeFlag:x,children:S,dynamicChildren:v}=e;if(t==null){const T=e.el=m(""),w=e.anchor=m("");f(T,n,i),f(w,n,i);const D=(y,O)=>{x&16&&(s&&s.isCE&&(s.ce._teleportTarget=y),u(S,y,O,s,r,o,a,c))},A=()=>{const y=e.target=$m(e.props,p),O=XT(y,e,m,f);y&&(o!=="svg"&&Wb(y)?o="svg":o!=="mathml"&&Hb(y)&&(o="mathml"),E||(D(y,O),Hd(e,!1)))};E&&(D(n,w),Hd(e,!0)),Vb(e.props)?(e.el.__isMounted=!1,kn(()=>{A(),delete e.el.__isMounted},r)):A()}else{if(Vb(e.props)&&t.el.__isMounted===!1){kn(()=>{HT.process(t,e,n,i,s,r,o,a,c,l)},r);return}e.el=t.el,e.targetStart=t.targetStart;const T=e.anchor=t.anchor,w=e.target=t.target,D=e.targetAnchor=t.targetAnchor,A=Bl(t.props),y=A?n:w,O=A?T:D;if(o==="svg"||Wb(w)?o="svg":(o==="mathml"||Hb(w))&&(o="mathml"),v?(h(t.dynamicChildren,v,y,s,r,o,a),bE(t,e,!0)):c||d(t,e,y,O,s,r,o,a,!1),E)A?e.props&&t.props&&e.props.to!==t.props.to&&(e.props.to=t.props.to):Ed(e,n,T,l,1);else if((e.props&&e.props.to)!==(t.props&&t.props.to)){const L=e.target=$m(e.props,p);L&&Ed(e,L,null,l,0)}else A&&Ed(e,w,D,l,1);Hd(e,E)}},remove(t,e,n,{um:i,o:{remove:s}},r){const{shapeFlag:o,children:a,anchor:c,targetStart:l,targetAnchor:u,target:d,props:h}=t;if(d&&(s(l),s(u)),r&&s(c),o&16){const f=r||!Bl(h);for(let p=0;p<a.length;p++){const m=a[p];i(m,e,n,f,!!m.dynamicChildren)}}},move:Ed,hydrate:CO};function Ed(t,e,n,{o:{insert:i},m:s},r=2){r===0&&i(t.targetAnchor,e,n);const{el:o,anchor:a,shapeFlag:c,children:l,props:u}=t,d=r===2;if(d&&i(o,e,n),(!d||Bl(u))&&c&16)for(let h=0;h<l.length;h++)s(l[h],e,n,2);d&&i(a,e,n)}function CO(t,e,n,i,s,r,{o:{nextSibling:o,parentNode:a,querySelector:c,insert:l,createText:u}},d){const h=e.target=$m(e.props,c);if(h){const f=Bl(e.props),p=h._lpa||h.firstChild;if(e.shapeFlag&16)if(f)e.anchor=d(o(t),e,a(t),n,i,s,r),e.targetStart=p,e.targetAnchor=p&&o(p);else{e.anchor=o(t);let m=p;for(;m;){if(m&&m.nodeType===8){if(m.data==="teleport start anchor")e.targetStart=m;else if(m.data==="teleport anchor"){e.targetAnchor=m,h._lpa=e.targetAnchor&&o(e.targetAnchor);break}}m=o(m)}e.targetAnchor||XT(h,e,u,l),d(p&&o(p),e,h,n,i,s,r)}Hd(e,f)}return e.anchor&&o(e.anchor)}const wO=HT;function Hd(t,e){const n=t.ctx;if(n&&n.ut){let i,s;for(e?(i=t.el,s=t.anchor):(i=t.targetStart,s=t.targetAnchor);i&&i!==s;)i.nodeType===1&&i.setAttribute("data-v-owner",n.uid),i=i.nextSibling;n.ut()}}function XT(t,e,n,i){const s=e.targetStart=n(""),r=e.targetAnchor=n("");return s[VT]=r,t&&(i(s,t),i(r,t)),r}const oo=Symbol("_leaveCb"),vd=Symbol("_enterCb");function lE(){const t={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return bn(()=>{t.isMounted=!0}),lf(()=>{t.isUnmounting=!0}),t}const Ji=[Function,Array],uE={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Ji,onEnter:Ji,onAfterEnter:Ji,onEnterCancelled:Ji,onBeforeLeave:Ji,onLeave:Ji,onAfterLeave:Ji,onLeaveCancelled:Ji,onBeforeAppear:Ji,onAppear:Ji,onAfterAppear:Ji,onAppearCancelled:Ji},jT=t=>{const e=t.subTree;return e.component?jT(e.component):e},AO={name:"BaseTransition",props:uE,setup(t,{slots:e}){const n=as(),i=lE();return()=>{const s=e.default&&of(e.default(),!0);if(!s||!s.length)return;const r=qT(s),o=Ct(t),{mode:a}=o;if(i.isLeaving)return _p(r);const c=Xb(r);if(!c)return _p(r);let l=Sc(c,o,i,n,d=>l=d);c.type!==vn&&Fr(c,l);let u=n.subTree&&Xb(n.subTree);if(u&&u.type!==vn&&!ws(c,u)&&jT(n).type!==vn){let d=Sc(u,o,i,n);if(Fr(u,d),a==="out-in"&&c.type!==vn)return i.isLeaving=!0,d.afterLeave=()=>{i.isLeaving=!1,n.job.flags&8||n.update(),delete d.afterLeave,u=void 0},_p(r);a==="in-out"&&c.type!==vn?d.delayLeave=(h,f,p)=>{const m=JT(i,u);m[String(u.key)]=u,h[oo]=()=>{f(),h[oo]=void 0,delete l.delayedLeave,u=void 0},l.delayedLeave=()=>{p(),delete l.delayedLeave,u=void 0}}:u=void 0}else u&&(u=void 0);return r}}};function qT(t){let e=t[0];if(t.length>1){for(const n of t)if(n.type!==vn){e=n;break}}return e}const zT=AO;function JT(t,e){const{leavingVNodes:n}=t;let i=n.get(e.type);return i||(i=Object.create(null),n.set(e.type,i)),i}function Sc(t,e,n,i,s){const{appear:r,mode:o,persisted:a=!1,onBeforeEnter:c,onEnter:l,onAfterEnter:u,onEnterCancelled:d,onBeforeLeave:h,onLeave:f,onAfterLeave:p,onLeaveCancelled:m,onBeforeAppear:b,onAppear:E,onAfterAppear:x,onAppearCancelled:S}=e,v=String(t.key),T=JT(n,t),w=(y,O)=>{y&&os(y,i,9,O)},D=(y,O)=>{const L=O[1];w(y,O),Ne(y)?y.every(P=>P.length<=1)&&L():y.length<=1&&L()},A={mode:o,persisted:a,beforeEnter(y){let O=c;if(!n.isMounted)if(r)O=b||c;else return;y[oo]&&y[oo](!0);const L=T[v];L&&ws(t,L)&&L.el[oo]&&L.el[oo](),w(O,[y])},enter(y){let O=l,L=u,P=d;if(!n.isMounted)if(r)O=E||l,L=x||u,P=S||d;else return;let U=!1;const X=y[vd]=K=>{U||(U=!0,K?w(P,[y]):w(L,[y]),A.delayedLeave&&A.delayedLeave(),y[vd]=void 0)};O?D(O,[y,X]):X()},leave(y,O){const L=String(t.key);if(y[vd]&&y[vd](!0),n.isUnmounting)return O();w(h,[y]);let P=!1;const U=y[oo]=X=>{P||(P=!0,O(),X?w(m,[y]):w(p,[y]),y[oo]=void 0,T[L]===t&&delete T[L])};T[L]=t,f?D(f,[y,U]):U()},clone(y){const O=Sc(y,e,n,i,s);return s&&s(O),O}};return A}function _p(t){if(Cu(t))return t=_s(t),t.children=null,t}function Xb(t){if(!Cu(t))return WT(t.type)&&t.children?qT(t.children):t;if(t.component)return t.component.subTree;const{shapeFlag:e,children:n}=t;if(n){if(e&16)return n[0];if(e&32&&Xe(n.default))return n.default()}}function Fr(t,e){t.shapeFlag&6&&t.component?(t.transition=e,Fr(t.component.subTree,e)):t.shapeFlag&128?(t.ssContent.transition=e.clone(t.ssContent),t.ssFallback.transition=e.clone(t.ssFallback)):t.transition=e}function of(t,e=!1,n){let i=[],s=0;for(let r=0;r<t.length;r++){let o=t[r];const a=n==null?o.key:String(n)+String(o.key!=null?o.key:r);o.type===be?(o.patchFlag&128&&s++,i=i.concat(of(o.children,e,a))):(e||o.type!==vn)&&i.push(a!=null?_s(o,{key:a}):o)}if(s>1)for(let r=0;r<i.length;r++)i[r].patchFlag=-2;return i}/*! #__NO_SIDE_EFFECTS__ */function Ue(t,e){return Xe(t)?St({name:t.name},e,{setup:t}):t}function NO(){const t=as();return t?(t.appContext.config.idPrefix||"v")+"-"+t.ids[0]+t.ids[1]++:""}function dE(t){t.ids=[t.ids[0]+t.ids[2]+++"-",0,0]}function yO(t){const e=as(),n=oE(null);if(e){const s=e.refs===bt?e.refs={}:e.refs;Object.defineProperty(s,t,{enumerable:!0,get:()=>n.value,set:r=>n.value=r})}return n}function $l(t,e,n,i,s=!1){if(Ne(t)){t.forEach((p,m)=>$l(p,e&&(Ne(e)?e[m]:e),n,i,s));return}if(go(i)&&!s){i.shapeFlag&512&&i.type.__asyncResolved&&i.component.subTree.component&&$l(t,e,n,i.component.subTree);return}const r=i.shapeFlag&4?Nu(i.component):i.el,o=s?null:r,{i:a,r:c}=t,l=e&&e.r,u=a.refs===bt?a.refs={}:a.refs,d=a.setupState,h=Ct(d),f=d===bt?()=>!1:p=>kt(h,p);if(l!=null&&l!==c&&(ze(l)?(u[l]=null,f(l)&&(d[l]=null)):cn(l)&&(l.value=null)),Xe(c))Jc(c,a,12,[o,u]);else{const p=ze(c),m=cn(c);if(p||m){const b=()=>{if(t.f){const E=p?f(c)?d[c]:u[c]:c.value;s?Ne(E)&&Zh(E,r):Ne(E)?E.includes(r)||E.push(r):p?(u[c]=[r],f(c)&&(d[c]=u[c])):(c.value=[r],t.k&&(u[t.k]=c.value))}else p?(u[c]=o,f(c)&&(d[c]=o)):m&&(c.value=o,t.k&&(u[t.k]=o))};o?(b.id=-1,kn(b,n)):b()}}}let jb=!1;const Ja=()=>{jb||(console.error("Hydration completed but contains mismatches."),jb=!0)},kO=t=>t.namespaceURI.includes("svg")&&t.tagName!=="foreignObject",DO=t=>t.namespaceURI.includes("MathML"),bd=t=>{if(t.nodeType===1){if(kO(t))return"svg";if(DO(t))return"mathml"}},oc=t=>t.nodeType===8;function OO(t){const{mt:e,p:n,o:{patchProp:i,createText:s,nextSibling:r,parentNode:o,remove:a,insert:c,createComment:l}}=t,u=(S,v)=>{if(!v.hasChildNodes()){n(null,S,v),uh(),v._vnode=S;return}d(v.firstChild,S,null,null,null),uh(),v._vnode=S},d=(S,v,T,w,D,A=!1)=>{A=A||!!v.dynamicChildren;const y=oc(S)&&S.data==="[",O=()=>m(S,v,T,w,D,y),{type:L,ref:P,shapeFlag:U,patchFlag:X}=v;let K=S.nodeType;v.el=S,X===-2&&(A=!1,v.dynamicChildren=null);let Y=null;switch(L){case Eo:K!==3?v.children===""?(c(v.el=s(""),o(S),S),Y=S):Y=O():(S.data!==v.children&&(Ja(),S.data=v.children),Y=r(S));break;case vn:x(S)?(Y=r(S),E(v.el=S.content.firstChild,S,T)):K!==8||y?Y=O():Y=r(S);break;case da:if(y&&(S=r(S),K=S.nodeType),K===1||K===3){Y=S;const _=!v.children.length;for(let q=0;q<v.staticCount;q++)_&&(v.children+=Y.nodeType===1?Y.outerHTML:Y.data),q===v.staticCount-1&&(v.anchor=Y),Y=r(Y);return y?r(Y):Y}else O();break;case be:y?Y=p(S,v,T,w,D,A):Y=O();break;default:if(U&1)(K!==1||v.type.toLowerCase()!==S.tagName.toLowerCase())&&!x(S)?Y=O():Y=h(S,v,T,w,D,A);else if(U&6){v.slotScopeIds=D;const _=o(S);if(y?Y=b(S):oc(S)&&S.data==="teleport start"?Y=b(S,S.data,"teleport end"):Y=r(S),e(v,_,null,T,w,bd(_),A),go(v)&&!v.type.__asyncResolved){let q;y?(q=Qe(be),q.anchor=Y?Y.previousSibling:_.lastChild):q=S.nodeType===3?mt(""):Qe("div"),q.el=S,v.component.subTree=q}}else U&64?K!==8?Y=O():Y=v.type.hydrate(S,v,T,w,D,A,t,f):U&128&&(Y=v.type.hydrate(S,v,T,w,bd(o(S)),D,A,t,d))}return P!=null&&$l(P,null,w,v),Y},h=(S,v,T,w,D,A)=>{A=A||!!v.dynamicChildren;const{type:y,props:O,patchFlag:L,shapeFlag:P,dirs:U,transition:X}=v,K=y==="input"||y==="option";if(K||L!==-1){U&&zs(v,null,T,"created");let Y=!1;if(x(S)){Y=SC(null,X)&&T&&T.vnode.props&&T.vnode.props.appear;const q=S.content.firstChild;if(Y){const ee=q.getAttribute("class");ee&&(q.$cls=ee),X.beforeEnter(q)}E(q,S,T),v.el=S=q}if(P&16&&!(O&&(O.innerHTML||O.textContent))){let q=f(S.firstChild,v,S,T,w,D,A);for(;q;){Sd(S,1)||Ja();const ee=q;q=q.nextSibling,a(ee)}}else if(P&8){let q=v.children;q[0]===`
`&&(S.tagName==="PRE"||S.tagName==="TEXTAREA")&&(q=q.slice(1)),S.textContent!==q&&(Sd(S,0)||Ja(),S.textContent=v.children)}if(O){if(K||!A||L&48){const q=S.tagName.includes("-");for(const ee in O)(K&&(ee.endsWith("value")||ee==="indeterminate")||ko(ee)&&!Nr(ee)||ee[0]==="."||q)&&i(S,ee,null,O[ee],void 0,T)}else if(O.onClick)i(S,"onClick",null,O.onClick,void 0,T);else if(L&4&&Js(O.style))for(const q in O.style)O.style[q]}let _;(_=O&&O.onVnodeBeforeMount)&&vi(_,T,v),U&&zs(v,null,T,"beforeMount"),((_=O&&O.onVnodeMounted)||U||Y)&&DC(()=>{_&&vi(_,T,v),Y&&X.enter(S),U&&zs(v,null,T,"mounted")},w)}return S.nextSibling},f=(S,v,T,w,D,A,y)=>{y=y||!!v.dynamicChildren;const O=v.children,L=O.length;for(let P=0;P<L;P++){const U=y?O[P]:O[P]=Si(O[P]),X=U.type===Eo;S?(X&&!y&&P+1<L&&Si(O[P+1]).type===Eo&&(c(s(S.data.slice(U.children.length)),T,r(S)),S.data=U.children),S=d(S,U,w,D,A,y)):X&&!U.children?c(U.el=s(""),T):(Sd(T,1)||Ja(),n(null,U,T,null,w,D,bd(T),A))}return S},p=(S,v,T,w,D,A)=>{const{slotScopeIds:y}=v;y&&(D=D?D.concat(y):y);const O=o(S),L=f(r(S),v,O,T,w,D,A);return L&&oc(L)&&L.data==="]"?r(v.anchor=L):(Ja(),c(v.anchor=l("]"),O,L),L)},m=(S,v,T,w,D,A)=>{if(Sd(S.parentElement,1)||Ja(),v.el=null,A){const L=b(S);for(;;){const P=r(S);if(P&&P!==L)a(P);else break}}const y=r(S),O=o(S);return a(S),n(null,v,O,y,T,w,bd(O),D),T&&(T.vnode.el=v.el,df(T,v.el)),y},b=(S,v="[",T="]")=>{let w=0;for(;S;)if(S=r(S),S&&oc(S)&&(S.data===v&&w++,S.data===T)){if(w===0)return r(S);w--}return S},E=(S,v,T)=>{const w=v.parentNode;w&&w.replaceChild(S,v);let D=T;for(;D;)D.vnode.el===v&&(D.vnode.el=D.subTree.el=S),D=D.parent},x=S=>S.nodeType===1&&S.tagName==="TEMPLATE";return[u,d]}const qb="data-allow-mismatch",PO={0:"text",1:"children",2:"class",3:"style",4:"attribute"};function Sd(t,e){if(e===0||e===1)for(;t&&!t.hasAttribute(qb);)t=t.parentElement;const n=t&&t.getAttribute(qb);if(n==null)return!1;if(n==="")return!0;{const i=n.split(",");return e===0&&i.includes("children")?!0:n.split(",").includes(PO[e])}}const IO=Su().requestIdleCallback||(t=>setTimeout(t,1)),RO=Su().cancelIdleCallback||(t=>clearTimeout(t)),LO=(t=1e4)=>e=>{const n=IO(e,{timeout:t});return()=>RO(n)};function MO(t){const{top:e,left:n,bottom:i,right:s}=t.getBoundingClientRect(),{innerHeight:r,innerWidth:o}=window;return(e>0&&e<r||i>0&&i<r)&&(n>0&&n<o||s>0&&s<o)}const BO=t=>(e,n)=>{const i=new IntersectionObserver(s=>{for(const r of s)if(r.isIntersecting){i.disconnect(),e();break}},t);return n(s=>{if(s instanceof Element){if(MO(s))return e(),i.disconnect(),!1;i.observe(s)}}),()=>i.disconnect()},FO=t=>e=>{if(t){const n=matchMedia(t);if(n.matches)e();else return n.addEventListener("change",e,{once:!0}),()=>n.removeEventListener("change",e)}},UO=(t=[])=>(e,n)=>{ze(t)&&(t=[t]);let i=!1;const s=o=>{i||(i=!0,r(),e(),o.target.dispatchEvent(new o.constructor(o.type,o)))},r=()=>{n(o=>{for(const a of t)o.removeEventListener(a,s)})};return n(o=>{for(const a of t)o.addEventListener(a,s,{once:!0})}),r};function VO(t,e){if(oc(t)&&t.data==="["){let n=1,i=t.nextSibling;for(;i;){if(i.nodeType===1){if(e(i)===!1)break}else if(oc(i))if(i.data==="]"){if(--n===0)break}else i.data==="["&&n++;i=i.nextSibling}}else e(t)}const go=t=>!!t.type.__asyncLoader;/*! #__NO_SIDE_EFFECTS__ */function WO(t){Xe(t)&&(t={loader:t});const{loader:e,loadingComponent:n,errorComponent:i,delay:s=200,hydrate:r,timeout:o,suspensible:a=!0,onError:c}=t;let l=null,u,d=0;const h=()=>(d++,l=null,f()),f=()=>{let p;return l||(p=l=e().catch(m=>{if(m=m instanceof Error?m:new Error(String(m)),c)return new Promise((b,E)=>{c(m,()=>b(h()),()=>E(m),d+1)});throw m}).then(m=>p!==l&&l?l:(m&&(m.__esModule||m[Symbol.toStringTag]==="Module")&&(m=m.default),u=m,m)))};return Ue({name:"AsyncComponentWrapper",__asyncLoader:f,__asyncHydrate(p,m,b){const E=r?()=>{const S=r(()=>{b()},v=>VO(p,v));S&&(m.bum||(m.bum=[])).push(S),(m.u||(m.u=[])).push(()=>!0)}:b;u?E():f().then(()=>!m.isUnmounted&&E())},get __asyncResolved(){return u},setup(){const p=On;if(dE(p),u)return()=>$p(u,p);const m=S=>{l=null,Aa(S,p,13,!i)};if(a&&p.suspense||xc)return f().then(S=>()=>$p(S,p)).catch(S=>(m(S),()=>i?Qe(i,{error:S}):null));const b=J(!1),E=J(),x=J(!!s);return s&&setTimeout(()=>{x.value=!1},s),o!=null&&setTimeout(()=>{if(!b.value&&!E.value){const S=new Error(`Async component timed out after ${o}ms.`);m(S),E.value=S}},o),f().then(()=>{b.value=!0,p.parent&&Cu(p.parent.vnode)&&p.parent.update()}).catch(S=>{m(S),E.value=S}),()=>{if(b.value&&u)return $p(u,p);if(E.value&&i)return Qe(i,{error:E.value});if(n&&!x.value)return Qe(n)}}})}function $p(t,e){const{ref:n,props:i,children:s,ce:r}=e.vnode,o=Qe(t,i,s);return o.ref=n,o.ce=r,delete e.vnode.ce,o}const Cu=t=>t.type.__isKeepAlive,HO={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(t,{slots:e}){const n=as(),i=n.ctx;if(!i.renderer)return()=>{const x=e.default&&e.default();return x&&x.length===1?x[0]:x};const s=new Map,r=new Set;let o=null;const a=n.suspense,{renderer:{p:c,m:l,um:u,o:{createElement:d}}}=i,h=d("div");i.activate=(x,S,v,T,w)=>{const D=x.component;l(x,S,v,0,a),c(D.vnode,x,S,v,D,a,T,x.slotScopeIds,w),kn(()=>{D.isDeactivated=!1,D.a&&ca(D.a);const A=x.props&&x.props.onVnodeMounted;A&&vi(A,D.parent,x)},a)},i.deactivate=x=>{const S=x.component;hh(S.m),hh(S.a),l(x,h,null,1,a),kn(()=>{S.da&&ca(S.da);const v=x.props&&x.props.onVnodeUnmounted;v&&vi(v,S.parent,x),S.isDeactivated=!0},a)};function f(x){em(x),u(x,n,a,!0)}function p(x){s.forEach((S,v)=>{const T=dg(S.type);T&&!x(T)&&m(v)})}function m(x){const S=s.get(x);S&&(!o||!ws(S,o))?f(S):o&&em(o),s.delete(x),r.delete(x)}gt(()=>[t.include,t.exclude],([x,S])=>{x&&p(v=>Nl(x,v)),S&&p(v=>!Nl(S,v))},{flush:"post",deep:!0});let b=null;const E=()=>{b!=null&&(fh(n.subTree.type)?kn(()=>{s.set(b,xd(n.subTree))},n.subTree.suspense):s.set(b,xd(n.subTree)))};return bn(E),cf(E),lf(()=>{s.forEach(x=>{const{subTree:S,suspense:v}=n,T=xd(S);if(x.type===T.type&&x.key===T.key){em(T);const w=T.component.da;w&&kn(w,v);return}f(x)})}),()=>{if(b=null,!e.default)return o=null;const x=e.default(),S=x[0];if(x.length>1)return o=null,x;if(!Ur(S)||!(S.shapeFlag&4)&&!(S.shapeFlag&128))return o=null,S;let v=xd(S);if(v.type===vn)return o=null,v;const T=v.type,w=dg(go(v)?v.type.__asyncResolved||{}:T),{include:D,exclude:A,max:y}=t;if(D&&(!w||!Nl(D,w))||A&&w&&Nl(A,w))return v.shapeFlag&=-257,o=v,S;const O=v.key==null?T:v.key,L=s.get(O);return v.el&&(v=_s(v),S.shapeFlag&128&&(S.ssContent=v)),b=O,L?(v.el=L.el,v.component=L.component,v.transition&&Fr(v,v.transition),v.shapeFlag|=512,r.delete(O),r.add(O)):(r.add(O),y&&r.size>parseInt(y,10)&&m(r.values().next().value)),v.shapeFlag|=256,o=v,fh(S.type)?S:v}}},XO=HO;function Nl(t,e){return Ne(t)?t.some(n=>Nl(n,e)):ze(t)?t.split(",").includes(e):$x(t)?(t.lastIndex=0,t.test(e)):!1}function ZT(t,e){QT(t,"a",e)}function KT(t,e){QT(t,"da",e)}function QT(t,e,n=On){const i=t.__wdc||(t.__wdc=()=>{let s=n;for(;s;){if(s.isDeactivated)return;s=s.parent}return t()});if(af(e,i,n),n){let s=n.parent;for(;s&&s.parent;)Cu(s.parent.vnode)&&jO(i,e,n,s),s=s.parent}}function jO(t,e,n,i){const s=af(e,t,i,!0);Io(()=>{Zh(i[e],s)},n)}function em(t){t.shapeFlag&=-257,t.shapeFlag&=-513}function xd(t){return t.shapeFlag&128?t.ssContent:t}function af(t,e,n=On,i=!1){if(n){const s=n[t]||(n[t]=[]),r=e.__weh||(e.__weh=(...o)=>{Lr();const a=ga(n),c=os(e,n,t,o);return a(),Mr(),c});return i?s.unshift(r):s.push(r),r}}const Xr=t=>(e,n=On)=>{(!xc||t==="sp")&&af(t,(...i)=>e(...i),n)},GT=Xr("bm"),bn=Xr("m"),hE=Xr("bu"),cf=Xr("u"),lf=Xr("bum"),Io=Xr("um"),_T=Xr("sp"),$T=Xr("rtg"),eC=Xr("rtc");function tC(t,e=On){af("ec",t,e)}const fE="components",qO="directives";function wu(t,e){return pE(fE,t,!0,e)||t}const nC=Symbol.for("v-ndc");function zO(t){return ze(t)?pE(fE,t,!1)||t:t||nC}function YO(t){return pE(qO,t)}function pE(t,e,n=!0,i=!1){const s=Pn||On;if(s){const r=s.type;if(t===fE){const a=dg(r,!1);if(a&&(a===e||a===Qt(e)||a===Oo(Qt(e))))return r}const o=zb(s[t]||r[t],e)||zb(s.appContext[t],e);return!o&&i?r:o}}function zb(t,e){return t&&(t[e]||t[Qt(e)]||t[Oo(Qt(e))])}function We(t,e,n,i){let s;const r=n&&n[i],o=Ne(t);if(o||ze(t)){const a=o&&Js(t);let c=!1,l=!1;a&&(c=!Bi(t),l=Br(t),t=$h(t)),s=new Array(t.length);for(let u=0,d=t.length;u<d;u++)s[u]=e(c?l?ah(Wn(t[u])):Wn(t[u]):t[u],u,void 0,r&&r[u])}else if(typeof t=="number"){s=new Array(t);for(let a=0;a<t;a++)s[a]=e(a+1,a,void 0,r&&r[a])}else if(Rt(t))if(t[Symbol.iterator])s=Array.from(t,(a,c)=>e(a,c,void 0,r&&r[c]));else{const a=Object.keys(t);s=new Array(a.length);for(let c=0,l=a.length;c<l;c++){const u=a[c];s[c]=e(t[u],u,c,r&&r[c])}}else s=[];return n&&(n[i]=s),s}function JO(t,e){for(let n=0;n<e.length;n++){const i=e[n];if(Ne(i))for(let s=0;s<i.length;s++)t[i[s].name]=i[s].fn;else i&&(t[i.name]=i.key?(...s)=>{const r=i.fn(...s);return r&&(r.key=i.key),r}:i.fn)}return t}function iC(t,e,n={},i,s){if(Pn.ce||Pn.parent&&go(Pn.parent)&&Pn.parent.ce)return e!=="default"&&(n.name=e),R(),dt(be,null,[Qe("slot",n,i&&i())],64);let r=t[e];r&&r._c&&(r._d=!1),R();const o=r&&mE(r(n)),a=n.key||o&&o.key,c=dt(be,{key:(a&&!pi(a)?a:`_${e}`)+(!o&&i?"_fb":"")},o||(i?i():[]),o&&t._===1?64:-2);return!s&&c.scopeId&&(c.slotScopeIds=[c.scopeId+"-s"]),r&&r._c&&(r._d=!0),c}function mE(t){return t.some(e=>Ur(e)?!(e.type===vn||e.type===be&&!mE(e.children)):!0)?t:null}function ZO(t,e){const n={};for(const i in t)n[e&&/[A-Z]/.test(i)?`on:${i}`:aa(i)]=t[i];return n}const eg=t=>t?BC(t)?Nu(t):eg(t.parent):null,Fl=St(Object.create(null),{$:t=>t,$el:t=>t.vnode.el,$data:t=>t.data,$props:t=>t.props,$attrs:t=>t.attrs,$slots:t=>t.slots,$refs:t=>t.refs,$parent:t=>eg(t.parent),$root:t=>eg(t.root),$host:t=>t.ce,$emit:t=>t.emit,$options:t=>gE(t),$forceUpdate:t=>t.f||(t.f=()=>{cE(t.update)}),$nextTick:t=>t.n||(t.n=Zc.bind(t.proxy)),$watch:t=>wP.bind(t)}),tm=(t,e)=>t!==bt&&!t.__isScriptSetup&&kt(t,e),tg={get({_:t},e){if(e==="__v_skip")return!0;const{ctx:n,setupState:i,data:s,props:r,accessCache:o,type:a,appContext:c}=t;let l;if(e[0]!=="$"){const f=o[e];if(f!==void 0)switch(f){case 1:return i[e];case 2:return s[e];case 4:return n[e];case 3:return r[e]}else{if(tm(i,e))return o[e]=1,i[e];if(s!==bt&&kt(s,e))return o[e]=2,s[e];if((l=t.propsOptions[0])&&kt(l,e))return o[e]=3,r[e];if(n!==bt&&kt(n,e))return o[e]=4,n[e];ng&&(o[e]=0)}}const u=Fl[e];let d,h;if(u)return e==="$attrs"&&Yn(t.attrs,"get",""),u(t);if((d=a.__cssModules)&&(d=d[e]))return d;if(n!==bt&&kt(n,e))return o[e]=4,n[e];if(h=c.config.globalProperties,kt(h,e))return h[e]},set({_:t},e,n){const{data:i,setupState:s,ctx:r}=t;return tm(s,e)?(s[e]=n,!0):i!==bt&&kt(i,e)?(i[e]=n,!0):kt(t.props,e)||e[0]==="$"&&e.slice(1)in t?!1:(r[e]=n,!0)},has({_:{data:t,setupState:e,accessCache:n,ctx:i,appContext:s,propsOptions:r}},o){let a;return!!n[o]||t!==bt&&kt(t,o)||tm(e,o)||(a=r[0])&&kt(a,o)||kt(i,o)||kt(Fl,o)||kt(s.config.globalProperties,o)},defineProperty(t,e,n){return n.get!=null?t._.accessCache[e]=0:kt(n,"value")&&this.set(t,e,n.value,null),Reflect.defineProperty(t,e,n)}},KO=St({},tg,{get(t,e){if(e!==Symbol.unscopables)return tg.get(t,e,t)},has(t,e){return e[0]!=="_"&&!Kg(e)}});function QO(){return null}function GO(){return null}function _O(t){}function $O(t){}function eP(){return null}function tP(){}function nP(t,e){return null}function sC(){return rC().slots}function iP(){return rC().attrs}function rC(){const t=as();return t.setupContext||(t.setupContext=VC(t))}function eu(t){return Ne(t)?t.reduce((e,n)=>(e[n]=null,e),{}):t}function sP(t,e){const n=eu(t);for(const i in e){if(i.startsWith("__skip"))continue;let s=n[i];s?Ne(s)||Xe(s)?s=n[i]={type:s,default:e[i]}:s.default=e[i]:s===null&&(s=n[i]={default:e[i]}),s&&e[`__skip_${i}`]&&(s.skipFactory=!0)}return n}function rP(t,e){return!t||!e?t||e:Ne(t)&&Ne(e)?t.concat(e):St({},eu(t),eu(e))}function oP(t,e){const n={};for(const i in t)e.includes(i)||Object.defineProperty(n,i,{enumerable:!0,get:()=>t[i]});return n}function aP(t){const e=as();let n=t();return cg(),Kh(n)&&(n=n.catch(i=>{throw ga(e),i})),[n,()=>ga(e)]}let ng=!0;function cP(t){const e=gE(t),n=t.proxy,i=t.ctx;ng=!1,e.beforeCreate&&Yb(e.beforeCreate,t,"bc");const{data:s,computed:r,methods:o,watch:a,provide:c,inject:l,created:u,beforeMount:d,mounted:h,beforeUpdate:f,updated:p,activated:m,deactivated:b,beforeDestroy:E,beforeUnmount:x,destroyed:S,unmounted:v,render:T,renderTracked:w,renderTriggered:D,errorCaptured:A,serverPrefetch:y,expose:O,inheritAttrs:L,components:P,directives:U,filters:X}=e;if(l&&lP(l,i,null),o)for(const _ in o){const q=o[_];Xe(q)&&(i[_]=q.bind(n))}if(s){const _=s.call(n,n);Rt(_)&&(t.data=Po(_))}if(ng=!0,r)for(const _ in r){const q=r[_],ee=Xe(q)?q.bind(n,n):Xe(q.get)?q.get.bind(n,n):Mn,j=!Xe(q)&&Xe(q.set)?q.set.bind(n):Mn,he=di({get:ee,set:j});Object.defineProperty(i,_,{enumerable:!0,configurable:!0,get:()=>he.value,set:le=>he.value=le})}if(a)for(const _ in a)oC(a[_],i,n,_);if(c){const _=Xe(c)?c.call(n):c;Reflect.ownKeys(_).forEach(q=>{Ul(q,_[q])})}u&&Yb(u,t,"c");function Y(_,q){Ne(q)?q.forEach(ee=>_(ee.bind(n))):q&&_(q.bind(n))}if(Y(GT,d),Y(bn,h),Y(hE,f),Y(cf,p),Y(ZT,m),Y(KT,b),Y(tC,A),Y(eC,w),Y($T,D),Y(lf,x),Y(Io,v),Y(_T,y),Ne(O))if(O.length){const _=t.exposed||(t.exposed={});O.forEach(q=>{Object.defineProperty(_,q,{get:()=>n[q],set:ee=>n[q]=ee})})}else t.exposed||(t.exposed={});T&&t.render===Mn&&(t.render=T),L!=null&&(t.inheritAttrs=L),P&&(t.components=P),U&&(t.directives=U),y&&dE(t)}function lP(t,e,n=Mn){Ne(t)&&(t=ig(t));for(const i in t){const s=t[i];let r;Rt(s)?"default"in s?r=es(s.from||i,s.default,!0):r=es(s.from||i):r=es(s),cn(r)?Object.defineProperty(e,i,{enumerable:!0,configurable:!0,get:()=>r.value,set:o=>r.value=o}):e[i]=r}}function Yb(t,e,n){os(Ne(t)?t.map(i=>i.bind(e.proxy)):t.bind(e.proxy),e,n)}function oC(t,e,n,i){let s=i.includes(".")?AC(n,i):()=>n[i];if(ze(t)){const r=e[t];Xe(r)&&gt(s,r)}else if(Xe(t))gt(s,t.bind(n));else if(Rt(t))if(Ne(t))t.forEach(r=>oC(r,e,n,i));else{const r=Xe(t.handler)?t.handler.bind(n):e[t.handler];Xe(r)&&gt(s,r,t)}}function gE(t){const e=t.type,{mixins:n,extends:i}=e,{mixins:s,optionsCache:r,config:{optionMergeStrategies:o}}=t.appContext,a=r.get(e);let c;return a?c=a:!s.length&&!n&&!i?c=e:(c={},s.length&&s.forEach(l=>dh(c,l,o,!0)),dh(c,e,o)),Rt(e)&&r.set(e,c),c}function dh(t,e,n,i=!1){const{mixins:s,extends:r}=e;r&&dh(t,r,n,!0),s&&s.forEach(o=>dh(t,o,n,!0));for(const o in e)if(!(i&&o==="expose")){const a=uP[o]||n&&n[o];t[o]=a?a(t[o],e[o]):e[o]}return t}const uP={data:Jb,props:Zb,emits:Zb,methods:yl,computed:yl,beforeCreate:si,created:si,beforeMount:si,mounted:si,beforeUpdate:si,updated:si,beforeDestroy:si,beforeUnmount:si,destroyed:si,unmounted:si,activated:si,deactivated:si,errorCaptured:si,serverPrefetch:si,components:yl,directives:yl,watch:hP,provide:Jb,inject:dP};function Jb(t,e){return e?t?function(){return St(Xe(t)?t.call(this,this):t,Xe(e)?e.call(this,this):e)}:e:t}function dP(t,e){return yl(ig(t),ig(e))}function ig(t){if(Ne(t)){const e={};for(let n=0;n<t.length;n++)e[t[n]]=t[n];return e}return t}function si(t,e){return t?[...new Set([].concat(t,e))]:e}function yl(t,e){return t?St(Object.create(null),t,e):e}function Zb(t,e){return t?Ne(t)&&Ne(e)?[...new Set([...t,...e])]:St(Object.create(null),eu(t),eu(e??{})):e}function hP(t,e){if(!t)return e;if(!e)return t;const n=St(Object.create(null),t);for(const i in e)n[i]=si(t[i],e[i]);return n}function aC(){return{app:null,config:{isNativeTag:rc,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let fP=0;function pP(t,e){return function(i,s=null){Xe(i)||(i=St({},i)),s!=null&&!Rt(s)&&(s=null);const r=aC(),o=new WeakSet,a=[];let c=!1;const l=r.app={_uid:fP++,_component:i,_props:s,_container:null,_context:r,_instance:null,version:HC,get config(){return r.config},set config(u){},use(u,...d){return o.has(u)||(u&&Xe(u.install)?(o.add(u),u.install(l,...d)):Xe(u)&&(o.add(u),u(l,...d))),l},mixin(u){return r.mixins.includes(u)||r.mixins.push(u),l},component(u,d){return d?(r.components[u]=d,l):r.components[u]},directive(u,d){return d?(r.directives[u]=d,l):r.directives[u]},mount(u,d,h){if(!c){const f=l._ceVNode||Qe(i,s);return f.appContext=r,h===!0?h="svg":h===!1&&(h=void 0),d&&e?e(f,u):t(f,u,h),c=!0,l._container=u,u.__vue_app__=l,Nu(f.component)}},onUnmount(u){a.push(u)},unmount(){c&&(os(a,l._instance,16),t(null,l._container),delete l._container.__vue_app__)},provide(u,d){return r.provides[u]=d,l},runWithContext(u){const d=ua;ua=l;try{return u()}finally{ua=d}}};return l}}let ua=null;function Ul(t,e){if(On){let n=On.provides;const i=On.parent&&On.parent.provides;i===n&&(n=On.provides=Object.create(i)),n[t]=e}}function es(t,e,n=!1){const i=On||Pn;if(i||ua){let s=ua?ua._context.provides:i?i.parent==null||i.ce?i.vnode.appContext&&i.vnode.appContext.provides:i.parent.provides:void 0;if(s&&t in s)return s[t];if(arguments.length>1)return n&&Xe(e)?e.call(i&&i.proxy):e}}function cC(){return!!(On||Pn||ua)}const lC={},uC=()=>Object.create(lC),dC=t=>Object.getPrototypeOf(t)===lC;function mP(t,e,n,i=!1){const s={},r=uC();t.propsDefaults=Object.create(null),hC(t,e,s,r);for(const o in t.propsOptions[0])o in s||(s[o]=void 0);n?t.props=i?s:sE(s):t.type.props?t.props=s:t.props=r,t.attrs=r}function gP(t,e,n,i){const{props:s,attrs:r,vnode:{patchFlag:o}}=t,a=Ct(s),[c]=t.propsOptions;let l=!1;if((i||o>0)&&!(o&16)){if(o&8){const u=t.vnode.dynamicProps;for(let d=0;d<u.length;d++){let h=u[d];if(uf(t.emitsOptions,h))continue;const f=e[h];if(c)if(kt(r,h))f!==r[h]&&(r[h]=f,l=!0);else{const p=Qt(h);s[p]=sg(c,a,p,f,t,!1)}else f!==r[h]&&(r[h]=f,l=!0)}}}else{hC(t,e,s,r)&&(l=!0);let u;for(const d in a)(!e||!kt(e,d)&&((u=Jn(d))===d||!kt(e,u)))&&(c?n&&(n[d]!==void 0||n[u]!==void 0)&&(s[d]=sg(c,a,d,void 0,t,!0)):delete s[d]);if(r!==a)for(const d in r)(!e||!kt(e,d))&&(delete r[d],l=!0)}l&&Tr(t.attrs,"set","")}function hC(t,e,n,i){const[s,r]=t.propsOptions;let o=!1,a;if(e)for(let c in e){if(Nr(c))continue;const l=e[c];let u;s&&kt(s,u=Qt(c))?!r||!r.includes(u)?n[u]=l:(a||(a={}))[u]=l:uf(t.emitsOptions,c)||(!(c in i)||l!==i[c])&&(i[c]=l,o=!0)}if(r){const c=Ct(n),l=a||bt;for(let u=0;u<r.length;u++){const d=r[u];n[d]=sg(s,c,d,l[d],t,!kt(l,d))}}return o}function sg(t,e,n,i,s,r){const o=t[n];if(o!=null){const a=kt(o,"default");if(a&&i===void 0){const c=o.default;if(o.type!==Function&&!o.skipFactory&&Xe(c)){const{propsDefaults:l}=s;if(n in l)i=l[n];else{const u=ga(s);i=l[n]=c.call(null,e),u()}}else i=c;s.ce&&s.ce._setProp(n,i)}o[0]&&(r&&!a?i=!1:o[1]&&(i===""||i===Jn(n))&&(i=!0))}return i}const EP=new WeakMap;function fC(t,e,n=!1){const i=n?EP:e.propsCache,s=i.get(t);if(s)return s;const r=t.props,o={},a=[];let c=!1;if(!Xe(t)){const u=d=>{c=!0;const[h,f]=fC(d,e,!0);St(o,h),f&&a.push(...f)};!n&&e.mixins.length&&e.mixins.forEach(u),t.extends&&u(t.extends),t.mixins&&t.mixins.forEach(u)}if(!r&&!c)return Rt(t)&&i.set(t,ra),ra;if(Ne(r))for(let u=0;u<r.length;u++){const d=Qt(r[u]);Kb(d)&&(o[d]=bt)}else if(r)for(const u in r){const d=Qt(u);if(Kb(d)){const h=r[u],f=o[d]=Ne(h)||Xe(h)?{type:h}:St({},h),p=f.type;let m=!1,b=!0;if(Ne(p))for(let E=0;E<p.length;++E){const x=p[E],S=Xe(x)&&x.name;if(S==="Boolean"){m=!0;break}else S==="String"&&(b=!1)}else m=Xe(p)&&p.name==="Boolean";f[0]=m,f[1]=b,(m||kt(f,"default"))&&a.push(d)}}const l=[o,a];return Rt(t)&&i.set(t,l),l}function Kb(t){return t[0]!=="$"&&!Nr(t)}const EE=t=>t[0]==="_"||t==="$stable",vE=t=>Ne(t)?t.map(Si):[Si(t)],vP=(t,e,n)=>{if(e._n)return e;const i=Tu((...s)=>vE(e(...s)),n);return i._c=!1,i},pC=(t,e,n)=>{const i=t._ctx;for(const s in t){if(EE(s))continue;const r=t[s];if(Xe(r))e[s]=vP(s,r,i);else if(r!=null){const o=vE(r);e[s]=()=>o}}},mC=(t,e)=>{const n=vE(e);t.slots.default=()=>n},gC=(t,e,n)=>{for(const i in e)(n||!EE(i))&&(t[i]=e[i])},bP=(t,e,n)=>{const i=t.slots=uC();if(t.vnode.shapeFlag&32){const s=e._;s?(gC(i,e,n),n&&Zg(i,"_",s,!0)):pC(e,i)}else e&&mC(t,e)},SP=(t,e,n)=>{const{vnode:i,slots:s}=t;let r=!0,o=bt;if(i.shapeFlag&32){const a=e._;a?n&&a===1?r=!1:gC(s,e,n):(r=!e.$stable,pC(e,s)),o=e}else e&&(mC(t,e),o={default:1});if(r)for(const a in s)!EE(a)&&o[a]==null&&delete s[a]},kn=DC;function EC(t){return bC(t)}function vC(t){return bC(t,OO)}function bC(t,e){const n=Su();n.__VUE__=!0;const{insert:i,remove:s,patchProp:r,createElement:o,createText:a,createComment:c,setText:l,setElementText:u,parentNode:d,nextSibling:h,setScopeId:f=Mn,insertStaticContent:p}=t,m=(F,V,H,$=null,ne=null,ae=null,ue=void 0,pe=null,Ee=!!V.dynamicChildren)=>{if(F===V)return;F&&!ws(F,V)&&($=te(F),le(F,ne,ae,!0),F=null),V.patchFlag===-2&&(Ee=!1,V.dynamicChildren=null);const{type:de,ref:Be,shapeFlag:Se}=V;switch(de){case Eo:b(F,V,H,$);break;case vn:E(F,V,H,$);break;case da:F==null&&x(V,H,$,ue);break;case be:P(F,V,H,$,ne,ae,ue,pe,Ee);break;default:Se&1?T(F,V,H,$,ne,ae,ue,pe,Ee):Se&6?U(F,V,H,$,ne,ae,ue,pe,Ee):(Se&64||Se&128)&&de.process(F,V,H,$,ne,ae,ue,pe,Ee,xe)}Be!=null&&ne&&$l(Be,F&&F.ref,ae,V||F,!V)},b=(F,V,H,$)=>{if(F==null)i(V.el=a(V.children),H,$);else{const ne=V.el=F.el;V.children!==F.children&&l(ne,V.children)}},E=(F,V,H,$)=>{F==null?i(V.el=c(V.children||""),H,$):V.el=F.el},x=(F,V,H,$)=>{[F.el,F.anchor]=p(F.children,V,H,$,F.el,F.anchor)},S=({el:F,anchor:V},H,$)=>{let ne;for(;F&&F!==V;)ne=h(F),i(F,H,$),F=ne;i(V,H,$)},v=({el:F,anchor:V})=>{let H;for(;F&&F!==V;)H=h(F),s(F),F=H;s(V)},T=(F,V,H,$,ne,ae,ue,pe,Ee)=>{V.type==="svg"?ue="svg":V.type==="math"&&(ue="mathml"),F==null?w(V,H,$,ne,ae,ue,pe,Ee):y(F,V,ne,ae,ue,pe,Ee)},w=(F,V,H,$,ne,ae,ue,pe)=>{let Ee,de;const{props:Be,shapeFlag:Se,transition:ye,dirs:Ve}=F;if(Ee=F.el=o(F.type,ae,Be&&Be.is,Be),Se&8?u(Ee,F.children):Se&16&&A(F.children,Ee,null,$,ne,nm(F,ae),ue,pe),Ve&&zs(F,null,$,"created"),D(Ee,F,F.scopeId,ue,$),Be){for(const Ot in Be)Ot!=="value"&&!Nr(Ot)&&r(Ee,Ot,null,Be[Ot],ae,$);"value"in Be&&r(Ee,"value",null,Be.value,ae),(de=Be.onVnodeBeforeMount)&&vi(de,$,F)}Ve&&zs(F,null,$,"beforeMount");const ft=SC(ne,ye);ft&&ye.beforeEnter(Ee),i(Ee,V,H),((de=Be&&Be.onVnodeMounted)||ft||Ve)&&kn(()=>{de&&vi(de,$,F),ft&&ye.enter(Ee),Ve&&zs(F,null,$,"mounted")},ne)},D=(F,V,H,$,ne)=>{if(H&&f(F,H),$)for(let ae=0;ae<$.length;ae++)f(F,$[ae]);if(ne){let ae=ne.subTree;if(V===ae||fh(ae.type)&&(ae.ssContent===V||ae.ssFallback===V)){const ue=ne.vnode;D(F,ue,ue.scopeId,ue.slotScopeIds,ne.parent)}}},A=(F,V,H,$,ne,ae,ue,pe,Ee=0)=>{for(let de=Ee;de<F.length;de++){const Be=F[de]=pe?ao(F[de]):Si(F[de]);m(null,Be,V,H,$,ne,ae,ue,pe)}},y=(F,V,H,$,ne,ae,ue)=>{const pe=V.el=F.el;let{patchFlag:Ee,dynamicChildren:de,dirs:Be}=V;Ee|=F.patchFlag&16;const Se=F.props||bt,ye=V.props||bt;let Ve;if(H&&Qo(H,!1),(Ve=ye.onVnodeBeforeUpdate)&&vi(Ve,H,V,F),Be&&zs(V,F,H,"beforeUpdate"),H&&Qo(H,!0),(Se.innerHTML&&ye.innerHTML==null||Se.textContent&&ye.textContent==null)&&u(pe,""),de?O(F.dynamicChildren,de,pe,H,$,nm(V,ne),ae):ue||q(F,V,pe,null,H,$,nm(V,ne),ae,!1),Ee>0){if(Ee&16)L(pe,Se,ye,H,ne);else if(Ee&2&&Se.class!==ye.class&&r(pe,"class",null,ye.class,ne),Ee&4&&r(pe,"style",Se.style,ye.style,ne),Ee&8){const ft=V.dynamicProps;for(let Ot=0;Ot<ft.length;Ot++){const Et=ft[Ot],zt=Se[Et],Lt=ye[Et];(Lt!==zt||Et==="value")&&r(pe,Et,zt,Lt,ne,H)}}Ee&1&&F.children!==V.children&&u(pe,V.children)}else!ue&&de==null&&L(pe,Se,ye,H,ne);((Ve=ye.onVnodeUpdated)||Be)&&kn(()=>{Ve&&vi(Ve,H,V,F),Be&&zs(V,F,H,"updated")},$)},O=(F,V,H,$,ne,ae,ue)=>{for(let pe=0;pe<V.length;pe++){const Ee=F[pe],de=V[pe],Be=Ee.el&&(Ee.type===be||!ws(Ee,de)||Ee.shapeFlag&198)?d(Ee.el):H;m(Ee,de,Be,null,$,ne,ae,ue,!0)}},L=(F,V,H,$,ne)=>{if(V!==H){if(V!==bt)for(const ae in V)!Nr(ae)&&!(ae in H)&&r(F,ae,V[ae],null,ne,$);for(const ae in H){if(Nr(ae))continue;const ue=H[ae],pe=V[ae];ue!==pe&&ae!=="value"&&r(F,ae,pe,ue,ne,$)}"value"in H&&r(F,"value",V.value,H.value,ne)}},P=(F,V,H,$,ne,ae,ue,pe,Ee)=>{const de=V.el=F?F.el:a(""),Be=V.anchor=F?F.anchor:a("");let{patchFlag:Se,dynamicChildren:ye,slotScopeIds:Ve}=V;Ve&&(pe=pe?pe.concat(Ve):Ve),F==null?(i(de,H,$),i(Be,H,$),A(V.children||[],H,Be,ne,ae,ue,pe,Ee)):Se>0&&Se&64&&ye&&F.dynamicChildren?(O(F.dynamicChildren,ye,H,ne,ae,ue,pe),(V.key!=null||ne&&V===ne.subTree)&&bE(F,V,!0)):q(F,V,H,Be,ne,ae,ue,pe,Ee)},U=(F,V,H,$,ne,ae,ue,pe,Ee)=>{V.slotScopeIds=pe,F==null?V.shapeFlag&512?ne.ctx.activate(V,H,$,ue,Ee):X(V,H,$,ne,ae,ue,Ee):K(F,V,Ee)},X=(F,V,H,$,ne,ae,ue)=>{const pe=F.component=MC(F,$,ne);if(Cu(F)&&(pe.ctx.renderer=xe),FC(pe,!1,ue),pe.asyncDep){if(ne&&ne.registerDep(pe,Y,ue),!F.el){const Ee=pe.subTree=Qe(vn);E(null,Ee,V,H)}}else Y(pe,F,V,H,ne,ae,ue)},K=(F,V,H)=>{const $=V.component=F.component;if(OP(F,V,H))if($.asyncDep&&!$.asyncResolved){_($,V,H);return}else $.next=V,$.update();else V.el=F.el,$.vnode=V},Y=(F,V,H,$,ne,ae,ue)=>{const pe=()=>{if(F.isMounted){let{next:Se,bu:ye,u:Ve,parent:ft,vnode:Ot}=F;{const Oe=xC(F);if(Oe){Se&&(Se.el=Ot.el,_(F,Se,ue)),Oe.asyncDep.then(()=>{F.isUnmounted||pe()});return}}let Et=Se,zt;Qo(F,!1),Se?(Se.el=Ot.el,_(F,Se,ue)):Se=Ot,ye&&ca(ye),(zt=Se.props&&Se.props.onVnodeBeforeUpdate)&&vi(zt,ft,Se,Ot),Qo(F,!0);const Lt=Xd(F),xn=F.subTree;F.subTree=Lt,m(xn,Lt,d(xn.el),te(xn),F,ne,ae),Se.el=Lt.el,Et===null&&df(F,Lt.el),Ve&&kn(Ve,ne),(zt=Se.props&&Se.props.onVnodeUpdated)&&kn(()=>vi(zt,ft,Se,Ot),ne)}else{let Se;const{el:ye,props:Ve}=V,{bm:ft,m:Ot,parent:Et,root:zt,type:Lt}=F,xn=go(V);if(Qo(F,!1),ft&&ca(ft),!xn&&(Se=Ve&&Ve.onVnodeBeforeMount)&&vi(Se,Et,V),Qo(F,!0),ye&&ut){const Oe=()=>{F.subTree=Xd(F),ut(ye,F.subTree,F,ne,null)};xn&&Lt.__asyncHydrate?Lt.__asyncHydrate(ye,F,Oe):Oe()}else{zt.ce&&zt.ce._injectChildStyle(Lt);const Oe=F.subTree=Xd(F);m(null,Oe,H,$,F,ne,ae),V.el=Oe.el}if(Ot&&kn(Ot,ne),!xn&&(Se=Ve&&Ve.onVnodeMounted)){const Oe=V;kn(()=>vi(Se,Et,Oe),ne)}(V.shapeFlag&256||Et&&go(Et.vnode)&&Et.vnode.shapeFlag&256)&&F.a&&kn(F.a,ne),F.isMounted=!0,V=H=$=null}};F.scope.on();const Ee=F.effect=new Jl(pe);F.scope.off();const de=F.update=Ee.run.bind(Ee),Be=F.job=Ee.runIfDirty.bind(Ee);Be.i=F,Be.id=F.uid,Ee.scheduler=()=>cE(Be),Qo(F,!0),de()},_=(F,V,H)=>{V.component=F;const $=F.vnode.props;F.vnode=V,F.next=null,gP(F,V.props,$,H),SP(F,V.children,H),Lr(),Ub(F),Mr()},q=(F,V,H,$,ne,ae,ue,pe,Ee=!1)=>{const de=F&&F.children,Be=F?F.shapeFlag:0,Se=V.children,{patchFlag:ye,shapeFlag:Ve}=V;if(ye>0){if(ye&128){j(de,Se,H,$,ne,ae,ue,pe,Ee);return}else if(ye&256){ee(de,Se,H,$,ne,ae,ue,pe,Ee);return}}Ve&8?(Be&16&&Me(de,ne,ae),Se!==de&&u(H,Se)):Be&16?Ve&16?j(de,Se,H,$,ne,ae,ue,pe,Ee):Me(de,ne,ae,!0):(Be&8&&u(H,""),Ve&16&&A(Se,H,$,ne,ae,ue,pe,Ee))},ee=(F,V,H,$,ne,ae,ue,pe,Ee)=>{F=F||ra,V=V||ra;const de=F.length,Be=V.length,Se=Math.min(de,Be);let ye;for(ye=0;ye<Se;ye++){const Ve=V[ye]=Ee?ao(V[ye]):Si(V[ye]);m(F[ye],Ve,H,null,ne,ae,ue,pe,Ee)}de>Be?Me(F,ne,ae,!0,!1,Se):A(V,H,$,ne,ae,ue,pe,Ee,Se)},j=(F,V,H,$,ne,ae,ue,pe,Ee)=>{let de=0;const Be=V.length;let Se=F.length-1,ye=Be-1;for(;de<=Se&&de<=ye;){const Ve=F[de],ft=V[de]=Ee?ao(V[de]):Si(V[de]);if(ws(Ve,ft))m(Ve,ft,H,null,ne,ae,ue,pe,Ee);else break;de++}for(;de<=Se&&de<=ye;){const Ve=F[Se],ft=V[ye]=Ee?ao(V[ye]):Si(V[ye]);if(ws(Ve,ft))m(Ve,ft,H,null,ne,ae,ue,pe,Ee);else break;Se--,ye--}if(de>Se){if(de<=ye){const Ve=ye+1,ft=Ve<Be?V[Ve].el:$;for(;de<=ye;)m(null,V[de]=Ee?ao(V[de]):Si(V[de]),H,ft,ne,ae,ue,pe,Ee),de++}}else if(de>ye)for(;de<=Se;)le(F[de],ne,ae,!0),de++;else{const Ve=de,ft=de,Ot=new Map;for(de=ft;de<=ye;de++){const Fe=V[de]=Ee?ao(V[de]):Si(V[de]);Fe.key!=null&&Ot.set(Fe.key,de)}let Et,zt=0;const Lt=ye-ft+1;let xn=!1,Oe=0;const we=new Array(Lt);for(de=0;de<Lt;de++)we[de]=0;for(de=Ve;de<=Se;de++){const Fe=F[de];if(zt>=Lt){le(Fe,ne,ae,!0);continue}let Ge;if(Fe.key!=null)Ge=Ot.get(Fe.key);else for(Et=ft;Et<=ye;Et++)if(we[Et-ft]===0&&ws(Fe,V[Et])){Ge=Et;break}Ge===void 0?le(Fe,ne,ae,!0):(we[Ge-ft]=de+1,Ge>=Oe?Oe=Ge:xn=!0,m(Fe,V[Ge],H,null,ne,ae,ue,pe,Ee),zt++)}const Ze=xn?xP(we):ra;for(Et=Ze.length-1,de=Lt-1;de>=0;de--){const Fe=ft+de,Ge=V[Fe],mn=Fe+1<Be?V[Fe+1].el:$;we[de]===0?m(null,Ge,H,mn,ne,ae,ue,pe,Ee):xn&&(Et<0||de!==Ze[Et]?he(Ge,H,mn,2):Et--)}}},he=(F,V,H,$,ne=null)=>{const{el:ae,type:ue,transition:pe,children:Ee,shapeFlag:de}=F;if(de&6){he(F.component.subTree,V,H,$);return}if(de&128){F.suspense.move(V,H,$);return}if(de&64){ue.move(F,V,H,xe);return}if(ue===be){i(ae,V,H);for(let Se=0;Se<Ee.length;Se++)he(Ee[Se],V,H,$);i(F.anchor,V,H);return}if(ue===da){S(F,V,H);return}if($!==2&&de&1&&pe)if($===0)pe.beforeEnter(ae),i(ae,V,H),kn(()=>pe.enter(ae),ne);else{const{leave:Se,delayLeave:ye,afterLeave:Ve}=pe,ft=()=>{F.ctx.isUnmounted?s(ae):i(ae,V,H)},Ot=()=>{Se(ae,()=>{ft(),Ve&&Ve()})};ye?ye(ae,ft,Ot):Ot()}else i(ae,V,H)},le=(F,V,H,$=!1,ne=!1)=>{const{type:ae,props:ue,ref:pe,children:Ee,dynamicChildren:de,shapeFlag:Be,patchFlag:Se,dirs:ye,cacheIndex:Ve}=F;if(Se===-2&&(ne=!1),pe!=null&&(Lr(),$l(pe,null,H,F,!0),Mr()),Ve!=null&&(V.renderCache[Ve]=void 0),Be&256){V.ctx.deactivate(F);return}const ft=Be&1&&ye,Ot=!go(F);let Et;if(Ot&&(Et=ue&&ue.onVnodeBeforeUnmount)&&vi(Et,V,F),Be&6)De(F.component,H,$);else{if(Be&128){F.suspense.unmount(H,$);return}ft&&zs(F,null,V,"beforeUnmount"),Be&64?F.type.remove(F,V,H,xe,$):de&&!de.hasOnce&&(ae!==be||Se>0&&Se&64)?Me(de,V,H,!1,!0):(ae===be&&Se&384||!ne&&Be&16)&&Me(Ee,V,H),$&&Le(F)}(Ot&&(Et=ue&&ue.onVnodeUnmounted)||ft)&&kn(()=>{Et&&vi(Et,V,F),ft&&zs(F,null,V,"unmounted")},H)},Le=F=>{const{type:V,el:H,anchor:$,transition:ne}=F;if(V===be){Ae(H,$);return}if(V===da){v(F);return}const ae=()=>{s(H),ne&&!ne.persisted&&ne.afterLeave&&ne.afterLeave()};if(F.shapeFlag&1&&ne&&!ne.persisted){const{leave:ue,delayLeave:pe}=ne,Ee=()=>ue(H,ae);pe?pe(F.el,ae,Ee):Ee()}else ae()},Ae=(F,V)=>{let H;for(;F!==V;)H=h(F),s(F),F=H;s(V)},De=(F,V,H)=>{const{bum:$,scope:ne,job:ae,subTree:ue,um:pe,m:Ee,a:de,parent:Be,slots:{__:Se}}=F;hh(Ee),hh(de),$&&ca($),Be&&Ne(Se)&&Se.forEach(ye=>{Be.renderCache[ye]=void 0}),ne.stop(),ae&&(ae.flags|=8,le(ue,F,V,H)),pe&&kn(pe,V),kn(()=>{F.isUnmounted=!0},V),V&&V.pendingBranch&&!V.isUnmounted&&F.asyncDep&&!F.asyncResolved&&F.suspenseId===V.pendingId&&(V.deps--,V.deps===0&&V.resolve())},Me=(F,V,H,$=!1,ne=!1,ae=0)=>{for(let ue=ae;ue<F.length;ue++)le(F[ue],V,H,$,ne)},te=F=>{if(F.shapeFlag&6)return te(F.component.subTree);if(F.shapeFlag&128)return F.suspense.next();const V=h(F.anchor||F.el),H=V&&V[VT];return H?h(H):V};let z=!1;const me=(F,V,H)=>{F==null?V._vnode&&le(V._vnode,null,null,!0):m(V._vnode||null,F,V,null,null,null,H),V._vnode=F,z||(z=!0,Ub(),uh(),z=!1)},xe={p:m,um:le,m:he,r:Le,mt:X,mc:A,pc:q,pbc:O,n:te,o:t};let qe,ut;return e&&([qe,ut]=e(xe)),{render:me,hydrate:qe,createApp:pP(me,qe)}}function nm({type:t,props:e},n){return n==="svg"&&t==="foreignObject"||n==="mathml"&&t==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:n}function Qo({effect:t,job:e},n){n?(t.flags|=32,e.flags|=4):(t.flags&=-33,e.flags&=-5)}function SC(t,e){return(!t||t&&!t.pendingBranch)&&e&&!e.persisted}function bE(t,e,n=!1){const i=t.children,s=e.children;if(Ne(i)&&Ne(s))for(let r=0;r<i.length;r++){const o=i[r];let a=s[r];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=s[r]=ao(s[r]),a.el=o.el),!n&&a.patchFlag!==-2&&bE(o,a)),a.type===Eo&&(a.el=o.el),a.type===vn&&!a.el&&(a.el=o.el)}}function xP(t){const e=t.slice(),n=[0];let i,s,r,o,a;const c=t.length;for(i=0;i<c;i++){const l=t[i];if(l!==0){if(s=n[n.length-1],t[s]<l){e[i]=s,n.push(i);continue}for(r=0,o=n.length-1;r<o;)a=r+o>>1,t[n[a]]<l?r=a+1:o=a;l<t[n[r]]&&(r>0&&(e[i]=n[r-1]),n[r]=i)}}for(r=n.length,o=n[r-1];r-- >0;)n[r]=o,o=e[o];return n}function xC(t){const e=t.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:xC(e)}function hh(t){if(t)for(let e=0;e<t.length;e++)t[e].flags|=8}const TC=Symbol.for("v-scx"),CC=()=>es(TC);function TP(t,e){return Au(t,null,e)}function CP(t,e){return Au(t,null,{flush:"post"})}function wC(t,e){return Au(t,null,{flush:"sync"})}function gt(t,e,n){return Au(t,e,n)}function Au(t,e,n=bt){const{immediate:i,deep:s,flush:r,once:o}=n,a=St({},n),c=e&&i||!e&&r!=="post";let l;if(xc){if(r==="sync"){const f=CC();l=f.__watcherHandles||(f.__watcherHandles=[])}else if(!c){const f=()=>{};return f.stop=Mn,f.resume=Mn,f.pause=Mn,f}}const u=On;a.call=(f,p,m)=>os(f,u,p,m);let d=!1;r==="post"?a.scheduler=f=>{kn(f,u&&u.suspense)}:r!=="sync"&&(d=!0,a.scheduler=(f,p)=>{p?f():cE(f)}),a.augmentJob=f=>{e&&(f.flags|=4),d&&(f.flags|=2,u&&(f.id=u.uid,f.i=u))};const h=hO(t,e,a);return xc&&(l?l.push(h):c&&h()),h}function wP(t,e,n){const i=this.proxy,s=ze(t)?t.includes(".")?AC(i,t):()=>i[t]:t.bind(i,i);let r;Xe(e)?r=e:(r=e.handler,n=e);const o=ga(this),a=Au(s,r.bind(i),n);return o(),a}function AC(t,e){const n=e.split(".");return()=>{let i=t;for(let s=0;s<n.length&&i;s++)i=i[n[s]];return i}}function AP(t,e,n=bt){const i=as(),s=Qt(e),r=Jn(e),o=NC(t,s),a=OT((c,l)=>{let u,d=bt,h;return wC(()=>{const f=t[s];zn(u,f)&&(u=f,l())}),{get(){return c(),n.get?n.get(u):u},set(f){const p=n.set?n.set(f):f;if(!zn(p,u)&&!(d!==bt&&zn(f,d)))return;const m=i.vnode.props;m&&(e in m||s in m||r in m)&&(`onUpdate:${e}`in m||`onUpdate:${s}`in m||`onUpdate:${r}`in m)||(u=f,l()),i.emit(`update:${e}`,p),zn(f,p)&&zn(f,d)&&!zn(p,h)&&l(),d=f,h=p}}});return a[Symbol.iterator]=()=>{let c=0;return{next(){return c<2?{value:c++?o||bt:a,done:!1}:{done:!0}}}},a}const NC=(t,e)=>e==="modelValue"||e==="model-value"?t.modelModifiers:t[`${e}Modifiers`]||t[`${Qt(e)}Modifiers`]||t[`${Jn(e)}Modifiers`];function NP(t,e,...n){if(t.isUnmounted)return;const i=t.vnode.props||bt;let s=n;const r=e.startsWith("update:"),o=r&&NC(i,e.slice(7));o&&(o.trim&&(s=n.map(u=>ze(u)?u.trim():u)),o.number&&(s=n.map(zl)));let a,c=i[a=aa(e)]||i[a=aa(Qt(e))];!c&&r&&(c=i[a=aa(Jn(e))]),c&&os(c,t,6,s);const l=i[a+"Once"];if(l){if(!t.emitted)t.emitted={};else if(t.emitted[a])return;t.emitted[a]=!0,os(l,t,6,s)}}function yC(t,e,n=!1){const i=e.emitsCache,s=i.get(t);if(s!==void 0)return s;const r=t.emits;let o={},a=!1;if(!Xe(t)){const c=l=>{const u=yC(l,e,!0);u&&(a=!0,St(o,u))};!n&&e.mixins.length&&e.mixins.forEach(c),t.extends&&c(t.extends),t.mixins&&t.mixins.forEach(c)}return!r&&!a?(Rt(t)&&i.set(t,null),null):(Ne(r)?r.forEach(c=>o[c]=null):St(o,r),Rt(t)&&i.set(t,o),o)}function uf(t,e){return!t||!ko(e)?!1:(e=e.slice(2).replace(/Once$/,""),kt(t,e[0].toLowerCase()+e.slice(1))||kt(t,Jn(e))||kt(t,e))}function Xd(t){const{type:e,vnode:n,proxy:i,withProxy:s,propsOptions:[r],slots:o,attrs:a,emit:c,render:l,renderCache:u,props:d,data:h,setupState:f,ctx:p,inheritAttrs:m}=t,b=_l(t);let E,x;try{if(n.shapeFlag&4){const v=s||i,T=v;E=Si(l.call(T,v,u,d,f,h,p)),x=a}else{const v=e;E=Si(v.length>1?v(d,{attrs:a,slots:o,emit:c}):v(d,null)),x=e.props?a:kP(a)}}catch(v){Vl.length=0,Aa(v,t,1),E=Qe(vn)}let S=E;if(x&&m!==!1){const v=Object.keys(x),{shapeFlag:T}=S;v.length&&T&7&&(r&&v.some(Jh)&&(x=DP(x,r)),S=_s(S,x,!1,!0))}return n.dirs&&(S=_s(S,null,!1,!0),S.dirs=S.dirs?S.dirs.concat(n.dirs):n.dirs),n.transition&&Fr(S,n.transition),E=S,_l(b),E}function yP(t,e=!0){let n;for(let i=0;i<t.length;i++){const s=t[i];if(Ur(s)){if(s.type!==vn||s.children==="v-if"){if(n)return;n=s}}else return}return n}const kP=t=>{let e;for(const n in t)(n==="class"||n==="style"||ko(n))&&((e||(e={}))[n]=t[n]);return e},DP=(t,e)=>{const n={};for(const i in t)(!Jh(i)||!(i.slice(9)in e))&&(n[i]=t[i]);return n};function OP(t,e,n){const{props:i,children:s,component:r}=t,{props:o,children:a,patchFlag:c}=e,l=r.emitsOptions;if(e.dirs||e.transition)return!0;if(n&&c>=0){if(c&1024)return!0;if(c&16)return i?Qb(i,o,l):!!o;if(c&8){const u=e.dynamicProps;for(let d=0;d<u.length;d++){const h=u[d];if(o[h]!==i[h]&&!uf(l,h))return!0}}}else return(s||a)&&(!a||!a.$stable)?!0:i===o?!1:i?o?Qb(i,o,l):!0:!!o;return!1}function Qb(t,e,n){const i=Object.keys(e);if(i.length!==Object.keys(t).length)return!0;for(let s=0;s<i.length;s++){const r=i[s];if(e[r]!==t[r]&&!uf(n,r))return!0}return!1}function df({vnode:t,parent:e},n){for(;e;){const i=e.subTree;if(i.suspense&&i.suspense.activeBranch===t&&(i.el=t.el),i===t)(t=e.vnode).el=n,e=e.parent;else break}}const fh=t=>t.__isSuspense;let rg=0;const PP={name:"Suspense",__isSuspense:!0,process(t,e,n,i,s,r,o,a,c,l){if(t==null)RP(e,n,i,s,r,o,a,c,l);else{if(r&&r.deps>0&&!t.suspense.isInFallback){e.suspense=t.suspense,e.suspense.vnode=e,e.el=t.el;return}LP(t,e,n,i,s,o,a,c,l)}},hydrate:MP,normalize:BP},IP=PP;function tu(t,e){const n=t.props&&t.props[e];Xe(n)&&n()}function RP(t,e,n,i,s,r,o,a,c){const{p:l,o:{createElement:u}}=c,d=u("div"),h=t.suspense=kC(t,s,i,e,d,n,r,o,a,c);l(null,h.pendingBranch=t.ssContent,d,null,i,h,r,o),h.deps>0?(tu(t,"onPending"),tu(t,"onFallback"),l(null,t.ssFallback,e,n,i,null,r,o),hc(h,t.ssFallback)):h.resolve(!1,!0)}function LP(t,e,n,i,s,r,o,a,{p:c,um:l,o:{createElement:u}}){const d=e.suspense=t.suspense;d.vnode=e,e.el=t.el;const h=e.ssContent,f=e.ssFallback,{activeBranch:p,pendingBranch:m,isInFallback:b,isHydrating:E}=d;if(m)d.pendingBranch=h,ws(h,m)?(c(m,h,d.hiddenContainer,null,s,d,r,o,a),d.deps<=0?d.resolve():b&&(E||(c(p,f,n,i,s,null,r,o,a),hc(d,f)))):(d.pendingId=rg++,E?(d.isHydrating=!1,d.activeBranch=m):l(m,s,d),d.deps=0,d.effects.length=0,d.hiddenContainer=u("div"),b?(c(null,h,d.hiddenContainer,null,s,d,r,o,a),d.deps<=0?d.resolve():(c(p,f,n,i,s,null,r,o,a),hc(d,f))):p&&ws(h,p)?(c(p,h,n,i,s,d,r,o,a),d.resolve(!0)):(c(null,h,d.hiddenContainer,null,s,d,r,o,a),d.deps<=0&&d.resolve()));else if(p&&ws(h,p))c(p,h,n,i,s,d,r,o,a),hc(d,h);else if(tu(e,"onPending"),d.pendingBranch=h,h.shapeFlag&512?d.pendingId=h.component.suspenseId:d.pendingId=rg++,c(null,h,d.hiddenContainer,null,s,d,r,o,a),d.deps<=0)d.resolve();else{const{timeout:x,pendingId:S}=d;x>0?setTimeout(()=>{d.pendingId===S&&d.fallback(f)},x):x===0&&d.fallback(f)}}function kC(t,e,n,i,s,r,o,a,c,l,u=!1){const{p:d,m:h,um:f,n:p,o:{parentNode:m,remove:b}}=l;let E;const x=FP(t);x&&e&&e.pendingBranch&&(E=e.pendingId,e.deps++);const S=t.props?Yl(t.props.timeout):void 0,v=r,T={vnode:t,parent:e,parentComponent:n,namespace:o,container:i,hiddenContainer:s,deps:0,pendingId:rg++,timeout:typeof S=="number"?S:-1,activeBranch:null,pendingBranch:null,isInFallback:!u,isHydrating:u,isUnmounted:!1,effects:[],resolve(w=!1,D=!1){const{vnode:A,activeBranch:y,pendingBranch:O,pendingId:L,effects:P,parentComponent:U,container:X}=T;let K=!1;T.isHydrating?T.isHydrating=!1:w||(K=y&&O.transition&&O.transition.mode==="out-in",K&&(y.transition.afterLeave=()=>{L===T.pendingId&&(h(O,X,r===v?p(y):r,0),Ql(P))}),y&&(m(y.el)===X&&(r=p(y)),f(y,U,T,!0)),K||h(O,X,r,0)),hc(T,O),T.pendingBranch=null,T.isInFallback=!1;let Y=T.parent,_=!1;for(;Y;){if(Y.pendingBranch){Y.effects.push(...P),_=!0;break}Y=Y.parent}!_&&!K&&Ql(P),T.effects=[],x&&e&&e.pendingBranch&&E===e.pendingId&&(e.deps--,e.deps===0&&!D&&e.resolve()),tu(A,"onResolve")},fallback(w){if(!T.pendingBranch)return;const{vnode:D,activeBranch:A,parentComponent:y,container:O,namespace:L}=T;tu(D,"onFallback");const P=p(A),U=()=>{T.isInFallback&&(d(null,w,O,P,y,null,L,a,c),hc(T,w))},X=w.transition&&w.transition.mode==="out-in";X&&(A.transition.afterLeave=U),T.isInFallback=!0,f(A,y,null,!0),X||U()},move(w,D,A){T.activeBranch&&h(T.activeBranch,w,D,A),T.container=w},next(){return T.activeBranch&&p(T.activeBranch)},registerDep(w,D,A){const y=!!T.pendingBranch;y&&T.deps++;const O=w.vnode.el;w.asyncDep.catch(L=>{Aa(L,w,0)}).then(L=>{if(w.isUnmounted||T.isUnmounted||T.pendingId!==w.suspenseId)return;w.asyncResolved=!0;const{vnode:P}=w;lg(w,L,!1),O&&(P.el=O);const U=!O&&w.subTree.el;D(w,P,m(O||w.subTree.el),O?null:p(w.subTree),T,o,A),U&&b(U),df(w,P.el),y&&--T.deps===0&&T.resolve()})},unmount(w,D){T.isUnmounted=!0,T.activeBranch&&f(T.activeBranch,n,w,D),T.pendingBranch&&f(T.pendingBranch,n,w,D)}};return T}function MP(t,e,n,i,s,r,o,a,c){const l=e.suspense=kC(e,i,n,t.parentNode,document.createElement("div"),null,s,r,o,a,!0),u=c(t,l.pendingBranch=e.ssContent,n,l,r,o);return l.deps===0&&l.resolve(!1,!0),u}function BP(t){const{shapeFlag:e,children:n}=t,i=e&32;t.ssContent=Gb(i?n.default:n),t.ssFallback=i?Gb(n.fallback):Qe(vn)}function Gb(t){let e;if(Xe(t)){const n=ma&&t._c;n&&(t._d=!1,R()),t=t(),n&&(t._d=!0,e=Zn,OC())}return Ne(t)&&(t=yP(t)),t=Si(t),e&&!t.dynamicChildren&&(t.dynamicChildren=e.filter(n=>n!==t)),t}function DC(t,e){e&&e.pendingBranch?Ne(t)?e.effects.push(...t):e.effects.push(t):Ql(t)}function hc(t,e){t.activeBranch=e;const{vnode:n,parentComponent:i}=t;let s=e.el;for(;!s&&e.component;)e=e.component.subTree,s=e.el;n.el=s,i&&i.subTree===n&&(i.vnode.el=s,df(i,s))}function FP(t){const e=t.props&&t.props.suspensible;return e!=null&&e!==!1}const be=Symbol.for("v-fgt"),Eo=Symbol.for("v-txt"),vn=Symbol.for("v-cmt"),da=Symbol.for("v-stc"),Vl=[];let Zn=null;function R(t=!1){Vl.push(Zn=t?null:[])}function OC(){Vl.pop(),Zn=Vl[Vl.length-1]||null}let ma=1;function og(t,e=!1){ma+=t,t<0&&Zn&&e&&(Zn.hasOnce=!0)}function PC(t){return t.dynamicChildren=ma>0?Zn||ra:null,OC(),ma>0&&Zn&&Zn.push(t),t}function B(t,e,n,i,s,r){return PC(N(t,e,n,i,s,r,!0))}function dt(t,e,n,i,s){return PC(Qe(t,e,n,i,s,!0))}function Ur(t){return t?t.__v_isVNode===!0:!1}function ws(t,e){return t.type===e.type&&t.key===e.key}function UP(t){}const IC=({key:t})=>t??null,jd=({ref:t,ref_key:e,ref_for:n})=>(typeof t=="number"&&(t=""+t),t!=null?ze(t)||cn(t)||Xe(t)?{i:Pn,r:t,k:e,f:!!n}:t:null);function N(t,e=null,n=null,i=0,s=null,r=t===be?0:1,o=!1,a=!1){const c={__v_isVNode:!0,__v_skip:!0,type:t,props:e,key:e&&IC(e),ref:e&&jd(e),scopeId:rf,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:r,patchFlag:i,dynamicProps:s,dynamicChildren:null,appContext:null,ctx:Pn};return a?(SE(c,n),r&128&&t.normalize(c)):n&&(c.shapeFlag|=ze(n)?8:16),ma>0&&!o&&Zn&&(c.patchFlag>0||r&6)&&c.patchFlag!==32&&Zn.push(c),c}const Qe=VP;function VP(t,e=null,n=null,i=0,s=null,r=!1){if((!t||t===nC)&&(t=vn),Ur(t)){const a=_s(t,e,!0);return n&&SE(a,n),ma>0&&!r&&Zn&&(a.shapeFlag&6?Zn[Zn.indexOf(t)]=a:Zn.push(a)),a.patchFlag=-2,a}if(JP(t)&&(t=t.__vccOpts),e){e=RC(e);let{class:a,style:c}=e;a&&!ze(a)&&(e.class=Dt(a)),Rt(c)&&(nf(c)&&!Ne(c)&&(c=St({},c)),e.style=vt(c))}const o=ze(t)?1:fh(t)?128:WT(t)?64:Rt(t)?4:Xe(t)?2:0;return N(t,e,n,i,s,o,r,!0)}function RC(t){return t?nf(t)||dC(t)?St({},t):t:null}function _s(t,e,n=!1,i=!1){const{props:s,ref:r,patchFlag:o,children:a,transition:c}=t,l=e?LC(s||{},e):s,u={__v_isVNode:!0,__v_skip:!0,type:t.type,props:l,key:l&&IC(l),ref:e&&e.ref?n&&r?Ne(r)?r.concat(jd(e)):[r,jd(e)]:jd(e):r,scopeId:t.scopeId,slotScopeIds:t.slotScopeIds,children:a,target:t.target,targetStart:t.targetStart,targetAnchor:t.targetAnchor,staticCount:t.staticCount,shapeFlag:t.shapeFlag,patchFlag:e&&t.type!==be?o===-1?16:o|16:o,dynamicProps:t.dynamicProps,dynamicChildren:t.dynamicChildren,appContext:t.appContext,dirs:t.dirs,transition:c,component:t.component,suspense:t.suspense,ssContent:t.ssContent&&_s(t.ssContent),ssFallback:t.ssFallback&&_s(t.ssFallback),el:t.el,anchor:t.anchor,ctx:t.ctx,ce:t.ce};return c&&i&&Fr(u,c.clone(u)),u}function mt(t=" ",e=0){return Qe(Eo,null,t,e)}function WP(t,e){const n=Qe(da,null,t);return n.staticCount=e,n}function G(t="",e=!1){return e?(R(),dt(vn,null,t)):Qe(vn,null,t)}function Si(t){return t==null||typeof t=="boolean"?Qe(vn):Ne(t)?Qe(be,null,t.slice()):Ur(t)?ao(t):Qe(Eo,null,String(t))}function ao(t){return t.el===null&&t.patchFlag!==-1||t.memo?t:_s(t)}function SE(t,e){let n=0;const{shapeFlag:i}=t;if(e==null)e=null;else if(Ne(e))n=16;else if(typeof e=="object")if(i&65){const s=e.default;s&&(s._c&&(s._d=!1),SE(t,s()),s._c&&(s._d=!0));return}else{n=32;const s=e._;!s&&!dC(e)?e._ctx=Pn:s===3&&Pn&&(Pn.slots._===1?e._=1:(e._=2,t.patchFlag|=1024))}else Xe(e)?(e={default:e,_ctx:Pn},n=32):(e=String(e),i&64?(n=16,e=[mt(e)]):n=8);t.children=e,t.shapeFlag|=n}function LC(...t){const e={};for(let n=0;n<t.length;n++){const i=t[n];for(const s in i)if(s==="class")e.class!==i.class&&(e.class=Dt([e.class,i.class]));else if(s==="style")e.style=vt([e.style,i.style]);else if(ko(s)){const r=e[s],o=i[s];o&&r!==o&&!(Ne(r)&&r.includes(o))&&(e[s]=r?[].concat(r,o):o)}else s!==""&&(e[s]=i[s])}return e}function vi(t,e,n,i=null){os(t,e,7,[n,i])}const HP=aC();let XP=0;function MC(t,e,n){const i=t.type,s=(e?e.appContext:t.appContext)||HP,r={uid:XP++,vnode:t,type:i,parent:e,appContext:s,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new _g(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(s.provides),ids:e?e.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:fC(i,s),emitsOptions:yC(i,s),emit:null,emitted:null,propsDefaults:bt,inheritAttrs:i.inheritAttrs,ctx:bt,data:bt,props:bt,attrs:bt,slots:bt,refs:bt,setupState:bt,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return r.ctx={_:r},r.root=e?e.root:r,r.emit=NP.bind(null,r),t.ce&&t.ce(r),r}let On=null;const as=()=>On||Pn;let ph,ag;{const t=Su(),e=(n,i)=>{let s;return(s=t[n])||(s=t[n]=[]),s.push(i),r=>{s.length>1?s.forEach(o=>o(r)):s[0](r)}};ph=e("__VUE_INSTANCE_SETTERS__",n=>On=n),ag=e("__VUE_SSR_SETTERS__",n=>xc=n)}const ga=t=>{const e=On;return ph(t),t.scope.on(),()=>{t.scope.off(),ph(e)}},cg=()=>{On&&On.scope.off(),ph(null)};function BC(t){return t.vnode.shapeFlag&4}let xc=!1;function FC(t,e=!1,n=!1){e&&ag(e);const{props:i,children:s}=t.vnode,r=BC(t);mP(t,i,r,e),bP(t,s,n||e);const o=r?jP(t,e):void 0;return e&&ag(!1),o}function jP(t,e){const n=t.type;t.accessCache=Object.create(null),t.proxy=new Proxy(t.ctx,tg);const{setup:i}=n;if(i){Lr();const s=t.setupContext=i.length>1?VC(t):null,r=ga(t),o=Jc(i,t,0,[t.props,s]),a=Kh(o);if(Mr(),r(),(a||t.sp)&&!go(t)&&dE(t),a){if(o.then(cg,cg),e)return o.then(c=>{lg(t,c,e)}).catch(c=>{Aa(c,t,0)});t.asyncDep=o}else lg(t,o,e)}else UC(t,e)}function lg(t,e,n){Xe(e)?t.type.__ssrInlineRender?t.ssrRender=e:t.render=e:Rt(e)&&(t.setupState=aE(e)),UC(t,n)}let mh,ug;function qP(t){mh=t,ug=e=>{e.render._rc&&(e.withProxy=new Proxy(e.ctx,KO))}}const zP=()=>!mh;function UC(t,e,n){const i=t.type;if(!t.render){if(!e&&mh&&!i.render){const s=i.template||gE(t).template;if(s){const{isCustomElement:r,compilerOptions:o}=t.appContext.config,{delimiters:a,compilerOptions:c}=i,l=St(St({isCustomElement:r,delimiters:a},o),c);i.render=mh(s,l)}}t.render=i.render||Mn,ug&&ug(t)}{const s=ga(t);Lr();try{cP(t)}finally{Mr(),s()}}}const YP={get(t,e){return Yn(t,"get",""),t[e]}};function VC(t){const e=n=>{t.exposed=n||{}};return{attrs:new Proxy(t.attrs,YP),slots:t.slots,emit:t.emit,expose:e}}function Nu(t){return t.exposed?t.exposeProxy||(t.exposeProxy=new Proxy(aE(sf(t.exposed)),{get(e,n){if(n in e)return e[n];if(n in Fl)return Fl[n](t)},has(e,n){return n in e||n in Fl}})):t.proxy}function dg(t,e=!0){return Xe(t)?t.displayName||t.name:t.name||e&&t.__name}function JP(t){return Xe(t)&&"__vccOpts"in t}const di=(t,e)=>cO(t,e,xc);function hf(t,e,n){const i=arguments.length;return i===2?Rt(e)&&!Ne(e)?Ur(e)?Qe(t,null,[e]):Qe(t,e):Qe(t,null,e):(i>3?n=Array.prototype.slice.call(arguments,2):i===3&&Ur(n)&&(n=[n]),Qe(t,e,n))}function ZP(){}function KP(t,e,n,i){const s=n[i];if(s&&WC(s,t))return s;const r=e();return r.memo=t.slice(),r.cacheIndex=i,n[i]=r}function WC(t,e){const n=t.memo;if(n.length!=e.length)return!1;for(let i=0;i<n.length;i++)if(zn(n[i],e[i]))return!1;return ma>0&&Zn&&Zn.push(t),!0}const HC="3.5.16",QP=Mn,GP=EO,_P=tc,$P=UT,eI={createComponentInstance:MC,setupComponent:FC,renderComponentRoot:Xd,setCurrentRenderingInstance:_l,isVNode:Ur,normalizeVNode:Si,getComponentPublicInstance:Nu,ensureValidVNode:mE,pushWarningContext:fO,popWarningContext:pO},tI=eI,nI=null,iI=null,sI=null;/**
* @vue/runtime-dom v3.5.16
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let hg;const _b=typeof window<"u"&&window.trustedTypes;if(_b)try{hg=_b.createPolicy("vue",{createHTML:t=>t})}catch{}const XC=hg?t=>hg.createHTML(t):t=>t,rI="http://www.w3.org/2000/svg",oI="http://www.w3.org/1998/Math/MathML",vr=typeof document<"u"?document:null,$b=vr&&vr.createElement("template"),aI={insert:(t,e,n)=>{e.insertBefore(t,n||null)},remove:t=>{const e=t.parentNode;e&&e.removeChild(t)},createElement:(t,e,n,i)=>{const s=e==="svg"?vr.createElementNS(rI,t):e==="mathml"?vr.createElementNS(oI,t):n?vr.createElement(t,{is:n}):vr.createElement(t);return t==="select"&&i&&i.multiple!=null&&s.setAttribute("multiple",i.multiple),s},createText:t=>vr.createTextNode(t),createComment:t=>vr.createComment(t),setText:(t,e)=>{t.nodeValue=e},setElementText:(t,e)=>{t.textContent=e},parentNode:t=>t.parentNode,nextSibling:t=>t.nextSibling,querySelector:t=>vr.querySelector(t),setScopeId(t,e){t.setAttribute(e,"")},insertStaticContent(t,e,n,i,s,r){const o=n?n.previousSibling:e.lastChild;if(s&&(s===r||s.nextSibling))for(;e.insertBefore(s.cloneNode(!0),n),!(s===r||!(s=s.nextSibling)););else{$b.innerHTML=XC(i==="svg"?`<svg>${t}</svg>`:i==="mathml"?`<math>${t}</math>`:t);const a=$b.content;if(i==="svg"||i==="mathml"){const c=a.firstChild;for(;c.firstChild;)a.appendChild(c.firstChild);a.removeChild(c)}e.insertBefore(a,n)}return[o?o.nextSibling:e.firstChild,n?n.previousSibling:e.lastChild]}},Kr="transition",gl="animation",Tc=Symbol("_vtc"),jC={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},qC=St({},uE,jC),cI=t=>(t.displayName="Transition",t.props=qC,t),lI=cI((t,{slots:e})=>hf(zT,zC(t),e)),Go=(t,e=[])=>{Ne(t)?t.forEach(n=>n(...e)):t&&t(...e)},eS=t=>t?Ne(t)?t.some(e=>e.length>1):t.length>1:!1;function zC(t){const e={};for(const P in t)P in jC||(e[P]=t[P]);if(t.css===!1)return e;const{name:n="v",type:i,duration:s,enterFromClass:r=`${n}-enter-from`,enterActiveClass:o=`${n}-enter-active`,enterToClass:a=`${n}-enter-to`,appearFromClass:c=r,appearActiveClass:l=o,appearToClass:u=a,leaveFromClass:d=`${n}-leave-from`,leaveActiveClass:h=`${n}-leave-active`,leaveToClass:f=`${n}-leave-to`}=t,p=uI(s),m=p&&p[0],b=p&&p[1],{onBeforeEnter:E,onEnter:x,onEnterCancelled:S,onLeave:v,onLeaveCancelled:T,onBeforeAppear:w=E,onAppear:D=x,onAppearCancelled:A=S}=e,y=(P,U,X,K)=>{P._enterCancelled=K,to(P,U?u:a),to(P,U?l:o),X&&X()},O=(P,U)=>{P._isLeaving=!1,to(P,d),to(P,f),to(P,h),U&&U()},L=P=>(U,X)=>{const K=P?D:x,Y=()=>y(U,P,X);Go(K,[U,Y]),tS(()=>{to(U,P?c:r),js(U,P?u:a),eS(K)||nS(U,i,m,Y)})};return St(e,{onBeforeEnter(P){Go(E,[P]),js(P,r),js(P,o)},onBeforeAppear(P){Go(w,[P]),js(P,c),js(P,l)},onEnter:L(!1),onAppear:L(!0),onLeave(P,U){P._isLeaving=!0;const X=()=>O(P,U);js(P,d),P._enterCancelled?(js(P,h),fg()):(fg(),js(P,h)),tS(()=>{P._isLeaving&&(to(P,d),js(P,f),eS(v)||nS(P,i,b,X))}),Go(v,[P,X])},onEnterCancelled(P){y(P,!1,void 0,!0),Go(S,[P])},onAppearCancelled(P){y(P,!0,void 0,!0),Go(A,[P])},onLeaveCancelled(P){O(P),Go(T,[P])}})}function uI(t){if(t==null)return null;if(Rt(t))return[im(t.enter),im(t.leave)];{const e=im(t);return[e,e]}}function im(t){return Yl(t)}function js(t,e){e.split(/\s+/).forEach(n=>n&&t.classList.add(n)),(t[Tc]||(t[Tc]=new Set)).add(e)}function to(t,e){e.split(/\s+/).forEach(i=>i&&t.classList.remove(i));const n=t[Tc];n&&(n.delete(e),n.size||(t[Tc]=void 0))}function tS(t){requestAnimationFrame(()=>{requestAnimationFrame(t)})}let dI=0;function nS(t,e,n,i){const s=t._endId=++dI,r=()=>{s===t._endId&&i()};if(n!=null)return setTimeout(r,n);const{type:o,timeout:a,propCount:c}=YC(t,e);if(!o)return i();const l=o+"end";let u=0;const d=()=>{t.removeEventListener(l,h),r()},h=f=>{f.target===t&&++u>=c&&d()};setTimeout(()=>{u<c&&d()},a+1),t.addEventListener(l,h)}function YC(t,e){const n=window.getComputedStyle(t),i=p=>(n[p]||"").split(", "),s=i(`${Kr}Delay`),r=i(`${Kr}Duration`),o=iS(s,r),a=i(`${gl}Delay`),c=i(`${gl}Duration`),l=iS(a,c);let u=null,d=0,h=0;e===Kr?o>0&&(u=Kr,d=o,h=r.length):e===gl?l>0&&(u=gl,d=l,h=c.length):(d=Math.max(o,l),u=d>0?o>l?Kr:gl:null,h=u?u===Kr?r.length:c.length:0);const f=u===Kr&&/\b(transform|all)(,|$)/.test(i(`${Kr}Property`).toString());return{type:u,timeout:d,propCount:h,hasTransform:f}}function iS(t,e){for(;t.length<e.length;)t=t.concat(t);return Math.max(...e.map((n,i)=>sS(n)+sS(t[i])))}function sS(t){return t==="auto"?0:Number(t.slice(0,-1).replace(",","."))*1e3}function fg(){return document.body.offsetHeight}function hI(t,e,n){const i=t[Tc];i&&(e=(e?[e,...i]:[...i]).join(" ")),e==null?t.removeAttribute("class"):n?t.setAttribute("class",e):t.className=e}const gh=Symbol("_vod"),JC=Symbol("_vsh"),ZC={beforeMount(t,{value:e},{transition:n}){t[gh]=t.style.display==="none"?"":t.style.display,n&&e?n.beforeEnter(t):El(t,e)},mounted(t,{value:e},{transition:n}){n&&e&&n.enter(t)},updated(t,{value:e,oldValue:n},{transition:i}){!e!=!n&&(i?e?(i.beforeEnter(t),El(t,!0),i.enter(t)):i.leave(t,()=>{El(t,!1)}):El(t,e))},beforeUnmount(t,{value:e}){El(t,e)}};function El(t,e){t.style.display=e?t[gh]:"none",t[JC]=!e}function fI(){ZC.getSSRProps=({value:t})=>{if(!t)return{style:{display:"none"}}}}const KC=Symbol("");function pI(t){const e=as();if(!e)return;const n=e.ut=(s=t(e.proxy))=>{Array.from(document.querySelectorAll(`[data-v-owner="${e.uid}"]`)).forEach(r=>Eh(r,s))},i=()=>{const s=t(e.proxy);e.ce?Eh(e.ce,s):pg(e.subTree,s),n(s)};hE(()=>{Ql(i)}),bn(()=>{gt(i,Mn,{flush:"post"});const s=new MutationObserver(i);s.observe(e.subTree.el.parentNode,{childList:!0}),Io(()=>s.disconnect())})}function pg(t,e){if(t.shapeFlag&128){const n=t.suspense;t=n.activeBranch,n.pendingBranch&&!n.isHydrating&&n.effects.push(()=>{pg(n.activeBranch,e)})}for(;t.component;)t=t.component.subTree;if(t.shapeFlag&1&&t.el)Eh(t.el,e);else if(t.type===be)t.children.forEach(n=>pg(n,e));else if(t.type===da){let{el:n,anchor:i}=t;for(;n&&(Eh(n,e),n!==i);)n=n.nextSibling}}function Eh(t,e){if(t.nodeType===1){const n=t.style;let i="";for(const s in e)n.setProperty(`--${s}`,e[s]),i+=`--${s}: ${e[s]};`;n[KC]=i}}const mI=/(^|;)\s*display\s*:/;function gI(t,e,n){const i=t.style,s=ze(n);let r=!1;if(n&&!s){if(e)if(ze(e))for(const o of e.split(";")){const a=o.slice(0,o.indexOf(":")).trim();n[a]==null&&qd(i,a,"")}else for(const o in e)n[o]==null&&qd(i,o,"");for(const o in n)o==="display"&&(r=!0),qd(i,o,n[o])}else if(s){if(e!==n){const o=i[KC];o&&(n+=";"+o),i.cssText=n,r=mI.test(n)}}else e&&t.removeAttribute("style");gh in t&&(t[gh]=r?i.display:"",t[JC]&&(i.display="none"))}const rS=/\s*!important$/;function qd(t,e,n){if(Ne(n))n.forEach(i=>qd(t,e,i));else if(n==null&&(n=""),e.startsWith("--"))t.setProperty(e,n);else{const i=EI(t,e);rS.test(n)?t.setProperty(Jn(i),n.replace(rS,""),"important"):t[i]=n}}const oS=["Webkit","Moz","ms"],sm={};function EI(t,e){const n=sm[e];if(n)return n;let i=Qt(e);if(i!=="filter"&&i in t)return sm[e]=i;i=Oo(i);for(let s=0;s<oS.length;s++){const r=oS[s]+i;if(r in t)return sm[e]=r}return e}const aS="http://www.w3.org/1999/xlink";function cS(t,e,n,i,s,r=lT(e)){i&&e.startsWith("xlink:")?n==null?t.removeAttributeNS(aS,e.slice(6,e.length)):t.setAttributeNS(aS,e,n):n==null||r&&!Gg(n)?t.removeAttribute(e):t.setAttribute(e,r?"":pi(n)?String(n):n)}function lS(t,e,n,i,s){if(e==="innerHTML"||e==="textContent"){n!=null&&(t[e]=e==="innerHTML"?XC(n):n);return}const r=t.tagName;if(e==="value"&&r!=="PROGRESS"&&!r.includes("-")){const a=r==="OPTION"?t.getAttribute("value")||"":t.value,c=n==null?t.type==="checkbox"?"on":"":String(n);(a!==c||!("_value"in t))&&(t.value=c),n==null&&t.removeAttribute(e),t._value=n;return}let o=!1;if(n===""||n==null){const a=typeof t[e];a==="boolean"?n=Gg(n):n==null&&a==="string"?(n="",o=!0):a==="number"&&(n=0,o=!0)}try{t[e]=n}catch{}o&&t.removeAttribute(s||e)}function wr(t,e,n,i){t.addEventListener(e,n,i)}function vI(t,e,n,i){t.removeEventListener(e,n,i)}const uS=Symbol("_vei");function bI(t,e,n,i,s=null){const r=t[uS]||(t[uS]={}),o=r[e];if(i&&o)o.value=i;else{const[a,c]=SI(e);if(i){const l=r[e]=CI(i,s);wr(t,a,l,c)}else o&&(vI(t,a,o,c),r[e]=void 0)}}const dS=/(?:Once|Passive|Capture)$/;function SI(t){let e;if(dS.test(t)){e={};let i;for(;i=t.match(dS);)t=t.slice(0,t.length-i[0].length),e[i[0].toLowerCase()]=!0}return[t[2]===":"?t.slice(3):Jn(t.slice(2)),e]}let rm=0;const xI=Promise.resolve(),TI=()=>rm||(xI.then(()=>rm=0),rm=Date.now());function CI(t,e){const n=i=>{if(!i._vts)i._vts=Date.now();else if(i._vts<=n.attached)return;os(wI(i,n.value),e,5,[i])};return n.value=t,n.attached=TI(),n}function wI(t,e){if(Ne(e)){const n=t.stopImmediatePropagation;return t.stopImmediatePropagation=()=>{n.call(t),t._stopped=!0},e.map(i=>s=>!s._stopped&&i&&i(s))}else return e}const hS=t=>t.charCodeAt(0)===111&&t.charCodeAt(1)===110&&t.charCodeAt(2)>96&&t.charCodeAt(2)<123,AI=(t,e,n,i,s,r)=>{const o=s==="svg";e==="class"?hI(t,i,o):e==="style"?gI(t,n,i):ko(e)?Jh(e)||bI(t,e,n,i,r):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):NI(t,e,i,o))?(lS(t,e,i),!t.tagName.includes("-")&&(e==="value"||e==="checked"||e==="selected")&&cS(t,e,i,o,r,e!=="value")):t._isVueCE&&(/[A-Z]/.test(e)||!ze(i))?lS(t,Qt(e),i,r,e):(e==="true-value"?t._trueValue=i:e==="false-value"&&(t._falseValue=i),cS(t,e,i,o))};function NI(t,e,n,i){if(i)return!!(e==="innerHTML"||e==="textContent"||e in t&&hS(e)&&Xe(n));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="autocorrect"||e==="form"||e==="list"&&t.tagName==="INPUT"||e==="type"&&t.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const s=t.tagName;if(s==="IMG"||s==="VIDEO"||s==="CANVAS"||s==="SOURCE")return!1}return hS(e)&&ze(n)?!1:e in t}const fS={};/*! #__NO_SIDE_EFFECTS__ */function QC(t,e,n){const i=Ue(t,e);bu(i)&&St(i,e);class s extends ff{constructor(o){super(i,o,n)}}return s.def=i,s}/*! #__NO_SIDE_EFFECTS__ */const yI=(t,e)=>QC(t,e,cw),kI=typeof HTMLElement<"u"?HTMLElement:class{};class ff extends kI{constructor(e,n={},i=bh){super(),this._def=e,this._props=n,this._createApp=i,this._isVueCE=!0,this._instance=null,this._app=null,this._nonce=this._def.nonce,this._connected=!1,this._resolved=!1,this._numberProps=null,this._styleChildren=new WeakSet,this._ob=null,this.shadowRoot&&i!==bh?this._root=this.shadowRoot:e.shadowRoot!==!1?(this.attachShadow({mode:"open"}),this._root=this.shadowRoot):this._root=this}connectedCallback(){if(!this.isConnected)return;!this.shadowRoot&&!this._resolved&&this._parseSlots(),this._connected=!0;let e=this;for(;e=e&&(e.parentNode||e.host);)if(e instanceof ff){this._parent=e;break}this._instance||(this._resolved?this._mount(this._def):e&&e._pendingResolve?this._pendingResolve=e._pendingResolve.then(()=>{this._pendingResolve=void 0,this._resolveDef()}):this._resolveDef())}_setParent(e=this._parent){e&&(this._instance.parent=e._instance,this._inheritParentContext(e))}_inheritParentContext(e=this._parent){e&&this._app&&Object.setPrototypeOf(this._app._context.provides,e._instance.provides)}disconnectedCallback(){this._connected=!1,Zc(()=>{this._connected||(this._ob&&(this._ob.disconnect(),this._ob=null),this._app&&this._app.unmount(),this._instance&&(this._instance.ce=void 0),this._app=this._instance=null)})}_resolveDef(){if(this._pendingResolve)return;for(let i=0;i<this.attributes.length;i++)this._setAttr(this.attributes[i].name);this._ob=new MutationObserver(i=>{for(const s of i)this._setAttr(s.attributeName)}),this._ob.observe(this,{attributes:!0});const e=(i,s=!1)=>{this._resolved=!0,this._pendingResolve=void 0;const{props:r,styles:o}=i;let a;if(r&&!Ne(r))for(const c in r){const l=r[c];(l===Number||l&&l.type===Number)&&(c in this._props&&(this._props[c]=Yl(this._props[c])),(a||(a=Object.create(null)))[Qt(c)]=!0)}this._numberProps=a,this._resolveProps(i),this.shadowRoot&&this._applyStyles(o),this._mount(i)},n=this._def.__asyncLoader;n?this._pendingResolve=n().then(i=>e(this._def=i,!0)):e(this._def)}_mount(e){this._app=this._createApp(e),this._inheritParentContext(),e.configureApp&&e.configureApp(this._app),this._app._ceVNode=this._createVNode(),this._app.mount(this._root);const n=this._instance&&this._instance.exposed;if(n)for(const i in n)kt(this,i)||Object.defineProperty(this,i,{get:()=>ie(n[i])})}_resolveProps(e){const{props:n}=e,i=Ne(n)?n:Object.keys(n||{});for(const s of Object.keys(this))s[0]!=="_"&&i.includes(s)&&this._setProp(s,this[s]);for(const s of i.map(Qt))Object.defineProperty(this,s,{get(){return this._getProp(s)},set(r){this._setProp(s,r,!0,!0)}})}_setAttr(e){if(e.startsWith("data-v-"))return;const n=this.hasAttribute(e);let i=n?this.getAttribute(e):fS;const s=Qt(e);n&&this._numberProps&&this._numberProps[s]&&(i=Yl(i)),this._setProp(s,i,!1,!0)}_getProp(e){return this._props[e]}_setProp(e,n,i=!0,s=!1){if(n!==this._props[e]&&(n===fS?delete this._props[e]:(this._props[e]=n,e==="key"&&this._app&&(this._app._ceVNode.key=n)),s&&this._instance&&this._update(),i)){const r=this._ob;r&&r.disconnect(),n===!0?this.setAttribute(Jn(e),""):typeof n=="string"||typeof n=="number"?this.setAttribute(Jn(e),n+""):n||this.removeAttribute(Jn(e)),r&&r.observe(this,{attributes:!0})}}_update(){const e=this._createVNode();this._app&&(e.appContext=this._app._context),aw(e,this._root)}_createVNode(){const e={};this.shadowRoot||(e.onVnodeMounted=e.onVnodeUpdated=this._renderSlots.bind(this));const n=Qe(this._def,St(e,this._props));return this._instance||(n.ce=i=>{this._instance=i,i.ce=this,i.isCE=!0;const s=(r,o)=>{this.dispatchEvent(new CustomEvent(r,bu(o[0])?St({detail:o},o[0]):{detail:o}))};i.emit=(r,...o)=>{s(r,o),Jn(r)!==r&&s(Jn(r),o)},this._setParent()}),n}_applyStyles(e,n){if(!e)return;if(n){if(n===this._def||this._styleChildren.has(n))return;this._styleChildren.add(n)}const i=this._nonce;for(let s=e.length-1;s>=0;s--){const r=document.createElement("style");i&&r.setAttribute("nonce",i),r.textContent=e[s],this.shadowRoot.prepend(r)}}_parseSlots(){const e=this._slots={};let n;for(;n=this.firstChild;){const i=n.nodeType===1&&n.getAttribute("slot")||"default";(e[i]||(e[i]=[])).push(n),this.removeChild(n)}}_renderSlots(){const e=(this._teleportTarget||this).querySelectorAll("slot"),n=this._instance.type.__scopeId;for(let i=0;i<e.length;i++){const s=e[i],r=s.getAttribute("name")||"default",o=this._slots[r],a=s.parentNode;if(o)for(const c of o){if(n&&c.nodeType===1){const l=n+"-s",u=document.createTreeWalker(c,1);c.setAttribute(l,"");let d;for(;d=u.nextNode();)d.setAttribute(l,"")}a.insertBefore(c,s)}else for(;s.firstChild;)a.insertBefore(s.firstChild,s);a.removeChild(s)}}_injectChildStyle(e){this._applyStyles(e.styles,e)}_removeChildStyle(e){}}function GC(t){const e=as(),n=e&&e.ce;return n||null}function DI(){const t=GC();return t&&t.shadowRoot}function OI(t="$style"){{const e=as();if(!e)return bt;const n=e.type.__cssModules;if(!n)return bt;const i=n[t];return i||bt}}const _C=new WeakMap,$C=new WeakMap,vh=Symbol("_moveCb"),pS=Symbol("_enterCb"),PI=t=>(delete t.props.mode,t),II=PI({name:"TransitionGroup",props:St({},qC,{tag:String,moveClass:String}),setup(t,{slots:e}){const n=as(),i=lE();let s,r;return cf(()=>{if(!s.length)return;const o=t.moveClass||`${t.name||"v"}-move`;if(!FI(s[0].el,n.vnode.el,o)){s=[];return}s.forEach(LI),s.forEach(MI);const a=s.filter(BI);fg(),a.forEach(c=>{const l=c.el,u=l.style;js(l,o),u.transform=u.webkitTransform=u.transitionDuration="";const d=l[vh]=h=>{h&&h.target!==l||(!h||/transform$/.test(h.propertyName))&&(l.removeEventListener("transitionend",d),l[vh]=null,to(l,o))};l.addEventListener("transitionend",d)}),s=[]}),()=>{const o=Ct(t),a=zC(o);let c=o.tag||be;if(s=[],r)for(let l=0;l<r.length;l++){const u=r[l];u.el&&u.el instanceof Element&&(s.push(u),Fr(u,Sc(u,a,i,n)),_C.set(u,u.el.getBoundingClientRect()))}r=e.default?of(e.default()):[];for(let l=0;l<r.length;l++){const u=r[l];u.key!=null&&Fr(u,Sc(u,a,i,n))}return Qe(c,null,r)}}}),RI=II;function LI(t){const e=t.el;e[vh]&&e[vh](),e[pS]&&e[pS]()}function MI(t){$C.set(t,t.el.getBoundingClientRect())}function BI(t){const e=_C.get(t),n=$C.get(t),i=e.left-n.left,s=e.top-n.top;if(i||s){const r=t.el.style;return r.transform=r.webkitTransform=`translate(${i}px,${s}px)`,r.transitionDuration="0s",t}}function FI(t,e,n){const i=t.cloneNode(),s=t[Tc];s&&s.forEach(a=>{a.split(/\s+/).forEach(c=>c&&i.classList.remove(c))}),n.split(/\s+/).forEach(a=>a&&i.classList.add(a)),i.style.display="none";const r=e.nodeType===1?e:e.parentNode;r.appendChild(i);const{hasTransform:o}=YC(i);return r.removeChild(i),o}const To=t=>{const e=t.props["onUpdate:modelValue"]||!1;return Ne(e)?n=>ca(e,n):e};function UI(t){t.target.composing=!0}function mS(t){const e=t.target;e.composing&&(e.composing=!1,e.dispatchEvent(new Event("input")))}const ts=Symbol("_assign"),At={created(t,{modifiers:{lazy:e,trim:n,number:i}},s){t[ts]=To(s);const r=i||s.props&&s.props.type==="number";wr(t,e?"change":"input",o=>{if(o.target.composing)return;let a=t.value;n&&(a=a.trim()),r&&(a=zl(a)),t[ts](a)}),n&&wr(t,"change",()=>{t.value=t.value.trim()}),e||(wr(t,"compositionstart",UI),wr(t,"compositionend",mS),wr(t,"change",mS))},mounted(t,{value:e}){t.value=e??""},beforeUpdate(t,{value:e,oldValue:n,modifiers:{lazy:i,trim:s,number:r}},o){if(t[ts]=To(o),t.composing)return;const a=(r||t.type==="number")&&!/^0\d/.test(t.value)?zl(t.value):t.value,c=e??"";a!==c&&(document.activeElement===t&&t.type!=="range"&&(i&&e===n||s&&t.value.trim()===c)||(t.value=c))}},yu={deep:!0,created(t,e,n){t[ts]=To(n),wr(t,"change",()=>{const i=t._modelValue,s=Cc(t),r=t.checked,o=t[ts];if(Ne(i)){const a=xu(i,s),c=a!==-1;if(r&&!c)o(i.concat(s));else if(!r&&c){const l=[...i];l.splice(a,1),o(l)}}else if(Do(i)){const a=new Set(i);r?a.add(s):a.delete(s),o(a)}else o(ew(t,r))})},mounted:gS,beforeUpdate(t,e,n){t[ts]=To(n),gS(t,e,n)}};function gS(t,{value:e,oldValue:n},i){t._modelValue=e;let s;if(Ne(e))s=xu(e,i.props.value)>-1;else if(Do(e))s=e.has(i.props.value);else{if(e===n)return;s=Rr(e,ew(t,!0))}t.checked!==s&&(t.checked=s)}const xE={created(t,{value:e},n){t.checked=Rr(e,n.props.value),t[ts]=To(n),wr(t,"change",()=>{t[ts](Cc(t))})},beforeUpdate(t,{value:e,oldValue:n},i){t[ts]=To(i),e!==n&&(t.checked=Rr(e,i.props.value))}},Ro={deep:!0,created(t,{value:e,modifiers:{number:n}},i){const s=Do(e);wr(t,"change",()=>{const r=Array.prototype.filter.call(t.options,o=>o.selected).map(o=>n?zl(Cc(o)):Cc(o));t[ts](t.multiple?s?new Set(r):r:r[0]),t._assigning=!0,Zc(()=>{t._assigning=!1})}),t[ts]=To(i)},mounted(t,{value:e}){ES(t,e)},beforeUpdate(t,e,n){t[ts]=To(n)},updated(t,{value:e}){t._assigning||ES(t,e)}};function ES(t,e){const n=t.multiple,i=Ne(e);if(!(n&&!i&&!Do(e))){for(let s=0,r=t.options.length;s<r;s++){const o=t.options[s],a=Cc(o);if(n)if(i){const c=typeof a;c==="string"||c==="number"?o.selected=e.some(l=>String(l)===String(a)):o.selected=xu(e,a)>-1}else o.selected=e.has(a);else if(Rr(Cc(o),e)){t.selectedIndex!==s&&(t.selectedIndex=s);return}}!n&&t.selectedIndex!==-1&&(t.selectedIndex=-1)}}function Cc(t){return"_value"in t?t._value:t.value}function ew(t,e){const n=e?"_trueValue":"_falseValue";return n in t?t[n]:e}const tw={created(t,e,n){Td(t,e,n,null,"created")},mounted(t,e,n){Td(t,e,n,null,"mounted")},beforeUpdate(t,e,n,i){Td(t,e,n,i,"beforeUpdate")},updated(t,e,n,i){Td(t,e,n,i,"updated")}};function nw(t,e){switch(t){case"SELECT":return Ro;case"TEXTAREA":return At;default:switch(e){case"checkbox":return yu;case"radio":return xE;default:return At}}}function Td(t,e,n,i,s){const o=nw(t.tagName,n.props&&n.props.type)[s];o&&o(t,e,n,i)}function VI(){At.getSSRProps=({value:t})=>({value:t}),xE.getSSRProps=({value:t},e)=>{if(e.props&&Rr(e.props.value,t))return{checked:!0}},yu.getSSRProps=({value:t},e)=>{if(Ne(t)){if(e.props&&xu(t,e.props.value)>-1)return{checked:!0}}else if(Do(t)){if(e.props&&t.has(e.props.value))return{checked:!0}}else if(t)return{checked:!0}},tw.getSSRProps=(t,e)=>{if(typeof e.type!="string")return;const n=nw(e.type.toUpperCase(),e.props&&e.props.type);if(n.getSSRProps)return n.getSSRProps(t,e)}}const WI=["ctrl","shift","alt","meta"],HI={stop:t=>t.stopPropagation(),prevent:t=>t.preventDefault(),self:t=>t.target!==t.currentTarget,ctrl:t=>!t.ctrlKey,shift:t=>!t.shiftKey,alt:t=>!t.altKey,meta:t=>!t.metaKey,left:t=>"button"in t&&t.button!==0,middle:t=>"button"in t&&t.button!==1,right:t=>"button"in t&&t.button!==2,exact:(t,e)=>WI.some(n=>t[`${n}Key`]&&!e.includes(n))},iw=(t,e)=>{const n=t._withMods||(t._withMods={}),i=e.join(".");return n[i]||(n[i]=(s,...r)=>{for(let o=0;o<e.length;o++){const a=HI[e[o]];if(a&&a(s,e))return}return t(s,...r)})},XI={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},jI=(t,e)=>{const n=t._withKeys||(t._withKeys={}),i=e.join(".");return n[i]||(n[i]=s=>{if(!("key"in s))return;const r=Jn(s.key);if(e.some(o=>o===r||XI[o]===r))return t(s)})},sw=St({patchProp:AI},aI);let Wl,vS=!1;function rw(){return Wl||(Wl=EC(sw))}function ow(){return Wl=vS?Wl:vC(sw),vS=!0,Wl}const aw=(...t)=>{rw().render(...t)},qI=(...t)=>{ow().hydrate(...t)},bh=(...t)=>{const e=rw().createApp(...t),{mount:n}=e;return e.mount=i=>{const s=uw(i);if(!s)return;const r=e._component;!Xe(r)&&!r.render&&!r.template&&(r.template=s.innerHTML),s.nodeType===1&&(s.textContent="");const o=n(s,!1,lw(s));return s instanceof Element&&(s.removeAttribute("v-cloak"),s.setAttribute("data-v-app","")),o},e},cw=(...t)=>{const e=ow().createApp(...t),{mount:n}=e;return e.mount=i=>{const s=uw(i);if(s)return n(s,!0,lw(s))},e};function lw(t){if(t instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&t instanceof MathMLElement)return"mathml"}function uw(t){return ze(t)?document.querySelector(t):t}let bS=!1;const zI=()=>{bS||(bS=!0,VI(),fI())},YI=Object.freeze(Object.defineProperty({__proto__:null,BaseTransition:zT,BaseTransitionPropsValidators:uE,Comment:vn,DeprecationTypes:sI,EffectScope:_g,ErrorCodes:gO,ErrorTypeStrings:GP,Fragment:be,KeepAlive:XO,ReactiveEffect:Jl,Static:da,Suspense:IP,Teleport:wO,Text:Eo,TrackOpTypes:lO,Transition:lI,TransitionGroup:RI,TriggerOpTypes:uO,VueElement:ff,assertNumber:mO,callWithAsyncErrorHandling:os,callWithErrorHandling:Jc,camelize:Qt,capitalize:Oo,cloneVNode:_s,compatUtils:iI,computed:di,createApp:bh,createBlock:dt,createCommentVNode:G,createElementBlock:B,createElementVNode:N,createHydrationRenderer:vC,createPropsRestProxy:oP,createRenderer:EC,createSSRApp:cw,createSlots:JO,createStaticVNode:WP,createTextVNode:mt,createVNode:Qe,customRef:OT,defineAsyncComponent:WO,defineComponent:Ue,defineCustomElement:QC,defineEmits:GO,defineExpose:_O,defineModel:tP,defineOptions:$O,defineProps:QO,defineSSRCustomElement:yI,defineSlots:eP,devtools:_P,effect:ID,effectScope:$g,getCurrentInstance:as,getCurrentScope:eE,getCurrentWatcher:dO,getTransitionRawChildren:of,guardReactiveProps:RC,h:hf,handleError:Aa,hasInjectionContext:cC,hydrate:qI,hydrateOnIdle:LO,hydrateOnInteraction:UO,hydrateOnMediaQuery:FO,hydrateOnVisible:BO,initCustomFormatter:ZP,initDirectivesForSSR:zI,inject:es,isMemoSame:WC,isProxy:nf,isReactive:Js,isReadonly:Br,isRef:cn,isRuntimeOnly:zP,isShallow:Bi,isVNode:Ur,markRaw:sf,mergeDefaults:sP,mergeModels:rP,mergeProps:LC,nextTick:Zc,normalizeClass:Dt,normalizeProps:iT,normalizeStyle:vt,onActivated:ZT,onBeforeMount:GT,onBeforeUnmount:lf,onBeforeUpdate:hE,onDeactivated:KT,onErrorCaptured:tC,onMounted:bn,onRenderTracked:eC,onRenderTriggered:$T,onScopeDispose:fT,onServerPrefetch:_T,onUnmounted:Io,onUpdated:cf,onWatcherCleanup:RT,openBlock:R,popScopeId:xO,provide:Ul,proxyRefs:aE,pushScopeId:SO,queuePostFlushCb:Ql,reactive:Po,readonly:rE,ref:J,registerRuntimeCompiler:qP,render:aw,renderList:We,renderSlot:iC,resolveComponent:wu,resolveDirective:YO,resolveDynamicComponent:zO,resolveFilter:nI,resolveTransitionHooks:Sc,setBlockTracking:og,setDevtoolsHook:$P,setTransitionHooks:Fr,shallowReactive:sE,shallowReadonly:_D,shallowRef:oE,ssrContextKey:TC,ssrUtils:tI,stop:RD,toDisplayString:ce,toHandlerKey:aa,toHandlers:ZO,toRaw:Ct,toRef:oO,toRefs:PT,toValue:tO,transformVNodeArgs:UP,triggerRef:eO,unref:ie,useAttrs:iP,useCssModule:OI,useCssVars:pI,useHost:GC,useId:NO,useModel:AP,useSSRContext:CC,useShadowRoot:DI,useSlots:sC,useTemplateRef:yO,useTransitionState:lE,vModelCheckbox:yu,vModelDynamic:tw,vModelRadio:xE,vModelSelect:Ro,vModelText:At,vShow:ZC,version:HC,warn:QP,watch:gt,watchEffect:TP,watchPostEffect:CP,watchSyncEffect:wC,withAsyncContext:aP,withCtx:Tu,withDefaults:nP,withDirectives:lt,withKeys:jI,withMemo:KP,withModifiers:iw,withScopeId:TO},Symbol.toStringTag,{value:"Module"}));/*!
 * pinia v3.0.3
 * (c) 2025 Eduardo San Martin Morote
 * @license MIT
 */let dw;const pf=t=>dw=t,hw=Symbol();function mg(t){return t&&typeof t=="object"&&Object.prototype.toString.call(t)==="[object Object]"&&typeof t.toJSON!="function"}var Hl;(function(t){t.direct="direct",t.patchObject="patch object",t.patchFunction="patch function"})(Hl||(Hl={}));function JI(){const t=$g(!0),e=t.run(()=>J({}));let n=[],i=[];const s=sf({install(r){pf(s),s._a=r,r.provide(hw,s),r.config.globalProperties.$pinia=s,i.forEach(o=>n.push(o)),i=[]},use(r){return this._a?n.push(r):i.push(r),this},_p:n,_a:null,_e:t,_s:new Map,state:e});return s}const fw=()=>{};function SS(t,e,n,i=fw){t.push(e);const s=()=>{const r=t.indexOf(e);r>-1&&(t.splice(r,1),i())};return!n&&eE()&&fT(s),s}function Za(t,...e){t.slice().forEach(n=>{n(...e)})}const ZI=t=>t(),xS=Symbol(),om=Symbol();function gg(t,e){t instanceof Map&&e instanceof Map?e.forEach((n,i)=>t.set(i,n)):t instanceof Set&&e instanceof Set&&e.forEach(t.add,t);for(const n in e){if(!e.hasOwnProperty(n))continue;const i=e[n],s=t[n];mg(s)&&mg(i)&&t.hasOwnProperty(n)&&!cn(i)&&!Js(i)?t[n]=gg(s,i):t[n]=i}return t}const KI=Symbol();function QI(t){return!mg(t)||!Object.prototype.hasOwnProperty.call(t,KI)}const{assign:no}=Object;function GI(t){return!!(cn(t)&&t.effect)}function _I(t,e,n,i){const{state:s,actions:r,getters:o}=e,a=n.state.value[t];let c;function l(){a||(n.state.value[t]=s?s():{});const u=PT(n.state.value[t]);return no(u,r,Object.keys(o||{}).reduce((d,h)=>(d[h]=sf(di(()=>{pf(n);const f=n._s.get(t);return o[h].call(f,f)})),d),{}))}return c=pw(t,l,e,n,i,!0),c}function pw(t,e,n={},i,s,r){let o;const a=no({actions:{}},n),c={deep:!0};let l,u,d=[],h=[],f;const p=i.state.value[t];!r&&!p&&(i.state.value[t]={}),J({});let m;function b(A){let y;l=u=!1,typeof A=="function"?(A(i.state.value[t]),y={type:Hl.patchFunction,storeId:t,events:f}):(gg(i.state.value[t],A),y={type:Hl.patchObject,payload:A,storeId:t,events:f});const O=m=Symbol();Zc().then(()=>{m===O&&(l=!0)}),u=!0,Za(d,y,i.state.value[t])}const E=r?function(){const{state:y}=n,O=y?y():{};this.$patch(L=>{no(L,O)})}:fw;function x(){o.stop(),d=[],h=[],i._s.delete(t)}const S=(A,y="")=>{if(xS in A)return A[om]=y,A;const O=function(){pf(i);const L=Array.from(arguments),P=[],U=[];function X(_){P.push(_)}function K(_){U.push(_)}Za(h,{args:L,name:O[om],store:T,after:X,onError:K});let Y;try{Y=A.apply(this&&this.$id===t?this:T,L)}catch(_){throw Za(U,_),_}return Y instanceof Promise?Y.then(_=>(Za(P,_),_)).catch(_=>(Za(U,_),Promise.reject(_))):(Za(P,Y),Y)};return O[xS]=!0,O[om]=y,O},v={_p:i,$id:t,$onAction:SS.bind(null,h),$patch:b,$reset:E,$subscribe(A,y={}){const O=SS(d,A,y.detached,()=>L()),L=o.run(()=>gt(()=>i.state.value[t],P=>{(y.flush==="sync"?u:l)&&A({storeId:t,type:Hl.direct,events:f},P)},no({},c,y)));return O},$dispose:x},T=Po(v);i._s.set(t,T);const D=(i._a&&i._a.runWithContext||ZI)(()=>i._e.run(()=>(o=$g()).run(()=>e({action:S}))));for(const A in D){const y=D[A];if(cn(y)&&!GI(y)||Js(y))r||(p&&QI(y)&&(cn(y)?y.value=p[A]:gg(y,p[A])),i.state.value[t][A]=y);else if(typeof y=="function"){const O=S(y,A);D[A]=O,a.actions[A]=y}}return no(T,D),no(Ct(T),D),Object.defineProperty(T,"$state",{get:()=>i.state.value[t],set:A=>{b(y=>{no(y,A)})}}),i._p.forEach(A=>{no(T,o.run(()=>A({store:T,app:i._a,pinia:i,options:a})))}),p&&r&&n.hydrate&&n.hydrate(T.$state,p),l=!0,u=!0,T}/*! #__NO_SIDE_EFFECTS__ */function $I(t,e,n){let i;const s=typeof e=="function";i=s?n:e;function r(o,a){const c=cC();return o=o||(c?es(hw,null):null),o&&pf(o),o=dw,o._s.has(t)||(s?pw(t,e,i,o):_I(t,i,o)),o._s.get(t)}return r.$id=t,r}class $s{constructor(e,n){W(this,"nombre");W(this,"acordes");this.nombre=e,this.acordes=n}}class Vr{constructor(e,n){W(this,"partes");W(this,"ordenPartes");this.partes=e,this.ordenPartes=n}GetTotalAcordes(){let e=0;for(let n=0;n<this.ordenPartes.length;n++)e+=this.partes[this.ordenPartes[n]].acordes.length;return e}GetTodosLosAcordes(){let e=[];for(let n=0;n<this.ordenPartes.length;n++)e=e.concat(this.partes[this.ordenPartes[n]].acordes);return e}}class nu{constructor(e){W(this,"renglones");this.renglones=e}RenglonDelCompas(e){return this.renglones.flat().slice(0,e).join("").split("/n").length}}class Co{constructor(e,n,i,s,r,o,a,c,l){W(this,"archivo","");W(this,"cancion");W(this,"banda");W(this,"acordes");W(this,"letras");W(this,"bpm");W(this,"calidad");W(this,"compasCantidad");W(this,"compasUnidad");W(this,"escala","C");W(this,"medias",[]);W(this,"pentagramas",[]);this.cancion=e,this.banda=n,this.acordes=i??new Vr([],[]),this.letras=s??new nu([]),this.bpm=r??67,this.calidad=o??0,this.compasCantidad=a??4,this.compasUnidad=c??4,this.escala=l??""}static GetDefault(e){const n=new Co(e,"sin banda",new Vr([],[]),new nu([]));return n.escala="C",n}get duracionCompas(){return this.compasUnidad===0||!this.bpm||!this.compasCantidad?0:60/this.bpm*this.compasCantidad}get duracionGolpe(){return this.bpm?60/this.bpm:0}get totalCompases(){let e=0;for(let n=0;n<this.acordes.ordenPartes.length;n++){const i=this.acordes.ordenPartes[n];e+=this.acordes.partes[i].acordes.length}return e}get duracionCancion(){return this.totalCompases*this.duracionCompas}normalizar(){var i,s,r,o,a;const e=(i=this.acordes)==null?void 0:i.GetTotalAcordes(),n=(s=this.letras)==null?void 0:s.renglones.flat.length;((o=(r=this.letras)==null?void 0:r.renglones[0])==null?void 0:o.length)===0&&this.letras.renglones.shift(),n<e&&((a=this.letras)==null||a.renglones.push(new Array(e-n).fill(""))),e<n&&console.log("Ajustando acordes a letras",e,n)}}class mw{constructor(){W(this,"duracionIntervalo",2200);W(this,"delayIntervalo",0);W(this,"estado","pausa");W(this,"timeoutId");W(this,"IniciaHandler");W(this,"IniciaCicloHandler");W(this,"iniciado",!1);W(this,"ciclo",()=>{if(this.IniciaCicloHandler&&this.IniciaCicloHandler(),this.delayIntervalo>0){this.timeoutId=setTimeout(this.ciclo,this.delayIntervalo),this.delayIntervalo=0;return}this.iniciado&&(this.timeoutId=setTimeout(this.ciclo,this.duracionIntervalo))});this.timeoutId=null}setIniciaHandler(e){this.IniciaHandler=e}setIniciaCicloHandler(e){this.IniciaCicloHandler=e}setDuracion(e){this.duracionIntervalo=e}setDelay(e){this.delayIntervalo=e}iniciar(){this.iniciado||(this.iniciado=!0,this.IniciaHandler&&this.IniciaHandler(),this.timeoutId=setTimeout(this.ciclo,this.duracionIntervalo))}pausar(){this.timeoutId&&(clearTimeout(this.timeoutId),this.timeoutId=null),this.iniciado=!1}}class wc{constructor(e,n,i,s){W(this,"duracionGolpe");W(this,"timeInicio");W(this,"golpesxcompas");W(this,"desdeCompas");this.duracionGolpe=e,this.timeInicio=n,this.golpesxcompas=i,this.desdeCompas=s}}class gw{constructor(e,n,i,s){W(this,"compas");W(this,"golpeEnCompas");W(this,"estado");W(this,"delay");this.compas=e,this.golpeEnCompas=n,this.estado=i,this.delay=s}}const er=Object.create(null);er.open="0";er.close="1";er.ping="2";er.pong="3";er.message="4";er.upgrade="5";er.noop="6";const zd=Object.create(null);Object.keys(er).forEach(t=>{zd[er[t]]=t});const Eg={type:"error",data:"parser error"},Ew=typeof Blob=="function"||typeof Blob<"u"&&Object.prototype.toString.call(Blob)==="[object BlobConstructor]",vw=typeof ArrayBuffer=="function",bw=t=>typeof ArrayBuffer.isView=="function"?ArrayBuffer.isView(t):t&&t.buffer instanceof ArrayBuffer,TE=({type:t,data:e},n,i)=>Ew&&e instanceof Blob?n?i(e):TS(e,i):vw&&(e instanceof ArrayBuffer||bw(e))?n?i(e):TS(new Blob([e]),i):i(er[t]+(e||"")),TS=(t,e)=>{const n=new FileReader;return n.onload=function(){const i=n.result.split(",")[1];e("b"+(i||""))},n.readAsDataURL(t)};function CS(t){return t instanceof Uint8Array?t:t instanceof ArrayBuffer?new Uint8Array(t):new Uint8Array(t.buffer,t.byteOffset,t.byteLength)}let am;function eR(t,e){if(Ew&&t.data instanceof Blob)return t.data.arrayBuffer().then(CS).then(e);if(vw&&(t.data instanceof ArrayBuffer||bw(t.data)))return e(CS(t.data));TE(t,!1,n=>{am||(am=new TextEncoder),e(am.encode(n))})}const wS="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",kl=typeof Uint8Array>"u"?[]:new Uint8Array(256);for(let t=0;t<wS.length;t++)kl[wS.charCodeAt(t)]=t;const tR=t=>{let e=t.length*.75,n=t.length,i,s=0,r,o,a,c;t[t.length-1]==="="&&(e--,t[t.length-2]==="="&&e--);const l=new ArrayBuffer(e),u=new Uint8Array(l);for(i=0;i<n;i+=4)r=kl[t.charCodeAt(i)],o=kl[t.charCodeAt(i+1)],a=kl[t.charCodeAt(i+2)],c=kl[t.charCodeAt(i+3)],u[s++]=r<<2|o>>4,u[s++]=(o&15)<<4|a>>2,u[s++]=(a&3)<<6|c&63;return l},nR=typeof ArrayBuffer=="function",CE=(t,e)=>{if(typeof t!="string")return{type:"message",data:Sw(t,e)};const n=t.charAt(0);return n==="b"?{type:"message",data:iR(t.substring(1),e)}:zd[n]?t.length>1?{type:zd[n],data:t.substring(1)}:{type:zd[n]}:Eg},iR=(t,e)=>{if(nR){const n=tR(t);return Sw(n,e)}else return{base64:!0,data:t}},Sw=(t,e)=>{switch(e){case"blob":return t instanceof Blob?t:new Blob([t]);case"arraybuffer":default:return t instanceof ArrayBuffer?t:t.buffer}},xw="",sR=(t,e)=>{const n=t.length,i=new Array(n);let s=0;t.forEach((r,o)=>{TE(r,!1,a=>{i[o]=a,++s===n&&e(i.join(xw))})})},rR=(t,e)=>{const n=t.split(xw),i=[];for(let s=0;s<n.length;s++){const r=CE(n[s],e);if(i.push(r),r.type==="error")break}return i};function oR(){return new TransformStream({transform(t,e){eR(t,n=>{const i=n.length;let s;if(i<126)s=new Uint8Array(1),new DataView(s.buffer).setUint8(0,i);else if(i<65536){s=new Uint8Array(3);const r=new DataView(s.buffer);r.setUint8(0,126),r.setUint16(1,i)}else{s=new Uint8Array(9);const r=new DataView(s.buffer);r.setUint8(0,127),r.setBigUint64(1,BigInt(i))}t.data&&typeof t.data!="string"&&(s[0]|=128),e.enqueue(s),e.enqueue(n)})}})}let cm;function Cd(t){return t.reduce((e,n)=>e+n.length,0)}function wd(t,e){if(t[0].length===e)return t.shift();const n=new Uint8Array(e);let i=0;for(let s=0;s<e;s++)n[s]=t[0][i++],i===t[0].length&&(t.shift(),i=0);return t.length&&i<t[0].length&&(t[0]=t[0].slice(i)),n}function aR(t,e){cm||(cm=new TextDecoder);const n=[];let i=0,s=-1,r=!1;return new TransformStream({transform(o,a){for(n.push(o);;){if(i===0){if(Cd(n)<1)break;const c=wd(n,1);r=(c[0]&128)===128,s=c[0]&127,s<126?i=3:s===126?i=1:i=2}else if(i===1){if(Cd(n)<2)break;const c=wd(n,2);s=new DataView(c.buffer,c.byteOffset,c.length).getUint16(0),i=3}else if(i===2){if(Cd(n)<8)break;const c=wd(n,8),l=new DataView(c.buffer,c.byteOffset,c.length),u=l.getUint32(0);if(u>Math.pow(2,21)-1){a.enqueue(Eg);break}s=u*Math.pow(2,32)+l.getUint32(4),i=3}else{if(Cd(n)<s)break;const c=wd(n,s);a.enqueue(CE(r?c:cm.decode(c),e)),i=0}if(s===0||s>t){a.enqueue(Eg);break}}}})}const Tw=4;function An(t){if(t)return cR(t)}function cR(t){for(var e in An.prototype)t[e]=An.prototype[e];return t}An.prototype.on=An.prototype.addEventListener=function(t,e){return this._callbacks=this._callbacks||{},(this._callbacks["$"+t]=this._callbacks["$"+t]||[]).push(e),this};An.prototype.once=function(t,e){function n(){this.off(t,n),e.apply(this,arguments)}return n.fn=e,this.on(t,n),this};An.prototype.off=An.prototype.removeListener=An.prototype.removeAllListeners=An.prototype.removeEventListener=function(t,e){if(this._callbacks=this._callbacks||{},arguments.length==0)return this._callbacks={},this;var n=this._callbacks["$"+t];if(!n)return this;if(arguments.length==1)return delete this._callbacks["$"+t],this;for(var i,s=0;s<n.length;s++)if(i=n[s],i===e||i.fn===e){n.splice(s,1);break}return n.length===0&&delete this._callbacks["$"+t],this};An.prototype.emit=function(t){this._callbacks=this._callbacks||{};for(var e=new Array(arguments.length-1),n=this._callbacks["$"+t],i=1;i<arguments.length;i++)e[i-1]=arguments[i];if(n){n=n.slice(0);for(var i=0,s=n.length;i<s;++i)n[i].apply(this,e)}return this};An.prototype.emitReserved=An.prototype.emit;An.prototype.listeners=function(t){return this._callbacks=this._callbacks||{},this._callbacks["$"+t]||[]};An.prototype.hasListeners=function(t){return!!this.listeners(t).length};const mf=typeof Promise=="function"&&typeof Promise.resolve=="function"?e=>Promise.resolve().then(e):(e,n)=>n(e,0),Gi=typeof self<"u"?self:typeof window<"u"?window:Function("return this")(),lR="arraybuffer";function Cw(t,...e){return e.reduce((n,i)=>(t.hasOwnProperty(i)&&(n[i]=t[i]),n),{})}const uR=Gi.setTimeout,dR=Gi.clearTimeout;function gf(t,e){e.useNativeTimers?(t.setTimeoutFn=uR.bind(Gi),t.clearTimeoutFn=dR.bind(Gi)):(t.setTimeoutFn=Gi.setTimeout.bind(Gi),t.clearTimeoutFn=Gi.clearTimeout.bind(Gi))}const hR=1.33;function fR(t){return typeof t=="string"?pR(t):Math.ceil((t.byteLength||t.size)*hR)}function pR(t){let e=0,n=0;for(let i=0,s=t.length;i<s;i++)e=t.charCodeAt(i),e<128?n+=1:e<2048?n+=2:e<55296||e>=57344?n+=3:(i++,n+=4);return n}function ww(){return Date.now().toString(36).substring(3)+Math.random().toString(36).substring(2,5)}function mR(t){let e="";for(let n in t)t.hasOwnProperty(n)&&(e.length&&(e+="&"),e+=encodeURIComponent(n)+"="+encodeURIComponent(t[n]));return e}function gR(t){let e={},n=t.split("&");for(let i=0,s=n.length;i<s;i++){let r=n[i].split("=");e[decodeURIComponent(r[0])]=decodeURIComponent(r[1])}return e}class ER extends Error{constructor(e,n,i){super(e),this.description=n,this.context=i,this.type="TransportError"}}class wE extends An{constructor(e){super(),this.writable=!1,gf(this,e),this.opts=e,this.query=e.query,this.socket=e.socket,this.supportsBinary=!e.forceBase64}onError(e,n,i){return super.emitReserved("error",new ER(e,n,i)),this}open(){return this.readyState="opening",this.doOpen(),this}close(){return(this.readyState==="opening"||this.readyState==="open")&&(this.doClose(),this.onClose()),this}send(e){this.readyState==="open"&&this.write(e)}onOpen(){this.readyState="open",this.writable=!0,super.emitReserved("open")}onData(e){const n=CE(e,this.socket.binaryType);this.onPacket(n)}onPacket(e){super.emitReserved("packet",e)}onClose(e){this.readyState="closed",super.emitReserved("close",e)}pause(e){}createUri(e,n={}){return e+"://"+this._hostname()+this._port()+this.opts.path+this._query(n)}_hostname(){const e=this.opts.hostname;return e.indexOf(":")===-1?e:"["+e+"]"}_port(){return this.opts.port&&(this.opts.secure&&+(this.opts.port!==443)||!this.opts.secure&&Number(this.opts.port)!==80)?":"+this.opts.port:""}_query(e){const n=mR(e);return n.length?"?"+n:""}}class vR extends wE{constructor(){super(...arguments),this._polling=!1}get name(){return"polling"}doOpen(){this._poll()}pause(e){this.readyState="pausing";const n=()=>{this.readyState="paused",e()};if(this._polling||!this.writable){let i=0;this._polling&&(i++,this.once("pollComplete",function(){--i||n()})),this.writable||(i++,this.once("drain",function(){--i||n()}))}else n()}_poll(){this._polling=!0,this.doPoll(),this.emitReserved("poll")}onData(e){const n=i=>{if(this.readyState==="opening"&&i.type==="open"&&this.onOpen(),i.type==="close")return this.onClose({description:"transport closed by the server"}),!1;this.onPacket(i)};rR(e,this.socket.binaryType).forEach(n),this.readyState!=="closed"&&(this._polling=!1,this.emitReserved("pollComplete"),this.readyState==="open"&&this._poll())}doClose(){const e=()=>{this.write([{type:"close"}])};this.readyState==="open"?e():this.once("open",e)}write(e){this.writable=!1,sR(e,n=>{this.doWrite(n,()=>{this.writable=!0,this.emitReserved("drain")})})}uri(){const e=this.opts.secure?"https":"http",n=this.query||{};return this.opts.timestampRequests!==!1&&(n[this.opts.timestampParam]=ww()),!this.supportsBinary&&!n.sid&&(n.b64=1),this.createUri(e,n)}}let Aw=!1;try{Aw=typeof XMLHttpRequest<"u"&&"withCredentials"in new XMLHttpRequest}catch{}const bR=Aw;function SR(){}class xR extends vR{constructor(e){if(super(e),typeof location<"u"){const n=location.protocol==="https:";let i=location.port;i||(i=n?"443":"80"),this.xd=typeof location<"u"&&e.hostname!==location.hostname||i!==e.port}}doWrite(e,n){const i=this.request({method:"POST",data:e});i.on("success",n),i.on("error",(s,r)=>{this.onError("xhr post error",s,r)})}doPoll(){const e=this.request();e.on("data",this.onData.bind(this)),e.on("error",(n,i)=>{this.onError("xhr poll error",n,i)}),this.pollXhr=e}}class Zs extends An{constructor(e,n,i){super(),this.createRequest=e,gf(this,i),this._opts=i,this._method=i.method||"GET",this._uri=n,this._data=i.data!==void 0?i.data:null,this._create()}_create(){var e;const n=Cw(this._opts,"agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","autoUnref");n.xdomain=!!this._opts.xd;const i=this._xhr=this.createRequest(n);try{i.open(this._method,this._uri,!0);try{if(this._opts.extraHeaders){i.setDisableHeaderCheck&&i.setDisableHeaderCheck(!0);for(let s in this._opts.extraHeaders)this._opts.extraHeaders.hasOwnProperty(s)&&i.setRequestHeader(s,this._opts.extraHeaders[s])}}catch{}if(this._method==="POST")try{i.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch{}try{i.setRequestHeader("Accept","*/*")}catch{}(e=this._opts.cookieJar)===null||e===void 0||e.addCookies(i),"withCredentials"in i&&(i.withCredentials=this._opts.withCredentials),this._opts.requestTimeout&&(i.timeout=this._opts.requestTimeout),i.onreadystatechange=()=>{var s;i.readyState===3&&((s=this._opts.cookieJar)===null||s===void 0||s.parseCookies(i.getResponseHeader("set-cookie"))),i.readyState===4&&(i.status===200||i.status===1223?this._onLoad():this.setTimeoutFn(()=>{this._onError(typeof i.status=="number"?i.status:0)},0))},i.send(this._data)}catch(s){this.setTimeoutFn(()=>{this._onError(s)},0);return}typeof document<"u"&&(this._index=Zs.requestsCount++,Zs.requests[this._index]=this)}_onError(e){this.emitReserved("error",e,this._xhr),this._cleanup(!0)}_cleanup(e){if(!(typeof this._xhr>"u"||this._xhr===null)){if(this._xhr.onreadystatechange=SR,e)try{this._xhr.abort()}catch{}typeof document<"u"&&delete Zs.requests[this._index],this._xhr=null}}_onLoad(){const e=this._xhr.responseText;e!==null&&(this.emitReserved("data",e),this.emitReserved("success"),this._cleanup())}abort(){this._cleanup()}}Zs.requestsCount=0;Zs.requests={};if(typeof document<"u"){if(typeof attachEvent=="function")attachEvent("onunload",AS);else if(typeof addEventListener=="function"){const t="onpagehide"in Gi?"pagehide":"unload";addEventListener(t,AS,!1)}}function AS(){for(let t in Zs.requests)Zs.requests.hasOwnProperty(t)&&Zs.requests[t].abort()}const TR=function(){const t=Nw({xdomain:!1});return t&&t.responseType!==null}();class CR extends xR{constructor(e){super(e);const n=e&&e.forceBase64;this.supportsBinary=TR&&!n}request(e={}){return Object.assign(e,{xd:this.xd},this.opts),new Zs(Nw,this.uri(),e)}}function Nw(t){const e=t.xdomain;try{if(typeof XMLHttpRequest<"u"&&(!e||bR))return new XMLHttpRequest}catch{}if(!e)try{return new Gi[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP")}catch{}}const yw=typeof navigator<"u"&&typeof navigator.product=="string"&&navigator.product.toLowerCase()==="reactnative";class wR extends wE{get name(){return"websocket"}doOpen(){const e=this.uri(),n=this.opts.protocols,i=yw?{}:Cw(this.opts,"agent","perMessageDeflate","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","localAddress","protocolVersion","origin","maxPayload","family","checkServerIdentity");this.opts.extraHeaders&&(i.headers=this.opts.extraHeaders);try{this.ws=this.createSocket(e,n,i)}catch(s){return this.emitReserved("error",s)}this.ws.binaryType=this.socket.binaryType,this.addEventListeners()}addEventListeners(){this.ws.onopen=()=>{this.opts.autoUnref&&this.ws._socket.unref(),this.onOpen()},this.ws.onclose=e=>this.onClose({description:"websocket connection closed",context:e}),this.ws.onmessage=e=>this.onData(e.data),this.ws.onerror=e=>this.onError("websocket error",e)}write(e){this.writable=!1;for(let n=0;n<e.length;n++){const i=e[n],s=n===e.length-1;TE(i,this.supportsBinary,r=>{try{this.doWrite(i,r)}catch{}s&&mf(()=>{this.writable=!0,this.emitReserved("drain")},this.setTimeoutFn)})}}doClose(){typeof this.ws<"u"&&(this.ws.onerror=()=>{},this.ws.close(),this.ws=null)}uri(){const e=this.opts.secure?"wss":"ws",n=this.query||{};return this.opts.timestampRequests&&(n[this.opts.timestampParam]=ww()),this.supportsBinary||(n.b64=1),this.createUri(e,n)}}const lm=Gi.WebSocket||Gi.MozWebSocket;class AR extends wR{createSocket(e,n,i){return yw?new lm(e,n,i):n?new lm(e,n):new lm(e)}doWrite(e,n){this.ws.send(n)}}class NR extends wE{get name(){return"webtransport"}doOpen(){try{this._transport=new WebTransport(this.createUri("https"),this.opts.transportOptions[this.name])}catch(e){return this.emitReserved("error",e)}this._transport.closed.then(()=>{this.onClose()}).catch(e=>{this.onError("webtransport error",e)}),this._transport.ready.then(()=>{this._transport.createBidirectionalStream().then(e=>{const n=aR(Number.MAX_SAFE_INTEGER,this.socket.binaryType),i=e.readable.pipeThrough(n).getReader(),s=oR();s.readable.pipeTo(e.writable),this._writer=s.writable.getWriter();const r=()=>{i.read().then(({done:a,value:c})=>{a||(this.onPacket(c),r())}).catch(a=>{})};r();const o={type:"open"};this.query.sid&&(o.data=`{"sid":"${this.query.sid}"}`),this._writer.write(o).then(()=>this.onOpen())})})}write(e){this.writable=!1;for(let n=0;n<e.length;n++){const i=e[n],s=n===e.length-1;this._writer.write(i).then(()=>{s&&mf(()=>{this.writable=!0,this.emitReserved("drain")},this.setTimeoutFn)})}}doClose(){var e;(e=this._transport)===null||e===void 0||e.close()}}const yR={websocket:AR,webtransport:NR,polling:CR},kR=/^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,DR=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];function vg(t){if(t.length>8e3)throw"URI too long";const e=t,n=t.indexOf("["),i=t.indexOf("]");n!=-1&&i!=-1&&(t=t.substring(0,n)+t.substring(n,i).replace(/:/g,";")+t.substring(i,t.length));let s=kR.exec(t||""),r={},o=14;for(;o--;)r[DR[o]]=s[o]||"";return n!=-1&&i!=-1&&(r.source=e,r.host=r.host.substring(1,r.host.length-1).replace(/;/g,":"),r.authority=r.authority.replace("[","").replace("]","").replace(/;/g,":"),r.ipv6uri=!0),r.pathNames=OR(r,r.path),r.queryKey=PR(r,r.query),r}function OR(t,e){const n=/\/{2,9}/g,i=e.replace(n,"/").split("/");return(e.slice(0,1)=="/"||e.length===0)&&i.splice(0,1),e.slice(-1)=="/"&&i.splice(i.length-1,1),i}function PR(t,e){const n={};return e.replace(/(?:^|&)([^&=]*)=?([^&]*)/g,function(i,s,r){s&&(n[s]=r)}),n}const bg=typeof addEventListener=="function"&&typeof removeEventListener=="function",Yd=[];bg&&addEventListener("offline",()=>{Yd.forEach(t=>t())},!1);class vo extends An{constructor(e,n){if(super(),this.binaryType=lR,this.writeBuffer=[],this._prevBufferLen=0,this._pingInterval=-1,this._pingTimeout=-1,this._maxPayload=-1,this._pingTimeoutTime=1/0,e&&typeof e=="object"&&(n=e,e=null),e){const i=vg(e);n.hostname=i.host,n.secure=i.protocol==="https"||i.protocol==="wss",n.port=i.port,i.query&&(n.query=i.query)}else n.host&&(n.hostname=vg(n.host).host);gf(this,n),this.secure=n.secure!=null?n.secure:typeof location<"u"&&location.protocol==="https:",n.hostname&&!n.port&&(n.port=this.secure?"443":"80"),this.hostname=n.hostname||(typeof location<"u"?location.hostname:"localhost"),this.port=n.port||(typeof location<"u"&&location.port?location.port:this.secure?"443":"80"),this.transports=[],this._transportsByName={},n.transports.forEach(i=>{const s=i.prototype.name;this.transports.push(s),this._transportsByName[s]=i}),this.opts=Object.assign({path:"/engine.io",agent:!1,withCredentials:!1,upgrade:!0,timestampParam:"t",rememberUpgrade:!1,addTrailingSlash:!0,rejectUnauthorized:!0,perMessageDeflate:{threshold:1024},transportOptions:{},closeOnBeforeunload:!1},n),this.opts.path=this.opts.path.replace(/\/$/,"")+(this.opts.addTrailingSlash?"/":""),typeof this.opts.query=="string"&&(this.opts.query=gR(this.opts.query)),bg&&(this.opts.closeOnBeforeunload&&(this._beforeunloadEventListener=()=>{this.transport&&(this.transport.removeAllListeners(),this.transport.close())},addEventListener("beforeunload",this._beforeunloadEventListener,!1)),this.hostname!=="localhost"&&(this._offlineEventListener=()=>{this._onClose("transport close",{description:"network connection lost"})},Yd.push(this._offlineEventListener))),this.opts.withCredentials&&(this._cookieJar=void 0),this._open()}createTransport(e){const n=Object.assign({},this.opts.query);n.EIO=Tw,n.transport=e,this.id&&(n.sid=this.id);const i=Object.assign({},this.opts,{query:n,socket:this,hostname:this.hostname,secure:this.secure,port:this.port},this.opts.transportOptions[e]);return new this._transportsByName[e](i)}_open(){if(this.transports.length===0){this.setTimeoutFn(()=>{this.emitReserved("error","No transports available")},0);return}const e=this.opts.rememberUpgrade&&vo.priorWebsocketSuccess&&this.transports.indexOf("websocket")!==-1?"websocket":this.transports[0];this.readyState="opening";const n=this.createTransport(e);n.open(),this.setTransport(n)}setTransport(e){this.transport&&this.transport.removeAllListeners(),this.transport=e,e.on("drain",this._onDrain.bind(this)).on("packet",this._onPacket.bind(this)).on("error",this._onError.bind(this)).on("close",n=>this._onClose("transport close",n))}onOpen(){this.readyState="open",vo.priorWebsocketSuccess=this.transport.name==="websocket",this.emitReserved("open"),this.flush()}_onPacket(e){if(this.readyState==="opening"||this.readyState==="open"||this.readyState==="closing")switch(this.emitReserved("packet",e),this.emitReserved("heartbeat"),e.type){case"open":this.onHandshake(JSON.parse(e.data));break;case"ping":this._sendPacket("pong"),this.emitReserved("ping"),this.emitReserved("pong"),this._resetPingTimeout();break;case"error":const n=new Error("server error");n.code=e.data,this._onError(n);break;case"message":this.emitReserved("data",e.data),this.emitReserved("message",e.data);break}}onHandshake(e){this.emitReserved("handshake",e),this.id=e.sid,this.transport.query.sid=e.sid,this._pingInterval=e.pingInterval,this._pingTimeout=e.pingTimeout,this._maxPayload=e.maxPayload,this.onOpen(),this.readyState!=="closed"&&this._resetPingTimeout()}_resetPingTimeout(){this.clearTimeoutFn(this._pingTimeoutTimer);const e=this._pingInterval+this._pingTimeout;this._pingTimeoutTime=Date.now()+e,this._pingTimeoutTimer=this.setTimeoutFn(()=>{this._onClose("ping timeout")},e),this.opts.autoUnref&&this._pingTimeoutTimer.unref()}_onDrain(){this.writeBuffer.splice(0,this._prevBufferLen),this._prevBufferLen=0,this.writeBuffer.length===0?this.emitReserved("drain"):this.flush()}flush(){if(this.readyState!=="closed"&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){const e=this._getWritablePackets();this.transport.send(e),this._prevBufferLen=e.length,this.emitReserved("flush")}}_getWritablePackets(){if(!(this._maxPayload&&this.transport.name==="polling"&&this.writeBuffer.length>1))return this.writeBuffer;let n=1;for(let i=0;i<this.writeBuffer.length;i++){const s=this.writeBuffer[i].data;if(s&&(n+=fR(s)),i>0&&n>this._maxPayload)return this.writeBuffer.slice(0,i);n+=2}return this.writeBuffer}_hasPingExpired(){if(!this._pingTimeoutTime)return!0;const e=Date.now()>this._pingTimeoutTime;return e&&(this._pingTimeoutTime=0,mf(()=>{this._onClose("ping timeout")},this.setTimeoutFn)),e}write(e,n,i){return this._sendPacket("message",e,n,i),this}send(e,n,i){return this._sendPacket("message",e,n,i),this}_sendPacket(e,n,i,s){if(typeof n=="function"&&(s=n,n=void 0),typeof i=="function"&&(s=i,i=null),this.readyState==="closing"||this.readyState==="closed")return;i=i||{},i.compress=i.compress!==!1;const r={type:e,data:n,options:i};this.emitReserved("packetCreate",r),this.writeBuffer.push(r),s&&this.once("flush",s),this.flush()}close(){const e=()=>{this._onClose("forced close"),this.transport.close()},n=()=>{this.off("upgrade",n),this.off("upgradeError",n),e()},i=()=>{this.once("upgrade",n),this.once("upgradeError",n)};return(this.readyState==="opening"||this.readyState==="open")&&(this.readyState="closing",this.writeBuffer.length?this.once("drain",()=>{this.upgrading?i():e()}):this.upgrading?i():e()),this}_onError(e){if(vo.priorWebsocketSuccess=!1,this.opts.tryAllTransports&&this.transports.length>1&&this.readyState==="opening")return this.transports.shift(),this._open();this.emitReserved("error",e),this._onClose("transport error",e)}_onClose(e,n){if(this.readyState==="opening"||this.readyState==="open"||this.readyState==="closing"){if(this.clearTimeoutFn(this._pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),bg&&(this._beforeunloadEventListener&&removeEventListener("beforeunload",this._beforeunloadEventListener,!1),this._offlineEventListener)){const i=Yd.indexOf(this._offlineEventListener);i!==-1&&Yd.splice(i,1)}this.readyState="closed",this.id=null,this.emitReserved("close",e,n),this.writeBuffer=[],this._prevBufferLen=0}}}vo.protocol=Tw;class IR extends vo{constructor(){super(...arguments),this._upgrades=[]}onOpen(){if(super.onOpen(),this.readyState==="open"&&this.opts.upgrade)for(let e=0;e<this._upgrades.length;e++)this._probe(this._upgrades[e])}_probe(e){let n=this.createTransport(e),i=!1;vo.priorWebsocketSuccess=!1;const s=()=>{i||(n.send([{type:"ping",data:"probe"}]),n.once("packet",d=>{if(!i)if(d.type==="pong"&&d.data==="probe"){if(this.upgrading=!0,this.emitReserved("upgrading",n),!n)return;vo.priorWebsocketSuccess=n.name==="websocket",this.transport.pause(()=>{i||this.readyState!=="closed"&&(u(),this.setTransport(n),n.send([{type:"upgrade"}]),this.emitReserved("upgrade",n),n=null,this.upgrading=!1,this.flush())})}else{const h=new Error("probe error");h.transport=n.name,this.emitReserved("upgradeError",h)}}))};function r(){i||(i=!0,u(),n.close(),n=null)}const o=d=>{const h=new Error("probe error: "+d);h.transport=n.name,r(),this.emitReserved("upgradeError",h)};function a(){o("transport closed")}function c(){o("socket closed")}function l(d){n&&d.name!==n.name&&r()}const u=()=>{n.removeListener("open",s),n.removeListener("error",o),n.removeListener("close",a),this.off("close",c),this.off("upgrading",l)};n.once("open",s),n.once("error",o),n.once("close",a),this.once("close",c),this.once("upgrading",l),this._upgrades.indexOf("webtransport")!==-1&&e!=="webtransport"?this.setTimeoutFn(()=>{i||n.open()},200):n.open()}onHandshake(e){this._upgrades=this._filterUpgrades(e.upgrades),super.onHandshake(e)}_filterUpgrades(e){const n=[];for(let i=0;i<e.length;i++)~this.transports.indexOf(e[i])&&n.push(e[i]);return n}}let RR=class extends IR{constructor(e,n={}){const i=typeof e=="object"?e:n;(!i.transports||i.transports&&typeof i.transports[0]=="string")&&(i.transports=(i.transports||["polling","websocket","webtransport"]).map(s=>yR[s]).filter(s=>!!s)),super(e,i)}};function LR(t,e="",n){let i=t;n=n||typeof location<"u"&&location,t==null&&(t=n.protocol+"//"+n.host),typeof t=="string"&&(t.charAt(0)==="/"&&(t.charAt(1)==="/"?t=n.protocol+t:t=n.host+t),/^(https?|wss?):\/\//.test(t)||(typeof n<"u"?t=n.protocol+"//"+t:t="https://"+t),i=vg(t)),i.port||(/^(http|ws)$/.test(i.protocol)?i.port="80":/^(http|ws)s$/.test(i.protocol)&&(i.port="443")),i.path=i.path||"/";const r=i.host.indexOf(":")!==-1?"["+i.host+"]":i.host;return i.id=i.protocol+"://"+r+":"+i.port+e,i.href=i.protocol+"://"+r+(n&&n.port===i.port?"":":"+i.port),i}const MR=typeof ArrayBuffer=="function",BR=t=>typeof ArrayBuffer.isView=="function"?ArrayBuffer.isView(t):t.buffer instanceof ArrayBuffer,kw=Object.prototype.toString,FR=typeof Blob=="function"||typeof Blob<"u"&&kw.call(Blob)==="[object BlobConstructor]",UR=typeof File=="function"||typeof File<"u"&&kw.call(File)==="[object FileConstructor]";function AE(t){return MR&&(t instanceof ArrayBuffer||BR(t))||FR&&t instanceof Blob||UR&&t instanceof File}function Jd(t,e){if(!t||typeof t!="object")return!1;if(Array.isArray(t)){for(let n=0,i=t.length;n<i;n++)if(Jd(t[n]))return!0;return!1}if(AE(t))return!0;if(t.toJSON&&typeof t.toJSON=="function"&&arguments.length===1)return Jd(t.toJSON(),!0);for(const n in t)if(Object.prototype.hasOwnProperty.call(t,n)&&Jd(t[n]))return!0;return!1}function VR(t){const e=[],n=t.data,i=t;return i.data=Sg(n,e),i.attachments=e.length,{packet:i,buffers:e}}function Sg(t,e){if(!t)return t;if(AE(t)){const n={_placeholder:!0,num:e.length};return e.push(t),n}else if(Array.isArray(t)){const n=new Array(t.length);for(let i=0;i<t.length;i++)n[i]=Sg(t[i],e);return n}else if(typeof t=="object"&&!(t instanceof Date)){const n={};for(const i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=Sg(t[i],e));return n}return t}function WR(t,e){return t.data=xg(t.data,e),delete t.attachments,t}function xg(t,e){if(!t)return t;if(t&&t._placeholder===!0){if(typeof t.num=="number"&&t.num>=0&&t.num<e.length)return e[t.num];throw new Error("illegal attachments")}else if(Array.isArray(t))for(let n=0;n<t.length;n++)t[n]=xg(t[n],e);else if(typeof t=="object")for(const n in t)Object.prototype.hasOwnProperty.call(t,n)&&(t[n]=xg(t[n],e));return t}const HR=["connect","connect_error","disconnect","disconnecting","newListener","removeListener"],XR=5;var wt;(function(t){t[t.CONNECT=0]="CONNECT",t[t.DISCONNECT=1]="DISCONNECT",t[t.EVENT=2]="EVENT",t[t.ACK=3]="ACK",t[t.CONNECT_ERROR=4]="CONNECT_ERROR",t[t.BINARY_EVENT=5]="BINARY_EVENT",t[t.BINARY_ACK=6]="BINARY_ACK"})(wt||(wt={}));class jR{constructor(e){this.replacer=e}encode(e){return(e.type===wt.EVENT||e.type===wt.ACK)&&Jd(e)?this.encodeAsBinary({type:e.type===wt.EVENT?wt.BINARY_EVENT:wt.BINARY_ACK,nsp:e.nsp,data:e.data,id:e.id}):[this.encodeAsString(e)]}encodeAsString(e){let n=""+e.type;return(e.type===wt.BINARY_EVENT||e.type===wt.BINARY_ACK)&&(n+=e.attachments+"-"),e.nsp&&e.nsp!=="/"&&(n+=e.nsp+","),e.id!=null&&(n+=e.id),e.data!=null&&(n+=JSON.stringify(e.data,this.replacer)),n}encodeAsBinary(e){const n=VR(e),i=this.encodeAsString(n.packet),s=n.buffers;return s.unshift(i),s}}function NS(t){return Object.prototype.toString.call(t)==="[object Object]"}class NE extends An{constructor(e){super(),this.reviver=e}add(e){let n;if(typeof e=="string"){if(this.reconstructor)throw new Error("got plaintext data when reconstructing a packet");n=this.decodeString(e);const i=n.type===wt.BINARY_EVENT;i||n.type===wt.BINARY_ACK?(n.type=i?wt.EVENT:wt.ACK,this.reconstructor=new qR(n),n.attachments===0&&super.emitReserved("decoded",n)):super.emitReserved("decoded",n)}else if(AE(e)||e.base64)if(this.reconstructor)n=this.reconstructor.takeBinaryData(e),n&&(this.reconstructor=null,super.emitReserved("decoded",n));else throw new Error("got binary data when not reconstructing a packet");else throw new Error("Unknown type: "+e)}decodeString(e){let n=0;const i={type:Number(e.charAt(0))};if(wt[i.type]===void 0)throw new Error("unknown packet type "+i.type);if(i.type===wt.BINARY_EVENT||i.type===wt.BINARY_ACK){const r=n+1;for(;e.charAt(++n)!=="-"&&n!=e.length;);const o=e.substring(r,n);if(o!=Number(o)||e.charAt(n)!=="-")throw new Error("Illegal attachments");i.attachments=Number(o)}if(e.charAt(n+1)==="/"){const r=n+1;for(;++n&&!(e.charAt(n)===","||n===e.length););i.nsp=e.substring(r,n)}else i.nsp="/";const s=e.charAt(n+1);if(s!==""&&Number(s)==s){const r=n+1;for(;++n;){const o=e.charAt(n);if(o==null||Number(o)!=o){--n;break}if(n===e.length)break}i.id=Number(e.substring(r,n+1))}if(e.charAt(++n)){const r=this.tryParse(e.substr(n));if(NE.isPayloadValid(i.type,r))i.data=r;else throw new Error("invalid payload")}return i}tryParse(e){try{return JSON.parse(e,this.reviver)}catch{return!1}}static isPayloadValid(e,n){switch(e){case wt.CONNECT:return NS(n);case wt.DISCONNECT:return n===void 0;case wt.CONNECT_ERROR:return typeof n=="string"||NS(n);case wt.EVENT:case wt.BINARY_EVENT:return Array.isArray(n)&&(typeof n[0]=="number"||typeof n[0]=="string"&&HR.indexOf(n[0])===-1);case wt.ACK:case wt.BINARY_ACK:return Array.isArray(n)}}destroy(){this.reconstructor&&(this.reconstructor.finishedReconstruction(),this.reconstructor=null)}}class qR{constructor(e){this.packet=e,this.buffers=[],this.reconPack=e}takeBinaryData(e){if(this.buffers.push(e),this.buffers.length===this.reconPack.attachments){const n=WR(this.reconPack,this.buffers);return this.finishedReconstruction(),n}return null}finishedReconstruction(){this.reconPack=null,this.buffers=[]}}const zR=Object.freeze(Object.defineProperty({__proto__:null,Decoder:NE,Encoder:jR,get PacketType(){return wt},protocol:XR},Symbol.toStringTag,{value:"Module"}));function xs(t,e,n){return t.on(e,n),function(){t.off(e,n)}}const YR=Object.freeze({connect:1,connect_error:1,disconnect:1,disconnecting:1,newListener:1,removeListener:1});class Dw extends An{constructor(e,n,i){super(),this.connected=!1,this.recovered=!1,this.receiveBuffer=[],this.sendBuffer=[],this._queue=[],this._queueSeq=0,this.ids=0,this.acks={},this.flags={},this.io=e,this.nsp=n,i&&i.auth&&(this.auth=i.auth),this._opts=Object.assign({},i),this.io._autoConnect&&this.open()}get disconnected(){return!this.connected}subEvents(){if(this.subs)return;const e=this.io;this.subs=[xs(e,"open",this.onopen.bind(this)),xs(e,"packet",this.onpacket.bind(this)),xs(e,"error",this.onerror.bind(this)),xs(e,"close",this.onclose.bind(this))]}get active(){return!!this.subs}connect(){return this.connected?this:(this.subEvents(),this.io._reconnecting||this.io.open(),this.io._readyState==="open"&&this.onopen(),this)}open(){return this.connect()}send(...e){return e.unshift("message"),this.emit.apply(this,e),this}emit(e,...n){var i,s,r;if(YR.hasOwnProperty(e))throw new Error('"'+e.toString()+'" is a reserved event name');if(n.unshift(e),this._opts.retries&&!this.flags.fromQueue&&!this.flags.volatile)return this._addToQueue(n),this;const o={type:wt.EVENT,data:n};if(o.options={},o.options.compress=this.flags.compress!==!1,typeof n[n.length-1]=="function"){const u=this.ids++,d=n.pop();this._registerAckCallback(u,d),o.id=u}const a=(s=(i=this.io.engine)===null||i===void 0?void 0:i.transport)===null||s===void 0?void 0:s.writable,c=this.connected&&!(!((r=this.io.engine)===null||r===void 0)&&r._hasPingExpired());return this.flags.volatile&&!a||(c?(this.notifyOutgoingListeners(o),this.packet(o)):this.sendBuffer.push(o)),this.flags={},this}_registerAckCallback(e,n){var i;const s=(i=this.flags.timeout)!==null&&i!==void 0?i:this._opts.ackTimeout;if(s===void 0){this.acks[e]=n;return}const r=this.io.setTimeoutFn(()=>{delete this.acks[e];for(let a=0;a<this.sendBuffer.length;a++)this.sendBuffer[a].id===e&&this.sendBuffer.splice(a,1);n.call(this,new Error("operation has timed out"))},s),o=(...a)=>{this.io.clearTimeoutFn(r),n.apply(this,a)};o.withError=!0,this.acks[e]=o}emitWithAck(e,...n){return new Promise((i,s)=>{const r=(o,a)=>o?s(o):i(a);r.withError=!0,n.push(r),this.emit(e,...n)})}_addToQueue(e){let n;typeof e[e.length-1]=="function"&&(n=e.pop());const i={id:this._queueSeq++,tryCount:0,pending:!1,args:e,flags:Object.assign({fromQueue:!0},this.flags)};e.push((s,...r)=>i!==this._queue[0]?void 0:(s!==null?i.tryCount>this._opts.retries&&(this._queue.shift(),n&&n(s)):(this._queue.shift(),n&&n(null,...r)),i.pending=!1,this._drainQueue())),this._queue.push(i),this._drainQueue()}_drainQueue(e=!1){if(!this.connected||this._queue.length===0)return;const n=this._queue[0];n.pending&&!e||(n.pending=!0,n.tryCount++,this.flags=n.flags,this.emit.apply(this,n.args))}packet(e){e.nsp=this.nsp,this.io._packet(e)}onopen(){typeof this.auth=="function"?this.auth(e=>{this._sendConnectPacket(e)}):this._sendConnectPacket(this.auth)}_sendConnectPacket(e){this.packet({type:wt.CONNECT,data:this._pid?Object.assign({pid:this._pid,offset:this._lastOffset},e):e})}onerror(e){this.connected||this.emitReserved("connect_error",e)}onclose(e,n){this.connected=!1,delete this.id,this.emitReserved("disconnect",e,n),this._clearAcks()}_clearAcks(){Object.keys(this.acks).forEach(e=>{if(!this.sendBuffer.some(i=>String(i.id)===e)){const i=this.acks[e];delete this.acks[e],i.withError&&i.call(this,new Error("socket has been disconnected"))}})}onpacket(e){if(e.nsp===this.nsp)switch(e.type){case wt.CONNECT:e.data&&e.data.sid?this.onconnect(e.data.sid,e.data.pid):this.emitReserved("connect_error",new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));break;case wt.EVENT:case wt.BINARY_EVENT:this.onevent(e);break;case wt.ACK:case wt.BINARY_ACK:this.onack(e);break;case wt.DISCONNECT:this.ondisconnect();break;case wt.CONNECT_ERROR:this.destroy();const i=new Error(e.data.message);i.data=e.data.data,this.emitReserved("connect_error",i);break}}onevent(e){const n=e.data||[];e.id!=null&&n.push(this.ack(e.id)),this.connected?this.emitEvent(n):this.receiveBuffer.push(Object.freeze(n))}emitEvent(e){if(this._anyListeners&&this._anyListeners.length){const n=this._anyListeners.slice();for(const i of n)i.apply(this,e)}super.emit.apply(this,e),this._pid&&e.length&&typeof e[e.length-1]=="string"&&(this._lastOffset=e[e.length-1])}ack(e){const n=this;let i=!1;return function(...s){i||(i=!0,n.packet({type:wt.ACK,id:e,data:s}))}}onack(e){const n=this.acks[e.id];typeof n=="function"&&(delete this.acks[e.id],n.withError&&e.data.unshift(null),n.apply(this,e.data))}onconnect(e,n){this.id=e,this.recovered=n&&this._pid===n,this._pid=n,this.connected=!0,this.emitBuffered(),this.emitReserved("connect"),this._drainQueue(!0)}emitBuffered(){this.receiveBuffer.forEach(e=>this.emitEvent(e)),this.receiveBuffer=[],this.sendBuffer.forEach(e=>{this.notifyOutgoingListeners(e),this.packet(e)}),this.sendBuffer=[]}ondisconnect(){this.destroy(),this.onclose("io server disconnect")}destroy(){this.subs&&(this.subs.forEach(e=>e()),this.subs=void 0),this.io._destroy(this)}disconnect(){return this.connected&&this.packet({type:wt.DISCONNECT}),this.destroy(),this.connected&&this.onclose("io client disconnect"),this}close(){return this.disconnect()}compress(e){return this.flags.compress=e,this}get volatile(){return this.flags.volatile=!0,this}timeout(e){return this.flags.timeout=e,this}onAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.push(e),this}prependAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.unshift(e),this}offAny(e){if(!this._anyListeners)return this;if(e){const n=this._anyListeners;for(let i=0;i<n.length;i++)if(e===n[i])return n.splice(i,1),this}else this._anyListeners=[];return this}listenersAny(){return this._anyListeners||[]}onAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.push(e),this}prependAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.unshift(e),this}offAnyOutgoing(e){if(!this._anyOutgoingListeners)return this;if(e){const n=this._anyOutgoingListeners;for(let i=0;i<n.length;i++)if(e===n[i])return n.splice(i,1),this}else this._anyOutgoingListeners=[];return this}listenersAnyOutgoing(){return this._anyOutgoingListeners||[]}notifyOutgoingListeners(e){if(this._anyOutgoingListeners&&this._anyOutgoingListeners.length){const n=this._anyOutgoingListeners.slice();for(const i of n)i.apply(this,e.data)}}}function Kc(t){t=t||{},this.ms=t.min||100,this.max=t.max||1e4,this.factor=t.factor||2,this.jitter=t.jitter>0&&t.jitter<=1?t.jitter:0,this.attempts=0}Kc.prototype.duration=function(){var t=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var e=Math.random(),n=Math.floor(e*this.jitter*t);t=(Math.floor(e*10)&1)==0?t-n:t+n}return Math.min(t,this.max)|0};Kc.prototype.reset=function(){this.attempts=0};Kc.prototype.setMin=function(t){this.ms=t};Kc.prototype.setMax=function(t){this.max=t};Kc.prototype.setJitter=function(t){this.jitter=t};class Tg extends An{constructor(e,n){var i;super(),this.nsps={},this.subs=[],e&&typeof e=="object"&&(n=e,e=void 0),n=n||{},n.path=n.path||"/socket.io",this.opts=n,gf(this,n),this.reconnection(n.reconnection!==!1),this.reconnectionAttempts(n.reconnectionAttempts||1/0),this.reconnectionDelay(n.reconnectionDelay||1e3),this.reconnectionDelayMax(n.reconnectionDelayMax||5e3),this.randomizationFactor((i=n.randomizationFactor)!==null&&i!==void 0?i:.5),this.backoff=new Kc({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(n.timeout==null?2e4:n.timeout),this._readyState="closed",this.uri=e;const s=n.parser||zR;this.encoder=new s.Encoder,this.decoder=new s.Decoder,this._autoConnect=n.autoConnect!==!1,this._autoConnect&&this.open()}reconnection(e){return arguments.length?(this._reconnection=!!e,e||(this.skipReconnect=!0),this):this._reconnection}reconnectionAttempts(e){return e===void 0?this._reconnectionAttempts:(this._reconnectionAttempts=e,this)}reconnectionDelay(e){var n;return e===void 0?this._reconnectionDelay:(this._reconnectionDelay=e,(n=this.backoff)===null||n===void 0||n.setMin(e),this)}randomizationFactor(e){var n;return e===void 0?this._randomizationFactor:(this._randomizationFactor=e,(n=this.backoff)===null||n===void 0||n.setJitter(e),this)}reconnectionDelayMax(e){var n;return e===void 0?this._reconnectionDelayMax:(this._reconnectionDelayMax=e,(n=this.backoff)===null||n===void 0||n.setMax(e),this)}timeout(e){return arguments.length?(this._timeout=e,this):this._timeout}maybeReconnectOnOpen(){!this._reconnecting&&this._reconnection&&this.backoff.attempts===0&&this.reconnect()}open(e){if(~this._readyState.indexOf("open"))return this;this.engine=new RR(this.uri,this.opts);const n=this.engine,i=this;this._readyState="opening",this.skipReconnect=!1;const s=xs(n,"open",function(){i.onopen(),e&&e()}),r=a=>{this.cleanup(),this._readyState="closed",this.emitReserved("error",a),e?e(a):this.maybeReconnectOnOpen()},o=xs(n,"error",r);if(this._timeout!==!1){const a=this._timeout,c=this.setTimeoutFn(()=>{s(),r(new Error("timeout")),n.close()},a);this.opts.autoUnref&&c.unref(),this.subs.push(()=>{this.clearTimeoutFn(c)})}return this.subs.push(s),this.subs.push(o),this}connect(e){return this.open(e)}onopen(){this.cleanup(),this._readyState="open",this.emitReserved("open");const e=this.engine;this.subs.push(xs(e,"ping",this.onping.bind(this)),xs(e,"data",this.ondata.bind(this)),xs(e,"error",this.onerror.bind(this)),xs(e,"close",this.onclose.bind(this)),xs(this.decoder,"decoded",this.ondecoded.bind(this)))}onping(){this.emitReserved("ping")}ondata(e){try{this.decoder.add(e)}catch(n){this.onclose("parse error",n)}}ondecoded(e){mf(()=>{this.emitReserved("packet",e)},this.setTimeoutFn)}onerror(e){this.emitReserved("error",e)}socket(e,n){let i=this.nsps[e];return i?this._autoConnect&&!i.active&&i.connect():(i=new Dw(this,e,n),this.nsps[e]=i),i}_destroy(e){const n=Object.keys(this.nsps);for(const i of n)if(this.nsps[i].active)return;this._close()}_packet(e){const n=this.encoder.encode(e);for(let i=0;i<n.length;i++)this.engine.write(n[i],e.options)}cleanup(){this.subs.forEach(e=>e()),this.subs.length=0,this.decoder.destroy()}_close(){this.skipReconnect=!0,this._reconnecting=!1,this.onclose("forced close")}disconnect(){return this._close()}onclose(e,n){var i;this.cleanup(),(i=this.engine)===null||i===void 0||i.close(),this.backoff.reset(),this._readyState="closed",this.emitReserved("close",e,n),this._reconnection&&!this.skipReconnect&&this.reconnect()}reconnect(){if(this._reconnecting||this.skipReconnect)return this;const e=this;if(this.backoff.attempts>=this._reconnectionAttempts)this.backoff.reset(),this.emitReserved("reconnect_failed"),this._reconnecting=!1;else{const n=this.backoff.duration();this._reconnecting=!0;const i=this.setTimeoutFn(()=>{e.skipReconnect||(this.emitReserved("reconnect_attempt",e.backoff.attempts),!e.skipReconnect&&e.open(s=>{s?(e._reconnecting=!1,e.reconnect(),this.emitReserved("reconnect_error",s)):e.onreconnect()}))},n);this.opts.autoUnref&&i.unref(),this.subs.push(()=>{this.clearTimeoutFn(i)})}}onreconnect(){const e=this.backoff.attempts;this._reconnecting=!1,this.backoff.reset(),this.emitReserved("reconnect",e)}}const vl={};function Zd(t,e){typeof t=="object"&&(e=t,t=void 0),e=e||{};const n=LR(t,e.path||"/socket.io"),i=n.source,s=n.id,r=n.path,o=vl[s]&&r in vl[s].nsps,a=e.forceNew||e["force new connection"]||e.multiplex===!1||o;let c;return a?c=new Tg(i,e):(vl[s]||(vl[s]=new Tg(i,e)),c=vl[s]),n.query&&!e.query&&(e.query=n.queryKey),c.socket(n.path,e)}Object.assign(Zd,{Manager:Tg,Socket:Dw,io:Zd,connect:Zd});class JR{constructor(e){W(this,"socket");W(this,"loginSuccessHandler");W(this,"sesionesActualizadasHandler");W(this,"conectadoHandler");W(this,"cancionActualizadaHandler");W(this,"conexionStatusHandler");W(this,"ensesionHandler");W(this,"sesionFailedHandler");W(this,"loginFailedHandler");W(this,"mensajesesionHandler");W(this,"cancionIniciadaHandler");W(this,"cancionDetenidaHandler");W(this,"rolSesionHandler");W(this,"compasActualizadoHandler");W(this,"timeHandler");W(this,"actualizarUsuariosHandler");W(this,"urlserver");this.urlserver=e}setLoginSuccessHandler(e){this.loginSuccessHandler=e}setSesionesActualizadasHandler(e){this.sesionesActualizadasHandler=e}setConectadoHandler(e){this.conectadoHandler=e}setCancionActualizadaHandler(e){this.cancionActualizadaHandler=e}setconexionStatusHandler(e){this.conexionStatusHandler=e}setEnsesionHandler(e){this.ensesionHandler=e}setSesionFailedHandler(e){this.sesionFailedHandler=e}setLoginFailedHandler(e){this.loginFailedHandler=e}setMensajesesionHandler(e){this.mensajesesionHandler=e}setCancionIniciadaHandler(e){this.cancionIniciadaHandler=e}setCancionDetenidaHandler(e){this.cancionDetenidaHandler=e}SalirSesion(){this.socket.emit("salirsesion")}Logout(){this.socket.emit("logout")}setRolSesionHandler(e){this.rolSesionHandler=e}setCompasActualizadoHandler(e){this.compasActualizadoHandler=e}setTimeHandler(e){this.timeHandler=e}setActualizarUsuariosHandler(e){this.actualizarUsuariosHandler=e}get UrlServer(){return this.urlserver}disconnect(){this.socket&&(this.socket.disconnect(),console.log("socket disconnected manually"))}connectar(){const e=Zd(this.urlserver,{autoConnect:!0,rejectUnauthorized:!1,transports:["websocket"]});e.on("connect",()=>{var n;console.log("socket connected"),(n=this.conexionStatusHandler)==null||n.call(this,"conectado")}),e.on("disconnect",n=>{var i;console.log("socket disconnected:",n),(i=this.conexionStatusHandler)==null||i.call(this,"desconectado")}),e.on("cancionActualizada",()=>{var n;(n=this.cancionActualizadaHandler)==null||n.call(this)}),e.on("mensajesesion",n=>{var i;console.log("mensajesesion received with mensaje:",n),(i=this.mensajesesionHandler)==null||i.call(this,n)}),e.on("rolSesion",n=>{var i;console.log("rolSesion received with mensaje:",n),(i=this.rolSesionHandler)==null||i.call(this,n)}),e.on("sesionesActualizadas",()=>{var n;console.log("sesionesActualizadas received"),(n=this.sesionesActualizadasHandler)==null||n.call(this)}),e.on("loginSuccess",()=>{var n;console.log("loginSuccess received"),(n=this.loginSuccessHandler)==null||n.call(this)}),e.on("conectado",n=>{var i;console.log("conectado received with token:",n.token),(i=this.conectadoHandler)==null||i.call(this,n.token)}),e.on("loginFailed",n=>{var i;console.error("loginFailed received with error:",n),(i=this.loginFailedHandler)==null||i.call(this,n)}),e.on("ensesion",n=>{var i;console.log("ensesion received with sesion:",n),(i=this.ensesionHandler)==null||i.call(this,n)}),e.on("sesionFailed",n=>{var i;console.error("sesionFailed received with error:",n),(i=this.sesionFailedHandler)==null||i.call(this,n)}),e.on("cancionIniciada",(n,i)=>{var s;console.log("cancionIniciada received with compas:",n,"desde:",i),(s=this.cancionIniciadaHandler)==null||s.call(this,n,i)}),e.on("cancionDetenida",()=>{var n;console.log("cancionDetenida received"),(n=this.cancionDetenidaHandler)==null||n.call(this)}),e.on("compasActualizado",n=>{var i;console.log("compasActualizado received with compas:",n),(i=this.compasActualizadoHandler)==null||i.call(this,n)}),e.on("time",n=>{var i;(i=this.timeHandler)==null||i.call(this,n)}),e.on("actualizarusuarios",()=>{var n;console.log("actualizarUsuarios received"),(n=this.actualizarUsuariosHandler)==null||n.call(this)}),this.socket=e}MensajeASesion(e){this.socket.emit("mensajeasesion",e)}CrearSesion(e){this.socket.emit("crearsesion",e)}UnirmeSesion(e){this.socket.emit("unirmesesion",e)}login(e){this.socket.emit("login",e.modo,e.usuario,e.password)}iniciarReproduccion(e,n){console.log("Iniciando reproducción con compás:",e,"y delay:",n),this.socket.emit("iniciarReproduccion",e,n)}detenerReproduccion(){this.socket.emit("detenerReproduccion")}actualizarCompas(e){this.socket.emit("actualizarCompas",e)}gettime(){this.socket.emit("gettime")}}class yS{constructor(){W(this,"delaySets",[]);W(this,"delay",0);W(this,"error",0)}getDetalleCalculo(){return this.delaySets}addDelaySet(e){this.delaySets.push(e),this.delaySets.forEach(a=>{a.Seleccionada=!1});let n=[];n=[...this.delaySets].sort((a,c)=>a.Tardo-c.Tardo).slice(0,6),n.forEach(a=>{a.Seleccionada=!0});const s=n.reduce((a,c)=>a+c.Tardo,0)/(n.length||1),r=n.reduce((a,c)=>a+c.Delay,0)/(n.length||1),o=n.reduce((a,c)=>a+Math.pow(c.Delay-r,2),0)/(n.length||1);this.delay=r,this.error=Math.sqrt(o)+s/2}getDelay(){return this.delay}getError(){return this.error}}class ZR{constructor(e=0,n=0){W(this,"Tardo");W(this,"Delay");W(this,"Seleccionada");this.Tardo=e,this.Delay=n,this.Seleccionada=!1}}const Sr=class Sr{constructor(){W(this,"cliente",null);W(this,"ciclos",0);W(this,"maxCiclos",12);W(this,"momentoEnviado",0);W(this,"momentoRecibido",0);W(this,"delayCalculador",new yS);W(this,"ErrorReloj",0);W(this,"delayReloj",0)}GetDetalleCalculo(){return this.delayCalculador.getDetalleCalculo()}setCliente(e){this.cliente=e,this.cliente.setTimeHandler(n=>{var o;if(this.momentoEnviado==null)return;this.momentoRecibido=this.MomentoLocal();const i=Sr.Diferencia(this.momentoEnviado,this.momentoRecibido),s=n+i/2,r=this.momentoRecibido-s;this.delayCalculador.addDelaySet(new ZR(i*-1,r)),this.delayReloj=this.delayCalculador.getDelay(),this.ErrorReloj=this.delayCalculador.getError(),this.ciclos<this.maxCiclos&&(this.ciclos++,this.momentoEnviado=this.MomentoLocal(),(o=this.cliente)==null||o.gettime())})}static getInstance(){return Sr.instance||(Sr.instance=new Sr),Sr.instance}ActualizarDelayReloj(){this.cliente&&(this.ciclos=0,this.delayCalculador=new yS,this.momentoEnviado=this.MomentoLocal(),this.cliente.gettime())}MomentoSincro(){const e=this.MomentoLocal()-this.delayReloj;return e<0?e+36e5:e%36e5}MomentoLocal(){return Date.now()%36e5}static Diferencia(e,n){return e>336e4&&n<24e4?e-(n+36e5):e-n}GetEstadoSincro(e,n){let i,s,r,o,a=Sr.Diferencia(e.timeInicio,n);if(console.log(`Diferencia: ${a}, Momento: ${n}, Time Inicio: ${e.timeInicio}`),a<=0){a=a*-1;const c=Math.floor(a/e.duracionGolpe);i="Reproduciendo",o=a-c*e.duracionGolpe,console.log("Diferencia:",a,"deltaGolpe:",o),o=e.duracionGolpe-o,s=e.desdeCompas+Math.floor(c/e.golpesxcompas),r=c%e.golpesxcompas,console.log("Estado: Reproduciendo",a,"Compás:",s,"Golpe del compás:",r,"deltaGolpe:",o,"Diferencia:",a,"Golpe:",c,"Duracion golpe:",e.duracionGolpe)}else{const c=Math.floor(a/e.duracionGolpe);i="Iniciando",s=e.desdeCompas,o=a-c*e.duracionGolpe,r=e.golpesxcompas-(c+1)}return new gw(s,r,i,o)}};W(Sr,"instance");let Ks=Sr;class yE{constructor(){W(this,"reloj",new mw);W(this,"cancion","")}get Cancion(){return this.cancion}SetCancion(e,n){const i=He();i.cancion=n,i.origenCancion=e}iniciarReproduccion(){var s,r,o;const e=He(),i=Ks.getInstance().MomentoSincro();e.cancion&&(e.sesSincroCancion=new wc(((s=e.cancion)==null?void 0:s.duracionGolpe)||1e3,i+((r=e.cancion)==null?void 0:r.duracionCompas)*1e3,((o=e.cancion)==null?void 0:o.compasCantidad)||4,e.compas||0),console.log(`Iniciando reproducción de la canción: ${i}`),this.reloj.setDuracion(e.cancion.duracionGolpe*1e3),this.reloj.setIniciaCicloHandler(this.onInicioCiclo.bind(this)),this.reloj.iniciar(),e.estadoReproduccion="Iniciando",e.compas<0&&(e.compas=0))}detenerReproduccion(){const e=He();e.estadoReproduccion="pausado",e.golpeDelCompas=0,this.reloj.pausar()}updateCompas(e){const n=He();n.compas=e}sincronizar(){var c,l;const e=He(),n=Ks.getInstance(),i=n.MomentoSincro(),s=((c=e.cancion)==null?void 0:c.duracionGolpe)*1e3,r=((l=e.cancion)==null?void 0:l.compasCantidad)||4,o=new wc(s,e.sesSincroCancion.timeInicio,r,e.sesSincroCancion.desdeCompas);console.log(`Sincronizando en el : ${i} , ${e.sesSincroCancion.timeInicio}`),e.sesSincroCancion=o;const a=n.GetEstadoSincro(o,i);e.EstadoSincro=a,e.compas=a.compas,e.golpeDelCompas=a.golpeEnCompas,e.estadoReproduccion=a.estado,this.reloj.setDelay(a.delay)}onInicioCiclo(){this.sincronizar()}}class Ow{constructor(e,n,i,s){W(this,"modo");W(this,"usuario");W(this,"password");W(this,"mantenerseLogeado");this.modo=e,this.usuario=n,this.password=i,this.mantenerseLogeado=s}}class Dl{constructor(e,n){W(this,"nombre");W(this,"direccion");this.nombre=e,this.direccion=n}}class KR{}class iu extends KR{constructor(n,i,s,r,o){super();W(this,"imagen");W(this,"nombre");W(this,"usuario");W(this,"descripcion");W(this,"instrumento");this.imagen=n,this.nombre=i,this.usuario=s,this.descripcion=r,this.instrumento=o}}class Ol{constructor(){W(this,"tamanioLetra",22);W(this,"tamanioAcorde",23);W(this,"tamanioAcordesolo",16);W(this,"tamanioParte",16);W(this,"tamanioAcordeParte",26);W(this,"anchoPrincipal",70);W(this,"altoPantallaDescuento",200);W(this,"factorScroll",1.4);W(this,"columnas",78)}}const Es=class Es{constructor(){W(this,"vistasTocar",[new Ol,new Ol,new Ol]);W(this,"servidores",[]);W(this,"conectarServerDefault","");W(this,"loginDefault",null);W(this,"perfil",null);W(this,"tema","claro");W(this,"volumen",50);W(this,"mostrarAcordes",!0)}obtenerURLConectar(e){const n=this.servidores.find(i=>i.nombre===e);return n?n.direccion:""}GetConfiguracionPantalla(e,n){let i=1;return e<700?i=0:e>1700&&n>1e3&&(i=2),this.vistasTocar[i]}static getInstance(){return Es.instance||(Es.instance=Es.cargarDesdeLocalStorage()),Es.instance}static cargarDesdeLocalStorage(){const e=new Es,n=localStorage.getItem("configuracion");if(n)try{const i=JSON.parse(n);if(i.VERSION===Es.VERSION){if(e.tema=i.tema,e.volumen=i.volumen,e.mostrarAcordes=i.mostrarAcordes,e.conectarServerDefault=typeof i.conectarServerDefault=="string"?i.conectarServerDefault:"",i.loginDefault){const s=typeof i.loginDefault.mantenerseLogeado=="boolean"?i.loginDefault.mantenerseLogeado:!1;e.loginDefault=new Ow(i.loginDefault.modo,i.loginDefault.usuario,i.loginDefault.password,s)}i.perfil&&(e.perfil=new iu(i.perfil.imagen,i.perfil.nombre,i.perfil.usuario,i.perfil.descripcion,i.perfil.instrumento)),i.vistasTocar&&Array.isArray(i.vistasTocar)&&i.vistasTocar.length===3&&(e.vistasTocar=i.vistasTocar.map(s=>Object.assign(new Ol,s))),i.servidores&&Array.isArray(i.servidores)&&(e.servidores=i.servidores.map(s=>new Dl(s.nombre,s.direccion)))}}catch(i){console.error("Error al cargar configuración desde localStorage:",i)}return e.servidores.length===0?(e.servidores.push(new Dl("desa","http://localhost:8080/")),e.servidores.push(new Dl("prod","https://fogon-servidor.fly.dev/"),new Dl("exprod","https://fogon-servidor.onrender.com/")),e.conectarServerDefault="prod"):e.servidores.some(s=>s.nombre===e.conectarServerDefault)||(e.conectarServerDefault=e.servidores[0].nombre),e}guardarEnLocalStorage(){localStorage.setItem("configuracion",JSON.stringify({VERSION:Es.VERSION,tema:this.tema,volumen:this.volumen,mostrarAcordes:this.mostrarAcordes,vistasTocar:this.vistasTocar,servidores:this.servidores,conectarServerDefault:this.conectarServerDefault,loginDefault:this.loginDefault,perfil:this.perfil}))}};W(Es,"instance",null),W(Es,"VERSION",7);let Os=Es;class Ui{constructor(e,n,i){W(this,"origenUrl");W(this,"fileName");W(this,"usuario");this.origenUrl=e,this.fileName=n,this.usuario=i}static GetFromQuery(e){return new Ui("url",e,e)}}class Ac{constructor(e,n,i){W(this,"escala");W(this,"totalCompases");W(this,"compasUnidad");W(this,"compasCantidad");W(this,"bpm");W(this,"calidad");W(this,"etiquetas");W(this,"origen");W(this,"cancion");W(this,"banda");this.origen=e,this.cancion=n,this.banda=i,this.etiquetas=[],this.escala="",this.totalCompases=0,this.compasUnidad=0,this.compasCantidad=4,this.bpm=60,this.calidad=1,this.escala=""}normalizartexto(e){return e.toLowerCase().replace(/á/g,"a").replace(/é/g,"e").replace(/í/g,"i").replace(/ó/g,"o").replace(/ú/g,"u").replace(/ñ/g,"n").replace(" ","_")}normalizar(){this.origen.fileName===void 0&&(this.origen.fileName=""),this.origen.fileName===""&&(this.origen.fileName=this.normalizartexto(this.banda)+"_"+this.normalizartexto(this.cancion))}duracionCancion(){return this.totalCompases*(60/this.bpm*this.compasCantidad)}static BuildFromCancion(e,n){const i=new Ac(n,e.cancion,e.banda);return i.escala=e.escala?e.escala:"",i.totalCompases=e.totalCompases?e.totalCompases:0,i.compasUnidad=e.compasUnidad?e.compasUnidad:0,i.compasCantidad=e.compasCantidad?e.compasCantidad:4,i.bpm=e.bpm?e.bpm:60,i.calidad=e.calidad?e.calidad:0,i.origen=new Ui(n.origenUrl,n.fileName,n.usuario),i}}class Pw{constructor(e,n,i){W(this,"tipo");W(this,"id");W(this,"delay",0);this.tipo=e,this.id=n,this.delay=i}}class Ea{static CancionToJSON(e){return JSON.stringify({cancion:e.cancion,banda:e.banda,acordes:{partes:e.acordes.partes.map(i=>({nombre:i.nombre,acordes:i.acordes})),ordenPartes:e.acordes.ordenPartes},escala:e.escala,letras:e.letras.renglones,bpm:e.bpm,calidad:e.calidad,compasCantidad:e.compasCantidad,compasUnidad:e.compasUnidad,medias:e.medias.map(i=>({tipo:i.tipo,id:i.id,delay:i.delay||0}))})}static JSONToCancion(e){const n=JSON.parse(e),i=[];for(let h=0;h<n.acordes.partes.length;h++)i.push(new $s(n.acordes.partes[h].nombre,n.acordes.partes[h].acordes));let s=n.acordes.ordenPartes;s===void 0&&(s=n.acordes.orden_partes);const r=new Vr(i,s);let o=n.bpm;o===void 0&&(o=n.bpm);let a=n.compasUnidad;a===void 0&&(a=n.compas_unidad);let c=n.compasesTiempo;c===void 0&&(c=n.compases_tiempo);let l=n.compasCantidad;l===void 0&&(l=n.compas_cantidad);let u=n.letras.renglones;u===void 0&&(u=n.letras);const d=new Co(n.cancion,n.banda,r,new nu(u),o,n.calidad,l,c,n.escala);return n.medias&&(d.medias=n.medias.map(h=>new Pw(h.tipo,h.id,h.delay||0))),d.archivo=n.archivo,d.normalizar(),d}}class um{static async GetCancion(e,n=null,i=""){const r=await(await fetch((n==null?void 0:n.UrlServer)+"cancion?nombre="+e.fileName,{method:"GET",headers:{Authorization:`Bearer ${i}`}})).json(),o=Ea.JSONToCancion(JSON.stringify(r.datosJSON));return o.archivo=e.fileName,o}static async SaveCancion(e,n=null,i=""){const s={nombreArchivo:e.archivo,datosJSON:e};return new Promise(async(r,o)=>{(await fetch((n==null?void 0:n.UrlServer)+"cancion",{method:"POST",headers:{Authorization:`Bearer ${i}`,"Content-Type":"application/json"},body:JSON.stringify(s)})).ok?r():o(new Error("Error al guardar la canción"))})}}const ho=class ho{constructor(){W(this,"canciones");this.canciones=[],this.cargarDeStorage()}filtrarSubidas(){this.canciones=this.canciones.filter(e=>e.origen.origenUrl!=="subida"),this.guardarEnStorage()}agregar(e){e.origen.origenUrl!=="fogon"&&(this.canciones=this.canciones.filter(n=>n.origen.origenUrl==="fogon"||n.origen.fileName!==e.origen.fileName||n.origen.origenUrl!==e.origen.origenUrl),this.canciones.unshift(e),this.canciones.length>ho.MAX_CANCIONES&&(this.canciones=this.canciones.slice(0,ho.MAX_CANCIONES)),this.guardarEnStorage())}obtenerUltimas(){return[...this.canciones]}cargarDeStorage(){try{const e=localStorage.getItem(ho.STORAGE_KEY);if(e){const n=JSON.parse(e);Array.isArray(n)&&(this.canciones=n.map(i=>{const s=new Ac(new Ui(i.origen.origenUrl,i.origen.fileName,i.origen.usuario),i.cancion,i.banda);return s.escala=i.escala,s.totalCompases=i.totalCompases,s.compasUnidad=i.compasUnidad,s.compasCantidad=i.compasCantidad,s.bpm=i.bpm,s.calidad=i.calidad,s}))}}catch(e){console.error("Error al cargar últimas canciones del storage:",e),this.canciones=[]}}guardarEnStorage(){try{localStorage.setItem(ho.STORAGE_KEY,JSON.stringify(this.canciones))}catch(e){console.error("Error al guardar últimas canciones en storage:",e)}}};W(ho,"STORAGE_KEY","ultimas-canciones"),W(ho,"MAX_CANCIONES",30);let Nc=ho;class Iw{static async GetCancion(e){let n=window.location.origin;n.includes("fogon.ar")&&(n="https://www.fogon.ar/canciones/"),n.includes("localhost")&&(n="http://localhost:5173/canciones/"),console.log("Getting song from",n+e.fileName+".json");const s=await(await fetch(n+e.fileName+".json")).json(),r=Ea.JSONToCancion(JSON.stringify(s));return r.archivo=e.fileName,r}static async GetIndice(){let e=window.location.origin;e.includes("local")&&(e=window.location.origin),e.includes("fogon.ar")&&(e="https://www.fogon.ar/"),e.includes("localhost")&&(e="http://localhost:5173/"),console.log("Getting Indice from",e+"indice.json");const i=await(await fetch(e+"indice.json")).json(),s=[];for(const r of i){const o=new Ac(new Ui("sitio",r.archivo,""),r.cancion,r.banda);o.calidad=r.calidad,o.bpm=r.bpm,o.compasUnidad=r.compasUnidad,o.compasCantidad=r.compasCantidad,o.escala=r.escala,o.normalizar(),s.push(o)}return s}}class kS{static async GetCancion(e,n){return n?new Promise((i,s)=>{const a=n.transaction("canciones","readonly").objectStore("canciones").get(e.fileName);a.onsuccess=c=>{const l=c.target.result;if(l){console.log("Canción recuperada de IndexedDB:",l);const u=Ea.JSONToCancion(l.contenido);u.archivo=e.fileName,i(u)}else s(new Error(`Canción no encontrada: ${e.fileName}`))},a.onerror=c=>{console.error("Error al recuperar canción de IndexedDB:",c),s(c)}}):Promise.reject(new Error("Base de datos no inicializada"))}static SaveCancion(e,n){if(!e)return Promise.reject(new Error("Base de datos no inicializada"));const i=Ea.CancionToJSON(n),s={archivo:n.archivo,contenido:i},o=e.transaction("canciones","readwrite").objectStore("canciones");return new Promise((a,c)=>{const l=o.put(s);l.onsuccess=()=>{console.log("Canción guardada en IndexedDB:",n),a()},l.onerror=u=>{console.error("Error al guardar canción en IndexedDB:",u),c(u)}})}}class Cg{static async GetCancion(e){return this.canciones.get(e.fileName)}static async SaveCancion(e){this.canciones.set(e.archivo,e)}}W(Cg,"canciones",new Map);class DS{static async GetCancion(e,n=null,i=""){const r=await(await fetch((n==null?void 0:n.UrlServer)+"cancionsesion",{method:"GET",headers:{Authorization:`Bearer ${i}`}})).json();if(r.datosJSON===null)return Co.GetDefault("Sin cancion en el fogón");const o=Ea.JSONToCancion(JSON.stringify(r.datosJSON));return o.archivo=e.fileName,o}static async SaveCancion(e,n=null,i=""){const s={nombreArchivo:e.archivo,datosJSON:e};return new Promise(async(r,o)=>{(await fetch((n==null?void 0:n.UrlServer)+"cancionsesion",{method:"POST",headers:{Authorization:`Bearer ${i}`,"Content-Type":"application/json"},body:JSON.stringify(s)})).ok?r():o(new Error("Error al guardar la canción"))})}}const na=class na{constructor(){W(this,"cliente",null);W(this,"token","");W(this,"db",null)}setCliente(e,n){this.cliente=e,this.token=n}getDBConnection(){return new Promise((e,n)=>{const i=indexedDB.open("MiBaseDeDatos",1);i.onupgradeneeded=s=>{const r=s.target.result;r.objectStoreNames.contains("canciones")||r.createObjectStore("canciones",{keyPath:"archivo"})},i.onsuccess=s=>{const r=s.target.result;e(r)},i.onerror=s=>{console.error("Error al abrir IndexedDB:",s.target.error),n(s.target.error)}})}SetDB(){this.getDBConnection().then(e=>{this.db=e,console.log("Conexión a IndexedDB establecida")}).catch(e=>{console.error("Error al conectar a IndexedDB:",e)})}static getInstance(){return na.instance||(na.instance=new na),na.instance}async InternalGet(e){if(e.origenUrl==="server")return um.GetCancion(e,this.cliente,this.token);if(e.origenUrl==="subida")return Cg.GetCancion(e);if(e.origenUrl==="fogon")return DS.GetCancion(e,this.cliente,this.token);if(e.origenUrl==="local"){if(!this.db)throw console.error("No se ha establecido la conexión a IndexedDB"),new Error("No se ha establecido la conexión a IndexedDB");return kS.GetCancion(e,this.db)}return console.log("Recuperando canción desde URL:",e.origenUrl),e.origenUrl==="server"?um.GetCancion(e,this.cliente,this.token):Iw.GetCancion(e)}async Get(e){const i=await this.InternalGet(e),s=Ac.BuildFromCancion(i,e);return new Nc().agregar(s),i}async Save(e,n){if(e.origenUrl==="server")um.SaveCancion(n,this.cliente,this.token);else if(e.origenUrl==="fogon")DS.SaveCancion(n,this.cliente,this.token);else if(e.origenUrl==="subida")Cg.SaveCancion(n);else if(e.origenUrl==="local"){if(!this.db)throw console.error("No se ha establecido la conexión a IndexedDB"),new Error("No se ha establecido la conexión a IndexedDB");kS.SaveCancion(this.db,n)}const i=Ac.BuildFromCancion(n,e),s=new Nc;console.log("Guardando en ultimas",i),s.agregar(i)}};W(na,"instance");let yr=na;class QR extends yE{constructor(n,i){super();W(this,"cliente");W(this,"momentoInicio",null);W(this,"compasInicio",0);W(this,"token","");this.token=i,this.cliente=n,this.cliente.setCancionActualizadaHandler(()=>{this.GetCancionDelFogon()}),this.cliente.setCancionIniciadaHandler((s,r)=>{var c,l;console.log(`Reproducción iniciada desde compás ${s} en ${r}`);const o=He(),a=((c=o.cancion)==null?void 0:c.duracionGolpe)*1e3;o.sesSincroCancion=new wc(a,r,((l=o.cancion)==null?void 0:l.compasCantidad)||4,s),this.sincronizar(),o.cancion&&(this.reloj.setDuracion(o.cancion.duracionGolpe*1e3),this.reloj.setIniciaCicloHandler(this.onInicioCiclo.bind(this)),this.reloj.iniciar(),o.compas<0&&(o.compas=0))}),this.cliente.setCancionDetenidaHandler(()=>{console.log("Reproducción detenida");const s=He();s.estadoReproduccion="pausado",s.golpeDelCompas=0,this.reloj.pausar()}),this.cliente.setCompasActualizadoHandler(s=>{console.log(`Compás actualizado a ${s}`);const r=He();r.compas=s})}sincronizar(){var l,u;const n=He(),i=Ks.getInstance(),s=i.MomentoSincro(),r=((l=n.cancion)==null?void 0:l.duracionGolpe)*1e3,o=((u=n.cancion)==null?void 0:u.compasCantidad)||4,a=new wc(r,n.sesSincroCancion.timeInicio,o,n.sesSincroCancion.desdeCompas);n.sesSincroCancion=a;const c=i.GetEstadoSincro(a,s);n.EstadoSincro=c,n.compas=c.compas,n.golpeDelCompas=c.golpeEnCompas,n.estadoReproduccion=c.estado,this.reloj.setDelay(c.delay)}GetCancionDelFogon(){const n=new Ui("fogon","","");yr.getInstance().Get(n).then(i=>{const s=He();s.cancion=i,s.origenCancion=n})}onInicioCiclo(){this.sincronizar()}async SetCancion(n,i){const s=new Ui("fogon","","");console.log("Guardando canción en el fogón"),yr.getInstance().Save(s,i)}async iniciarReproduccion(){const n=He();n.cancion&&(n.estadoReproduccion="Iniciando",n.compas<0&&(n.compas=0),this.cliente.iniciarReproduccion(n.compas,n.cancion.duracionCompas*1e3))}detenerReproduccion(){this.cliente.detenerReproduccion()}updateCompas(n){this.cliente.actualizarCompas(n)}}class kE{constructor(e,n,i,s,r){W(this,"nombre");W(this,"usuarios");W(this,"estado");W(this,"latitud");W(this,"longitud");this.nombre=e,this.usuarios=n,this.estado=i,this.latitud=s,this.longitud=r}}class GR{constructor(e,n,i,s){W(this,"ID");W(this,"Usuario");W(this,"RolSesion");W(this,"PerfilUsr");this.ID=e,this.Usuario=n,this.PerfilUsr=i,this.RolSesion=s}}class _R extends yE{constructor(){super(...arguments);W(this,"momentoInicio",null);W(this,"compasInicio",0);W(this,"mediavista",null)}setMediaVista(n){this.mediavista=n}sincronizar(){var l,u;const n=He(),i=Ks.getInstance();let s=0;this.mediavista&&this.mediavista.GetTiempoDesdeInicio&&(s=this.mediavista.GetTiempoDesdeInicio(),console.log(`Sincronizando en el MEDIA:: ${s}`));const r=((l=n.cancion)==null?void 0:l.duracionGolpe)*1e3,o=((u=n.cancion)==null?void 0:u.compasCantidad)||4,a=new wc(r,0,o,0);n.sesSincroCancion=a;const c=i.GetEstadoSincro(a,s);n.EstadoSincro=c,n.compas=c.compas,n.golpeDelCompas=c.golpeEnCompas,n.estadoReproduccion=c.estado,this.reloj.setDelay(c.delay)}iniciarReproduccion(){var i,s;super.iniciarReproduccion();const n=He();n.sesSincroCancion.timeInicio=0,(s=(i=this.mediavista)==null?void 0:i.Iniciar)==null||s.call(i)}detenerReproduccion(){var n,i;super.detenerReproduccion(),(i=(n=this.mediavista)==null?void 0:n.Pausar)==null||i.call(n)}}class $R{constructor(){W(this,"reproductor",new yE);W(this,"reproductorDesconectado",this.reproductor);W(this,"reproductorConectado",null);W(this,"reproductorMedia",null);W(this,"configuracion",Os.getInstance());W(this,"cliente",null);W(this,"token","");W(this,"url","");if(yr.getInstance().SetDB(),new Nc().filtrarSubidas(),console.log("Aplicacion inicializada"),this.configuracion.conectarServerDefault){const n=this.configuracion.servidores.find(i=>i.nombre===this.configuracion.conectarServerDefault);n?this.conectar(n.direccion):console.warn("Servidor por defecto no encontrado")}}onMounted(){console.log("Aplicacion montada");const e=He();e.perfil=this.configuracion.perfil||new iu("","","","","");const i=new URLSearchParams(window.location.search).get("cancion");i&&(console.log("cancion",i),this.SetCancion(new Ui("sitio",i,"")))}setMediaVista(e){this.reproductorMedia==null&&(this.reproductorMedia=new _R),this.reproductorMedia.setMediaVista(e),He().estadoSesion!=="conectado"&&(this.reproductor=this.reproductorMedia)}quitarMediaVista(){this.reproductor=this.reproductorDesconectado}async SetCancion(e){yr.getInstance().Get(e).then(n=>{console.log("Canción obtenida:",n),this.reproductor.SetCancion(e,n)})}updateCompas(e){this.reproductor.updateCompas(e)}play(){this.reproductor.iniciarReproduccion()}pause(){this.reproductor.detenerReproduccion()}stop(){this.reproductor.detenerReproduccion(),this.reproductor.updateCompas(0)}conectar(e){const n=Os.getInstance();this.url=e;const i=He();i.estado="conectando",this.cliente=new JR(e),this.cliente.setconexionStatusHandler(s=>{if(console.log("status:",s),s==="conectado"&&this.cliente){const r=Ks.getInstance();r.setCliente(this.cliente),r.ActualizarDelayReloj(),i.estado="conectado"}s==="desconectado"&&(i.estado="desconectado",this.reproductor.detenerReproduccion(),this.reproductor=this.reproductorDesconectado,this.cliente=null)}),this.cliente.setConectadoHandler(s=>{var a;console.log(`Conectado: ${s}`),this.token=s,this.cliente&&yr.getInstance().setCliente(this.cliente,s),this.configuracion&&this.configuracion.perfil&&this.enviarPerfil(this.configuracion.perfil),this.cargarSesiones();const o=new URLSearchParams(window.location.search).get("sesion");(a=n.loginDefault)!=null&&a.mantenerseLogeado&&this.login(n.loginDefault),o&&this.UnirmeSesion(o.replace(/_/g," "))}),this.cliente.setSesionesActualizadasHandler(()=>{this.cargarSesiones()}),this.cliente.connectar(),console.log(`Conectando al servidor: ${e}`),this.cliente.setEnsesionHandler(s=>{console.log(`En sesion: ${s}`);const r=He();r.estadoSesion="conectado",r.sesion.nombre=s,this.cliente!=null&&(this.reproductorConectado=new QR(this.cliente,this.token),this.reproductorConectado.GetCancionDelFogon(),this.reproductor.detenerReproduccion(),this.reproductor=this.reproductorConectado)}),this.cliente.setSesionFailedHandler(s=>{console.error(`Error al crear sesión: ${s}`);const r=He();r.estadoSesion="error"}),this.cliente.setRolSesionHandler(s=>{console.log(`Rol de sesión recibido: ${s}`);const r=He();r.rolSesion=s}),this.cliente.setLoginSuccessHandler(()=>{const s=He();s.estado="logueado",s.estadoLogin="logueado"}),this.cliente.setLoginFailedHandler(s=>{console.error(`Error al Loguearse: ${s}`);const r=He();r.estadoLogin="error"}),this.cliente.setMensajesesionHandler(s=>{console.log(`Mensaje de sesión recibido: ${s}`),He().mensajes.push(s)}),this.cliente.setActualizarUsuariosHandler(()=>{console.log("Usuarios actualizados"),this.CargarUsuariosSesion()})}enviarPerfil(e){this.HTTPPost("perfil",e).then(n=>{const i=He();i.perfil=e,console.log("Profile updated successfully:",n)}).catch(n=>{console.error("Error updating profile:",n)})}CargarUsuariosSesion(){this.HTTPGet("usersesion").then(e=>e.json()).then(e=>{console.log("Perfiles obtenidos:",e);const n=He();n.usuariosSesion=[],e.forEach(i=>{n.usuariosSesion.push(new GR(i.ID,i.Usuario,new iu(i.Perfil.Imagen,i.Perfil.Usuario,i.Perfil.Nombre,i.Perfil.Descripcion,i.Perfil.Instrumento),i.RolSesion))})}).catch(e=>{console.error("Error al obtener usuarios de la sesion:",e)})}cargarSesiones(){this.HTTPGet("sesiones").then(e=>e.json()).then(e=>{const n=He();console.log("Sesiones obtenidas:",e),n.sesiones=[],e.forEach(i=>{n.sesiones.push(new kE(i.Nombre,i.Usuarios,i.Estado,i.Latitud,i.Longitud))})}).catch(e=>{console.error("Error al obtener las sesiones del usuario:",e)})}async HTTPGet(e){return fetch(this.url+e,{method:"GET",headers:{Authorization:`Bearer ${this.token}`}})}CambioEstadoMedio(e){e==1?this.reproductor.iniciarReproduccion():e==2&&this.reproductor.detenerReproduccion()}async HTTPPost(e,n){return console.log("HTTPPost",e,this.token),fetch(this.url+e,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.token}`},body:JSON.stringify(n)})}login(e){console.log(`Intentando iniciar sesión con usuario: ${e.usuario}`);const n=He();return n.estadoLogin="init-login",this.cliente?(this.cliente.login(e),!0):(console.error("Cliente no conectado. No se puede iniciar sesión."),!1)}logout(){const e=He();return e.estadoLogin="",this.cliente?(this.cliente.Logout(),!0):(console.error("Cliente no conectado. "),!1)}CrearSesion(e){if(console.log(`Intentando crear sesion: ${e}`),!this.cliente){console.error("Cliente no conectado. No se puede iniciar sesión.");return}const n=He();n.rolSesion="default",this.cliente.CrearSesion(e)}UnirmeSesion(e){console.log(`Intentando unirse sesion: ${e}`);const n=He();if(n.rolSesion="default",!this.cliente){console.error("Cliente no conectado. No se puede iniciar sesión.");return}this.cliente.UnirmeSesion(e)}SalirSesion(){if(console.log("Intentando SalirSesion sesion"),!this.cliente){console.error("Cliente no conectado. No se puede iniciar sesión.");return}const e=He();e.rolSesion="default",e.estadoSesion="desconectado",this.reproductor.detenerReproduccion(),this.reproductor=this.reproductorDesconectado,this.cliente.SalirSesion()}MensajeASesion(e){if(console.log(`envieando mensaje sesion: ${e}`),!this.cliente){console.error("Cliente no conectado. No se puede Mandar mensajes.");return}this.cliente.MensajeASesion(e)}}const He=$I("app",()=>{const t=new $R,e=J(new wc(0,0,0,0)),n=J(new gw(-1,0,"-",0)),i=J(new Co("Cancion no cargada","sin banda",new Vr([],[]),new nu([]))),s=J(new Co("nueva cancion","sin banda",new Vr([new $s("",[""])],[]),new nu([[""]])));s.value.escala="C";const r=J(new Ui("","","")),o=J(new Ui("","","")),a=J(!1),c=J([]),l=J([]),u=J([]),d=J(1),h=J(-1),f=J(0),p=J([]),m=J(new kE("",0,"",0,0)),b=J("no-conectado"),E=J("default"),x=J(new iu("","","","","")),S=J("No iniciado"),v=J(""),T=L=>{S.value=L},w=J("No iniciado"),D=L=>{w.value=L},A=J("pausado"),y=L=>{A.value=L};return{usuariosSesion:J([]),aplicacion:t,origenCancion:r,origenEditando:o,cancionModificada:a,cancion:i,editandocancion:s,listaCanciones:l,compas:h,estado:S,estadoConexion:w,estadoSesion:b,estadoLogin:v,rolSesion:E,sesSincroCancion:e,EstadoSincro:n,perfil:x,estadoReproduccion:A,nroCancion:d,golpeDelCompas:f,noticias:p,sesion:m,mensajes:u,sesiones:c,actualizarEstado:T,actualizarEstadoConexion:D,actualizarEstadoReproduccion:y}});function Rw(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function Ef(t){if(Object.prototype.hasOwnProperty.call(t,"__esModule"))return t;var e=t.default;if(typeof e=="function"){var n=function i(){return this instanceof i?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach(function(i){var s=Object.getOwnPropertyDescriptor(t,i);Object.defineProperty(n,i,s.get?s:{enumerable:!0,get:function(){return t[i]}})}),n}var Ka={},dm,OS;function eL(){return OS||(OS=1,dm=function(){return typeof Promise=="function"&&Promise.prototype&&Promise.prototype.then}),dm}var hm={},Qr={},PS;function Na(){if(PS)return Qr;PS=1;let t;const e=[0,26,44,70,100,134,172,196,242,292,346,404,466,532,581,655,733,815,901,991,1085,1156,1258,1364,1474,1588,1706,1828,1921,2051,2185,2323,2465,2611,2761,2876,3034,3196,3362,3532,3706];return Qr.getSymbolSize=function(i){if(!i)throw new Error('"version" cannot be null or undefined');if(i<1||i>40)throw new Error('"version" should be in range from 1 to 40');return i*4+17},Qr.getSymbolTotalCodewords=function(i){return e[i]},Qr.getBCHDigit=function(n){let i=0;for(;n!==0;)i++,n>>>=1;return i},Qr.setToSJISFunction=function(i){if(typeof i!="function")throw new Error('"toSJISFunc" is not a valid function.');t=i},Qr.isKanjiModeEnabled=function(){return typeof t<"u"},Qr.toSJIS=function(i){return t(i)},Qr}var fm={},IS;function DE(){return IS||(IS=1,function(t){t.L={bit:1},t.M={bit:0},t.Q={bit:3},t.H={bit:2};function e(n){if(typeof n!="string")throw new Error("Param is not a string");switch(n.toLowerCase()){case"l":case"low":return t.L;case"m":case"medium":return t.M;case"q":case"quartile":return t.Q;case"h":case"high":return t.H;default:throw new Error("Unknown EC Level: "+n)}}t.isValid=function(i){return i&&typeof i.bit<"u"&&i.bit>=0&&i.bit<4},t.from=function(i,s){if(t.isValid(i))return i;try{return e(i)}catch{return s}}}(fm)),fm}var pm,RS;function tL(){if(RS)return pm;RS=1;function t(){this.buffer=[],this.length=0}return t.prototype={get:function(e){const n=Math.floor(e/8);return(this.buffer[n]>>>7-e%8&1)===1},put:function(e,n){for(let i=0;i<n;i++)this.putBit((e>>>n-i-1&1)===1)},getLengthInBits:function(){return this.length},putBit:function(e){const n=Math.floor(this.length/8);this.buffer.length<=n&&this.buffer.push(0),e&&(this.buffer[n]|=128>>>this.length%8),this.length++}},pm=t,pm}var mm,LS;function nL(){if(LS)return mm;LS=1;function t(e){if(!e||e<1)throw new Error("BitMatrix size must be defined and greater than 0");this.size=e,this.data=new Uint8Array(e*e),this.reservedBit=new Uint8Array(e*e)}return t.prototype.set=function(e,n,i,s){const r=e*this.size+n;this.data[r]=i,s&&(this.reservedBit[r]=!0)},t.prototype.get=function(e,n){return this.data[e*this.size+n]},t.prototype.xor=function(e,n,i){this.data[e*this.size+n]^=i},t.prototype.isReserved=function(e,n){return this.reservedBit[e*this.size+n]},mm=t,mm}var gm={},MS;function iL(){return MS||(MS=1,function(t){const e=Na().getSymbolSize;t.getRowColCoords=function(i){if(i===1)return[];const s=Math.floor(i/7)+2,r=e(i),o=r===145?26:Math.ceil((r-13)/(2*s-2))*2,a=[r-7];for(let c=1;c<s-1;c++)a[c]=a[c-1]-o;return a.push(6),a.reverse()},t.getPositions=function(i){const s=[],r=t.getRowColCoords(i),o=r.length;for(let a=0;a<o;a++)for(let c=0;c<o;c++)a===0&&c===0||a===0&&c===o-1||a===o-1&&c===0||s.push([r[a],r[c]]);return s}}(gm)),gm}var Em={},BS;function sL(){if(BS)return Em;BS=1;const t=Na().getSymbolSize,e=7;return Em.getPositions=function(i){const s=t(i);return[[0,0],[s-e,0],[0,s-e]]},Em}var vm={},FS;function rL(){return FS||(FS=1,function(t){t.Patterns={PATTERN000:0,PATTERN001:1,PATTERN010:2,PATTERN011:3,PATTERN100:4,PATTERN101:5,PATTERN110:6,PATTERN111:7};const e={N1:3,N2:3,N3:40,N4:10};t.isValid=function(s){return s!=null&&s!==""&&!isNaN(s)&&s>=0&&s<=7},t.from=function(s){return t.isValid(s)?parseInt(s,10):void 0},t.getPenaltyN1=function(s){const r=s.size;let o=0,a=0,c=0,l=null,u=null;for(let d=0;d<r;d++){a=c=0,l=u=null;for(let h=0;h<r;h++){let f=s.get(d,h);f===l?a++:(a>=5&&(o+=e.N1+(a-5)),l=f,a=1),f=s.get(h,d),f===u?c++:(c>=5&&(o+=e.N1+(c-5)),u=f,c=1)}a>=5&&(o+=e.N1+(a-5)),c>=5&&(o+=e.N1+(c-5))}return o},t.getPenaltyN2=function(s){const r=s.size;let o=0;for(let a=0;a<r-1;a++)for(let c=0;c<r-1;c++){const l=s.get(a,c)+s.get(a,c+1)+s.get(a+1,c)+s.get(a+1,c+1);(l===4||l===0)&&o++}return o*e.N2},t.getPenaltyN3=function(s){const r=s.size;let o=0,a=0,c=0;for(let l=0;l<r;l++){a=c=0;for(let u=0;u<r;u++)a=a<<1&2047|s.get(l,u),u>=10&&(a===1488||a===93)&&o++,c=c<<1&2047|s.get(u,l),u>=10&&(c===1488||c===93)&&o++}return o*e.N3},t.getPenaltyN4=function(s){let r=0;const o=s.data.length;for(let c=0;c<o;c++)r+=s.data[c];return Math.abs(Math.ceil(r*100/o/5)-10)*e.N4};function n(i,s,r){switch(i){case t.Patterns.PATTERN000:return(s+r)%2===0;case t.Patterns.PATTERN001:return s%2===0;case t.Patterns.PATTERN010:return r%3===0;case t.Patterns.PATTERN011:return(s+r)%3===0;case t.Patterns.PATTERN100:return(Math.floor(s/2)+Math.floor(r/3))%2===0;case t.Patterns.PATTERN101:return s*r%2+s*r%3===0;case t.Patterns.PATTERN110:return(s*r%2+s*r%3)%2===0;case t.Patterns.PATTERN111:return(s*r%3+(s+r)%2)%2===0;default:throw new Error("bad maskPattern:"+i)}}t.applyMask=function(s,r){const o=r.size;for(let a=0;a<o;a++)for(let c=0;c<o;c++)r.isReserved(c,a)||r.xor(c,a,n(s,c,a))},t.getBestMask=function(s,r){const o=Object.keys(t.Patterns).length;let a=0,c=1/0;for(let l=0;l<o;l++){r(l),t.applyMask(l,s);const u=t.getPenaltyN1(s)+t.getPenaltyN2(s)+t.getPenaltyN3(s)+t.getPenaltyN4(s);t.applyMask(l,s),u<c&&(c=u,a=l)}return a}}(vm)),vm}var Ad={},US;function Lw(){if(US)return Ad;US=1;const t=DE(),e=[1,1,1,1,1,1,1,1,1,1,2,2,1,2,2,4,1,2,4,4,2,4,4,4,2,4,6,5,2,4,6,6,2,5,8,8,4,5,8,8,4,5,8,11,4,8,10,11,4,9,12,16,4,9,16,16,6,10,12,18,6,10,17,16,6,11,16,19,6,13,18,21,7,14,21,25,8,16,20,25,8,17,23,25,9,17,23,34,9,18,25,30,10,20,27,32,12,21,29,35,12,23,34,37,12,25,34,40,13,26,35,42,14,28,38,45,15,29,40,48,16,31,43,51,17,33,45,54,18,35,48,57,19,37,51,60,19,38,53,63,20,40,56,66,21,43,59,70,22,45,62,74,24,47,65,77,25,49,68,81],n=[7,10,13,17,10,16,22,28,15,26,36,44,20,36,52,64,26,48,72,88,36,64,96,112,40,72,108,130,48,88,132,156,60,110,160,192,72,130,192,224,80,150,224,264,96,176,260,308,104,198,288,352,120,216,320,384,132,240,360,432,144,280,408,480,168,308,448,532,180,338,504,588,196,364,546,650,224,416,600,700,224,442,644,750,252,476,690,816,270,504,750,900,300,560,810,960,312,588,870,1050,336,644,952,1110,360,700,1020,1200,390,728,1050,1260,420,784,1140,1350,450,812,1200,1440,480,868,1290,1530,510,924,1350,1620,540,980,1440,1710,570,1036,1530,1800,570,1064,1590,1890,600,1120,1680,1980,630,1204,1770,2100,660,1260,1860,2220,720,1316,1950,2310,750,1372,2040,2430];return Ad.getBlocksCount=function(s,r){switch(r){case t.L:return e[(s-1)*4+0];case t.M:return e[(s-1)*4+1];case t.Q:return e[(s-1)*4+2];case t.H:return e[(s-1)*4+3];default:return}},Ad.getTotalCodewordsCount=function(s,r){switch(r){case t.L:return n[(s-1)*4+0];case t.M:return n[(s-1)*4+1];case t.Q:return n[(s-1)*4+2];case t.H:return n[(s-1)*4+3];default:return}},Ad}var bm={},bl={},VS;function oL(){if(VS)return bl;VS=1;const t=new Uint8Array(512),e=new Uint8Array(256);return function(){let i=1;for(let s=0;s<255;s++)t[s]=i,e[i]=s,i<<=1,i&256&&(i^=285);for(let s=255;s<512;s++)t[s]=t[s-255]}(),bl.log=function(i){if(i<1)throw new Error("log("+i+")");return e[i]},bl.exp=function(i){return t[i]},bl.mul=function(i,s){return i===0||s===0?0:t[e[i]+e[s]]},bl}var WS;function aL(){return WS||(WS=1,function(t){const e=oL();t.mul=function(i,s){const r=new Uint8Array(i.length+s.length-1);for(let o=0;o<i.length;o++)for(let a=0;a<s.length;a++)r[o+a]^=e.mul(i[o],s[a]);return r},t.mod=function(i,s){let r=new Uint8Array(i);for(;r.length-s.length>=0;){const o=r[0];for(let c=0;c<s.length;c++)r[c]^=e.mul(s[c],o);let a=0;for(;a<r.length&&r[a]===0;)a++;r=r.slice(a)}return r},t.generateECPolynomial=function(i){let s=new Uint8Array([1]);for(let r=0;r<i;r++)s=t.mul(s,new Uint8Array([1,e.exp(r)]));return s}}(bm)),bm}var Sm,HS;function cL(){if(HS)return Sm;HS=1;const t=aL();function e(n){this.genPoly=void 0,this.degree=n,this.degree&&this.initialize(this.degree)}return e.prototype.initialize=function(i){this.degree=i,this.genPoly=t.generateECPolynomial(this.degree)},e.prototype.encode=function(i){if(!this.genPoly)throw new Error("Encoder not initialized");const s=new Uint8Array(i.length+this.degree);s.set(i);const r=t.mod(s,this.genPoly),o=this.degree-r.length;if(o>0){const a=new Uint8Array(this.degree);return a.set(r,o),a}return r},Sm=e,Sm}var xm={},Tm={},Cm={},XS;function Mw(){return XS||(XS=1,Cm.isValid=function(e){return!isNaN(e)&&e>=1&&e<=40}),Cm}var Xs={},jS;function Bw(){if(jS)return Xs;jS=1;const t="[0-9]+",e="[A-Z $%*+\\-./:]+";let n="(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+";n=n.replace(/u/g,"\\u");const i="(?:(?![A-Z0-9 $%*+\\-./:]|"+n+`)(?:.|[\r
]))+`;Xs.KANJI=new RegExp(n,"g"),Xs.BYTE_KANJI=new RegExp("[^A-Z0-9 $%*+\\-./:]+","g"),Xs.BYTE=new RegExp(i,"g"),Xs.NUMERIC=new RegExp(t,"g"),Xs.ALPHANUMERIC=new RegExp(e,"g");const s=new RegExp("^"+n+"$"),r=new RegExp("^"+t+"$"),o=new RegExp("^[A-Z0-9 $%*+\\-./:]+$");return Xs.testKanji=function(c){return s.test(c)},Xs.testNumeric=function(c){return r.test(c)},Xs.testAlphanumeric=function(c){return o.test(c)},Xs}var qS;function ya(){return qS||(qS=1,function(t){const e=Mw(),n=Bw();t.NUMERIC={id:"Numeric",bit:1,ccBits:[10,12,14]},t.ALPHANUMERIC={id:"Alphanumeric",bit:2,ccBits:[9,11,13]},t.BYTE={id:"Byte",bit:4,ccBits:[8,16,16]},t.KANJI={id:"Kanji",bit:8,ccBits:[8,10,12]},t.MIXED={bit:-1},t.getCharCountIndicator=function(r,o){if(!r.ccBits)throw new Error("Invalid mode: "+r);if(!e.isValid(o))throw new Error("Invalid version: "+o);return o>=1&&o<10?r.ccBits[0]:o<27?r.ccBits[1]:r.ccBits[2]},t.getBestModeForData=function(r){return n.testNumeric(r)?t.NUMERIC:n.testAlphanumeric(r)?t.ALPHANUMERIC:n.testKanji(r)?t.KANJI:t.BYTE},t.toString=function(r){if(r&&r.id)return r.id;throw new Error("Invalid mode")},t.isValid=function(r){return r&&r.bit&&r.ccBits};function i(s){if(typeof s!="string")throw new Error("Param is not a string");switch(s.toLowerCase()){case"numeric":return t.NUMERIC;case"alphanumeric":return t.ALPHANUMERIC;case"kanji":return t.KANJI;case"byte":return t.BYTE;default:throw new Error("Unknown mode: "+s)}}t.from=function(r,o){if(t.isValid(r))return r;try{return i(r)}catch{return o}}}(Tm)),Tm}var zS;function lL(){return zS||(zS=1,function(t){const e=Na(),n=Lw(),i=DE(),s=ya(),r=Mw(),o=7973,a=e.getBCHDigit(o);function c(h,f,p){for(let m=1;m<=40;m++)if(f<=t.getCapacity(m,p,h))return m}function l(h,f){return s.getCharCountIndicator(h,f)+4}function u(h,f){let p=0;return h.forEach(function(m){const b=l(m.mode,f);p+=b+m.getBitsLength()}),p}function d(h,f){for(let p=1;p<=40;p++)if(u(h,p)<=t.getCapacity(p,f,s.MIXED))return p}t.from=function(f,p){return r.isValid(f)?parseInt(f,10):p},t.getCapacity=function(f,p,m){if(!r.isValid(f))throw new Error("Invalid QR Code version");typeof m>"u"&&(m=s.BYTE);const b=e.getSymbolTotalCodewords(f),E=n.getTotalCodewordsCount(f,p),x=(b-E)*8;if(m===s.MIXED)return x;const S=x-l(m,f);switch(m){case s.NUMERIC:return Math.floor(S/10*3);case s.ALPHANUMERIC:return Math.floor(S/11*2);case s.KANJI:return Math.floor(S/13);case s.BYTE:default:return Math.floor(S/8)}},t.getBestVersionForData=function(f,p){let m;const b=i.from(p,i.M);if(Array.isArray(f)){if(f.length>1)return d(f,b);if(f.length===0)return 1;m=f[0]}else m=f;return c(m.mode,m.getLength(),b)},t.getEncodedBits=function(f){if(!r.isValid(f)||f<7)throw new Error("Invalid QR Code version");let p=f<<12;for(;e.getBCHDigit(p)-a>=0;)p^=o<<e.getBCHDigit(p)-a;return f<<12|p}}(xm)),xm}var wm={},YS;function uL(){if(YS)return wm;YS=1;const t=Na(),e=1335,n=21522,i=t.getBCHDigit(e);return wm.getEncodedBits=function(r,o){const a=r.bit<<3|o;let c=a<<10;for(;t.getBCHDigit(c)-i>=0;)c^=e<<t.getBCHDigit(c)-i;return(a<<10|c)^n},wm}var Am={},Nm,JS;function dL(){if(JS)return Nm;JS=1;const t=ya();function e(n){this.mode=t.NUMERIC,this.data=n.toString()}return e.getBitsLength=function(i){return 10*Math.floor(i/3)+(i%3?i%3*3+1:0)},e.prototype.getLength=function(){return this.data.length},e.prototype.getBitsLength=function(){return e.getBitsLength(this.data.length)},e.prototype.write=function(i){let s,r,o;for(s=0;s+3<=this.data.length;s+=3)r=this.data.substr(s,3),o=parseInt(r,10),i.put(o,10);const a=this.data.length-s;a>0&&(r=this.data.substr(s),o=parseInt(r,10),i.put(o,a*3+1))},Nm=e,Nm}var ym,ZS;function hL(){if(ZS)return ym;ZS=1;const t=ya(),e=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"," ","$","%","*","+","-",".","/",":"];function n(i){this.mode=t.ALPHANUMERIC,this.data=i}return n.getBitsLength=function(s){return 11*Math.floor(s/2)+6*(s%2)},n.prototype.getLength=function(){return this.data.length},n.prototype.getBitsLength=function(){return n.getBitsLength(this.data.length)},n.prototype.write=function(s){let r;for(r=0;r+2<=this.data.length;r+=2){let o=e.indexOf(this.data[r])*45;o+=e.indexOf(this.data[r+1]),s.put(o,11)}this.data.length%2&&s.put(e.indexOf(this.data[r]),6)},ym=n,ym}var km,KS;function fL(){if(KS)return km;KS=1;const t=ya();function e(n){this.mode=t.BYTE,typeof n=="string"?this.data=new TextEncoder().encode(n):this.data=new Uint8Array(n)}return e.getBitsLength=function(i){return i*8},e.prototype.getLength=function(){return this.data.length},e.prototype.getBitsLength=function(){return e.getBitsLength(this.data.length)},e.prototype.write=function(n){for(let i=0,s=this.data.length;i<s;i++)n.put(this.data[i],8)},km=e,km}var Dm,QS;function pL(){if(QS)return Dm;QS=1;const t=ya(),e=Na();function n(i){this.mode=t.KANJI,this.data=i}return n.getBitsLength=function(s){return s*13},n.prototype.getLength=function(){return this.data.length},n.prototype.getBitsLength=function(){return n.getBitsLength(this.data.length)},n.prototype.write=function(i){let s;for(s=0;s<this.data.length;s++){let r=e.toSJIS(this.data[s]);if(r>=33088&&r<=40956)r-=33088;else if(r>=57408&&r<=60351)r-=49472;else throw new Error("Invalid SJIS character: "+this.data[s]+`
Make sure your charset is UTF-8`);r=(r>>>8&255)*192+(r&255),i.put(r,13)}},Dm=n,Dm}var Om={exports:{}},GS;function mL(){return GS||(GS=1,function(t){var e={single_source_shortest_paths:function(n,i,s){var r={},o={};o[i]=0;var a=e.PriorityQueue.make();a.push(i,0);for(var c,l,u,d,h,f,p,m,b;!a.empty();){c=a.pop(),l=c.value,d=c.cost,h=n[l]||{};for(u in h)h.hasOwnProperty(u)&&(f=h[u],p=d+f,m=o[u],b=typeof o[u]>"u",(b||m>p)&&(o[u]=p,a.push(u,p),r[u]=l))}if(typeof s<"u"&&typeof o[s]>"u"){var E=["Could not find a path from ",i," to ",s,"."].join("");throw new Error(E)}return r},extract_shortest_path_from_predecessor_list:function(n,i){for(var s=[],r=i;r;)s.push(r),n[r],r=n[r];return s.reverse(),s},find_path:function(n,i,s){var r=e.single_source_shortest_paths(n,i,s);return e.extract_shortest_path_from_predecessor_list(r,s)},PriorityQueue:{make:function(n){var i=e.PriorityQueue,s={},r;n=n||{};for(r in i)i.hasOwnProperty(r)&&(s[r]=i[r]);return s.queue=[],s.sorter=n.sorter||i.default_sorter,s},default_sorter:function(n,i){return n.cost-i.cost},push:function(n,i){var s={value:n,cost:i};this.queue.push(s),this.queue.sort(this.sorter)},pop:function(){return this.queue.shift()},empty:function(){return this.queue.length===0}}};t.exports=e}(Om)),Om.exports}var _S;function gL(){return _S||(_S=1,function(t){const e=ya(),n=dL(),i=hL(),s=fL(),r=pL(),o=Bw(),a=Na(),c=mL();function l(E){return unescape(encodeURIComponent(E)).length}function u(E,x,S){const v=[];let T;for(;(T=E.exec(S))!==null;)v.push({data:T[0],index:T.index,mode:x,length:T[0].length});return v}function d(E){const x=u(o.NUMERIC,e.NUMERIC,E),S=u(o.ALPHANUMERIC,e.ALPHANUMERIC,E);let v,T;return a.isKanjiModeEnabled()?(v=u(o.BYTE,e.BYTE,E),T=u(o.KANJI,e.KANJI,E)):(v=u(o.BYTE_KANJI,e.BYTE,E),T=[]),x.concat(S,v,T).sort(function(D,A){return D.index-A.index}).map(function(D){return{data:D.data,mode:D.mode,length:D.length}})}function h(E,x){switch(x){case e.NUMERIC:return n.getBitsLength(E);case e.ALPHANUMERIC:return i.getBitsLength(E);case e.KANJI:return r.getBitsLength(E);case e.BYTE:return s.getBitsLength(E)}}function f(E){return E.reduce(function(x,S){const v=x.length-1>=0?x[x.length-1]:null;return v&&v.mode===S.mode?(x[x.length-1].data+=S.data,x):(x.push(S),x)},[])}function p(E){const x=[];for(let S=0;S<E.length;S++){const v=E[S];switch(v.mode){case e.NUMERIC:x.push([v,{data:v.data,mode:e.ALPHANUMERIC,length:v.length},{data:v.data,mode:e.BYTE,length:v.length}]);break;case e.ALPHANUMERIC:x.push([v,{data:v.data,mode:e.BYTE,length:v.length}]);break;case e.KANJI:x.push([v,{data:v.data,mode:e.BYTE,length:l(v.data)}]);break;case e.BYTE:x.push([{data:v.data,mode:e.BYTE,length:l(v.data)}])}}return x}function m(E,x){const S={},v={start:{}};let T=["start"];for(let w=0;w<E.length;w++){const D=E[w],A=[];for(let y=0;y<D.length;y++){const O=D[y],L=""+w+y;A.push(L),S[L]={node:O,lastCount:0},v[L]={};for(let P=0;P<T.length;P++){const U=T[P];S[U]&&S[U].node.mode===O.mode?(v[U][L]=h(S[U].lastCount+O.length,O.mode)-h(S[U].lastCount,O.mode),S[U].lastCount+=O.length):(S[U]&&(S[U].lastCount=O.length),v[U][L]=h(O.length,O.mode)+4+e.getCharCountIndicator(O.mode,x))}}T=A}for(let w=0;w<T.length;w++)v[T[w]].end=0;return{map:v,table:S}}function b(E,x){let S;const v=e.getBestModeForData(E);if(S=e.from(x,v),S!==e.BYTE&&S.bit<v.bit)throw new Error('"'+E+'" cannot be encoded with mode '+e.toString(S)+`.
 Suggested mode is: `+e.toString(v));switch(S===e.KANJI&&!a.isKanjiModeEnabled()&&(S=e.BYTE),S){case e.NUMERIC:return new n(E);case e.ALPHANUMERIC:return new i(E);case e.KANJI:return new r(E);case e.BYTE:return new s(E)}}t.fromArray=function(x){return x.reduce(function(S,v){return typeof v=="string"?S.push(b(v,null)):v.data&&S.push(b(v.data,v.mode)),S},[])},t.fromString=function(x,S){const v=d(x,a.isKanjiModeEnabled()),T=p(v),w=m(T,S),D=c.find_path(w.map,"start","end"),A=[];for(let y=1;y<D.length-1;y++)A.push(w.table[D[y]].node);return t.fromArray(f(A))},t.rawSplit=function(x){return t.fromArray(d(x,a.isKanjiModeEnabled()))}}(Am)),Am}var $S;function EL(){if($S)return hm;$S=1;const t=Na(),e=DE(),n=tL(),i=nL(),s=iL(),r=sL(),o=rL(),a=Lw(),c=cL(),l=lL(),u=uL(),d=ya(),h=gL();function f(w,D){const A=w.size,y=r.getPositions(D);for(let O=0;O<y.length;O++){const L=y[O][0],P=y[O][1];for(let U=-1;U<=7;U++)if(!(L+U<=-1||A<=L+U))for(let X=-1;X<=7;X++)P+X<=-1||A<=P+X||(U>=0&&U<=6&&(X===0||X===6)||X>=0&&X<=6&&(U===0||U===6)||U>=2&&U<=4&&X>=2&&X<=4?w.set(L+U,P+X,!0,!0):w.set(L+U,P+X,!1,!0))}}function p(w){const D=w.size;for(let A=8;A<D-8;A++){const y=A%2===0;w.set(A,6,y,!0),w.set(6,A,y,!0)}}function m(w,D){const A=s.getPositions(D);for(let y=0;y<A.length;y++){const O=A[y][0],L=A[y][1];for(let P=-2;P<=2;P++)for(let U=-2;U<=2;U++)P===-2||P===2||U===-2||U===2||P===0&&U===0?w.set(O+P,L+U,!0,!0):w.set(O+P,L+U,!1,!0)}}function b(w,D){const A=w.size,y=l.getEncodedBits(D);let O,L,P;for(let U=0;U<18;U++)O=Math.floor(U/3),L=U%3+A-8-3,P=(y>>U&1)===1,w.set(O,L,P,!0),w.set(L,O,P,!0)}function E(w,D,A){const y=w.size,O=u.getEncodedBits(D,A);let L,P;for(L=0;L<15;L++)P=(O>>L&1)===1,L<6?w.set(L,8,P,!0):L<8?w.set(L+1,8,P,!0):w.set(y-15+L,8,P,!0),L<8?w.set(8,y-L-1,P,!0):L<9?w.set(8,15-L-1+1,P,!0):w.set(8,15-L-1,P,!0);w.set(y-8,8,1,!0)}function x(w,D){const A=w.size;let y=-1,O=A-1,L=7,P=0;for(let U=A-1;U>0;U-=2)for(U===6&&U--;;){for(let X=0;X<2;X++)if(!w.isReserved(O,U-X)){let K=!1;P<D.length&&(K=(D[P]>>>L&1)===1),w.set(O,U-X,K),L--,L===-1&&(P++,L=7)}if(O+=y,O<0||A<=O){O-=y,y=-y;break}}}function S(w,D,A){const y=new n;A.forEach(function(X){y.put(X.mode.bit,4),y.put(X.getLength(),d.getCharCountIndicator(X.mode,w)),X.write(y)});const O=t.getSymbolTotalCodewords(w),L=a.getTotalCodewordsCount(w,D),P=(O-L)*8;for(y.getLengthInBits()+4<=P&&y.put(0,4);y.getLengthInBits()%8!==0;)y.putBit(0);const U=(P-y.getLengthInBits())/8;for(let X=0;X<U;X++)y.put(X%2?17:236,8);return v(y,w,D)}function v(w,D,A){const y=t.getSymbolTotalCodewords(D),O=a.getTotalCodewordsCount(D,A),L=y-O,P=a.getBlocksCount(D,A),U=y%P,X=P-U,K=Math.floor(y/P),Y=Math.floor(L/P),_=Y+1,q=K-Y,ee=new c(q);let j=0;const he=new Array(P),le=new Array(P);let Le=0;const Ae=new Uint8Array(w.buffer);for(let me=0;me<P;me++){const xe=me<X?Y:_;he[me]=Ae.slice(j,j+xe),le[me]=ee.encode(he[me]),j+=xe,Le=Math.max(Le,xe)}const De=new Uint8Array(y);let Me=0,te,z;for(te=0;te<Le;te++)for(z=0;z<P;z++)te<he[z].length&&(De[Me++]=he[z][te]);for(te=0;te<q;te++)for(z=0;z<P;z++)De[Me++]=le[z][te];return De}function T(w,D,A,y){let O;if(Array.isArray(w))O=h.fromArray(w);else if(typeof w=="string"){let K=D;if(!K){const Y=h.rawSplit(w);K=l.getBestVersionForData(Y,A)}O=h.fromString(w,K||40)}else throw new Error("Invalid data");const L=l.getBestVersionForData(O,A);if(!L)throw new Error("The amount of data is too big to be stored in a QR Code");if(!D)D=L;else if(D<L)throw new Error(`
The chosen QR Code version cannot contain this amount of data.
Minimum version required to store current data is: `+L+`.
`);const P=S(D,A,O),U=t.getSymbolSize(D),X=new i(U);return f(X,D),p(X),m(X,D),E(X,A,0),D>=7&&b(X,D),x(X,P),isNaN(y)&&(y=o.getBestMask(X,E.bind(null,X,A))),o.applyMask(y,X),E(X,A,y),{modules:X,version:D,errorCorrectionLevel:A,maskPattern:y,segments:O}}return hm.create=function(D,A){if(typeof D>"u"||D==="")throw new Error("No input text");let y=e.M,O,L;return typeof A<"u"&&(y=e.from(A.errorCorrectionLevel,e.M),O=l.from(A.version),L=o.from(A.maskPattern),A.toSJISFunc&&t.setToSJISFunction(A.toSJISFunc)),T(D,O,y,L)},hm}var Pm={},Im={},e1;function Fw(){return e1||(e1=1,function(t){function e(n){if(typeof n=="number"&&(n=n.toString()),typeof n!="string")throw new Error("Color should be defined as hex string");let i=n.slice().replace("#","").split("");if(i.length<3||i.length===5||i.length>8)throw new Error("Invalid hex color: "+n);(i.length===3||i.length===4)&&(i=Array.prototype.concat.apply([],i.map(function(r){return[r,r]}))),i.length===6&&i.push("F","F");const s=parseInt(i.join(""),16);return{r:s>>24&255,g:s>>16&255,b:s>>8&255,a:s&255,hex:"#"+i.slice(0,6).join("")}}t.getOptions=function(i){i||(i={}),i.color||(i.color={});const s=typeof i.margin>"u"||i.margin===null||i.margin<0?4:i.margin,r=i.width&&i.width>=21?i.width:void 0,o=i.scale||4;return{width:r,scale:r?4:o,margin:s,color:{dark:e(i.color.dark||"#000000ff"),light:e(i.color.light||"#ffffffff")},type:i.type,rendererOpts:i.rendererOpts||{}}},t.getScale=function(i,s){return s.width&&s.width>=i+s.margin*2?s.width/(i+s.margin*2):s.scale},t.getImageWidth=function(i,s){const r=t.getScale(i,s);return Math.floor((i+s.margin*2)*r)},t.qrToImageData=function(i,s,r){const o=s.modules.size,a=s.modules.data,c=t.getScale(o,r),l=Math.floor((o+r.margin*2)*c),u=r.margin*c,d=[r.color.light,r.color.dark];for(let h=0;h<l;h++)for(let f=0;f<l;f++){let p=(h*l+f)*4,m=r.color.light;if(h>=u&&f>=u&&h<l-u&&f<l-u){const b=Math.floor((h-u)/c),E=Math.floor((f-u)/c);m=d[a[b*o+E]?1:0]}i[p++]=m.r,i[p++]=m.g,i[p++]=m.b,i[p]=m.a}}}(Im)),Im}var t1;function vL(){return t1||(t1=1,function(t){const e=Fw();function n(s,r,o){s.clearRect(0,0,r.width,r.height),r.style||(r.style={}),r.height=o,r.width=o,r.style.height=o+"px",r.style.width=o+"px"}function i(){try{return document.createElement("canvas")}catch{throw new Error("You need to specify a canvas element")}}t.render=function(r,o,a){let c=a,l=o;typeof c>"u"&&(!o||!o.getContext)&&(c=o,o=void 0),o||(l=i()),c=e.getOptions(c);const u=e.getImageWidth(r.modules.size,c),d=l.getContext("2d"),h=d.createImageData(u,u);return e.qrToImageData(h.data,r,c),n(d,l,u),d.putImageData(h,0,0),l},t.renderToDataURL=function(r,o,a){let c=a;typeof c>"u"&&(!o||!o.getContext)&&(c=o,o=void 0),c||(c={});const l=t.render(r,o,c),u=c.type||"image/png",d=c.rendererOpts||{};return l.toDataURL(u,d.quality)}}(Pm)),Pm}var Rm={},n1;function bL(){if(n1)return Rm;n1=1;const t=Fw();function e(s,r){const o=s.a/255,a=r+'="'+s.hex+'"';return o<1?a+" "+r+'-opacity="'+o.toFixed(2).slice(1)+'"':a}function n(s,r,o){let a=s+r;return typeof o<"u"&&(a+=" "+o),a}function i(s,r,o){let a="",c=0,l=!1,u=0;for(let d=0;d<s.length;d++){const h=Math.floor(d%r),f=Math.floor(d/r);!h&&!l&&(l=!0),s[d]?(u++,d>0&&h>0&&s[d-1]||(a+=l?n("M",h+o,.5+f+o):n("m",c,0),c=0,l=!1),h+1<r&&s[d+1]||(a+=n("h",u),u=0)):c++}return a}return Rm.render=function(r,o,a){const c=t.getOptions(o),l=r.modules.size,u=r.modules.data,d=l+c.margin*2,h=c.color.light.a?"<path "+e(c.color.light,"fill")+' d="M0 0h'+d+"v"+d+'H0z"/>':"",f="<path "+e(c.color.dark,"stroke")+' d="'+i(u,l,c.margin)+'"/>',p='viewBox="0 0 '+d+" "+d+'"',b='<svg xmlns="http://www.w3.org/2000/svg" '+(c.width?'width="'+c.width+'" height="'+c.width+'" ':"")+p+' shape-rendering="crispEdges">'+h+f+`</svg>
`;return typeof a=="function"&&a(null,b),b},Rm}var i1;function SL(){if(i1)return Ka;i1=1;const t=eL(),e=EL(),n=vL(),i=bL();function s(r,o,a,c,l){const u=[].slice.call(arguments,1),d=u.length,h=typeof u[d-1]=="function";if(!h&&!t())throw new Error("Callback required as last argument");if(h){if(d<2)throw new Error("Too few arguments provided");d===2?(l=a,a=o,o=c=void 0):d===3&&(o.getContext&&typeof l>"u"?(l=c,c=void 0):(l=c,c=a,a=o,o=void 0))}else{if(d<1)throw new Error("Too few arguments provided");return d===1?(a=o,o=c=void 0):d===2&&!o.getContext&&(c=a,a=o,o=void 0),new Promise(function(f,p){try{const m=e.create(a,c);f(r(m,o,c))}catch(m){p(m)}})}try{const f=e.create(a,c);l(null,r(f,o,c))}catch(f){l(f)}}return Ka.create=e.create,Ka.toCanvas=s.bind(null,n.render),Ka.toDataURL=s.bind(null,n.renderToDataURL),Ka.toString=s.bind(null,function(r,o,a){return i.render(r,a)}),Ka}var xL=SL();const TL=Rw(xL),CL=Ue({__name:"qr",props:{url:{}},setup(t){const e=J(null),n=t;gt(()=>n.url,()=>{i()}),bn(()=>{i()});function i(){e.value&&TL.toCanvas(e.value,n.url,{width:300,color:{dark:"#a9a8f6",light:"#000"}},s=>{s&&console.error("Error al generar QR:",s)})}return(s,r)=>(R(),B("div",null,[N("canvas",{style:{width:"100%",height:"100%"},ref_key:"canvasRef",ref:e},null,512)]))}}),wL="/img/troncossesion.png",AL="/img/troncosconectado.png",NL="/img/troncoslogueado.png",yL="/img/troncooffline.png",kL="/img/llamaritomopausa.png",DL="/img/llamaritomo1.png",OL="/img/llamaritomo2.png",PL="/img/llamaritomo3.png",IL="/img/llamaritomo4.png";/*!
  * vue-router v4.5.1
  * (c) 2025 Eduardo San Martin Morote
  * @license MIT
  */const nc=typeof document<"u";function Uw(t){return typeof t=="object"||"displayName"in t||"props"in t||"__vccOpts"in t}function RL(t){return t.__esModule||t[Symbol.toStringTag]==="Module"||t.default&&Uw(t.default)}const Mt=Object.assign;function Lm(t,e){const n={};for(const i in e){const s=e[i];n[i]=Ps(s)?s.map(t):t(s)}return n}const Xl=()=>{},Ps=Array.isArray,Vw=/#/g,LL=/&/g,ML=/\//g,BL=/=/g,FL=/\?/g,Ww=/\+/g,UL=/%5B/g,VL=/%5D/g,Hw=/%5E/g,WL=/%60/g,Xw=/%7B/g,HL=/%7C/g,jw=/%7D/g,XL=/%20/g;function OE(t){return encodeURI(""+t).replace(HL,"|").replace(UL,"[").replace(VL,"]")}function jL(t){return OE(t).replace(Xw,"{").replace(jw,"}").replace(Hw,"^")}function wg(t){return OE(t).replace(Ww,"%2B").replace(XL,"+").replace(Vw,"%23").replace(LL,"%26").replace(WL,"`").replace(Xw,"{").replace(jw,"}").replace(Hw,"^")}function qL(t){return wg(t).replace(BL,"%3D")}function zL(t){return OE(t).replace(Vw,"%23").replace(FL,"%3F")}function YL(t){return t==null?"":zL(t).replace(ML,"%2F")}function su(t){try{return decodeURIComponent(""+t)}catch{}return""+t}const JL=/\/$/,ZL=t=>t.replace(JL,"");function Mm(t,e,n="/"){let i,s={},r="",o="";const a=e.indexOf("#");let c=e.indexOf("?");return a<c&&a>=0&&(c=-1),c>-1&&(i=e.slice(0,c),r=e.slice(c+1,a>-1?a:e.length),s=t(r)),a>-1&&(i=i||e.slice(0,a),o=e.slice(a,e.length)),i=_L(i??e,n),{fullPath:i+(r&&"?")+r+o,path:i,query:s,hash:su(o)}}function KL(t,e){const n=e.query?t(e.query):"";return e.path+(n&&"?")+n+(e.hash||"")}function s1(t,e){return!e||!t.toLowerCase().startsWith(e.toLowerCase())?t:t.slice(e.length)||"/"}function QL(t,e,n){const i=e.matched.length-1,s=n.matched.length-1;return i>-1&&i===s&&yc(e.matched[i],n.matched[s])&&qw(e.params,n.params)&&t(e.query)===t(n.query)&&e.hash===n.hash}function yc(t,e){return(t.aliasOf||t)===(e.aliasOf||e)}function qw(t,e){if(Object.keys(t).length!==Object.keys(e).length)return!1;for(const n in t)if(!GL(t[n],e[n]))return!1;return!0}function GL(t,e){return Ps(t)?r1(t,e):Ps(e)?r1(e,t):t===e}function r1(t,e){return Ps(e)?t.length===e.length&&t.every((n,i)=>n===e[i]):t.length===1&&t[0]===e}function _L(t,e){if(t.startsWith("/"))return t;if(!t)return e;const n=e.split("/"),i=t.split("/"),s=i[i.length-1];(s===".."||s===".")&&i.push("");let r=n.length-1,o,a;for(o=0;o<i.length;o++)if(a=i[o],a!==".")if(a==="..")r>1&&r--;else break;return n.slice(0,r).join("/")+"/"+i.slice(o).join("/")}const Gr={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0};var ru;(function(t){t.pop="pop",t.push="push"})(ru||(ru={}));var jl;(function(t){t.back="back",t.forward="forward",t.unknown=""})(jl||(jl={}));function $L(t){if(!t)if(nc){const e=document.querySelector("base");t=e&&e.getAttribute("href")||"/",t=t.replace(/^\w+:\/\/[^\/]+/,"")}else t="/";return t[0]!=="/"&&t[0]!=="#"&&(t="/"+t),ZL(t)}const e3=/^[^#]+#/;function t3(t,e){return t.replace(e3,"#")+e}function n3(t,e){const n=document.documentElement.getBoundingClientRect(),i=t.getBoundingClientRect();return{behavior:e.behavior,left:i.left-n.left-(e.left||0),top:i.top-n.top-(e.top||0)}}const vf=()=>({left:window.scrollX,top:window.scrollY});function i3(t){let e;if("el"in t){const n=t.el,i=typeof n=="string"&&n.startsWith("#"),s=typeof n=="string"?i?document.getElementById(n.slice(1)):document.querySelector(n):n;if(!s)return;e=n3(s,t)}else e=t;"scrollBehavior"in document.documentElement.style?window.scrollTo(e):window.scrollTo(e.left!=null?e.left:window.scrollX,e.top!=null?e.top:window.scrollY)}function o1(t,e){return(history.state?history.state.position-e:-1)+t}const Ag=new Map;function s3(t,e){Ag.set(t,e)}function r3(t){const e=Ag.get(t);return Ag.delete(t),e}let o3=()=>location.protocol+"//"+location.host;function zw(t,e){const{pathname:n,search:i,hash:s}=e,r=t.indexOf("#");if(r>-1){let a=s.includes(t.slice(r))?t.slice(r).length:1,c=s.slice(a);return c[0]!=="/"&&(c="/"+c),s1(c,"")}return s1(n,t)+i+s}function a3(t,e,n,i){let s=[],r=[],o=null;const a=({state:h})=>{const f=zw(t,location),p=n.value,m=e.value;let b=0;if(h){if(n.value=f,e.value=h,o&&o===p){o=null;return}b=m?h.position-m.position:0}else i(f);s.forEach(E=>{E(n.value,p,{delta:b,type:ru.pop,direction:b?b>0?jl.forward:jl.back:jl.unknown})})};function c(){o=n.value}function l(h){s.push(h);const f=()=>{const p=s.indexOf(h);p>-1&&s.splice(p,1)};return r.push(f),f}function u(){const{history:h}=window;h.state&&h.replaceState(Mt({},h.state,{scroll:vf()}),"")}function d(){for(const h of r)h();r=[],window.removeEventListener("popstate",a),window.removeEventListener("beforeunload",u)}return window.addEventListener("popstate",a),window.addEventListener("beforeunload",u,{passive:!0}),{pauseListeners:c,listen:l,destroy:d}}function a1(t,e,n,i=!1,s=!1){return{back:t,current:e,forward:n,replaced:i,position:window.history.length,scroll:s?vf():null}}function c3(t){const{history:e,location:n}=window,i={value:zw(t,n)},s={value:e.state};s.value||r(i.value,{back:null,current:i.value,forward:null,position:e.length-1,replaced:!0,scroll:null},!0);function r(c,l,u){const d=t.indexOf("#"),h=d>-1?(n.host&&document.querySelector("base")?t:t.slice(d))+c:o3()+t+c;try{e[u?"replaceState":"pushState"](l,"",h),s.value=l}catch(f){console.error(f),n[u?"replace":"assign"](h)}}function o(c,l){const u=Mt({},e.state,a1(s.value.back,c,s.value.forward,!0),l,{position:s.value.position});r(c,u,!0),i.value=c}function a(c,l){const u=Mt({},s.value,e.state,{forward:c,scroll:vf()});r(u.current,u,!0);const d=Mt({},a1(i.value,c,null),{position:u.position+1},l);r(c,d,!1),i.value=c}return{location:i,state:s,push:a,replace:o}}function l3(t){t=$L(t);const e=c3(t),n=a3(t,e.state,e.location,e.replace);function i(r,o=!0){o||n.pauseListeners(),history.go(r)}const s=Mt({location:"",base:t,go:i,createHref:t3.bind(null,t)},e,n);return Object.defineProperty(s,"location",{enumerable:!0,get:()=>e.location.value}),Object.defineProperty(s,"state",{enumerable:!0,get:()=>e.state.value}),s}function u3(t){return typeof t=="string"||t&&typeof t=="object"}function Yw(t){return typeof t=="string"||typeof t=="symbol"}const Jw=Symbol("");var c1;(function(t){t[t.aborted=4]="aborted",t[t.cancelled=8]="cancelled",t[t.duplicated=16]="duplicated"})(c1||(c1={}));function kc(t,e){return Mt(new Error,{type:t,[Jw]:!0},e)}function pr(t,e){return t instanceof Error&&Jw in t&&(e==null||!!(t.type&e))}const l1="[^/]+?",d3={sensitive:!1,strict:!1,start:!0,end:!0},h3=/[.+*?^${}()[\]/\\]/g;function f3(t,e){const n=Mt({},d3,e),i=[];let s=n.start?"^":"";const r=[];for(const l of t){const u=l.length?[]:[90];n.strict&&!l.length&&(s+="/");for(let d=0;d<l.length;d++){const h=l[d];let f=40+(n.sensitive?.25:0);if(h.type===0)d||(s+="/"),s+=h.value.replace(h3,"\\$&"),f+=40;else if(h.type===1){const{value:p,repeatable:m,optional:b,regexp:E}=h;r.push({name:p,repeatable:m,optional:b});const x=E||l1;if(x!==l1){f+=10;try{new RegExp(`(${x})`)}catch(v){throw new Error(`Invalid custom RegExp for param "${p}" (${x}): `+v.message)}}let S=m?`((?:${x})(?:/(?:${x}))*)`:`(${x})`;d||(S=b&&l.length<2?`(?:/${S})`:"/"+S),b&&(S+="?"),s+=S,f+=20,b&&(f+=-8),m&&(f+=-20),x===".*"&&(f+=-50)}u.push(f)}i.push(u)}if(n.strict&&n.end){const l=i.length-1;i[l][i[l].length-1]+=.7000000000000001}n.strict||(s+="/?"),n.end?s+="$":n.strict&&!s.endsWith("/")&&(s+="(?:/|$)");const o=new RegExp(s,n.sensitive?"":"i");function a(l){const u=l.match(o),d={};if(!u)return null;for(let h=1;h<u.length;h++){const f=u[h]||"",p=r[h-1];d[p.name]=f&&p.repeatable?f.split("/"):f}return d}function c(l){let u="",d=!1;for(const h of t){(!d||!u.endsWith("/"))&&(u+="/"),d=!1;for(const f of h)if(f.type===0)u+=f.value;else if(f.type===1){const{value:p,repeatable:m,optional:b}=f,E=p in l?l[p]:"";if(Ps(E)&&!m)throw new Error(`Provided param "${p}" is an array but it is not repeatable (* or + modifiers)`);const x=Ps(E)?E.join("/"):E;if(!x)if(b)h.length<2&&(u.endsWith("/")?u=u.slice(0,-1):d=!0);else throw new Error(`Missing required param "${p}"`);u+=x}}return u||"/"}return{re:o,score:i,keys:r,parse:a,stringify:c}}function p3(t,e){let n=0;for(;n<t.length&&n<e.length;){const i=e[n]-t[n];if(i)return i;n++}return t.length<e.length?t.length===1&&t[0]===80?-1:1:t.length>e.length?e.length===1&&e[0]===80?1:-1:0}function Zw(t,e){let n=0;const i=t.score,s=e.score;for(;n<i.length&&n<s.length;){const r=p3(i[n],s[n]);if(r)return r;n++}if(Math.abs(s.length-i.length)===1){if(u1(i))return 1;if(u1(s))return-1}return s.length-i.length}function u1(t){const e=t[t.length-1];return t.length>0&&e[e.length-1]<0}const m3={type:0,value:""},g3=/[a-zA-Z0-9_]/;function E3(t){if(!t)return[[]];if(t==="/")return[[m3]];if(!t.startsWith("/"))throw new Error(`Invalid path "${t}"`);function e(f){throw new Error(`ERR (${n})/"${l}": ${f}`)}let n=0,i=n;const s=[];let r;function o(){r&&s.push(r),r=[]}let a=0,c,l="",u="";function d(){l&&(n===0?r.push({type:0,value:l}):n===1||n===2||n===3?(r.length>1&&(c==="*"||c==="+")&&e(`A repeatable param (${l}) must be alone in its segment. eg: '/:ids+.`),r.push({type:1,value:l,regexp:u,repeatable:c==="*"||c==="+",optional:c==="*"||c==="?"})):e("Invalid state to consume buffer"),l="")}function h(){l+=c}for(;a<t.length;){if(c=t[a++],c==="\\"&&n!==2){i=n,n=4;continue}switch(n){case 0:c==="/"?(l&&d(),o()):c===":"?(d(),n=1):h();break;case 4:h(),n=i;break;case 1:c==="("?n=2:g3.test(c)?h():(d(),n=0,c!=="*"&&c!=="?"&&c!=="+"&&a--);break;case 2:c===")"?u[u.length-1]=="\\"?u=u.slice(0,-1)+c:n=3:u+=c;break;case 3:d(),n=0,c!=="*"&&c!=="?"&&c!=="+"&&a--,u="";break;default:e("Unknown state");break}}return n===2&&e(`Unfinished custom RegExp for param "${l}"`),d(),o(),s}function v3(t,e,n){const i=f3(E3(t.path),n),s=Mt(i,{record:t,parent:e,children:[],alias:[]});return e&&!s.record.aliasOf==!e.record.aliasOf&&e.children.push(s),s}function b3(t,e){const n=[],i=new Map;e=p1({strict:!1,end:!0,sensitive:!1},e);function s(d){return i.get(d)}function r(d,h,f){const p=!f,m=h1(d);m.aliasOf=f&&f.record;const b=p1(e,d),E=[m];if("alias"in d){const v=typeof d.alias=="string"?[d.alias]:d.alias;for(const T of v)E.push(h1(Mt({},m,{components:f?f.record.components:m.components,path:T,aliasOf:f?f.record:m})))}let x,S;for(const v of E){const{path:T}=v;if(h&&T[0]!=="/"){const w=h.record.path,D=w[w.length-1]==="/"?"":"/";v.path=h.record.path+(T&&D+T)}if(x=v3(v,h,b),f?f.alias.push(x):(S=S||x,S!==x&&S.alias.push(x),p&&d.name&&!f1(x)&&o(d.name)),Kw(x)&&c(x),m.children){const w=m.children;for(let D=0;D<w.length;D++)r(w[D],x,f&&f.children[D])}f=f||x}return S?()=>{o(S)}:Xl}function o(d){if(Yw(d)){const h=i.get(d);h&&(i.delete(d),n.splice(n.indexOf(h),1),h.children.forEach(o),h.alias.forEach(o))}else{const h=n.indexOf(d);h>-1&&(n.splice(h,1),d.record.name&&i.delete(d.record.name),d.children.forEach(o),d.alias.forEach(o))}}function a(){return n}function c(d){const h=T3(d,n);n.splice(h,0,d),d.record.name&&!f1(d)&&i.set(d.record.name,d)}function l(d,h){let f,p={},m,b;if("name"in d&&d.name){if(f=i.get(d.name),!f)throw kc(1,{location:d});b=f.record.name,p=Mt(d1(h.params,f.keys.filter(S=>!S.optional).concat(f.parent?f.parent.keys.filter(S=>S.optional):[]).map(S=>S.name)),d.params&&d1(d.params,f.keys.map(S=>S.name))),m=f.stringify(p)}else if(d.path!=null)m=d.path,f=n.find(S=>S.re.test(m)),f&&(p=f.parse(m),b=f.record.name);else{if(f=h.name?i.get(h.name):n.find(S=>S.re.test(h.path)),!f)throw kc(1,{location:d,currentLocation:h});b=f.record.name,p=Mt({},h.params,d.params),m=f.stringify(p)}const E=[];let x=f;for(;x;)E.unshift(x.record),x=x.parent;return{name:b,path:m,params:p,matched:E,meta:x3(E)}}t.forEach(d=>r(d));function u(){n.length=0,i.clear()}return{addRoute:r,resolve:l,removeRoute:o,clearRoutes:u,getRoutes:a,getRecordMatcher:s}}function d1(t,e){const n={};for(const i of e)i in t&&(n[i]=t[i]);return n}function h1(t){const e={path:t.path,redirect:t.redirect,name:t.name,meta:t.meta||{},aliasOf:t.aliasOf,beforeEnter:t.beforeEnter,props:S3(t),children:t.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in t?t.components||null:t.component&&{default:t.component}};return Object.defineProperty(e,"mods",{value:{}}),e}function S3(t){const e={},n=t.props||!1;if("component"in t)e.default=n;else for(const i in t.components)e[i]=typeof n=="object"?n[i]:n;return e}function f1(t){for(;t;){if(t.record.aliasOf)return!0;t=t.parent}return!1}function x3(t){return t.reduce((e,n)=>Mt(e,n.meta),{})}function p1(t,e){const n={};for(const i in t)n[i]=i in e?e[i]:t[i];return n}function T3(t,e){let n=0,i=e.length;for(;n!==i;){const r=n+i>>1;Zw(t,e[r])<0?i=r:n=r+1}const s=C3(t);return s&&(i=e.lastIndexOf(s,i-1)),i}function C3(t){let e=t;for(;e=e.parent;)if(Kw(e)&&Zw(t,e)===0)return e}function Kw({record:t}){return!!(t.name||t.components&&Object.keys(t.components).length||t.redirect)}function w3(t){const e={};if(t===""||t==="?")return e;const i=(t[0]==="?"?t.slice(1):t).split("&");for(let s=0;s<i.length;++s){const r=i[s].replace(Ww," "),o=r.indexOf("="),a=su(o<0?r:r.slice(0,o)),c=o<0?null:su(r.slice(o+1));if(a in e){let l=e[a];Ps(l)||(l=e[a]=[l]),l.push(c)}else e[a]=c}return e}function m1(t){let e="";for(let n in t){const i=t[n];if(n=qL(n),i==null){i!==void 0&&(e+=(e.length?"&":"")+n);continue}(Ps(i)?i.map(r=>r&&wg(r)):[i&&wg(i)]).forEach(r=>{r!==void 0&&(e+=(e.length?"&":"")+n,r!=null&&(e+="="+r))})}return e}function A3(t){const e={};for(const n in t){const i=t[n];i!==void 0&&(e[n]=Ps(i)?i.map(s=>s==null?null:""+s):i==null?i:""+i)}return e}const N3=Symbol(""),g1=Symbol(""),bf=Symbol(""),Qw=Symbol(""),Ng=Symbol("");function Sl(){let t=[];function e(i){return t.push(i),()=>{const s=t.indexOf(i);s>-1&&t.splice(s,1)}}function n(){t=[]}return{add:e,list:()=>t.slice(),reset:n}}function co(t,e,n,i,s,r=o=>o()){const o=i&&(i.enterCallbacks[s]=i.enterCallbacks[s]||[]);return()=>new Promise((a,c)=>{const l=h=>{h===!1?c(kc(4,{from:n,to:e})):h instanceof Error?c(h):u3(h)?c(kc(2,{from:e,to:h})):(o&&i.enterCallbacks[s]===o&&typeof h=="function"&&o.push(h),a())},u=r(()=>t.call(i&&i.instances[s],e,n,l));let d=Promise.resolve(u);t.length<3&&(d=d.then(l)),d.catch(h=>c(h))})}function Bm(t,e,n,i,s=r=>r()){const r=[];for(const o of t)for(const a in o.components){let c=o.components[a];if(!(e!=="beforeRouteEnter"&&!o.instances[a]))if(Uw(c)){const u=(c.__vccOpts||c)[e];u&&r.push(co(u,n,i,o,a,s))}else{let l=c();r.push(()=>l.then(u=>{if(!u)throw new Error(`Couldn't resolve component "${a}" at "${o.path}"`);const d=RL(u)?u.default:u;o.mods[a]=u,o.components[a]=d;const f=(d.__vccOpts||d)[e];return f&&co(f,n,i,o,a,s)()}))}}return r}function E1(t){const e=es(bf),n=es(Qw),i=di(()=>{const c=ie(t.to);return e.resolve(c)}),s=di(()=>{const{matched:c}=i.value,{length:l}=c,u=c[l-1],d=n.matched;if(!u||!d.length)return-1;const h=d.findIndex(yc.bind(null,u));if(h>-1)return h;const f=v1(c[l-2]);return l>1&&v1(u)===f&&d[d.length-1].path!==f?d.findIndex(yc.bind(null,c[l-2])):h}),r=di(()=>s.value>-1&&P3(n.params,i.value.params)),o=di(()=>s.value>-1&&s.value===n.matched.length-1&&qw(n.params,i.value.params));function a(c={}){if(O3(c)){const l=e[ie(t.replace)?"replace":"push"](ie(t.to)).catch(Xl);return t.viewTransition&&typeof document<"u"&&"startViewTransition"in document&&document.startViewTransition(()=>l),l}return Promise.resolve()}return{route:i,href:di(()=>i.value.href),isActive:r,isExactActive:o,navigate:a}}function y3(t){return t.length===1?t[0]:t}const k3=Ue({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"},viewTransition:Boolean},useLink:E1,setup(t,{slots:e}){const n=Po(E1(t)),{options:i}=es(bf),s=di(()=>({[b1(t.activeClass,i.linkActiveClass,"router-link-active")]:n.isActive,[b1(t.exactActiveClass,i.linkExactActiveClass,"router-link-exact-active")]:n.isExactActive}));return()=>{const r=e.default&&y3(e.default(n));return t.custom?r:hf("a",{"aria-current":n.isExactActive?t.ariaCurrentValue:null,href:n.href,onClick:n.navigate,class:s.value},r)}}}),D3=k3;function O3(t){if(!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)&&!t.defaultPrevented&&!(t.button!==void 0&&t.button!==0)){if(t.currentTarget&&t.currentTarget.getAttribute){const e=t.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return t.preventDefault&&t.preventDefault(),!0}}function P3(t,e){for(const n in e){const i=e[n],s=t[n];if(typeof i=="string"){if(i!==s)return!1}else if(!Ps(s)||s.length!==i.length||i.some((r,o)=>r!==s[o]))return!1}return!0}function v1(t){return t?t.aliasOf?t.aliasOf.path:t.path:""}const b1=(t,e,n)=>t??e??n,I3=Ue({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(t,{attrs:e,slots:n}){const i=es(Ng),s=di(()=>t.route||i.value),r=es(g1,0),o=di(()=>{let l=ie(r);const{matched:u}=s.value;let d;for(;(d=u[l])&&!d.components;)l++;return l}),a=di(()=>s.value.matched[o.value]);Ul(g1,di(()=>o.value+1)),Ul(N3,a),Ul(Ng,s);const c=J();return gt(()=>[c.value,a.value,t.name],([l,u,d],[h,f,p])=>{u&&(u.instances[d]=l,f&&f!==u&&l&&l===h&&(u.leaveGuards.size||(u.leaveGuards=f.leaveGuards),u.updateGuards.size||(u.updateGuards=f.updateGuards))),l&&u&&(!f||!yc(u,f)||!h)&&(u.enterCallbacks[d]||[]).forEach(m=>m(l))},{flush:"post"}),()=>{const l=s.value,u=t.name,d=a.value,h=d&&d.components[u];if(!h)return S1(n.default,{Component:h,route:l});const f=d.props[u],p=f?f===!0?l.params:typeof f=="function"?f(l):f:null,b=hf(h,Mt({},p,e,{onVnodeUnmounted:E=>{E.component.isUnmounted&&(d.instances[u]=null)},ref:c}));return S1(n.default,{Component:b,route:l})||b}}});function S1(t,e){if(!t)return null;const n=t(e);return n.length===1?n[0]:n}const R3=I3;function L3(t){const e=b3(t.routes,t),n=t.parseQuery||w3,i=t.stringifyQuery||m1,s=t.history,r=Sl(),o=Sl(),a=Sl(),c=oE(Gr);let l=Gr;nc&&t.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const u=Lm.bind(null,te=>""+te),d=Lm.bind(null,YL),h=Lm.bind(null,su);function f(te,z){let me,xe;return Yw(te)?(me=e.getRecordMatcher(te),xe=z):xe=te,e.addRoute(xe,me)}function p(te){const z=e.getRecordMatcher(te);z&&e.removeRoute(z)}function m(){return e.getRoutes().map(te=>te.record)}function b(te){return!!e.getRecordMatcher(te)}function E(te,z){if(z=Mt({},z||c.value),typeof te=="string"){const V=Mm(n,te,z.path),H=e.resolve({path:V.path},z),$=s.createHref(V.fullPath);return Mt(V,H,{params:h(H.params),hash:su(V.hash),redirectedFrom:void 0,href:$})}let me;if(te.path!=null)me=Mt({},te,{path:Mm(n,te.path,z.path).path});else{const V=Mt({},te.params);for(const H in V)V[H]==null&&delete V[H];me=Mt({},te,{params:d(V)}),z.params=d(z.params)}const xe=e.resolve(me,z),qe=te.hash||"";xe.params=u(h(xe.params));const ut=KL(i,Mt({},te,{hash:jL(qe),path:xe.path})),F=s.createHref(ut);return Mt({fullPath:ut,hash:qe,query:i===m1?A3(te.query):te.query||{}},xe,{redirectedFrom:void 0,href:F})}function x(te){return typeof te=="string"?Mm(n,te,c.value.path):Mt({},te)}function S(te,z){if(l!==te)return kc(8,{from:z,to:te})}function v(te){return D(te)}function T(te){return v(Mt(x(te),{replace:!0}))}function w(te){const z=te.matched[te.matched.length-1];if(z&&z.redirect){const{redirect:me}=z;let xe=typeof me=="function"?me(te):me;return typeof xe=="string"&&(xe=xe.includes("?")||xe.includes("#")?xe=x(xe):{path:xe},xe.params={}),Mt({query:te.query,hash:te.hash,params:xe.path!=null?{}:te.params},xe)}}function D(te,z){const me=l=E(te),xe=c.value,qe=te.state,ut=te.force,F=te.replace===!0,V=w(me);if(V)return D(Mt(x(V),{state:typeof V=="object"?Mt({},qe,V.state):qe,force:ut,replace:F}),z||me);const H=me;H.redirectedFrom=z;let $;return!ut&&QL(i,xe,me)&&($=kc(16,{to:H,from:xe}),he(xe,xe,!0,!1)),($?Promise.resolve($):O(H,xe)).catch(ne=>pr(ne)?pr(ne,2)?ne:j(ne):q(ne,H,xe)).then(ne=>{if(ne){if(pr(ne,2))return D(Mt({replace:F},x(ne.to),{state:typeof ne.to=="object"?Mt({},qe,ne.to.state):qe,force:ut}),z||H)}else ne=P(H,xe,!0,F,qe);return L(H,xe,ne),ne})}function A(te,z){const me=S(te,z);return me?Promise.reject(me):Promise.resolve()}function y(te){const z=Ae.values().next().value;return z&&typeof z.runWithContext=="function"?z.runWithContext(te):te()}function O(te,z){let me;const[xe,qe,ut]=M3(te,z);me=Bm(xe.reverse(),"beforeRouteLeave",te,z);for(const V of xe)V.leaveGuards.forEach(H=>{me.push(co(H,te,z))});const F=A.bind(null,te,z);return me.push(F),Me(me).then(()=>{me=[];for(const V of r.list())me.push(co(V,te,z));return me.push(F),Me(me)}).then(()=>{me=Bm(qe,"beforeRouteUpdate",te,z);for(const V of qe)V.updateGuards.forEach(H=>{me.push(co(H,te,z))});return me.push(F),Me(me)}).then(()=>{me=[];for(const V of ut)if(V.beforeEnter)if(Ps(V.beforeEnter))for(const H of V.beforeEnter)me.push(co(H,te,z));else me.push(co(V.beforeEnter,te,z));return me.push(F),Me(me)}).then(()=>(te.matched.forEach(V=>V.enterCallbacks={}),me=Bm(ut,"beforeRouteEnter",te,z,y),me.push(F),Me(me))).then(()=>{me=[];for(const V of o.list())me.push(co(V,te,z));return me.push(F),Me(me)}).catch(V=>pr(V,8)?V:Promise.reject(V))}function L(te,z,me){a.list().forEach(xe=>y(()=>xe(te,z,me)))}function P(te,z,me,xe,qe){const ut=S(te,z);if(ut)return ut;const F=z===Gr,V=nc?history.state:{};me&&(xe||F?s.replace(te.fullPath,Mt({scroll:F&&V&&V.scroll},qe)):s.push(te.fullPath,qe)),c.value=te,he(te,z,me,F),j()}let U;function X(){U||(U=s.listen((te,z,me)=>{if(!De.listening)return;const xe=E(te),qe=w(xe);if(qe){D(Mt(qe,{replace:!0,force:!0}),xe).catch(Xl);return}l=xe;const ut=c.value;nc&&s3(o1(ut.fullPath,me.delta),vf()),O(xe,ut).catch(F=>pr(F,12)?F:pr(F,2)?(D(Mt(x(F.to),{force:!0}),xe).then(V=>{pr(V,20)&&!me.delta&&me.type===ru.pop&&s.go(-1,!1)}).catch(Xl),Promise.reject()):(me.delta&&s.go(-me.delta,!1),q(F,xe,ut))).then(F=>{F=F||P(xe,ut,!1),F&&(me.delta&&!pr(F,8)?s.go(-me.delta,!1):me.type===ru.pop&&pr(F,20)&&s.go(-1,!1)),L(xe,ut,F)}).catch(Xl)}))}let K=Sl(),Y=Sl(),_;function q(te,z,me){j(te);const xe=Y.list();return xe.length?xe.forEach(qe=>qe(te,z,me)):console.error(te),Promise.reject(te)}function ee(){return _&&c.value!==Gr?Promise.resolve():new Promise((te,z)=>{K.add([te,z])})}function j(te){return _||(_=!te,X(),K.list().forEach(([z,me])=>te?me(te):z()),K.reset()),te}function he(te,z,me,xe){const{scrollBehavior:qe}=t;if(!nc||!qe)return Promise.resolve();const ut=!me&&r3(o1(te.fullPath,0))||(xe||!me)&&history.state&&history.state.scroll||null;return Zc().then(()=>qe(te,z,ut)).then(F=>F&&i3(F)).catch(F=>q(F,te,z))}const le=te=>s.go(te);let Le;const Ae=new Set,De={currentRoute:c,listening:!0,addRoute:f,removeRoute:p,clearRoutes:e.clearRoutes,hasRoute:b,getRoutes:m,resolve:E,options:t,push:v,replace:T,go:le,back:()=>le(-1),forward:()=>le(1),beforeEach:r.add,beforeResolve:o.add,afterEach:a.add,onError:Y.add,isReady:ee,install(te){const z=this;te.component("RouterLink",D3),te.component("RouterView",R3),te.config.globalProperties.$router=z,Object.defineProperty(te.config.globalProperties,"$route",{enumerable:!0,get:()=>ie(c)}),nc&&!Le&&c.value===Gr&&(Le=!0,v(s.location).catch(qe=>{}));const me={};for(const qe in Gr)Object.defineProperty(me,qe,{get:()=>c.value[qe],enumerable:!0});te.provide(bf,z),te.provide(Qw,sE(me)),te.provide(Ng,c);const xe=te.unmount;Ae.add(te),te.unmount=function(){Ae.delete(te),Ae.size<1&&(l=Gr,U&&U(),U=null,c.value=Gr,Le=!1,_=!1),xe()}}};function Me(te){return te.reduce((z,me)=>z.then(()=>y(me)),Promise.resolve())}return De}function M3(t,e){const n=[],i=[],s=[],r=Math.max(e.matched.length,t.matched.length);for(let o=0;o<r;o++){const a=e.matched[o];a&&(t.matched.find(l=>yc(l,a))?i.push(a):n.push(a));const c=t.matched[o];c&&(e.matched.find(l=>yc(l,c))||s.push(c))}return[n,i,s]}function Sf(){return es(bf)}const B3={class:"iconofogon"},F3={class:"relative-container"},U3={key:0},V3=["src"],W3={class:"div-imagen"},H3=["styles"],X3={style:{"margin-top":"50px"}},j3={key:0,class:"titulo-Fogon"},q3={key:1,class:"titulo-Fogon"},z3=Ue({__name:"iconofogon",setup(t){const e=He();function n(o,a){const c=-2*Math.PI/3,u=3*Math.PI/3-c,d=c+o/(a-1||1)*u,h=35,f=Math.cos(d)*h,p=Math.sin(d)*h;return{position:"absolute",left:`${f+30}px`,top:`${p+10}px`}}function i(){return{width:"70px",height:"50px"}}const s=Sf();function r(){console.log("click_Fogon",s.currentRoute.value.path),s.currentRoute.value.path==="/tocar"?s.push("/"):e.cancion.acordes.ordenPartes.length>0?s.push("/tocar"):s.push("/")}return(o,a)=>(R(),B("div",{class:"navbar-brand",onClick:r,style:{color:"inherit"}},[N("div",B3,[N("div",F3,[ie(e).estadoSesion==="conectado"?(R(),B("div",U3,[(R(!0),B(be,null,We(ie(e).usuariosSesion,(c,l)=>(R(),B("div",{key:l,style:vt(n(l,ie(e).usuariosSesion.length))},[N("img",{class:"profile-image",src:c.PerfilUsr&&c.PerfilUsr.imagen?c.PerfilUsr.imagen:"/img/usuariofantasma.png",alt:"Profile image"},null,8,V3)],4))),128))])):G("",!0),N("div",W3,[ie(e).estadoSesion==="conectado"?(R(),B("img",{key:0,class:"imagenicono",style:vt([i(),{"z-index":"1"}]),src:wL},null,4)):G("",!0),ie(e).estado==="conectado"?(R(),B("img",{key:1,class:"imagenicono",style:vt([i(),{"z-index":"1"}]),src:AL},null,4)):G("",!0),ie(e).estado==="logueado"?(R(),B("img",{key:2,class:"imagenicono",style:vt([i(),{"z-index":"1"}]),src:NL},null,4)):G("",!0),ie(e).estado!=="conectado"&&ie(e).estado!=="logueado"?(R(),B("img",{key:3,class:"imagenicono",styles:i(),src:yL,style:{"z-index":"1"}},null,8,H3)):G("",!0),ie(e).estadoReproduccion==="pausado"?(R(),B("img",{key:4,class:"imagenicono",style:vt([i(),{"z-index":"3"}]),src:kL},null,4)):G("",!0),ie(e).estadoReproduccion!=="pausado"&&ie(e).golpeDelCompas==0?(R(),B("img",{key:5,class:"imagenicono",style:vt([i(),{"z-index":"3"}]),src:DL},null,4)):G("",!0),ie(e).golpeDelCompas==1?(R(),B("img",{key:6,class:"imagenicono",style:vt([i(),{"z-index":"3"}]),src:OL},null,4)):G("",!0),ie(e).golpeDelCompas==2?(R(),B("img",{key:7,class:"imagenicono",style:vt([i(),{"z-index":"3"}]),src:PL},null,4)):G("",!0),ie(e).golpeDelCompas==3?(R(),B("img",{key:8,class:"imagenicono",style:vt([i(),{"z-index":"3"}]),src:IL},null,4)):G("",!0)])]),N("div",X3,[ie(e).estadoSesion!="conectado"?(R(),B("div",j3," Fogo Party ")):G("",!0),ie(e).estadoSesion==="conectado"?(R(),B("div",q3,ce(ie(e).sesion.nombre),1)):G("",!0)])])]))}}),nt=(t,e)=>{const n=t.__vccOpts||t;for(const[i,s]of e)n[i]=s;return n},Y3=nt(z3,[["__scopeId","data-v-0cb1840c"]]),J3={style:{display:"flex",width:"100%"}},Z3={key:0,class:"titulocancioncontrol"},K3={key:1,class:"titulocancioncontrol"},Q3={key:2,class:"titulocancioncontrol"},G3={key:3,class:"titulocancioncontrol"},_3={class:"dropdown dropdown-superior-derecha ms-auto"},$3={style:{"background-color":"#353333",border:"none"},class:"btn btn-secondary dropdown-toggle",type:"button",id:"dropdownMenuButton","data-bs-toggle":"dropdown","aria-expanded":"false"},eM=["src"],tM={class:"dropdown-menu dropdown-menu-end","aria-labelledby":"dropdownMenuButton"},nM={key:0,class:"dropdown-submenu"},iM={class:""},sM={key:0},rM={key:1},oM=["onClick"],aM={key:2},cM={key:3},lM={key:0,class:"compartir_sesion"},uM={style:{"background-color":"#353333",display:"flex"}},dM={style:{margin:"3px"}},hM={key:1,style:{border:"1px solid","margin-left":"10px"}},fM=Ue({__name:"cabecera",setup(t){const e=He(),n=J(!1),i=J(""),s=J(!1);function r(){n.value=!1,i.value=window.location.origin+"/tocar?sesion="+e.sesion.nombre.replace(/ /g,"_"),s.value=!0}function o(){s.value=!1}function a(){i.value&&(navigator.clipboard.writeText(i.value),n.value=!0)}const c=()=>{var f;const h=(f=e.perfil)!=null&&f.nombre?`${e.perfil.nombre} fogon`:"default";console.log("Creando sesión",h),e.aplicacion.CrearSesion(h)};function l(){e.aplicacion.SalirSesion()}const u=h=>{e.aplicacion.UnirmeSesion(h)};function d(h){let f=h.replace(/-/g," ");return f.length===0||(f=f.charAt(0).toUpperCase()+f.slice(1).toLocaleLowerCase(),f.length>50&&(f=f.substring(0,47)+"...")),f}return(h,f)=>{var m,b,E;const p=wu("router-link");return R(),B(be,null,[N("nav",{class:Dt(["navbarFogon navbar",{editando:h.$route.path==="/editar"}])},[N("div",J3,[Qe(Y3),h.$route.path==="/"?(R(),B("span",Z3," Bienvendido al Fogon ")):G("",!0),h.$route.path==="/tocar"?(R(),B("div",K3,ce(d((m=ie(e).cancion)==null?void 0:m.cancion))+" - "+ce(d((b=ie(e).cancion)==null?void 0:b.banda)),1)):G("",!0),h.$route.path==="/configurar"?(R(),B("span",Q3," Configuracion ")):G("",!0),h.$route.path==="/editar"?(R(),B("span",G3," Editando ")):G("",!0),N("div",_3,[N("button",$3,[N("img",{src:((E=ie(e).perfil)==null?void 0:E.imagen)||"/img/usuariofantasma.png",alt:"User",class:Dt({imgLogueado:ie(e).estadoLogin=="logueado",imgConectado:ie(e).estadoSesion==="conectado"}),style:{width:"40px",height:"40px","border-radius":"50%","object-fit":"cover"}},null,10,eM)]),N("ul",tM,[ie(e).estado==="conectado"||ie(e).estado==="logueado"?(R(),B("li",nM,[f[4]||(f[4]=N("a",{class:"dropdown-item dropdown-toggle",href:"#",role:"button","data-bs-toggle":"dropdown","aria-expanded":"false"},[N("i",{class:"bi bi-people"}),mt(" 🔥 Fogon ")],-1)),N("ul",iM,[ie(e).estadoSesion!="conectado"?(R(),B("li",sM,[N("a",{class:"dropdown-item",href:"#",onClick:c},f[0]||(f[0]=[N("i",{class:"bi bi-plus-circle"},null,-1),mt(" Crear Fogon ")]))])):G("",!0),ie(e).estadoSesion!="conectado"?(R(),B("div",rM,[(R(!0),B(be,null,We(ie(e).sesiones,(x,S)=>(R(),B("li",{key:S},[N("a",{class:"dropdown-item",href:"#",onClick:v=>u(x.nombre)},[f[1]||(f[1]=N("i",{class:"bi bi-box-arrow-in-right"},null,-1)),mt(" "+ce(x.nombre),1)],8,oM)]))),128))])):G("",!0),ie(e).estadoSesion==="conectado"?(R(),B("li",aM,[N("a",{class:"dropdown-item",href:"#",onClick:l},f[2]||(f[2]=[N("i",{class:"bi bi-box-arrow-in-right"},null,-1),mt(" Salir ")]))])):G("",!0),ie(e).estadoSesion==="conectado"?(R(),B("li",cM,[N("a",{class:"dropdown-item",href:"#",onClick:r},f[3]||(f[3]=[N("i",{class:"bi bi-share"},null,-1),mt(" Compartir ")]))])):G("",!0)])])):G("",!0),N("li",null,[h.$route.path!="/configurar"?(R(),dt(p,{key:0,class:"dropdown-item",to:"/configurar"},{default:Tu(()=>f[5]||(f[5]=[N("i",{class:"bi bi-gear"},null,-1),mt(" Configurar ")])),_:1,__:[5]})):G("",!0)])])])])],2),s.value?(R(),B("div",lM,[N("div",null,[Qe(CL,{url:i.value},null,8,["url"])]),N("div",uM,[N("span",dM,ce(i.value),1),n.value?G("",!0):(R(),B("button",{key:0,class:"btn btn-secondary",onClick:a},f[6]||(f[6]=[N("i",{class:"bi bi-clipboard"},null,-1),mt(" Copiar URL ")]))),n.value?(R(),B("div",hM," Copiado ")):G("",!0)]),N("div",{style:{display:"flex","justify-content":"center","margin-top":"20px"}},[N("button",{class:"btn btn-secondary",onClick:o},f[7]||(f[7]=[N("i",{class:"bi bi-x-circle"},null,-1),mt(" Cerrar ")]))])])):G("",!0)],64)}}}),pM=nt(fM,[["__scopeId","data-v-afbb6936"]]),mM={id:"contenedor-musical",class:"pantalla"},gM=Ue({__name:"App",setup(t){const e=He();return bn(()=>{e.aplicacion.onMounted()}),(n,i)=>{const s=wu("router-view");return R(),B("div",mM,[Qe(pM),Qe(s)])}}}),EM=nt(gM,[["__scopeId","data-v-8115749d"]]),vM={key:0},bM={key:1},SM={key:2},xM={key:3},TM={key:4},Gw=Ue({__name:"emoticonOrigen",props:{origen:{}},setup(t){return(e,n)=>(R(),B(be,null,[e.origen==="subida"?(R(),B("span",vM,"⬆️")):G("",!0),e.origen==="sitio"?(R(),B("span",bM,"🌐")):G("",!0),e.origen==="server"?(R(),B("span",SM,"🔌")):G("",!0),e.origen==="local"?(R(),B("span",xM,"💾")):G("",!0),e.origen==="fogon"?(R(),B("span",TM,"🔥")):G("",!0)],64))}}),CM={class:"nombreCancion"},wM={class:"origen-indicador"},AM={key:0},NM={key:0},yM={key:0},kM=Ue({__name:"cancion",props:{cancion:{}},emits:["click"],setup(t){const e=t,n=J(!1);function i(s){if(s==null||s===void 0)return"";let r=s.replace(/-/g," ");return r.length===0||(r=r.charAt(0).toUpperCase()+r.slice(1).toLocaleLowerCase(),r.length>50&&(r=r.substring(0,47)+"...")),r}return(s,r)=>(R(),B("div",{class:"cancion",onClick:r[0]||(r[0]=o=>s.$emit("click"))},[N("div",CM,ce(i(e.cancion.cancion)),1),N("div",wM,[Qe(Gw,{origen:e.cancion.origen.origenUrl},null,8,["origen"])]),N("div",null,ce(i(e.cancion.banda)),1),n.value?(R(),B("div",AM,[e.cancion.origen?(R(),B("div",NM,[mt(" origen fileName: "+ce(e.cancion.origen.fileName)+", url: "+ce(e.cancion.origen.origenUrl)+" ",1),e.cancion.origen.origenUrl=="server"?(R(),B("span",yM,ce(e.cancion.origen.usuario),1)):G("",!0)])):G("",!0)])):G("",!0)]))}}),x1=nt(kM,[["__scopeId","data-v-3661bca6"]]),DM=Ue({__name:"subircancion",setup(t){const e=Sf(),n=J(null);function i(){var r;(r=n.value)==null||r.click()}function s(r){var l;const o=r.target,a=(l=o.files)==null?void 0:l[0];if(!a)return;if(!a.name.toLowerCase().endsWith(".json")){alert("Por favor selecciona un archivo JSON válido");return}const c=new FileReader;c.onload=u=>{var d;try{const h=(d=u.target)==null?void 0:d.result,f=JSON.parse(h),p=Ea.JSONToCancion(JSON.stringify(f));p.archivo=a.name.replace(".json",""),console.log("Canción SUBIDA:",a.name);const m=new Ui("subida",a.name.replace(".json",""),"");yr.getInstance().Save(m,p).then(()=>{He().aplicacion.SetCancion(m).then(()=>{e.push("/tocar")})})}catch(h){console.error("Error al procesar el archivo JSON:",h),alert("Error al procesar el archivo JSON. Verifica que el formato sea correcto.")}},c.readAsText(a),o.value=""}return(r,o)=>(R(),B("div",{class:"cancion",onClick:i},[o[0]||(o[0]=N("div",{class:"nombreCancion"},"SUBIR",-1)),N("input",{ref_key:"fileInput",ref:n,type:"file",accept:".json",style:{display:"none"},onChange:s},null,544)]))}}),OM=nt(DM,[["__scopeId","data-v-40848da9"]]),PM={class:"home"},IM={key:0,class:"primer-parrafo"},RM={key:1,class:"primer-parrafo"},LM={style:{display:"flex"}},MM={style:{width:"70%"}},BM={style:{display:"flex","flex-wrap":"wrap"}},FM={key:2,class:"ultimasCanciones"},UM={class:"primer-parrafo"},VM={style:{display:"flex","flex-wrap":"wrap"}},WM={key:3,class:"primer-parrafo"},HM=Ue({__name:"home",setup(t){let e=new Nc;const n=J([]),i=J(0);n.value=e.canciones,i.value=e.canciones.length;const s=J([]),r=J([]),o=J(""),a=J("");function c(){r.value.length===0?(o.value="cargando",r.value=e.canciones,Iw.GetIndice().then(p=>{r.value=p,f()}).catch(p=>{console.error("Error trayendo indice:",p),o.value="error"})):f();function h(p,m){return m.filter(b=>b.banda.toLowerCase().includes(p.toLowerCase())||b.cancion.toLowerCase().includes(p.toLowerCase()))}function f(){if(o.value="filtrando",a.value==="")s.value=r.value;else{let p=r.value;const m=a.value.split(",");for(let b=0;b<m.length;b++)p=h(m[b],p);s.value=p}o.value="listo"}o.value="listo"}const l=He(),u=Sf();function d(h){l.aplicacion.SetCancion(h).then(()=>{u.push("/tocar")})}return(h,f)=>(R(),B("div",PM,[ie(l).estado==="conectando"?(R(),B("p",IM," Intentando conectar ... ")):G("",!0),ie(l).estado==="conectando"?(R(),B("p",RM," Revisa los servidores en configuracion y conectate a un fogon ")):G("",!0),N("div",null,[f[2]||(f[2]=N("p",{class:"primer-parrafo"},"Busca Canciones",-1)),N("div",LM,[N("div",MM,[lt(N("input",{type:"text","onUpdate:modelValue":f[0]||(f[0]=p=>a.value=p),placeholder:"Buscar..."},null,512),[[At,a.value]]),N("button",{onClick:f[1]||(f[1]=p=>c())},"Buscar"),mt(" "+ce(o.value),1)]),N("div",null,[Qe(OM)])]),N("div",null,[N("div",BM,[(R(!0),B(be,null,We(s.value,(p,m)=>(R(),dt(x1,{key:m,cancion:p,onClick:b=>d(p.origen)},null,8,["cancion","onClick"]))),128))])])]),n.value.length>0?(R(),B("div",FM,[N("p",UM,"Ultimas "+ce(i.value)+" Canciones",1),N("div",VM,[(R(!0),B(be,null,We(n.value,(p,m)=>(R(),dt(x1,{key:m,cancion:p,onClick:b=>d(p.origen)},null,8,["cancion","onClick"]))),128))])])):G("",!0),ie(l).estado==="conectado"?(R(),B("p",WM," Conectado! ")):G("",!0)]))}}),XM=nt(HM,[["__scopeId","data-v-ae68f5e3"]]);class Lo{constructor(){W(this,"configuracion",Os.getInstance())}getConfiguracionPantalla(){return this.configuracion.GetConfiguracionPantalla(window.innerWidth,window.innerHeight)}getAnchoPantalla(){return window.innerWidth}getAltoPantalla(){const e=this.getConfiguracionPantalla();return window.innerHeight-e.altoPantallaDescuento}setearEstilos(){const e=this.getConfiguracionPantalla();document.documentElement.style.setProperty("--tamanio-letra",`${e.tamanioLetra}px`),document.documentElement.style.setProperty("--tamanio-acorde",`${e.tamanioAcorde}px`),document.documentElement.style.setProperty("--tamanio-acordesolo",`${e.tamanioAcordesolo}px`),document.documentElement.style.setProperty("--tamanio-parte",`${e.tamanioParte}px`),document.documentElement.style.setProperty("--tamanio-acorde-parte",`${e.tamanioAcordeParte}px`)}}const jM={class:"componenteMusical"},qM={style:{display:"flex","flex-wrap":"wrap"}},zM={class:"divletra"},YM={key:0,class:"bi bi-music-note"},JM={class:"divletra"},ZM={key:0,class:"bi bi-music-note"},KM={key:2,class:"break"},QM={class:"divletra"},GM=Ue({__name:"Tocar_Letra",props:{compas:{},cancion:{}},setup(t,{expose:e}){const n=t,i=J(0),s=new Lo,r=J(null),o=J(-1),a=J(-1),c=J([]);gt(()=>n.compas,f=>{const p=n.cancion.letras.RenglonDelCompas(f),m=s.getConfiguracionPantalla().tamanioLetra;let b=p*m*2;b-=m*20;const E=Math.max(b,0);u(E);let x=0;for(let S=0;S<n.cancion.letras.renglones.length;S++){let v=0;if(n.cancion.letras.renglones[S]&&(v=n.cancion.letras.renglones[S].length),f<x+v){o.value=S,a.value=f-x;break}x+=v}});function l(){return{height:s.getAltoPantalla()+"px"}}function u(f){var p;(p=r.value)==null||p.scrollTo({top:f,behavior:"smooth"})}function d(){return c.value.length===0&&console.log("actualizar letras"),!1}const h=()=>{r.value&&(i.value=r.value.scrollTop)};return bn(()=>{r.value&&r.value.addEventListener("scroll",h)}),Io(()=>{r.value&&r.value.removeEventListener("scroll",h)}),e({Actualizar:d}),(f,p)=>(R(),B("div",jM,[N("div",{ref_key:"letraDiv",ref:r,class:"overflow-auto divDeLetra",style:vt(l())},[N("div",qM,[(R(!0),B(be,null,We(f.cancion.letras.renglones,(m,b)=>(R(),B(be,{key:b},[(R(!0),B(be,null,We(m,(E,x)=>(R(),B(be,{key:x},[E.includes("/n")?G("",!0):(R(),B("div",{key:0,class:Dt({en_compas:o.value===b&&a.value===x})},[N("div",zM,[mt(ce(E)+" ",1),E.trim()===""?(R(),B("i",YM)):G("",!0)])],2)),E.includes("/n")?(R(),B("div",{key:1,class:Dt({en_compas:o.value===b&&a.value===x})},[N("div",JM,[mt(ce(E.split("/n")[0])+" ",1),E.split("/n")[0].trim()===""?(R(),B("i",ZM)):G("",!0)])],2)):G("",!0),E.includes("/n")?(R(),B("div",KM)):G("",!0),E.includes("/n")?(R(),B("div",{key:3,class:Dt({en_compas:o.value===b&&a.value===x})},[N("div",QM,ce(E.split("/n")[1]),1)],2)):G("",!0)],64))),128))],64))),128))]),p[0]||(p[0]=N("div",null," ",-1))],4)]))}}),_M=nt(GM,[["__scopeId","data-v-c7160f5d"]]);class $M{constructor(e,n){W(this,"contenido");W(this,"left");W(this,"compas",0);this.contenido=e,this.left=n}}class eB{constructor(e){W(this,"contenido","");W(this,"compas",0);this.contenido=e}}class Fm{constructor(e,n){W(this,"contenido","");W(this,"partes",[]);W(this,"continua",!1);W(this,"escontinuacion",!1);W(this,"acordes",[]);W(this,"compas",0);this.contenido="";for(let i=0;i<n.length;i++)this.acordes.push(new $M(n[i],this.contenido.length*12)),this.partes.push(new eB(e[i])),this.contenido+=e[i]}}class tB{constructor(e,n,i=80){W(this,"contenido","");W(this,"hastaAcorde",0);W(this,"desdeAcorde",0);W(this,"renglonesDisplay",[]);if(this.contenido=e.join(""),this.contenido.length<i)this.renglonesDisplay.push(new Fm(e,n));else{let s=[],r=[],o="",a=0;for(;a<e.length;){if(o.length+e[a].length<i)o+=e[a],s.push(e[a]),r.push(n[a]);else{const c=e[a].substring(0,i-o.length);s.push(c),r.push(n[a]),this.renglonesDisplay.push(new Fm(s,r));const l=e[a].substring(i-o.length,e[a].length);r=["."],s=[l],o=e[a]}a++}this.renglonesDisplay.push(new Fm(s,r))}}}class PE{constructor(e){W(this,"anchoLetras",80);W(this,"Versos",[]);W(this,"calculado",!1);W(this,"renglones",[]);this.anchoLetras=e,this.calculado=!1}ArmarDisplay(e,n){for(let i=0;i<e.length;i++){const s=new tB(e[i],n[i],this.anchoLetras);this.Versos.push(s)}}}class _w{getDisplay(e,n){const i=new PE(n),s=e.acordes.GetTodosLosAcordes(),r=e.letras.renglones.flat().filter(d=>d!==void 0);for(;s.length<r.length;)s.push("¿?");for(;r.length<s.length;)r.push("¿?");let o=[],a=[];const c=[],l=[];for(let d=0;d<r.length;d++)if(s[d].length>r[d].length){s[d]!=="."&&(r[d].trim()===""||r[d]===void 0)&&(r[d]="♪");const h=s[d].length-r[d].length+2;h>0&&(r[d]="♪".repeat(h))}for(let d=0;d<r.length;d++){const h=r[d];if(h.includes("/n")){const f=h.split("/n");o.push(f[0]),a.push(s[d]),c.push(o),l.push(a),a=[],o=[],o.push(f[1]),a.push("")}else o.push(h),a.push(s[d])}c.push(o),l.push(a),i.ArmarDisplay(c,l);let u=0;for(let d=0;d<i.Versos.length;d++)for(let h=0;h<i.Versos[d].renglonesDisplay.length;h++)for(let f=0;f<i.Versos[d].renglonesDisplay[h].acordes.length;f++)(i.Versos[d].renglonesDisplay[h].acordes[f].contenido==="."||i.Versos[d].renglonesDisplay[h].acordes[f].contenido==="")&&(u=u-1),i.Versos[d].renglonesDisplay[h].acordes[f].compas=u,i.Versos[d].renglonesDisplay[h].partes[f].compas=u,u++;return i}}const nB={key:0},iB={class:"divletra",style:{display:"flex"}},sB=["onClick"],rB=["onClick"],oB=Ue({__name:"Tocar_LetraYAcordes",props:{compas:{},cancion:{}},emits:["clickCompas"],setup(t,{expose:e,emit:n}){const i=t,s=new Lo,r=s.getConfiguracionPantalla(),o=J(null),a=J([]),c=J(new PE(r.columnas)),l=n;function u(S){l("clickCompas",S)}gt(()=>i.cancion,S=>{h(S)});const d=new _w;function h(S){c.value=d.getDisplay(S,r.columnas)}function f(S){let v=0,T=!1;for(let w=0;w<c.value.Versos.length;w++){const D=c.value.Versos[w];for(let A=0;A<D.renglonesDisplay.length;A++){for(let y=0;y<D.renglonesDisplay[A].partes.length;y++)if(D.renglonesDisplay[A].partes[y].compas===S)return T=!0,v<3?0:v-3;v++}if(T)break}return v}gt(()=>i.compas,S=>{const v=f(S);console.log("Renglon:",v);const T=v*(r.tamanioLetra+r.tamanioAcorde)*r.factorScroll;console.log("ScrollTo:",T),p(T)});function p(S){var v;(v=o.value)==null||v.scrollTo({top:S,behavior:"smooth"})}function m(){return{height:s.getAltoPantalla()+"px"}}let b=!1;function E(){return b||(b=!0,i.cancion.letras.renglones.length>0&&a.value.length===0&&h(i.cancion)),!1}function x(){h(i.cancion)}return e({Actualizar:x}),(S,v)=>(R(),B("div",null,[E()?(R(),B("div",nB,".. No cargada ..")):G("",!0),N("div",{style:vt([{position:"relative"},m()]),class:"componenteMusical",ref_key:"letraDiv",ref:o},[(R(!0),B(be,null,We(c.value.Versos,(T,w)=>(R(),B("div",{key:w},[(R(!0),B(be,null,We(T.renglonesDisplay,(D,A)=>(R(),B("div",{class:"renglonDisplay",key:A,style:{position:"relative"}},[N("div",iB,[(R(!0),B(be,null,We(D.partes,(y,O)=>(R(),B("div",{class:Dt({en_compas:y.compas===S.compas}),key:O,onClick:L=>u(y.compas)},ce(y.contenido),11,sB))),128))]),(R(!0),B(be,null,We(D.acordes,(y,O)=>(R(),B("div",{style:vt({"z-index":"-1",position:"absolute",left:y.left+"px",top:"-"+(ie(r).tamanioAcorde+2)+"px"}),onClick:L=>u(y.compas),key:O,class:Dt([{en_compas:y.compas===S.compas},"acordediv"])},ce(y.contenido),15,rB))),128))]))),128))]))),128))],4)]))}}),$w=nt(oB,[["__scopeId","data-v-fb9570cc"]]);class re extends Error{constructor(e,n=""){super("[RuntimeError] "+e+": "+n),this.code=e}}function ku(){return typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:Function("return this")()}function rn(t,e="undefined",n=""){if(t===void 0)throw new re(e,n);return t}function pn(t,...e){if(!e)return;const n=Array.prototype.slice.call(e).join(" ");ku().console.log(t+": "+n)}function aB(...t){const e=t.join(" "),n=new Error;ku().console.log("Warning: ",e,n.stack)}function cB(t,e){return t%e>=e/2?parseInt(`${t/e}`,10)*e+e:parseInt(`${t/e}`,10)*e}function IE(t,e){let n=e+(t-e)/2;return n%2>0&&(n=cB(n*10,5)/10),n}function yg(t){return`vf-${t}`}function T1(t){return t=t%(2*Math.PI),t<0&&(t+=2*Math.PI),t}function ql(t){return t.reduce((e,n)=>e+n,0)}class at{static get CATEGORY(){return"Fraction"}static GCD(e,n){if(typeof e!="number"||Number.isNaN(e)||typeof n!="number"||Number.isNaN(n))throw new re("BadArgument",`Invalid numbers: ${e}, ${n}`);let i;for(;n!==0;)i=n,n=e%n,e=i;return e}static LCM(e,n){return e*n/at.GCD(e,n)}static LCMM(e){return e.length===0?0:e.length===1?e[0]:e.length===2?at.LCM(e[0],e[1]):at.LCM(e.shift(),at.LCMM(e))}constructor(e,n){this.numerator=1,this.denominator=1,this.set(e,n)}set(e=1,n=1){return this.numerator=e,this.denominator=n,this}value(){return this.numerator/this.denominator}simplify(){let e=this.numerator,n=this.denominator;const i=at.GCD(e,n);return e/=i,n/=i,n<0&&(n=-n,e=-e),this.set(e,n)}add(e=0,n=1){const[i,s]=Nd(e,n),r=at.LCM(this.denominator,s),o=r/this.denominator,a=r/s,c=this.numerator*o+i*a;return this.set(c,r)}subtract(e=0,n=1){const[i,s]=Nd(e,n),r=at.LCM(this.denominator,s),o=r/this.denominator,a=r/s,c=this.numerator*o-i*a;return this.set(c,r)}multiply(e=1,n=1){const[i,s]=Nd(e,n);return this.set(this.numerator*i,this.denominator*s)}divide(e=1,n=1){const[i,s]=Nd(e,n);return this.set(this.numerator*s,this.denominator*i)}equals(e){const n=at.fractionA.copy(e).simplify(),i=at.fractionB.copy(this).simplify();return n.numerator===i.numerator&&n.denominator===i.denominator}greaterThan(e){const n=at.fractionA.copy(this);return n.subtract(e),n.numerator>0}greaterThanEquals(e){const n=at.fractionA.copy(this);return n.subtract(e),n.numerator>=0}lessThan(e){return!this.greaterThanEquals(e)}lessThanEquals(e){return!this.greaterThan(e)}clone(){return new at(this.numerator,this.denominator)}copy(e){return typeof e=="number"?this.set(e):this.set(e.numerator,e.denominator)}quotient(){return Math.floor(this.numerator/this.denominator)}remainder(){return this.numerator%this.denominator}makeAbs(){return this.denominator=Math.abs(this.denominator),this.numerator=Math.abs(this.numerator),this}toString(){return`${this.numerator}/${this.denominator}`}toSimplifiedString(){return at.fractionA.copy(this).simplify().toString()}toMixedString(){let e="";const n=this.quotient(),i=at.fractionA.copy(this);return n<0&&i.makeAbs(),n!==0?(e+=n,i.numerator!==0&&(e+=` ${i.toSimplifiedString()}`)):i.numerator===0?e="0":e=i.toSimplifiedString(),e}parse(e){const n=e.split("/"),i=parseInt(n[0],10),s=n[1]?parseInt(n[1],10):1;return this.set(i,s)}}at.fractionA=new at;at.fractionB=new at;function Nd(t,e=1){return typeof t=="number"?[t,e]:[t.numerator,t.denominator]}class Ce{static clear(e){e?(this.cacheFont.delete(e),this.cacheStyle.delete(e)):(this.cacheFont.clear(),this.cacheStyle.clear())}static getFontInfo(e){let n=this.cacheFont.get(e);return n||(n={family:Ce.get(`${e}.fontFamily`),size:Ce.get(`${e}.fontSize`)*Ce.get(`${e}.fontScale`),weight:Ce.get(`${e}.fontWeight`),style:Ce.get(`${e}.fontStyle`)},this.cacheFont.set(e,n)),structuredClone(n)}static getStyle(e){let n=this.cacheStyle.get(e);return n||(n={fillStyle:Ce.get(`${e}.fillStyle`),strokeStyle:Ce.get(`${e}.strokeStyle`),lineWidth:Ce.get(`${e}.lineWidth`),lineDash:Ce.get(`${e}.lineDash`),shadowBlur:Ce.get(`${e}.shadowBlur`),shadowColor:Ce.get(`${e}.shadowColor`)},this.cacheStyle.set(e,n)),structuredClone(n)}static get(e,n){var i;const s=e.split("."),r=s.pop();let o=Pl,a=n;for(;o;){a=(i=o[r])!==null&&i!==void 0?i:a;const c=s.shift();if(c)o=o[c];else break}return a}}Ce.cacheStyle=new Map;Ce.cacheFont=new Map;const Pl={fontFamily:"Bravura,Academico",fontSize:30,fontScale:1,fontWeight:"normal",fontStyle:"normal",Accidental:{cautionary:{fontSize:20},grace:{fontSize:20},noteheadAccidentalPadding:1,leftPadding:2,accidentalSpacing:3},Annotation:{fontSize:10},Bend:{fontSize:10,line:{strokeStyle:"#777777",lineWidth:1}},ChordSymbol:{fontSize:12,spacing:.05,subscriptOffset:.2,superscriptOffset:-.4,superSubRatio:.6},FretHandFinger:{fontSize:9,fontWeight:"bold"},GraceNote:{fontScale:2/3},GraceTabNote:{fontScale:2/3},NoteHead:{minPadding:2},PedalMarking:{text:{fontSize:12,fontStyle:"italic"}},Repetition:{text:{fontSize:12,fontWeight:"bold",offsetX:12,offsetY:25,spacing:5},coda:{offsetY:25},segno:{offsetY:10}},Stave:{strokeStyle:"#999999",fontSize:8,padding:12,endPaddingMax:10,endPaddingMin:5,unalignedNotePadding:10},StaveConnector:{text:{fontSize:16}},StaveLine:{fontSize:10},StaveSection:{fontSize:10,fontWeight:"bold",lineWidth:2,padding:2,strokeStyle:"black"},StaveTempo:{fontSize:14,glyph:{fontSize:25},name:{fontWeight:"bold"}},StaveText:{fontSize:16},StaveTie:{fontSize:10},Stem:{strokeStyle:"black"},StringNumber:{fontSize:10,fontWeight:"bold",verticalPadding:8,stemPadding:2,leftPadding:5,rightPadding:6},Stroke:{text:{fontSize:10,fontStyle:"italic",fontWeight:"bold"}},TabNote:{text:{fontSize:9}},TabSlide:{fontSize:10,fontStyle:"italic",fontWeight:"bold"},TabStave:{strokeStyle:"#999999",fontSize:8},TabTie:{fontSize:10},TextBracket:{fontSize:15,fontStyle:"italic"},TextNote:{text:{fontSize:12}},Tremolo:{spacing:7},Tuplet:{yOffset:0,textYOffset:2},Volta:{fontSize:9,fontWeight:"bold"}};class tr{static copy(e){return new tr(e.x,e.y,e.w,e.h)}constructor(e,n,i,s){this.x=e,this.y=n,this.w=i,this.h=s}getX(){return this.x}getY(){return this.y}getW(){return this.w}getH(){return this.h}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setW(e){return this.w=e,this}setH(e){return this.h=e,this}move(e,n){return this.x+=e,this.y+=n,this}clone(){return tr.copy(this)}mergeWith(e){const n=e,i=this.x<n.x?this.x:n.x,s=this.y<n.y?this.y:n.y,r=Math.max(this.x+this.w,n.x+n.w)-i,o=Math.max(this.y+this.h,n.y+n.h)-s;return this.x=i,this.y=s,this.w=r,this.h=o,this}}var lB=function(t,e,n,i){function s(r){return r instanceof n?r:new n(function(o){o(r)})}return new(n||(n=Promise))(function(r,o){function a(u){try{l(i.next(u))}catch(d){o(d)}}function c(u){try{l(i.throw(u))}catch(d){o(d)}}function l(u){u.done?r(u.value):s(u.value).then(a,c)}l((i=i.apply(t,e||[])).next())})},ha;(function(t){t.NORMAL="normal",t.BOLD="bold"})(ha||(ha={}));var fo;(function(t){t.NORMAL="normal",t.ITALIC="italic"})(fo||(fo={}));let yd;class et{static convertSizeToPixelValue(e){var n;if(typeof e=="number")return e*et.scaleToPxFrom.pt;{const i=parseFloat(e);if(isNaN(i))return 0;const s=e.replace(/[\d.\s]/g,"").toLowerCase(),r=(n=et.scaleToPxFrom[s])!==null&&n!==void 0?n:1;return i*r}}static convertSizeToPointValue(e){var n;if(typeof e=="number")return e;{const i=parseFloat(e);if(isNaN(i))return 0;const s=e.replace(/[\d.\s]/g,"").toLowerCase(),r=((n=et.scaleToPxFrom[s])!==null&&n!==void 0?n:1)/et.scaleToPxFrom.pt;return i*r}}static validate(e,n,i,s){if(typeof e=="string"&&n===void 0&&i===void 0&&s===void 0)return et.fromCSSString(e);let r;return typeof e=="object"?(r=e.family,n=e.size,i=e.weight,s=e.style):r=e,r=r??Ce.get("fontFamily"),n=n??Ce.get("fontSize")+"pt",i=i??ha.NORMAL,s=s??fo.NORMAL,i===""&&(i=ha.NORMAL),s===""&&(s=fo.NORMAL),typeof n=="number"&&(n=`${n}pt`),typeof i=="number"&&(i=i.toString()),{family:r,size:n,weight:i,style:s}}static fromCSSString(e){yd||(yd=document.createElement("span")),yd.style.font=e;const{fontFamily:n,fontSize:i,fontWeight:s,fontStyle:r}=yd.style;return{family:n,size:i,weight:s,style:r}}static toCSSString(e){var n;if(!e)return"";let i;const s=e.style;s===fo.NORMAL||s===""||s===void 0?i="":i=s.trim()+" ";let r;const o=e.weight;o===ha.NORMAL||o===""||o===void 0?r="":typeof o=="number"?r=o+" ":r=o.trim()+" ";let a;const c=e.size;c===void 0?a=Ce.get("fontSize")+"pt":typeof c=="number"?a=c+"pt ":a=c.trim()+" ";const l=(n=e.family)!==null&&n!==void 0?n:Ce.get("fontFamily");return`${i}${r}${a}${l}`}static scaleSize(e,n){if(typeof e=="number")return e*n;{const i=parseFloat(e),s=e.replace(/[\d.\s]/g,"");return`${i*n}${s}`}}static isBold(e){if(e){if(typeof e=="number")return e>=600;{const n=parseInt(e,10);return isNaN(n)?e.toLowerCase()==="bold":n>=600}}else return!1}static isItalic(e){return e?e.toLowerCase()===fo.ITALIC:!1}static load(e,n,i){return lB(this,void 0,void 0,function*(){if(typeof FontFace>"u")return Promise.reject(new Error("FontFace API is not available in this environment. Cannot load fonts."));if(n===void 0){const a=et.FILES;if(!(e in a))return Promise.reject(new Error(`Font ${e} not found in Font.FILES`));n=et.HOST_URL+a[e]}const s=new FontFace(e,`url(${n})`,i),r=s.load();let o;return typeof document<"u"?o=document.fonts:typeof self<"u"&&"fonts"in self&&(o=self.fonts),o==null||o.add(s),r})}static getURLForFont(e){const n=et.FILES;if(e in n)return et.HOST_URL+n[e]}}et.scaleToPxFrom={pt:4/3,px:1,em:16,"%":4/25,in:96,mm:96/25.4,cm:96/2.54};et.HOST_URL="https://cdn.jsdelivr.net/npm/@vexflow-fonts/";et.FILES={Academico:"academico/academico.woff2",Bravura:"bravura/bravura.woff2","Bravura Text":"bravuratext/bravuratext.woff2",Edwin:"edwin/edwin-roman.woff2","Finale Ash":"finaleash/finaleash.woff2","Finale Ash Text":"finaleashtext/finaleashtext.woff2","Finale Broadway":"finalebroadway/finalebroadway.woff2","Finale Broadway Text":"finalebroadwaytext/finalebroadwaytext.woff2","Finale Jazz":"finalejazz/finalejazz.woff2","Finale Jazz Text":"finalejazztext/finalejazztext.woff2","Finale Maestro":"finalemaestro/finalemaestro.woff2","Finale Maestro Text":"finalemaestrotext/finalemaestrotext-regular.woff2",Gonville:"gonville/gonville.woff2",Gootville:"gootville/gootville.woff2","Gootville Text":"gootvilletext/gootvilletext.woff2",Leipzig:"leipzig/leipzig.woff2",Leland:"leland/leland.woff2","Leland Text":"lelandtext/lelandtext.woff2",MuseJazz:"musejazz/musejazz.woff2","MuseJazz Text":"musejazztext/musejazztext.woff2",Nepomuk:"nepomuk/nepomuk.woff2",Petaluma:"petaluma/petaluma.woff2","Petaluma Script":"petalumascript/petalumascript.woff2","Petaluma Text":"petalumatext/petalumatext.woff2","Roboto Slab":"robotoslab/robotoslab-regular-400.woff2",Sebastian:"sebastian/sebastian.woff2","Sebastian Text":"sebastiantext/sebastiantext.woff2"};class C1{constructor(){this.id={},this.type={},this.class={}}}class fc{static getDefaultRegistry(){return fc.defaultRegistry}static enableDefaultRegistry(e){fc.defaultRegistry=e}static disableDefaultRegistry(){fc.defaultRegistry=void 0}constructor(){this.index=new C1}clear(){return this.index=new C1,this}setIndexValue(e,n,i,s){const r=this.index;r[e][n]||(r[e][n]={}),r[e][n][i]=s}updateIndex({id:e,name:n,value:i,oldValue:s}){const r=this.getElementById(e);s!==void 0&&this.index[n][s]&&delete this.index[n][s][e],i&&r&&this.setIndexValue(n,i,r.getAttribute("id"),r)}register(e,n){if(n=n||e.getAttribute("id"),!n)throw new re("Can't add element without `id` attribute to registry");return e.setAttribute("id",n),this.setIndexValue("id",n,n,e),this.updateIndex({id:n,name:"type",value:e.getAttribute("type"),oldValue:void 0}),e.onRegister(this),this}getElementById(e){var n,i;return(i=(n=this.index.id)===null||n===void 0?void 0:n[e])===null||i===void 0?void 0:i[e]}getElementsByAttribute(e,n){const i=this.index[e];if(i){const s=i[n];if(s)return Object.keys(s).map(o=>s[o])}return[]}getElementsByType(e){return this.getElementsByAttribute("type",e)}getElementsByClass(e){return this.getElementsByAttribute("class",e)}onUpdate(e){return["id","type","class"].includes(e.name)&&this.updateIndex(e),this}}let Ye=class io{static get CATEGORY(){return"Element"}static newID(){return`auto${io.ID++}`}static setTextMeasurementCanvas(e){io.txtCanvas=e}static getTextMeasurementCanvas(){let e=io.txtCanvas;return e||(typeof document<"u"?e=document.createElement("canvas"):typeof OffscreenCanvas<"u"&&(e=new OffscreenCanvas(300,150)),io.txtCanvas=e),e}constructor(e){var n;this.children=[],this.style={},this._text="",this.metricsValid=!1,this._textMetrics={fontBoundingBoxAscent:0,fontBoundingBoxDescent:0,actualBoundingBoxAscent:0,actualBoundingBoxDescent:0,actualBoundingBoxLeft:0,actualBoundingBoxRight:0,width:0,alphabeticBaseline:0,emHeightAscent:0,emHeightDescent:0,hangingBaseline:0,ideographicBaseline:0},this._height=0,this._width=0,this.xShift=0,this.yShift=0,this.x=0,this.y=0,this.attrs={id:io.newID(),type:e??this.constructor.CATEGORY,class:""},this.rendered=!1,this._fontInfo=Ce.getFontInfo(this.attrs.type),this.style=Ce.getStyle(this.attrs.type),this.fontScale=Ce.get(`${this.attrs.type}.fontScale`),(n=fc.getDefaultRegistry())===null||n===void 0||n.register(this)}addChild(e){if(e.parent)throw new re("Element","Parent already defined");return e.parent=this,this.children.push(e),this}getCategory(){return this.attrs.type}setStyle(e){return this.style=e,this}setGroupStyle(e){return this.style=e,this.children.forEach(n=>n.setGroupStyle(e)),this}getStyle(){return this.style}applyStyle(e=this.context,n=this.getStyle()){return e?(n.shadowColor&&e.setShadowColor(n.shadowColor),n.shadowBlur&&e.setShadowBlur(n.shadowBlur),n.fillStyle&&e.setFillStyle(n.fillStyle),n.strokeStyle&&e.setStrokeStyle(n.strokeStyle),n.lineWidth&&e.setLineWidth(n.lineWidth),n.lineDash&&e.setLineDash(n.lineDash.split(" ").map(Number)),this):this}drawWithStyle(){const e=this.checkContext();return e.save(),this.applyStyle(e),this.draw(),e.restore(),this}draw(){throw new re("Element","Draw not defined")}hasClass(e){var n;return this.attrs.class?((n=this.attrs.class)===null||n===void 0?void 0:n.split(" ").indexOf(e))!==-1:!1}addClass(e){var n;return this.hasClass(e)?this:(this.attrs.class?this.attrs.class=`${this.attrs.class} ${e}`:this.attrs.class=`${e}`,(n=this.registry)===null||n===void 0||n.onUpdate({id:this.attrs.id,name:"class",value:e,oldValue:void 0}),this)}removeClass(e){var n,i;if(!this.hasClass(e))return this;const s=(n=this.attrs.class)===null||n===void 0?void 0:n.split(" ");return s&&(s.splice(s.indexOf(e)),this.attrs.class=s.join(" ")),(i=this.registry)===null||i===void 0||i.onUpdate({id:this.attrs.id,name:"class",value:void 0,oldValue:e}),this}onRegister(e){return this.registry=e,this}isRendered(){return this.rendered}setRendered(e=!0){return this.rendered=e,this}getAttributes(){return this.attrs}getAttribute(e){return this.attrs[e]}getSVGElement(e=""){const n=yg(this.attrs.id+e),i=document.getElementById(n);if(i)return i}setAttribute(e,n){var i;const s=this.attrs.id,r=this.attrs[e];return this.attrs[e]=n,(i=this.registry)===null||i===void 0||i.onUpdate({id:s,name:e,value:n,oldValue:r}),this}getBoundingBox(){return new tr(this.x+this.xShift,this.y+this.yShift-this.textMetrics.actualBoundingBoxAscent,this.width,this.height)}getContext(){return this.context}setContext(e){return this.context=e,this}checkContext(){return rn(this.context,"NoContext","No rendering context attached to instance.")}set font(e){this.setFont(e)}get font(){return et.toCSSString(this._fontInfo)}setFont(e,n,i,s){const r=Ce.getFontInfo(this.attrs.type),o=typeof e=="object",a=typeof e=="string",c=n===void 0&&i===void 0&&s===void 0;return this.metricsValid=!1,o?this._fontInfo=Object.assign(Object.assign({},r),e):a&&c?this._fontInfo=et.fromCSSString(e):this._fontInfo=et.validate(e??r.family,n??r.size,i??r.weight,s??r.style),this}getFont(){return et.toCSSString(this._fontInfo)}get fontInfo(){return this._fontInfo}set fontInfo(e){this.setFont(e)}setFontSize(e){const n=this.fontInfo;return this.setFont(n.family,e,n.weight,n.style),this}getFontSize(){return this.fontSize}getFontScale(){return this.fontScale}set fontSize(e){this.setFontSize(e)}get fontSize(){let e=this.fontInfo.size;return typeof e=="number"&&(e=`${e}pt`),e}get fontSizeInPoints(){return et.convertSizeToPointValue(this.fontSize)}get fontSizeInPixels(){return et.convertSizeToPixelValue(this.fontSize)}get fontStyle(){return this.fontInfo.style}set fontStyle(e){const n=this.fontInfo;this.setFont(n.family,n.size,n.weight,e)}get fontWeight(){return this.fontInfo.weight+""}set fontWeight(e){const n=this.fontInfo;this.setFont(n.family,n.size,e,n.style)}getWidth(){return this.width}get width(){return this.metricsValid||this.measureText(),this._width}setWidth(e){return this.width=e,this}set width(e){this.metricsValid||this.measureText(),this._width=e}setX(e){return this.x=e,this}getX(){return this.x}getY(){return this.y}setY(e){return this.y=e,this}setYShift(e){return this.yShift=e,this}getYShift(){return this.yShift}setXShift(e){return this.xShift=e,this}getXShift(){return this.xShift}setText(e){return this.text=e,this}set text(e){this.metricsValid=!1,this._text=e}getText(){return this._text}get text(){return this._text}renderText(e,n,i){e.setFont(this._fontInfo),e.fillText(this._text,n+this.x+this.xShift,i+this.y+this.yShift),this.children.forEach(s=>{e.setFont(s.fontInfo),e.fillText(s.text,n+s.x+s.xShift,i+s.y+s.yShift)})}measureText(){var e;const n=(e=io.getTextMeasurementCanvas())===null||e===void 0?void 0:e.getContext("2d");return n?(n.font=et.toCSSString(et.validate(this.fontInfo)),this._textMetrics=n.measureText(this.text),this._height=this._textMetrics.actualBoundingBoxAscent+this._textMetrics.actualBoundingBoxDescent,this._width=this._textMetrics.width,this.metricsValid=!0,this._textMetrics):(console.warn("Element: No context for txtCanvas. Returning empty text metrics."),this._textMetrics)}static measureWidth(e,n=""){var i;const s=(i=io.getTextMeasurementCanvas())===null||i===void 0?void 0:i.getContext("2d");return s?(s.font=et.toCSSString(Ce.getFontInfo(n)),s.measureText(e).width):(console.warn("Element: No context for txtCanvas. Returning empty text metrics."),0)}getTextMetrics(){return this.textMetrics}get textMetrics(){return this.metricsValid||this.measureText(),this._textMetrics}getHeight(){return this.height}get height(){return this.metricsValid||this.measureText(),this._height}set height(e){this.metricsValid||this.measureText(),this._height=e}setOriginX(e){const n=this.getBoundingBox(),i=Math.abs((n.getX()-this.xShift)/n.getW()),s=(e-i)*n.getW();this.xShift=-s}setOriginY(e){const n=this.getBoundingBox(),i=Math.abs((n.getY()-this.yShift)/n.getH()),s=(e-i)*n.getH();this.yShift=-s}setOrigin(e,n){this.setOriginX(e),this.setOriginY(n)}};Ye.ID=1e3;var jt;(function(t){t[t.CENTER=0]="CENTER",t[t.LEFT=1]="LEFT",t[t.RIGHT=2]="RIGHT",t[t.ABOVE=3]="ABOVE",t[t.BELOW=4]="BELOW"})(jt||(jt={}));class Re extends Ye{static get CATEGORY(){return"Modifier"}static get Position(){return jt}static get PositionString(){return{center:jt.CENTER,above:jt.ABOVE,below:jt.BELOW,left:jt.LEFT,right:jt.RIGHT}}constructor(){super(),this.width=0,this.textLine=0,this.position=Re.Position.LEFT,this.spacingFromNextModifier=0}reset(){}getNote(){return rn(this.note,"NoNote","Modifier has no note.")}checkAttachedNote(){const e=this.getCategory();return rn(this.index,"NoIndex",`Can't draw ${e} without an index.`),rn(this.note,"NoNote",`Can't draw ${e} without a note.`)}setNote(e){return this.note=e,this}getIndex(){return this.index}checkIndex(){return rn(this.index,"NoIndex","Modifier has an invalid index.")}setIndex(e){return this.index=e,this}getModifierContext(){return this.modifierContext}checkModifierContext(){return rn(this.modifierContext,"NoModifierContext","Modifier Context Required")}setModifierContext(e){return this.modifierContext=e,this}getPosition(){return this.position}setPosition(e){return this.position=typeof e=="string"?Re.PositionString[e]:e,this.reset(),this}setTextLine(e){return this.textLine=e,this}setYShift(e){return this.yShift=e,this}setSpacingFromNextModifier(e){this.spacingFromNextModifier=e}getSpacingFromNextModifier(){return this.spacingFromNextModifier}setXShift(e){return this.xShift=0,this.position===Re.Position.LEFT?this.xShift-=e:this.xShift+=e,this}getXShift(){return this.xShift}draw(){throw this.checkContext(),new re("NotImplemented","draw() not implemented for this modifier.")}alignSubNotesWithNote(e,n,i=Re.Position.LEFT){const s=n.getTickContext(),r=s.getMetrics(),o=n.getStave(),a=i===Re.Position.RIGHT?s.getX()+this.getSpacingFromNextModifier()*e.length+10:s.getX()-r.modLeftPx-r.modRightPx+this.getSpacingFromNextModifier();e.forEach(c=>{const l=c.getTickContext();o&&c.setStave(o),l.setXOffset(a)})}}class Ut{static get NUM_TONES(){return this.canonicalNotes.length}static get roots(){return["c","d","e","f","g","a","b"]}static get rootValues(){return[0,2,4,5,7,9,11]}static get rootIndexes(){return{c:0,d:1,e:2,f:3,g:4,a:5,b:6}}static get canonicalNotes(){return["c","c#","d","d#","e","f","f#","g","g#","a","a#","b"]}static get diatonicIntervals(){return["unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","octave"]}static get diatonicAccidentals(){return{unison:{note:0,accidental:0},m2:{note:1,accidental:-1},M2:{note:1,accidental:0},m3:{note:2,accidental:-1},M3:{note:2,accidental:0},p4:{note:3,accidental:0},dim5:{note:4,accidental:-1},p5:{note:4,accidental:0},m6:{note:5,accidental:-1},M6:{note:5,accidental:0},b7:{note:6,accidental:-1},M7:{note:6,accidental:0},octave:{note:7,accidental:0}}}static get intervals(){return{u:0,unison:0,m2:1,b2:1,min2:1,S:1,H:1,2:2,M2:2,maj2:2,T:2,W:2,m3:3,b3:3,min3:3,M3:4,3:4,maj3:4,4:5,p4:5,"#4":6,b5:6,aug4:6,dim5:6,5:7,p5:7,"#5":8,b6:8,aug5:8,6:9,M6:9,maj6:9,b7:10,m7:10,min7:10,dom7:10,M7:11,maj7:11,8:12,octave:12}}static get scales(){return{major:[2,2,1,2,2,2,1],minor:[2,1,2,2,1,2,2],ionian:[2,2,1,2,2,2,1],dorian:[2,1,2,2,2,1,2],phyrgian:[1,2,2,2,1,2,2],lydian:[2,2,2,1,2,2,1],mixolydian:[2,2,1,2,2,1,2],aeolian:[2,1,2,2,1,2,2],locrian:[1,2,2,1,2,2,2]}}static get scaleTypes(){return{M:Ut.scales.major,m:Ut.scales.minor}}static get accidentals(){return["bb","b","n","#","##"]}static get noteValues(){return{c:{rootIndex:0,intVal:0},cn:{rootIndex:0,intVal:0},"c#":{rootIndex:0,intVal:1},"c##":{rootIndex:0,intVal:2},cb:{rootIndex:0,intVal:11},cbb:{rootIndex:0,intVal:10},d:{rootIndex:1,intVal:2},dn:{rootIndex:1,intVal:2},"d#":{rootIndex:1,intVal:3},"d##":{rootIndex:1,intVal:4},db:{rootIndex:1,intVal:1},dbb:{rootIndex:1,intVal:0},e:{rootIndex:2,intVal:4},en:{rootIndex:2,intVal:4},"e#":{rootIndex:2,intVal:5},"e##":{rootIndex:2,intVal:6},eb:{rootIndex:2,intVal:3},ebb:{rootIndex:2,intVal:2},f:{rootIndex:3,intVal:5},fn:{rootIndex:3,intVal:5},"f#":{rootIndex:3,intVal:6},"f##":{rootIndex:3,intVal:7},fb:{rootIndex:3,intVal:4},fbb:{rootIndex:3,intVal:3},g:{rootIndex:4,intVal:7},gn:{rootIndex:4,intVal:7},"g#":{rootIndex:4,intVal:8},"g##":{rootIndex:4,intVal:9},gb:{rootIndex:4,intVal:6},gbb:{rootIndex:4,intVal:5},a:{rootIndex:5,intVal:9},an:{rootIndex:5,intVal:9},"a#":{rootIndex:5,intVal:10},"a##":{rootIndex:5,intVal:11},ab:{rootIndex:5,intVal:8},abb:{rootIndex:5,intVal:7},b:{rootIndex:6,intVal:11},bn:{rootIndex:6,intVal:11},"b#":{rootIndex:6,intVal:0},"b##":{rootIndex:6,intVal:1},bb:{rootIndex:6,intVal:10},bbb:{rootIndex:6,intVal:9}}}isValidNoteValue(e){return e>=0&&e<Ut.canonicalNotes.length}isValidIntervalValue(e){return e>=0&&e<Ut.diatonicIntervals.length}getNoteParts(e){if(!e||e.length<1)throw new re("BadArguments","Invalid note name: "+e);if(e.length>3)throw new re("BadArguments","Invalid note name: "+e);const n=e.toLowerCase(),s=/^([cdefgab])(b|bb|n|#|##)?$/.exec(n);if(s!==null){const r=s[1],o=s[2];return{root:r,accidental:o}}else throw new re("BadArguments","Invalid note name: "+e)}getKeyParts(e){if(!e||e.length<1)throw new re("BadArguments","Invalid key: "+e);const n=e.toLowerCase(),s=/^([cdefgab])(b|#)?(mel|harm|m|M)?$/.exec(n);if(s!==null){const r=s[1],o=s[2];let a=s[3];return a||(a="M"),{root:r,accidental:o,type:a}}else throw new re("BadArguments",`Invalid key: ${e}`)}getNoteValue(e){const n=Ut.noteValues[e];if(n===void 0)throw new re("BadArguments",`Invalid note name: ${e}`);return n.intVal}getIntervalValue(e){const n=Ut.intervals[e];if(n===void 0)throw new re("BadArguments",`Invalid interval name: ${e}`);return n}getCanonicalNoteName(e){if(!this.isValidNoteValue(e))throw new re("BadArguments",`Invalid note value: ${e}`);return Ut.canonicalNotes[e]}getCanonicalIntervalName(e){if(!this.isValidIntervalValue(e))throw new re("BadArguments",`Invalid interval value: ${e}`);return Ut.diatonicIntervals[e]}getRelativeNoteValue(e,n,i=1){if(i!==1&&i!==-1)throw new re("BadArguments",`Invalid direction: ${i}`);let s=(e+i*n)%Ut.NUM_TONES;return s<0&&(s+=Ut.NUM_TONES),s}getRelativeNoteName(e,n){const i=this.getNoteParts(e),s=this.getNoteValue(i.root);let r=n-s;if(Math.abs(r)>Ut.NUM_TONES-3){let a=1;r>0&&(a=-1);const c=(n+1+(s+1))%Ut.NUM_TONES*a;if(Math.abs(c)>2)throw new re("BadArguments",`Notes not related: ${e}, ${n})`);r=c}if(Math.abs(r)>2)throw new re("BadArguments",`Notes not related: ${e}, ${n})`);let o=i.root;if(r>0)for(let a=1;a<=r;++a)o+="#";else if(r<0)for(let a=-1;a>=r;--a)o+="b";return o}getScaleTones(e,n){const i=[e];let s=e;for(let r=0;r<n.length;r++)s=this.getRelativeNoteValue(s,n[r]),s!==e&&i.push(s);return i}getIntervalBetween(e,n,i=1){if(i!==1&&i!==-1)throw new re("BadArguments",`Invalid direction: ${i}`);if(!this.isValidNoteValue(e)||!this.isValidNoteValue(n))throw new re("BadArguments",`Invalid notes: ${e}, ${n}`);let s=i===1?n-e:e-n;return s<0&&(s+=Ut.NUM_TONES),s}createScaleMap(e){const n=this.getKeyParts(e);if(!n.type)throw new re("BadArguments","Unsupported key type: undefined");const i=Ut.scaleTypes[n.type];let s=n.root;if(n.accidental&&(s+=n.accidental),!i)throw new re("BadArguments","Unsupported key type: "+e);const r=this.getScaleTones(this.getNoteValue(s),i),o=Ut.rootIndexes[n.root],a={};for(let c=0;c<Ut.roots.length;++c){const l=(o+c)%Ut.roots.length,u=Ut.roots[l];let d=this.getRelativeNoteName(u,r[c]);d.length===1&&(d+="n"),a[u]=d}return a}}var M;(function(t){t.null="\0",t.fourStringTabClef="",t.sixStringTabClef="",t.accSagittal11LargeDiesisDown="",t.accSagittal11LargeDiesisUp="",t.accSagittal11MediumDiesisDown="",t.accSagittal11MediumDiesisUp="",t.accSagittal11v19LargeDiesisDown="",t.accSagittal11v19LargeDiesisUp="",t.accSagittal11v19MediumDiesisDown="",t.accSagittal11v19MediumDiesisUp="",t.accSagittal11v49CommaDown="",t.accSagittal11v49CommaUp="",t.accSagittal143CommaDown="",t.accSagittal143CommaUp="",t.accSagittal17CommaDown="",t.accSagittal17CommaUp="",t.accSagittal17KleismaDown="",t.accSagittal17KleismaUp="",t.accSagittal19CommaDown="",t.accSagittal19CommaUp="",t.accSagittal19SchismaDown="",t.accSagittal19SchismaUp="",t.accSagittal1MinaDown="",t.accSagittal1MinaUp="",t.accSagittal1TinaDown="",t.accSagittal1TinaUp="",t.accSagittal23CommaDown="",t.accSagittal23CommaUp="",t.accSagittal23SmallDiesisDown="",t.accSagittal23SmallDiesisUp="",t.accSagittal25SmallDiesisDown="",t.accSagittal25SmallDiesisUp="",t.accSagittal2MinasDown="",t.accSagittal2MinasUp="",t.accSagittal2TinasDown="",t.accSagittal2TinasUp="",t.accSagittal35LargeDiesisDown="",t.accSagittal35LargeDiesisUp="",t.accSagittal35MediumDiesisDown="",t.accSagittal35MediumDiesisUp="",t.accSagittal3TinasDown="",t.accSagittal3TinasUp="",t.accSagittal49LargeDiesisDown="",t.accSagittal49LargeDiesisUp="",t.accSagittal49MediumDiesisDown="",t.accSagittal49MediumDiesisUp="",t.accSagittal49SmallDiesisDown="",t.accSagittal49SmallDiesisUp="",t.accSagittal4TinasDown="",t.accSagittal4TinasUp="",t.accSagittal55CommaDown="",t.accSagittal55CommaUp="",t.accSagittal5CommaDown="",t.accSagittal5CommaUp="",t.accSagittal5TinasDown="",t.accSagittal5TinasUp="",t.accSagittal5v11SmallDiesisDown="",t.accSagittal5v11SmallDiesisUp="",t.accSagittal5v13LargeDiesisDown="",t.accSagittal5v13LargeDiesisUp="",t.accSagittal5v13MediumDiesisDown="",t.accSagittal5v13MediumDiesisUp="",t.accSagittal5v19CommaDown="",t.accSagittal5v19CommaUp="",t.accSagittal5v23SmallDiesisDown="",t.accSagittal5v23SmallDiesisUp="",t.accSagittal5v49MediumDiesisDown="",t.accSagittal5v49MediumDiesisUp="",t.accSagittal5v7KleismaDown="",t.accSagittal5v7KleismaUp="",t.accSagittal6TinasDown="",t.accSagittal6TinasUp="",t.accSagittal7CommaDown="",t.accSagittal7CommaUp="",t.accSagittal7TinasDown="",t.accSagittal7TinasUp="",t.accSagittal7v11CommaDown="",t.accSagittal7v11CommaUp="",t.accSagittal7v11KleismaDown="",t.accSagittal7v11KleismaUp="",t.accSagittal7v19CommaDown="",t.accSagittal7v19CommaUp="",t.accSagittal8TinasDown="",t.accSagittal8TinasUp="",t.accSagittal9TinasDown="",t.accSagittal9TinasUp="",t.accSagittalAcute="",t.accSagittalDoubleFlat="",t.accSagittalDoubleFlat11v49CUp="",t.accSagittalDoubleFlat143CUp="",t.accSagittalDoubleFlat17CUp="",t.accSagittalDoubleFlat17kUp="",t.accSagittalDoubleFlat19CUp="",t.accSagittalDoubleFlat19sUp="",t.accSagittalDoubleFlat23CUp="",t.accSagittalDoubleFlat23SUp="",t.accSagittalDoubleFlat25SUp="",t.accSagittalDoubleFlat49SUp="",t.accSagittalDoubleFlat55CUp="",t.accSagittalDoubleFlat5CUp="",t.accSagittalDoubleFlat5v11SUp="",t.accSagittalDoubleFlat5v19CUp="",t.accSagittalDoubleFlat5v23SUp="",t.accSagittalDoubleFlat5v7kUp="",t.accSagittalDoubleFlat7CUp="",t.accSagittalDoubleFlat7v11CUp="",t.accSagittalDoubleFlat7v11kUp="",t.accSagittalDoubleFlat7v19CUp="",t.accSagittalDoubleSharp="",t.accSagittalDoubleSharp11v49CDown="",t.accSagittalDoubleSharp143CDown="",t.accSagittalDoubleSharp17CDown="",t.accSagittalDoubleSharp17kDown="",t.accSagittalDoubleSharp19CDown="",t.accSagittalDoubleSharp19sDown="",t.accSagittalDoubleSharp23CDown="",t.accSagittalDoubleSharp23SDown="",t.accSagittalDoubleSharp25SDown="",t.accSagittalDoubleSharp49SDown="",t.accSagittalDoubleSharp55CDown="",t.accSagittalDoubleSharp5CDown="",t.accSagittalDoubleSharp5v11SDown="",t.accSagittalDoubleSharp5v19CDown="",t.accSagittalDoubleSharp5v23SDown="",t.accSagittalDoubleSharp5v7kDown="",t.accSagittalDoubleSharp7CDown="",t.accSagittalDoubleSharp7v11CDown="",t.accSagittalDoubleSharp7v11kDown="",t.accSagittalDoubleSharp7v19CDown="",t.accSagittalFlat="",t.accSagittalFlat11LDown="",t.accSagittalFlat11MDown="",t.accSagittalFlat11v19LDown="",t.accSagittalFlat11v19MDown="",t.accSagittalFlat11v49CDown="",t.accSagittalFlat11v49CUp="",t.accSagittalFlat143CDown="",t.accSagittalFlat143CUp="",t.accSagittalFlat17CDown="",t.accSagittalFlat17CUp="",t.accSagittalFlat17kDown="",t.accSagittalFlat17kUp="",t.accSagittalFlat19CDown="",t.accSagittalFlat19CUp="",t.accSagittalFlat19sDown="",t.accSagittalFlat19sUp="",t.accSagittalFlat23CDown="",t.accSagittalFlat23CUp="",t.accSagittalFlat23SDown="",t.accSagittalFlat23SUp="",t.accSagittalFlat25SDown="",t.accSagittalFlat25SUp="",t.accSagittalFlat35LDown="",t.accSagittalFlat35MDown="",t.accSagittalFlat49LDown="",t.accSagittalFlat49MDown="",t.accSagittalFlat49SDown="",t.accSagittalFlat49SUp="",t.accSagittalFlat55CDown="",t.accSagittalFlat55CUp="",t.accSagittalFlat5CDown="",t.accSagittalFlat5CUp="",t.accSagittalFlat5v11SDown="",t.accSagittalFlat5v11SUp="",t.accSagittalFlat5v13LDown="",t.accSagittalFlat5v13MDown="",t.accSagittalFlat5v19CDown="",t.accSagittalFlat5v19CUp="",t.accSagittalFlat5v23SDown="",t.accSagittalFlat5v23SUp="",t.accSagittalFlat5v49MDown="",t.accSagittalFlat5v7kDown="",t.accSagittalFlat5v7kUp="",t.accSagittalFlat7CDown="",t.accSagittalFlat7CUp="",t.accSagittalFlat7v11CDown="",t.accSagittalFlat7v11CUp="",t.accSagittalFlat7v11kDown="",t.accSagittalFlat7v11kUp="",t.accSagittalFlat7v19CDown="",t.accSagittalFlat7v19CUp="",t.accSagittalFractionalTinaDown="",t.accSagittalFractionalTinaUp="",t.accSagittalGrave="",t.accSagittalShaftDown="",t.accSagittalShaftUp="",t.accSagittalSharp="",t.accSagittalSharp11LUp="",t.accSagittalSharp11MUp="",t.accSagittalSharp11v19LUp="",t.accSagittalSharp11v19MUp="",t.accSagittalSharp11v49CDown="",t.accSagittalSharp11v49CUp="",t.accSagittalSharp143CDown="",t.accSagittalSharp143CUp="",t.accSagittalSharp17CDown="",t.accSagittalSharp17CUp="",t.accSagittalSharp17kDown="",t.accSagittalSharp17kUp="",t.accSagittalSharp19CDown="",t.accSagittalSharp19CUp="",t.accSagittalSharp19sDown="",t.accSagittalSharp19sUp="",t.accSagittalSharp23CDown="",t.accSagittalSharp23CUp="",t.accSagittalSharp23SDown="",t.accSagittalSharp23SUp="",t.accSagittalSharp25SDown="",t.accSagittalSharp25SUp="",t.accSagittalSharp35LUp="",t.accSagittalSharp35MUp="",t.accSagittalSharp49LUp="",t.accSagittalSharp49MUp="",t.accSagittalSharp49SDown="",t.accSagittalSharp49SUp="",t.accSagittalSharp55CDown="",t.accSagittalSharp55CUp="",t.accSagittalSharp5CDown="",t.accSagittalSharp5CUp="",t.accSagittalSharp5v11SDown="",t.accSagittalSharp5v11SUp="",t.accSagittalSharp5v13LUp="",t.accSagittalSharp5v13MUp="",t.accSagittalSharp5v19CDown="",t.accSagittalSharp5v19CUp="",t.accSagittalSharp5v23SDown="",t.accSagittalSharp5v23SUp="",t.accSagittalSharp5v49MUp="",t.accSagittalSharp5v7kDown="",t.accSagittalSharp5v7kUp="",t.accSagittalSharp7CDown="",t.accSagittalSharp7CUp="",t.accSagittalSharp7v11CDown="",t.accSagittalSharp7v11CUp="",t.accSagittalSharp7v11kDown="",t.accSagittalSharp7v11kUp="",t.accSagittalSharp7v19CDown="",t.accSagittalSharp7v19CUp="",t.accSagittalUnused1="",t.accSagittalUnused2="",t.accSagittalUnused3="",t.accSagittalUnused4="",t.accdnCombDot="",t.accdnCombLH2RanksEmpty="",t.accdnCombLH3RanksEmptySquare="",t.accdnCombRH3RanksEmpty="",t.accdnCombRH4RanksEmpty="",t.accdnDiatonicClef="",t.accdnLH2Ranks16Round="",t.accdnLH2Ranks8Plus16Round="",t.accdnLH2Ranks8Round="",t.accdnLH2RanksFullMasterRound="",t.accdnLH2RanksMasterPlus16Round="",t.accdnLH2RanksMasterRound="",t.accdnLH3Ranks2Plus8Square="",t.accdnLH3Ranks2Square="",t.accdnLH3Ranks8Square="",t.accdnLH3RanksDouble8Square="",t.accdnLH3RanksTuttiSquare="",t.accdnPull="",t.accdnPush="",t.accdnRH3RanksAccordion="",t.accdnRH3RanksAuthenticMusette="",t.accdnRH3RanksBandoneon="",t.accdnRH3RanksBassoon="",t.accdnRH3RanksClarinet="",t.accdnRH3RanksDoubleTremoloLower8ve="",t.accdnRH3RanksDoubleTremoloUpper8ve="",t.accdnRH3RanksFullFactory="",t.accdnRH3RanksHarmonium="",t.accdnRH3RanksImitationMusette="",t.accdnRH3RanksLowerTremolo8="",t.accdnRH3RanksMaster="",t.accdnRH3RanksOboe="",t.accdnRH3RanksOrgan="",t.accdnRH3RanksPiccolo="",t.accdnRH3RanksTremoloLower8ve="",t.accdnRH3RanksTremoloUpper8ve="",t.accdnRH3RanksTwoChoirs="",t.accdnRH3RanksUpperTremolo8="",t.accdnRH3RanksViolin="",t.accdnRH4RanksAlto="",t.accdnRH4RanksBassAlto="",t.accdnRH4RanksMaster="",t.accdnRH4RanksSoftBass="",t.accdnRH4RanksSoftTenor="",t.accdnRH4RanksSoprano="",t.accdnRH4RanksTenor="",t.accdnRicochet2="",t.accdnRicochet3="",t.accdnRicochet4="",t.accdnRicochet5="",t.accdnRicochet6="",t.accdnRicochetStem2="",t.accdnRicochetStem3="",t.accdnRicochetStem4="",t.accdnRicochetStem5="",t.accdnRicochetStem6="",t.accidental1CommaFlat="",t.accidental1CommaSharp="",t.accidental2CommaFlat="",t.accidental2CommaSharp="",t.accidental3CommaFlat="",t.accidental3CommaSharp="",t.accidental4CommaFlat="",t.accidental5CommaSharp="",t.accidentalArrowDown="",t.accidentalArrowUp="",t.accidentalBakiyeFlat="",t.accidentalBakiyeSharp="",t.accidentalBracketLeft="",t.accidentalBracketRight="",t.accidentalBuyukMucennebFlat="",t.accidentalBuyukMucennebSharp="",t.accidentalCombiningCloseCurlyBrace="",t.accidentalCombiningLower17Schisma="",t.accidentalCombiningLower19Schisma="",t.accidentalCombiningLower23Limit29LimitComma="",t.accidentalCombiningLower29LimitComma="",t.accidentalCombiningLower31Schisma="",t.accidentalCombiningLower37Quartertone="",t.accidentalCombiningLower41Comma="",t.accidentalCombiningLower43Comma="",t.accidentalCombiningLower47Quartertone="",t.accidentalCombiningLower53LimitComma="",t.accidentalCombiningOpenCurlyBrace="",t.accidentalCombiningRaise17Schisma="",t.accidentalCombiningRaise19Schisma="",t.accidentalCombiningRaise23Limit29LimitComma="",t.accidentalCombiningRaise29LimitComma="",t.accidentalCombiningRaise31Schisma="",t.accidentalCombiningRaise37Quartertone="",t.accidentalCombiningRaise41Comma="",t.accidentalCombiningRaise43Comma="",t.accidentalCombiningRaise47Quartertone="",t.accidentalCombiningRaise53LimitComma="",t.accidentalCommaSlashDown="",t.accidentalCommaSlashUp="",t.accidentalDoubleFlat="",t.accidentalDoubleFlatArabic="",t.accidentalDoubleFlatEqualTempered="",t.accidentalDoubleFlatOneArrowDown="",t.accidentalDoubleFlatOneArrowUp="",t.accidentalDoubleFlatReversed="",t.accidentalDoubleFlatThreeArrowsDown="",t.accidentalDoubleFlatThreeArrowsUp="",t.accidentalDoubleFlatTurned="",t.accidentalDoubleFlatTwoArrowsDown="",t.accidentalDoubleFlatTwoArrowsUp="",t.accidentalDoubleSharp="",t.accidentalDoubleSharpArabic="",t.accidentalDoubleSharpEqualTempered="",t.accidentalDoubleSharpOneArrowDown="",t.accidentalDoubleSharpOneArrowUp="",t.accidentalDoubleSharpThreeArrowsDown="",t.accidentalDoubleSharpThreeArrowsUp="",t.accidentalDoubleSharpTwoArrowsDown="",t.accidentalDoubleSharpTwoArrowsUp="",t.accidentalEnharmonicAlmostEqualTo="",t.accidentalEnharmonicEquals="",t.accidentalEnharmonicTilde="",t.accidentalFilledReversedFlatAndFlat="",t.accidentalFilledReversedFlatAndFlatArrowDown="",t.accidentalFilledReversedFlatAndFlatArrowUp="",t.accidentalFilledReversedFlatArrowDown="",t.accidentalFilledReversedFlatArrowUp="",t.accidentalFiveQuarterTonesFlatArrowDown="",t.accidentalFiveQuarterTonesSharpArrowUp="",t.accidentalFlat="",t.accidentalFlatArabic="",t.accidentalFlatEqualTempered="",t.accidentalFlatLoweredStockhausen="",t.accidentalFlatOneArrowDown="",t.accidentalFlatOneArrowUp="",t.accidentalFlatRaisedStockhausen="",t.accidentalFlatRepeatedLineStockhausen="",t.accidentalFlatRepeatedSpaceStockhausen="",t.accidentalFlatThreeArrowsDown="",t.accidentalFlatThreeArrowsUp="",t.accidentalFlatTurned="",t.accidentalFlatTwoArrowsDown="",t.accidentalFlatTwoArrowsUp="",t.accidentalHabaFlatQuarterToneHigher="",t.accidentalHabaFlatThreeQuarterTonesLower="",t.accidentalHabaQuarterToneHigher="",t.accidentalHabaQuarterToneLower="",t.accidentalHabaSharpQuarterToneLower="",t.accidentalHabaSharpThreeQuarterTonesHigher="",t.accidentalHalfSharpArrowDown="",t.accidentalHalfSharpArrowUp="",t.accidentalJohnston13="",t.accidentalJohnston31="",t.accidentalJohnstonDown="",t.accidentalJohnstonEl="",t.accidentalJohnstonMinus="",t.accidentalJohnstonPlus="",t.accidentalJohnstonSeven="",t.accidentalJohnstonUp="",t.accidentalKomaFlat="",t.accidentalKomaSharp="",t.accidentalKoron="",t.accidentalKucukMucennebFlat="",t.accidentalKucukMucennebSharp="",t.accidentalLargeDoubleSharp="",t.accidentalLowerOneSeptimalComma="",t.accidentalLowerOneTridecimalQuartertone="",t.accidentalLowerOneUndecimalQuartertone="",t.accidentalLowerTwoSeptimalCommas="",t.accidentalLoweredStockhausen="",t.accidentalNarrowReversedFlat="",t.accidentalNarrowReversedFlatAndFlat="",t.accidentalNatural="",t.accidentalNaturalArabic="",t.accidentalNaturalEqualTempered="",t.accidentalNaturalFlat="",t.accidentalNaturalLoweredStockhausen="",t.accidentalNaturalOneArrowDown="",t.accidentalNaturalOneArrowUp="",t.accidentalNaturalRaisedStockhausen="",t.accidentalNaturalReversed="",t.accidentalNaturalSharp="",t.accidentalNaturalThreeArrowsDown="",t.accidentalNaturalThreeArrowsUp="",t.accidentalNaturalTwoArrowsDown="",t.accidentalNaturalTwoArrowsUp="",t.accidentalOneAndAHalfSharpsArrowDown="",t.accidentalOneAndAHalfSharpsArrowUp="",t.accidentalOneQuarterToneFlatFerneyhough="",t.accidentalOneQuarterToneFlatStockhausen="",t.accidentalOneQuarterToneSharpFerneyhough="",t.accidentalOneQuarterToneSharpStockhausen="",t.accidentalOneThirdToneFlatFerneyhough="",t.accidentalOneThirdToneSharpFerneyhough="",t.accidentalParensLeft="",t.accidentalParensRight="",t.accidentalQuarterFlatEqualTempered="",t.accidentalQuarterSharpEqualTempered="",t.accidentalQuarterToneFlat4="",t.accidentalQuarterToneFlatArabic="",t.accidentalQuarterToneFlatArrowUp="",t.accidentalQuarterToneFlatFilledReversed="",t.accidentalQuarterToneFlatNaturalArrowDown="",t.accidentalQuarterToneFlatPenderecki="",t.accidentalQuarterToneFlatStein="",t.accidentalQuarterToneFlatVanBlankenburg="",t.accidentalQuarterToneSharp4="",t.accidentalQuarterToneSharpArabic="",t.accidentalQuarterToneSharpArrowDown="",t.accidentalQuarterToneSharpBusotti="",t.accidentalQuarterToneSharpNaturalArrowUp="",t.accidentalQuarterToneSharpStein="",t.accidentalQuarterToneSharpWiggle="",t.accidentalRaiseOneSeptimalComma="",t.accidentalRaiseOneTridecimalQuartertone="",t.accidentalRaiseOneUndecimalQuartertone="",t.accidentalRaiseTwoSeptimalCommas="",t.accidentalRaisedStockhausen="",t.accidentalReversedFlatAndFlatArrowDown="",t.accidentalReversedFlatAndFlatArrowUp="",t.accidentalReversedFlatArrowDown="",t.accidentalReversedFlatArrowUp="",t.accidentalSharp="",t.accidentalSharpArabic="",t.accidentalSharpEqualTempered="",t.accidentalSharpLoweredStockhausen="",t.accidentalSharpOneArrowDown="",t.accidentalSharpOneArrowUp="",t.accidentalSharpOneHorizontalStroke="",t.accidentalSharpRaisedStockhausen="",t.accidentalSharpRepeatedLineStockhausen="",t.accidentalSharpRepeatedSpaceStockhausen="",t.accidentalSharpReversed="",t.accidentalSharpSharp="",t.accidentalSharpThreeArrowsDown="",t.accidentalSharpThreeArrowsUp="",t.accidentalSharpTwoArrowsDown="",t.accidentalSharpTwoArrowsUp="",t.accidentalSims12Down="",t.accidentalSims12Up="",t.accidentalSims4Down="",t.accidentalSims4Up="",t.accidentalSims6Down="",t.accidentalSims6Up="",t.accidentalSori="",t.accidentalTavenerFlat="",t.accidentalTavenerSharp="",t.accidentalThreeQuarterTonesFlatArabic="",t.accidentalThreeQuarterTonesFlatArrowDown="",t.accidentalThreeQuarterTonesFlatArrowUp="",t.accidentalThreeQuarterTonesFlatCouper="",t.accidentalThreeQuarterTonesFlatGrisey="",t.accidentalThreeQuarterTonesFlatTartini="",t.accidentalThreeQuarterTonesFlatZimmermann="",t.accidentalThreeQuarterTonesSharpArabic="",t.accidentalThreeQuarterTonesSharpArrowDown="",t.accidentalThreeQuarterTonesSharpArrowUp="",t.accidentalThreeQuarterTonesSharpBusotti="",t.accidentalThreeQuarterTonesSharpStein="",t.accidentalThreeQuarterTonesSharpStockhausen="",t.accidentalTripleFlat="",t.accidentalTripleSharp="",t.accidentalTwoThirdTonesFlatFerneyhough="",t.accidentalTwoThirdTonesSharpFerneyhough="",t.accidentalUpsAndDownsDown="",t.accidentalUpsAndDownsLess="",t.accidentalUpsAndDownsMore="",t.accidentalUpsAndDownsUp="",t.accidentalWilsonMinus="",t.accidentalWilsonPlus="",t.accidentalWyschnegradsky10TwelfthsFlat="",t.accidentalWyschnegradsky10TwelfthsSharp="",t.accidentalWyschnegradsky11TwelfthsFlat="",t.accidentalWyschnegradsky11TwelfthsSharp="",t.accidentalWyschnegradsky1TwelfthsFlat="",t.accidentalWyschnegradsky1TwelfthsSharp="",t.accidentalWyschnegradsky2TwelfthsFlat="",t.accidentalWyschnegradsky2TwelfthsSharp="",t.accidentalWyschnegradsky3TwelfthsFlat="",t.accidentalWyschnegradsky3TwelfthsSharp="",t.accidentalWyschnegradsky4TwelfthsFlat="",t.accidentalWyschnegradsky4TwelfthsSharp="",t.accidentalWyschnegradsky5TwelfthsFlat="",t.accidentalWyschnegradsky5TwelfthsSharp="",t.accidentalWyschnegradsky6TwelfthsFlat="",t.accidentalWyschnegradsky6TwelfthsSharp="",t.accidentalWyschnegradsky7TwelfthsFlat="",t.accidentalWyschnegradsky7TwelfthsSharp="",t.accidentalWyschnegradsky8TwelfthsFlat="",t.accidentalWyschnegradsky8TwelfthsSharp="",t.accidentalWyschnegradsky9TwelfthsFlat="",t.accidentalWyschnegradsky9TwelfthsSharp="",t.accidentalXenakisOneThirdToneSharp="",t.accidentalXenakisTwoThirdTonesSharp="",t.analyticsChoralmelodie="",t.analyticsEndStimme="",t.analyticsHauptrhythmus="",t.analyticsHauptstimme="",t.analyticsInversion1="",t.analyticsNebenstimme="",t.analyticsStartStimme="",t.analyticsTheme="",t.analyticsTheme1="",t.analyticsThemeInversion="",t.analyticsThemeRetrograde="",t.analyticsThemeRetrogradeInversion="",t.arpeggiato="",t.arpeggiatoDown="",t.arpeggiatoUp="",t.arrowBlackDown="",t.arrowBlackDownLeft="",t.arrowBlackDownRight="",t.arrowBlackLeft="",t.arrowBlackRight="",t.arrowBlackUp="",t.arrowBlackUpLeft="",t.arrowBlackUpRight="",t.arrowOpenDown="",t.arrowOpenDownLeft="",t.arrowOpenDownRight="",t.arrowOpenLeft="",t.arrowOpenRight="",t.arrowOpenUp="",t.arrowOpenUpLeft="",t.arrowOpenUpRight="",t.arrowWhiteDown="",t.arrowWhiteDownLeft="",t.arrowWhiteDownRight="",t.arrowWhiteLeft="",t.arrowWhiteRight="",t.arrowWhiteUp="",t.arrowWhiteUpLeft="",t.arrowWhiteUpRight="",t.arrowheadBlackDown="",t.arrowheadBlackDownLeft="",t.arrowheadBlackDownRight="",t.arrowheadBlackLeft="",t.arrowheadBlackRight="",t.arrowheadBlackUp="",t.arrowheadBlackUpLeft="",t.arrowheadBlackUpRight="",t.arrowheadOpenDown="",t.arrowheadOpenDownLeft="",t.arrowheadOpenDownRight="",t.arrowheadOpenLeft="",t.arrowheadOpenRight="",t.arrowheadOpenUp="",t.arrowheadOpenUpLeft="",t.arrowheadOpenUpRight="",t.arrowheadWhiteDown="",t.arrowheadWhiteDownLeft="",t.arrowheadWhiteDownRight="",t.arrowheadWhiteLeft="",t.arrowheadWhiteRight="",t.arrowheadWhiteUp="",t.arrowheadWhiteUpLeft="",t.arrowheadWhiteUpRight="",t.articAccentAbove="",t.articAccentBelow="",t.articAccentStaccatoAbove="",t.articAccentStaccatoBelow="",t.articLaissezVibrerAbove="",t.articLaissezVibrerBelow="",t.articMarcatoAbove="",t.articMarcatoBelow="",t.articMarcatoStaccatoAbove="",t.articMarcatoStaccatoBelow="",t.articMarcatoTenutoAbove="",t.articMarcatoTenutoBelow="",t.articSoftAccentAbove="",t.articSoftAccentBelow="",t.articSoftAccentStaccatoAbove="",t.articSoftAccentStaccatoBelow="",t.articSoftAccentTenutoAbove="",t.articSoftAccentTenutoBelow="",t.articSoftAccentTenutoStaccatoAbove="",t.articSoftAccentTenutoStaccatoBelow="",t.articStaccatissimoAbove="",t.articStaccatissimoBelow="",t.articStaccatissimoStrokeAbove="",t.articStaccatissimoStrokeBelow="",t.articStaccatissimoWedgeAbove="",t.articStaccatissimoWedgeBelow="",t.articStaccatoAbove="",t.articStaccatoBelow="",t.articStressAbove="",t.articStressBelow="",t.articTenutoAbove="",t.articTenutoAccentAbove="",t.articTenutoAccentBelow="",t.articTenutoBelow="",t.articTenutoStaccatoAbove="",t.articTenutoStaccatoBelow="",t.articUnstressAbove="",t.articUnstressBelow="",t.augmentationDot="",t.barlineDashed="",t.barlineDotted="",t.barlineDouble="",t.barlineFinal="",t.barlineHeavy="",t.barlineHeavyHeavy="",t.barlineReverseFinal="",t.barlineShort="",t.barlineSingle="",t.barlineTick="",t.beamAccelRit1="",t.beamAccelRit10="",t.beamAccelRit11="",t.beamAccelRit12="",t.beamAccelRit13="",t.beamAccelRit14="",t.beamAccelRit15="",t.beamAccelRit2="",t.beamAccelRit3="",t.beamAccelRit4="",t.beamAccelRit5="",t.beamAccelRit6="",t.beamAccelRit7="",t.beamAccelRit8="",t.beamAccelRit9="",t.beamAccelRitFinal="",t.brace="",t.bracket="",t.bracketBottom="",t.bracketTop="",t.brassBend="",t.brassDoitLong="",t.brassDoitMedium="",t.brassDoitShort="",t.brassFallLipLong="",t.brassFallLipMedium="",t.brassFallLipShort="",t.brassFallRoughLong="",t.brassFallRoughMedium="",t.brassFallRoughShort="",t.brassFallSmoothLong="",t.brassFallSmoothMedium="",t.brassFallSmoothShort="",t.brassFlip="",t.brassHarmonMuteClosed="",t.brassHarmonMuteStemHalfLeft="",t.brassHarmonMuteStemHalfRight="",t.brassHarmonMuteStemOpen="",t.brassJazzTurn="",t.brassLiftLong="",t.brassLiftMedium="",t.brassLiftShort="",t.brassLiftSmoothLong="",t.brassLiftSmoothMedium="",t.brassLiftSmoothShort="",t.brassMuteClosed="",t.brassMuteHalfClosed="",t.brassMuteOpen="",t.brassPlop="",t.brassScoop="",t.brassSmear="",t.brassValveTrill="",t.breathMarkComma="",t.breathMarkSalzedo="",t.breathMarkTick="",t.breathMarkUpbow="",t.bridgeClef="",t.buzzRoll="",t.cClef="",t.cClef8vb="",t.cClefArrowDown="",t.cClefArrowUp="",t.cClefChange="",t.cClefCombining="",t.cClefReversed="",t.cClefSquare="",t.caesura="",t.caesuraCurved="",t.caesuraShort="",t.caesuraSingleStroke="",t.caesuraThick="",t.chantAccentusAbove="",t.chantAccentusBelow="",t.chantAuctumAsc="",t.chantAuctumDesc="",t.chantAugmentum="",t.chantCaesura="",t.chantCclef="",t.chantCirculusAbove="",t.chantCirculusBelow="",t.chantConnectingLineAsc2nd="",t.chantConnectingLineAsc3rd="",t.chantConnectingLineAsc4th="",t.chantConnectingLineAsc5th="",t.chantConnectingLineAsc6th="",t.chantCustosStemDownPosHigh="",t.chantCustosStemDownPosHighest="",t.chantCustosStemDownPosMiddle="",t.chantCustosStemUpPosLow="",t.chantCustosStemUpPosLowest="",t.chantCustosStemUpPosMiddle="",t.chantDeminutumLower="",t.chantDeminutumUpper="",t.chantDivisioFinalis="",t.chantDivisioMaior="",t.chantDivisioMaxima="",t.chantDivisioMinima="",t.chantEntryLineAsc2nd="",t.chantEntryLineAsc3rd="",t.chantEntryLineAsc4th="",t.chantEntryLineAsc5th="",t.chantEntryLineAsc6th="",t.chantEpisema="",t.chantFclef="",t.chantIctusAbove="",t.chantIctusBelow="",t.chantLigaturaDesc2nd="",t.chantLigaturaDesc3rd="",t.chantLigaturaDesc4th="",t.chantLigaturaDesc5th="",t.chantOriscusAscending="",t.chantOriscusDescending="",t.chantOriscusLiquescens="",t.chantPodatusLower="",t.chantPodatusUpper="",t.chantPunctum="",t.chantPunctumCavum="",t.chantPunctumDeminutum="",t.chantPunctumInclinatum="",t.chantPunctumInclinatumAuctum="",t.chantPunctumInclinatumDeminutum="",t.chantPunctumLinea="",t.chantPunctumLineaCavum="",t.chantPunctumVirga="",t.chantPunctumVirgaReversed="",t.chantQuilisma="",t.chantSemicirculusAbove="",t.chantSemicirculusBelow="",t.chantStaff="",t.chantStaffNarrow="",t.chantStaffWide="",t.chantStrophicus="",t.chantStrophicusAuctus="",t.chantStrophicusLiquescens2nd="",t.chantStrophicusLiquescens3rd="",t.chantStrophicusLiquescens4th="",t.chantStrophicusLiquescens5th="",t.chantVirgula="",t.clef15="",t.clef8="",t.clefChangeCombining="",t.coda="",t.codaSquare="",t.conductorBeat2Compound="",t.conductorBeat2Simple="",t.conductorBeat3Compound="",t.conductorBeat3Simple="",t.conductorBeat4Compound="",t.conductorBeat4Simple="",t.conductorLeftBeat="",t.conductorRightBeat="",t.conductorStrongBeat="",t.conductorUnconducted="",t.conductorWeakBeat="",t.controlBeginBeam="",t.controlBeginPhrase="",t.controlBeginSlur="",t.controlBeginTie="",t.controlEndBeam="",t.controlEndPhrase="",t.controlEndSlur="",t.controlEndTie="",t.csymAccidentalDoubleFlat="",t.csymAccidentalDoubleSharp="",t.csymAccidentalFlat="",t.csymAccidentalNatural="",t.csymAccidentalSharp="",t.csymAccidentalTripleFlat="",t.csymAccidentalTripleSharp="",t.csymAlteredBassSlash="",t.csymAugmented="",t.csymBracketLeftTall="",t.csymBracketRightTall="",t.csymDiagonalArrangementSlash="",t.csymDiminished="",t.csymHalfDiminished="",t.csymMajorSeventh="",t.csymMinor="",t.csymParensLeftTall="",t.csymParensLeftVeryTall="",t.csymParensRightTall="",t.csymParensRightVeryTall="",t.curlewSign="",t.daCapo="",t.dalSegno="",t.daseianExcellentes1="",t.daseianExcellentes2="",t.daseianExcellentes3="",t.daseianExcellentes4="",t.daseianFinales1="",t.daseianFinales2="",t.daseianFinales3="",t.daseianFinales4="",t.daseianGraves1="",t.daseianGraves2="",t.daseianGraves3="",t.daseianGraves4="",t.daseianResidua1="",t.daseianResidua2="",t.daseianSuperiores1="",t.daseianSuperiores2="",t.daseianSuperiores3="",t.daseianSuperiores4="",t.doubleLateralRollStevens="",t.doubleTongueAbove="",t.doubleTongueBelow="",t.dynamicCombinedSeparatorColon="",t.dynamicCombinedSeparatorHyphen="",t.dynamicCombinedSeparatorSlash="",t.dynamicCombinedSeparatorSpace="",t.dynamicCrescendoHairpin="",t.dynamicDiminuendoHairpin="",t.dynamicFF="",t.dynamicFFF="",t.dynamicFFFF="",t.dynamicFFFFF="",t.dynamicFFFFFF="",t.dynamicForte="",t.dynamicFortePiano="",t.dynamicForzando="",t.dynamicHairpinBracketLeft="",t.dynamicHairpinBracketRight="",t.dynamicHairpinParenthesisLeft="",t.dynamicHairpinParenthesisRight="",t.dynamicMF="",t.dynamicMP="",t.dynamicMessaDiVoce="",t.dynamicMezzo="",t.dynamicNiente="",t.dynamicNienteForHairpin="",t.dynamicPF="",t.dynamicPP="",t.dynamicPPP="",t.dynamicPPPP="",t.dynamicPPPPP="",t.dynamicPPPPPP="",t.dynamicPiano="",t.dynamicRinforzando="",t.dynamicRinforzando1="",t.dynamicRinforzando2="",t.dynamicSforzando="",t.dynamicSforzando1="",t.dynamicSforzandoPianissimo="",t.dynamicSforzandoPiano="",t.dynamicSforzato="",t.dynamicSforzatoFF="",t.dynamicSforzatoPiano="",t.dynamicZ="",t.elecAudioChannelsEight="",t.elecAudioChannelsFive="",t.elecAudioChannelsFour="",t.elecAudioChannelsOne="",t.elecAudioChannelsSeven="",t.elecAudioChannelsSix="",t.elecAudioChannelsThreeFrontal="",t.elecAudioChannelsThreeSurround="",t.elecAudioChannelsTwo="",t.elecAudioIn="",t.elecAudioMono="",t.elecAudioOut="",t.elecAudioStereo="",t.elecCamera="",t.elecDataIn="",t.elecDataOut="",t.elecDisc="",t.elecDownload="",t.elecEject="",t.elecFastForward="",t.elecHeadphones="",t.elecHeadset="",t.elecLineIn="",t.elecLineOut="",t.elecLoop="",t.elecLoudspeaker="",t.elecMIDIController0="",t.elecMIDIController100="",t.elecMIDIController20="",t.elecMIDIController40="",t.elecMIDIController60="",t.elecMIDIController80="",t.elecMIDIIn="",t.elecMIDIOut="",t.elecMicrophone="",t.elecMicrophoneMute="",t.elecMicrophoneUnmute="",t.elecMixingConsole="",t.elecMonitor="",t.elecMute="",t.elecPause="",t.elecPlay="",t.elecPowerOnOff="",t.elecProjector="",t.elecReplay="",t.elecRewind="",t.elecShuffle="",t.elecSkipBackwards="",t.elecSkipForwards="",t.elecStop="",t.elecTape="",t.elecUSB="",t.elecUnmute="",t.elecUpload="",t.elecVideoCamera="",t.elecVideoIn="",t.elecVideoOut="",t.elecVolumeFader="",t.elecVolumeFaderThumb="",t.elecVolumeLevel0="",t.elecVolumeLevel100="",t.elecVolumeLevel20="",t.elecVolumeLevel40="",t.elecVolumeLevel60="",t.elecVolumeLevel80="",t.fClef="",t.fClef15ma="",t.fClef15mb="",t.fClef8va="",t.fClef8vb="",t.fClefArrowDown="",t.fClefArrowUp="",t.fClefChange="",t.fClefReversed="",t.fClefTurned="",t.fermataAbove="",t.fermataBelow="",t.fermataLongAbove="",t.fermataLongBelow="",t.fermataLongHenzeAbove="",t.fermataLongHenzeBelow="",t.fermataShortAbove="",t.fermataShortBelow="",t.fermataShortHenzeAbove="",t.fermataShortHenzeBelow="",t.fermataVeryLongAbove="",t.fermataVeryLongBelow="",t.fermataVeryShortAbove="",t.fermataVeryShortBelow="",t.figbass0="",t.figbass1="",t.figbass2="",t.figbass2Raised="",t.figbass3="",t.figbass4="",t.figbass4Raised="",t.figbass5="",t.figbass5Raised1="",t.figbass5Raised2="",t.figbass5Raised3="",t.figbass6="",t.figbass6Raised="",t.figbass6Raised2="",t.figbass7="",t.figbass7Diminished="",t.figbass7Raised1="",t.figbass7Raised2="",t.figbass8="",t.figbass9="",t.figbass9Raised="",t.figbassBracketLeft="",t.figbassBracketRight="",t.figbassCombiningLowering="",t.figbassCombiningRaising="",t.figbassDoubleFlat="",t.figbassDoubleSharp="",t.figbassFlat="",t.figbassNatural="",t.figbassParensLeft="",t.figbassParensRight="",t.figbassPlus="",t.figbassSharp="",t.figbassTripleFlat="",t.figbassTripleSharp="",t.fingering0="",t.fingering0Italic="",t.fingering1="",t.fingering1Italic="",t.fingering2="",t.fingering2Italic="",t.fingering3="",t.fingering3Italic="",t.fingering4="",t.fingering4Italic="",t.fingering5="",t.fingering5Italic="",t.fingering6="",t.fingering6Italic="",t.fingering7="",t.fingering7Italic="",t.fingering8="",t.fingering8Italic="",t.fingering9="",t.fingering9Italic="",t.fingeringALower="",t.fingeringCLower="",t.fingeringELower="",t.fingeringILower="",t.fingeringLeftBracket="",t.fingeringLeftBracketItalic="",t.fingeringLeftParenthesis="",t.fingeringLeftParenthesisItalic="",t.fingeringMLower="",t.fingeringMultipleNotes="",t.fingeringOLower="",t.fingeringPLower="",t.fingeringQLower="",t.fingeringRightBracket="",t.fingeringRightBracketItalic="",t.fingeringRightParenthesis="",t.fingeringRightParenthesisItalic="",t.fingeringSLower="",t.fingeringSeparatorMiddleDot="",t.fingeringSeparatorMiddleDotWhite="",t.fingeringSeparatorSlash="",t.fingeringSubstitutionAbove="",t.fingeringSubstitutionBelow="",t.fingeringSubstitutionDash="",t.fingeringTLower="",t.fingeringTUpper="",t.fingeringXLower="",t.flag1024thDown="",t.flag1024thUp="",t.flag128thDown="",t.flag128thUp="",t.flag16thDown="",t.flag16thUp="",t.flag256thDown="",t.flag256thUp="",t.flag32ndDown="",t.flag32ndUp="",t.flag512thDown="",t.flag512thUp="",t.flag64thDown="",t.flag64thUp="",t.flag8thDown="",t.flag8thUp="",t.flagInternalDown="",t.flagInternalUp="",t.fretboard3String="",t.fretboard3StringNut="",t.fretboard4String="",t.fretboard4StringNut="",t.fretboard5String="",t.fretboard5StringNut="",t.fretboard6String="",t.fretboard6StringNut="",t.fretboardFilledCircle="",t.fretboardO="",t.fretboardX="",t.functionAngleLeft="",t.functionAngleRight="",t.functionBracketLeft="",t.functionBracketRight="",t.functionDD="",t.functionDLower="",t.functionDUpper="",t.functionEight="",t.functionFUpper="",t.functionFive="",t.functionFour="",t.functionGLower="",t.functionGUpper="",t.functionGreaterThan="",t.functionILower="",t.functionIUpper="",t.functionKLower="",t.functionKUpper="",t.functionLLower="",t.functionLUpper="",t.functionLessThan="",t.functionMLower="",t.functionMUpper="",t.functionMinus="",t.functionNLower="",t.functionNUpper="",t.functionNUpperSuperscript="",t.functionNine="",t.functionOne="",t.functionPLower="",t.functionPUpper="",t.functionParensLeft="",t.functionParensRight="",t.functionPlus="",t.functionRLower="",t.functionRepetition1="",t.functionRepetition2="",t.functionRing="",t.functionSLower="",t.functionSSLower="",t.functionSSUpper="",t.functionSUpper="",t.functionSeven="",t.functionSix="",t.functionSlashedDD="",t.functionTLower="",t.functionTUpper="",t.functionThree="",t.functionTwo="",t.functionVLower="",t.functionVUpper="",t.functionZero="",t.gClef="",t.gClef15ma="",t.gClef15mb="",t.gClef8va="",t.gClef8vb="",t.gClef8vbCClef="",t.gClef8vbOld="",t.gClef8vbParens="",t.gClefArrowDown="",t.gClefArrowUp="",t.gClefChange="",t.gClefLigatedNumberAbove="",t.gClefLigatedNumberBelow="",t.gClefReversed="",t.gClefTurned="",t.glissandoDown="",t.glissandoUp="",t.graceNoteAcciaccaturaStemDown="",t.graceNoteAcciaccaturaStemUp="",t.graceNoteAppoggiaturaStemDown="",t.graceNoteAppoggiaturaStemUp="",t.graceNoteSlashStemDown="",t.graceNoteSlashStemUp="",t.guitarBarreFull="",t.guitarBarreHalf="",t.guitarClosePedal="",t.guitarFadeIn="",t.guitarFadeOut="",t.guitarGolpe="",t.guitarHalfOpenPedal="",t.guitarLeftHandTapping="",t.guitarOpenPedal="",t.guitarRightHandTapping="",t.guitarShake="",t.guitarString0="",t.guitarString1="",t.guitarString10="",t.guitarString11="",t.guitarString12="",t.guitarString13="",t.guitarString2="",t.guitarString3="",t.guitarString4="",t.guitarString5="",t.guitarString6="",t.guitarString7="",t.guitarString8="",t.guitarString9="",t.guitarStrumDown="",t.guitarStrumUp="",t.guitarVibratoBarDip="",t.guitarVibratoBarScoop="",t.guitarVibratoStroke="",t.guitarVolumeSwell="",t.guitarWideVibratoStroke="",t.handbellsBelltree="",t.handbellsDamp3="",t.handbellsEcho1="",t.handbellsEcho2="",t.handbellsGyro="",t.handbellsHandMartellato="",t.handbellsMalletBellOnTable="",t.handbellsMalletBellSuspended="",t.handbellsMalletLft="",t.handbellsMartellato="",t.handbellsMartellatoLift="",t.handbellsMutedMartellato="",t.handbellsPluckLift="",t.handbellsSwing="",t.handbellsSwingDown="",t.handbellsSwingUp="",t.handbellsTablePairBells="",t.handbellsTableSingleBell="",t.harpMetalRod="",t.harpPedalCentered="",t.harpPedalDivider="",t.harpPedalLowered="",t.harpPedalRaised="",t.harpSalzedoAeolianAscending="",t.harpSalzedoAeolianDescending="",t.harpSalzedoDampAbove="",t.harpSalzedoDampBelow="",t.harpSalzedoDampBothHands="",t.harpSalzedoDampLowStrings="",t.harpSalzedoFluidicSoundsLeft="",t.harpSalzedoFluidicSoundsRight="",t.harpSalzedoIsolatedSounds="",t.harpSalzedoMetallicSounds="",t.harpSalzedoMetallicSoundsOneString="",t.harpSalzedoMuffleTotally="",t.harpSalzedoOboicFlux="",t.harpSalzedoPlayUpperEnd="",t.harpSalzedoSlideWithSuppleness="",t.harpSalzedoSnareDrum="",t.harpSalzedoTamTamSounds="",t.harpSalzedoThunderEffect="",t.harpSalzedoTimpanicSounds="",t.harpSalzedoWhistlingSounds="",t.harpStringNoiseStem="",t.harpTuningKey="",t.harpTuningKeyGlissando="",t.harpTuningKeyHandle="",t.harpTuningKeyShank="",t.indianDrumClef="",t.kahnBackChug="",t.kahnBackFlap="",t.kahnBackRiff="",t.kahnBackRip="",t.kahnBallChange="",t.kahnBallDig="",t.kahnBrushBackward="",t.kahnBrushForward="",t.kahnChug="",t.kahnClap="",t.kahnDoubleSnap="",t.kahnDoubleWing="",t.kahnDrawStep="",t.kahnDrawTap="",t.kahnFlam="",t.kahnFlap="",t.kahnFlapStep="",t.kahnFlat="",t.kahnFleaHop="",t.kahnFleaTap="",t.kahnGraceTap="",t.kahnGraceTapChange="",t.kahnGraceTapHop="",t.kahnGraceTapStamp="",t.kahnHeel="",t.kahnHeelChange="",t.kahnHeelClick="",t.kahnHeelDrop="",t.kahnHeelStep="",t.kahnHeelTap="",t.kahnHop="",t.kahnJumpApart="",t.kahnJumpTogether="",t.kahnKneeInward="",t.kahnKneeOutward="",t.kahnLeap="",t.kahnLeapFlatFoot="",t.kahnLeapHeelClick="",t.kahnLeftCatch="",t.kahnLeftCross="",t.kahnLeftFoot="",t.kahnLeftToeStrike="",t.kahnLeftTurn="",t.kahnOverTheTop="",t.kahnOverTheTopTap="",t.kahnPull="",t.kahnPush="",t.kahnRiff="",t.kahnRiffle="",t.kahnRightCatch="",t.kahnRightCross="",t.kahnRightFoot="",t.kahnRightToeStrike="",t.kahnRightTurn="",t.kahnRip="",t.kahnRipple="",t.kahnScrape="",t.kahnScuff="",t.kahnScuffle="",t.kahnShuffle="",t.kahnSlam="",t.kahnSlap="",t.kahnSlideStep="",t.kahnSlideTap="",t.kahnSnap="",t.kahnStamp="",t.kahnStampStamp="",t.kahnStep="",t.kahnStepStamp="",t.kahnStomp="",t.kahnStompBrush="",t.kahnTap="",t.kahnToe="",t.kahnToeClick="",t.kahnToeDrop="",t.kahnToeStep="",t.kahnToeTap="",t.kahnTrench="",t.kahnWing="",t.kahnWingChange="",t.kahnZank="",t.kahnZink="",t.keyboardBebung2DotsAbove="",t.keyboardBebung2DotsBelow="",t.keyboardBebung3DotsAbove="",t.keyboardBebung3DotsBelow="",t.keyboardBebung4DotsAbove="",t.keyboardBebung4DotsBelow="",t.keyboardLeftPedalPictogram="",t.keyboardMiddlePedalPictogram="",t.keyboardPedalD="",t.keyboardPedalDot="",t.keyboardPedalE="",t.keyboardPedalHalf="",t.keyboardPedalHalf2="",t.keyboardPedalHalf3="",t.keyboardPedalHeel1="",t.keyboardPedalHeel2="",t.keyboardPedalHeel3="",t.keyboardPedalHeelToToe="",t.keyboardPedalHeelToe="",t.keyboardPedalHookEnd="",t.keyboardPedalHookStart="",t.keyboardPedalHyphen="",t.keyboardPedalP="",t.keyboardPedalParensLeft="",t.keyboardPedalParensRight="",t.keyboardPedalPed="",t.keyboardPedalS="",t.keyboardPedalSost="",t.keyboardPedalToe1="",t.keyboardPedalToe2="",t.keyboardPedalToeToHeel="",t.keyboardPedalUp="",t.keyboardPedalUpNotch="",t.keyboardPedalUpSpecial="",t.keyboardPlayWithLH="",t.keyboardPlayWithLHEnd="",t.keyboardPlayWithRH="",t.keyboardPlayWithRHEnd="",t.keyboardPluckInside="",t.keyboardRightPedalPictogram="",t.kievanAccidentalFlat="",t.kievanAccidentalSharp="",t.kievanAugmentationDot="",t.kievanCClef="",t.kievanEndingSymbol="",t.kievanNote8thStemDown="",t.kievanNote8thStemUp="",t.kievanNoteBeam="",t.kievanNoteHalfStaffLine="",t.kievanNoteHalfStaffSpace="",t.kievanNoteQuarterStemDown="",t.kievanNoteQuarterStemUp="",t.kievanNoteReciting="",t.kievanNoteWhole="",t.kievanNoteWholeFinal="",t.kodalyHandDo="",t.kodalyHandFa="",t.kodalyHandLa="",t.kodalyHandMi="",t.kodalyHandRe="",t.kodalyHandSo="",t.kodalyHandTi="",t.leftRepeatSmall="",t.legerLine="",t.legerLineNarrow="",t.legerLineWide="",t.luteBarlineEndRepeat="",t.luteBarlineFinal="",t.luteBarlineStartRepeat="",t.luteDuration16th="",t.luteDuration32nd="",t.luteDuration8th="",t.luteDurationDoubleWhole="",t.luteDurationHalf="",t.luteDurationQuarter="",t.luteDurationWhole="",t.luteFingeringRHFirst="",t.luteFingeringRHSecond="",t.luteFingeringRHThird="",t.luteFingeringRHThumb="",t.luteFrench10thCourse="",t.luteFrench7thCourse="",t.luteFrench8thCourse="",t.luteFrench9thCourse="",t.luteFrenchAppoggiaturaAbove="",t.luteFrenchAppoggiaturaBelow="",t.luteFrenchFretA="",t.luteFrenchFretB="",t.luteFrenchFretC="",t.luteFrenchFretD="",t.luteFrenchFretE="",t.luteFrenchFretF="",t.luteFrenchFretG="",t.luteFrenchFretH="",t.luteFrenchFretI="",t.luteFrenchFretK="",t.luteFrenchFretL="",t.luteFrenchFretM="",t.luteFrenchFretN="",t.luteFrenchMordentInverted="",t.luteFrenchMordentLower="",t.luteFrenchMordentUpper="",t.luteGermanALower="",t.luteGermanAUpper="",t.luteGermanBLower="",t.luteGermanBUpper="",t.luteGermanCLower="",t.luteGermanCUpper="",t.luteGermanDLower="",t.luteGermanDUpper="",t.luteGermanELower="",t.luteGermanEUpper="",t.luteGermanFLower="",t.luteGermanFUpper="",t.luteGermanGLower="",t.luteGermanGUpper="",t.luteGermanHLower="",t.luteGermanHUpper="",t.luteGermanILower="",t.luteGermanIUpper="",t.luteGermanKLower="",t.luteGermanKUpper="",t.luteGermanLLower="",t.luteGermanLUpper="",t.luteGermanMLower="",t.luteGermanMUpper="",t.luteGermanNLower="",t.luteGermanNUpper="",t.luteGermanOLower="",t.luteGermanPLower="",t.luteGermanQLower="",t.luteGermanRLower="",t.luteGermanSLower="",t.luteGermanTLower="",t.luteGermanVLower="",t.luteGermanXLower="",t.luteGermanYLower="",t.luteGermanZLower="",t.luteItalianClefCSolFaUt="",t.luteItalianClefFFaUt="",t.luteItalianFret0="",t.luteItalianFret1="",t.luteItalianFret2="",t.luteItalianFret3="",t.luteItalianFret4="",t.luteItalianFret5="",t.luteItalianFret6="",t.luteItalianFret7="",t.luteItalianFret8="",t.luteItalianFret9="",t.luteItalianHoldFinger="",t.luteItalianHoldNote="",t.luteItalianReleaseFinger="",t.luteItalianTempoFast="",t.luteItalianTempoNeitherFastNorSlow="",t.luteItalianTempoSlow="",t.luteItalianTempoSomewhatFast="",t.luteItalianTempoVerySlow="",t.luteItalianTimeTriple="",t.luteItalianTremolo="",t.luteItalianVibrato="",t.luteStaff6Lines="",t.luteStaff6LinesNarrow="",t.luteStaff6LinesWide="",t.lyricsElision="",t.lyricsElisionNarrow="",t.lyricsElisionWide="",t.lyricsHyphenBaseline="",t.lyricsHyphenBaselineNonBreaking="",t.lyricsTextRepeat="",t.medRenFlatHardB="",t.medRenFlatSoftB="",t.medRenFlatWithDot="",t.medRenGClefCMN="",t.medRenLiquescenceCMN="",t.medRenLiquescentAscCMN="",t.medRenLiquescentDescCMN="",t.medRenNatural="",t.medRenNaturalWithCross="",t.medRenOriscusCMN="",t.medRenPlicaCMN="",t.medRenPunctumCMN="",t.medRenQuilismaCMN="",t.medRenSharpCroix="",t.medRenStrophicusCMN="",t.mensuralAlterationSign="",t.mensuralBlackBrevis="",t.mensuralBlackBrevisVoid="",t.mensuralBlackDragma="",t.mensuralBlackLonga="",t.mensuralBlackMaxima="",t.mensuralBlackMinima="",t.mensuralBlackMinimaVoid="",t.mensuralBlackSemibrevis="",t.mensuralBlackSemibrevisCaudata="",t.mensuralBlackSemibrevisOblique="",t.mensuralBlackSemibrevisVoid="",t.mensuralBlackSemiminima="",t.mensuralCclef="",t.mensuralCclefPetrucciPosHigh="",t.mensuralCclefPetrucciPosHighest="",t.mensuralCclefPetrucciPosLow="",t.mensuralCclefPetrucciPosLowest="",t.mensuralCclefPetrucciPosMiddle="",t.mensuralColorationEndRound="",t.mensuralColorationEndSquare="",t.mensuralColorationStartRound="",t.mensuralColorationStartSquare="",t.mensuralCombStemDiagonal="",t.mensuralCombStemDown="",t.mensuralCombStemDownFlagExtended="",t.mensuralCombStemDownFlagFlared="",t.mensuralCombStemDownFlagFusa="",t.mensuralCombStemDownFlagLeft="",t.mensuralCombStemDownFlagRight="",t.mensuralCombStemDownFlagSemiminima="",t.mensuralCombStemUp="",t.mensuralCombStemUpFlagExtended="",t.mensuralCombStemUpFlagFlared="",t.mensuralCombStemUpFlagFusa="",t.mensuralCombStemUpFlagLeft="",t.mensuralCombStemUpFlagRight="",t.mensuralCombStemUpFlagSemiminima="",t.mensuralCustosCheckmark="",t.mensuralCustosDown="",t.mensuralCustosTurn="",t.mensuralCustosUp="",t.mensuralFclef="",t.mensuralFclefPetrucci="",t.mensuralGclef="",t.mensuralGclefPetrucci="",t.mensuralModusImperfectumVert="",t.mensuralModusPerfectumVert="",t.mensuralNoteheadLongaBlack="",t.mensuralNoteheadLongaBlackVoid="",t.mensuralNoteheadLongaVoid="",t.mensuralNoteheadLongaWhite="",t.mensuralNoteheadMaximaBlack="",t.mensuralNoteheadMaximaBlackVoid="",t.mensuralNoteheadMaximaVoid="",t.mensuralNoteheadMaximaWhite="",t.mensuralNoteheadMinimaWhite="",t.mensuralNoteheadSemibrevisBlack="",t.mensuralNoteheadSemibrevisBlackVoid="",t.mensuralNoteheadSemibrevisBlackVoidTurned="",t.mensuralNoteheadSemibrevisVoid="",t.mensuralNoteheadSemiminimaWhite="",t.mensuralObliqueAsc2ndBlack="",t.mensuralObliqueAsc2ndBlackVoid="",t.mensuralObliqueAsc2ndVoid="",t.mensuralObliqueAsc2ndWhite="",t.mensuralObliqueAsc3rdBlack="",t.mensuralObliqueAsc3rdBlackVoid="",t.mensuralObliqueAsc3rdVoid="",t.mensuralObliqueAsc3rdWhite="",t.mensuralObliqueAsc4thBlack="",t.mensuralObliqueAsc4thBlackVoid="",t.mensuralObliqueAsc4thVoid="",t.mensuralObliqueAsc4thWhite="",t.mensuralObliqueAsc5thBlack="",t.mensuralObliqueAsc5thBlackVoid="",t.mensuralObliqueAsc5thVoid="",t.mensuralObliqueAsc5thWhite="",t.mensuralObliqueDesc2ndBlack="",t.mensuralObliqueDesc2ndBlackVoid="",t.mensuralObliqueDesc2ndVoid="",t.mensuralObliqueDesc2ndWhite="",t.mensuralObliqueDesc3rdBlack="",t.mensuralObliqueDesc3rdBlackVoid="",t.mensuralObliqueDesc3rdVoid="",t.mensuralObliqueDesc3rdWhite="",t.mensuralObliqueDesc4thBlack="",t.mensuralObliqueDesc4thBlackVoid="",t.mensuralObliqueDesc4thVoid="",t.mensuralObliqueDesc4thWhite="",t.mensuralObliqueDesc5thBlack="",t.mensuralObliqueDesc5thBlackVoid="",t.mensuralObliqueDesc5thVoid="",t.mensuralObliqueDesc5thWhite="",t.mensuralProlation1="",t.mensuralProlation10="",t.mensuralProlation11="",t.mensuralProlation2="",t.mensuralProlation3="",t.mensuralProlation4="",t.mensuralProlation5="",t.mensuralProlation6="",t.mensuralProlation7="",t.mensuralProlation8="",t.mensuralProlation9="",t.mensuralProlationCombiningDot="",t.mensuralProlationCombiningDotVoid="",t.mensuralProlationCombiningStroke="",t.mensuralProlationCombiningThreeDots="",t.mensuralProlationCombiningThreeDotsTri="",t.mensuralProlationCombiningTwoDots="",t.mensuralProportion1="",t.mensuralProportion2="",t.mensuralProportion3="",t.mensuralProportion4="",t.mensuralProportion5="",t.mensuralProportion6="",t.mensuralProportion7="",t.mensuralProportion8="",t.mensuralProportion9="",t.mensuralProportionMajor="",t.mensuralProportionMinor="",t.mensuralProportionProportioDupla1="",t.mensuralProportionProportioDupla2="",t.mensuralProportionProportioQuadrupla="",t.mensuralProportionProportioTripla="",t.mensuralProportionTempusPerfectum="",t.mensuralRestBrevis="",t.mensuralRestFusa="",t.mensuralRestLongaImperfecta="",t.mensuralRestLongaPerfecta="",t.mensuralRestMaxima="",t.mensuralRestMinima="",t.mensuralRestSemibrevis="",t.mensuralRestSemifusa="",t.mensuralRestSemiminima="",t.mensuralSignumDown="",t.mensuralSignumUp="",t.mensuralTempusImperfectumHoriz="",t.mensuralTempusPerfectumHoriz="",t.mensuralWhiteBrevis="",t.mensuralWhiteFusa="",t.mensuralWhiteLonga="",t.mensuralWhiteMaxima="",t.mensuralWhiteMinima="",t.mensuralWhiteSemibrevis="",t.mensuralWhiteSemiminima="",t.metAugmentationDot="",t.metNote1024thDown="",t.metNote1024thUp="",t.metNote128thDown="",t.metNote128thUp="",t.metNote16thDown="",t.metNote16thUp="",t.metNote256thDown="",t.metNote256thUp="",t.metNote32ndDown="",t.metNote32ndUp="",t.metNote512thDown="",t.metNote512thUp="",t.metNote64thDown="",t.metNote64thUp="",t.metNote8thDown="",t.metNote8thUp="",t.metNoteDoubleWhole="",t.metNoteDoubleWholeSquare="",t.metNoteHalfDown="",t.metNoteHalfUp="",t.metNoteQuarterDown="",t.metNoteQuarterUp="",t.metNoteWhole="",t.metricModulationArrowLeft="",t.metricModulationArrowRight="",t.miscDoNotCopy="",t.miscDoNotPhotocopy="",t.miscEyeglasses="",t.note1024thDown="",t.note1024thUp="",t.note128thDown="",t.note128thUp="",t.note16thDown="",t.note16thUp="",t.note256thDown="",t.note256thUp="",t.note32ndDown="",t.note32ndUp="",t.note512thDown="",t.note512thUp="",t.note64thDown="",t.note64thUp="",t.note8thDown="",t.note8thUp="",t.noteABlack="",t.noteAFlatBlack="",t.noteAFlatHalf="",t.noteAFlatWhole="",t.noteAHalf="",t.noteASharpBlack="",t.noteASharpHalf="",t.noteASharpWhole="",t.noteAWhole="",t.noteBBlack="",t.noteBFlatBlack="",t.noteBFlatHalf="",t.noteBFlatWhole="",t.noteBHalf="",t.noteBSharpBlack="",t.noteBSharpHalf="",t.noteBSharpWhole="",t.noteBWhole="",t.noteCBlack="",t.noteCFlatBlack="",t.noteCFlatHalf="",t.noteCFlatWhole="",t.noteCHalf="",t.noteCSharpBlack="",t.noteCSharpHalf="",t.noteCSharpWhole="",t.noteCWhole="",t.noteDBlack="",t.noteDFlatBlack="",t.noteDFlatHalf="",t.noteDFlatWhole="",t.noteDHalf="",t.noteDSharpBlack="",t.noteDSharpHalf="",t.noteDSharpWhole="",t.noteDWhole="",t.noteDiBlack="",t.noteDiHalf="",t.noteDiWhole="",t.noteDoBlack="",t.noteDoHalf="",t.noteDoWhole="",t.noteDoubleWhole="",t.noteDoubleWholeSquare="",t.noteEBlack="",t.noteEFlatBlack="",t.noteEFlatHalf="",t.noteEFlatWhole="",t.noteEHalf="",t.noteESharpBlack="",t.noteESharpHalf="",t.noteESharpWhole="",t.noteEWhole="",t.noteEmptyBlack="",t.noteEmptyHalf="",t.noteEmptyWhole="",t.noteFBlack="",t.noteFFlatBlack="",t.noteFFlatHalf="",t.noteFFlatWhole="",t.noteFHalf="",t.noteFSharpBlack="",t.noteFSharpHalf="",t.noteFSharpWhole="",t.noteFWhole="",t.noteFaBlack="",t.noteFaHalf="",t.noteFaWhole="",t.noteFiBlack="",t.noteFiHalf="",t.noteFiWhole="",t.noteGBlack="",t.noteGFlatBlack="",t.noteGFlatHalf="",t.noteGFlatWhole="",t.noteGHalf="",t.noteGSharpBlack="",t.noteGSharpHalf="",t.noteGSharpWhole="",t.noteGWhole="",t.noteHBlack="",t.noteHHalf="",t.noteHSharpBlack="",t.noteHSharpHalf="",t.noteHSharpWhole="",t.noteHWhole="",t.noteHalfDown="",t.noteHalfUp="",t.noteLaBlack="",t.noteLaHalf="",t.noteLaWhole="",t.noteLeBlack="",t.noteLeHalf="",t.noteLeWhole="",t.noteLiBlack="",t.noteLiHalf="",t.noteLiWhole="",t.noteMeBlack="",t.noteMeHalf="",t.noteMeWhole="",t.noteMiBlack="",t.noteMiHalf="",t.noteMiWhole="",t.noteQuarterDown="",t.noteQuarterUp="",t.noteRaBlack="",t.noteRaHalf="",t.noteRaWhole="",t.noteReBlack="",t.noteReHalf="",t.noteReWhole="",t.noteRiBlack="",t.noteRiHalf="",t.noteRiWhole="",t.noteSeBlack="",t.noteSeHalf="",t.noteSeWhole="",t.noteShapeArrowheadLeftBlack="",t.noteShapeArrowheadLeftDoubleWhole="",t.noteShapeArrowheadLeftWhite="",t.noteShapeDiamondBlack="",t.noteShapeDiamondDoubleWhole="",t.noteShapeDiamondWhite="",t.noteShapeIsoscelesTriangleBlack="",t.noteShapeIsoscelesTriangleDoubleWhole="",t.noteShapeIsoscelesTriangleWhite="",t.noteShapeKeystoneBlack="",t.noteShapeKeystoneDoubleWhole="",t.noteShapeKeystoneWhite="",t.noteShapeMoonBlack="",t.noteShapeMoonDoubleWhole="",t.noteShapeMoonLeftBlack="",t.noteShapeMoonLeftDoubleWhole="",t.noteShapeMoonLeftWhite="",t.noteShapeMoonWhite="",t.noteShapeQuarterMoonBlack="",t.noteShapeQuarterMoonDoubleWhole="",t.noteShapeQuarterMoonWhite="",t.noteShapeRoundBlack="",t.noteShapeRoundDoubleWhole="",t.noteShapeRoundWhite="",t.noteShapeSquareBlack="",t.noteShapeSquareDoubleWhole="",t.noteShapeSquareWhite="",t.noteShapeTriangleLeftBlack="",t.noteShapeTriangleLeftDoubleWhole="",t.noteShapeTriangleLeftWhite="",t.noteShapeTriangleRightBlack="",t.noteShapeTriangleRightDoubleWhole="",t.noteShapeTriangleRightWhite="",t.noteShapeTriangleRoundBlack="",t.noteShapeTriangleRoundDoubleWhole="",t.noteShapeTriangleRoundLeftBlack="",t.noteShapeTriangleRoundLeftDoubleWhole="",t.noteShapeTriangleRoundLeftWhite="",t.noteShapeTriangleRoundWhite="",t.noteShapeTriangleUpBlack="",t.noteShapeTriangleUpDoubleWhole="",t.noteShapeTriangleUpWhite="",t.noteSiBlack="",t.noteSiHalf="",t.noteSiWhole="",t.noteSoBlack="",t.noteSoHalf="",t.noteSoWhole="",t.noteTeBlack="",t.noteTeHalf="",t.noteTeWhole="",t.noteTiBlack="",t.noteTiHalf="",t.noteTiWhole="",t.noteWhole="",t.noteheadBlack="",t.noteheadCircleSlash="",t.noteheadCircleX="",t.noteheadCircleXDoubleWhole="",t.noteheadCircleXHalf="",t.noteheadCircleXWhole="",t.noteheadCircledBlack="",t.noteheadCircledBlackLarge="",t.noteheadCircledDoubleWhole="",t.noteheadCircledDoubleWholeLarge="",t.noteheadCircledHalf="",t.noteheadCircledHalfLarge="",t.noteheadCircledWhole="",t.noteheadCircledWholeLarge="",t.noteheadCircledXLarge="",t.noteheadClusterDoubleWhole2nd="",t.noteheadClusterDoubleWhole3rd="",t.noteheadClusterDoubleWholeBottom="",t.noteheadClusterDoubleWholeMiddle="",t.noteheadClusterDoubleWholeTop="",t.noteheadClusterHalf2nd="",t.noteheadClusterHalf3rd="",t.noteheadClusterHalfBottom="",t.noteheadClusterHalfMiddle="",t.noteheadClusterHalfTop="",t.noteheadClusterQuarter2nd="",t.noteheadClusterQuarter3rd="",t.noteheadClusterQuarterBottom="",t.noteheadClusterQuarterMiddle="",t.noteheadClusterQuarterTop="",t.noteheadClusterRoundBlack="",t.noteheadClusterRoundWhite="",t.noteheadClusterSquareBlack="",t.noteheadClusterSquareWhite="",t.noteheadClusterWhole2nd="",t.noteheadClusterWhole3rd="",t.noteheadClusterWholeBottom="",t.noteheadClusterWholeMiddle="",t.noteheadClusterWholeTop="",t.noteheadCowellEleventhNoteSeriesHalf="",t.noteheadCowellEleventhNoteSeriesWhole="",t.noteheadCowellEleventhSeriesBlack="",t.noteheadCowellFifteenthNoteSeriesBlack="",t.noteheadCowellFifteenthNoteSeriesHalf="",t.noteheadCowellFifteenthNoteSeriesWhole="",t.noteheadCowellFifthNoteSeriesBlack="",t.noteheadCowellFifthNoteSeriesHalf="",t.noteheadCowellFifthNoteSeriesWhole="",t.noteheadCowellNinthNoteSeriesBlack="",t.noteheadCowellNinthNoteSeriesHalf="",t.noteheadCowellNinthNoteSeriesWhole="",t.noteheadCowellSeventhNoteSeriesBlack="",t.noteheadCowellSeventhNoteSeriesHalf="",t.noteheadCowellSeventhNoteSeriesWhole="",t.noteheadCowellThirdNoteSeriesBlack="",t.noteheadCowellThirdNoteSeriesHalf="",t.noteheadCowellThirdNoteSeriesWhole="",t.noteheadCowellThirteenthNoteSeriesBlack="",t.noteheadCowellThirteenthNoteSeriesHalf="",t.noteheadCowellThirteenthNoteSeriesWhole="",t.noteheadDiamondBlack="",t.noteheadDiamondBlackOld="",t.noteheadDiamondBlackWide="",t.noteheadDiamondClusterBlack2nd="",t.noteheadDiamondClusterBlack3rd="",t.noteheadDiamondClusterBlackBottom="",t.noteheadDiamondClusterBlackMiddle="",t.noteheadDiamondClusterBlackTop="",t.noteheadDiamondClusterWhite2nd="",t.noteheadDiamondClusterWhite3rd="",t.noteheadDiamondClusterWhiteBottom="",t.noteheadDiamondClusterWhiteMiddle="",t.noteheadDiamondClusterWhiteTop="",t.noteheadDiamondDoubleWhole="",t.noteheadDiamondDoubleWholeOld="",t.noteheadDiamondHalf="",t.noteheadDiamondHalfFilled="",t.noteheadDiamondHalfOld="",t.noteheadDiamondHalfWide="",t.noteheadDiamondOpen="",t.noteheadDiamondWhite="",t.noteheadDiamondWhiteWide="",t.noteheadDiamondWhole="",t.noteheadDiamondWholeOld="",t.noteheadDoubleWhole="",t.noteheadDoubleWholeSquare="",t.noteheadDoubleWholeWithX="",t.noteheadHalf="",t.noteheadHalfFilled="",t.noteheadHalfWithX="",t.noteheadHeavyX="",t.noteheadHeavyXHat="",t.noteheadLargeArrowDownBlack="",t.noteheadLargeArrowDownDoubleWhole="",t.noteheadLargeArrowDownHalf="",t.noteheadLargeArrowDownWhole="",t.noteheadLargeArrowUpBlack="",t.noteheadLargeArrowUpDoubleWhole="",t.noteheadLargeArrowUpHalf="",t.noteheadLargeArrowUpWhole="",t.noteheadMoonBlack="",t.noteheadMoonWhite="",t.noteheadNancarrowSine="",t.noteheadNull="",t.noteheadParenthesis="",t.noteheadParenthesisLeft="",t.noteheadParenthesisRight="",t.noteheadPlusBlack="",t.noteheadPlusDoubleWhole="",t.noteheadPlusHalf="",t.noteheadPlusWhole="",t.noteheadRectangularClusterBlackBottom="",t.noteheadRectangularClusterBlackMiddle="",t.noteheadRectangularClusterBlackTop="",t.noteheadRectangularClusterWhiteBottom="",t.noteheadRectangularClusterWhiteMiddle="",t.noteheadRectangularClusterWhiteTop="",t.noteheadRoundBlack="",t.noteheadRoundBlackDoubleSlashed="",t.noteheadRoundBlackLarge="",t.noteheadRoundBlackSlashed="",t.noteheadRoundBlackSlashedLarge="",t.noteheadRoundWhite="",t.noteheadRoundWhiteDoubleSlashed="",t.noteheadRoundWhiteLarge="",t.noteheadRoundWhiteSlashed="",t.noteheadRoundWhiteSlashedLarge="",t.noteheadRoundWhiteWithDot="",t.noteheadRoundWhiteWithDotLarge="",t.noteheadSlashDiamondWhite="",t.noteheadSlashHorizontalEnds="",t.noteheadSlashHorizontalEndsMuted="",t.noteheadSlashVerticalEnds="",t.noteheadSlashVerticalEndsMuted="",t.noteheadSlashVerticalEndsSmall="",t.noteheadSlashWhiteDoubleWhole="",t.noteheadSlashWhiteHalf="",t.noteheadSlashWhiteMuted="",t.noteheadSlashWhiteWhole="",t.noteheadSlashX="",t.noteheadSlashedBlack1="",t.noteheadSlashedBlack2="",t.noteheadSlashedDoubleWhole1="",t.noteheadSlashedDoubleWhole2="",t.noteheadSlashedHalf1="",t.noteheadSlashedHalf2="",t.noteheadSlashedWhole1="",t.noteheadSlashedWhole2="",t.noteheadSquareBlack="",t.noteheadSquareBlackLarge="",t.noteheadSquareBlackWhite="",t.noteheadSquareWhite="",t.noteheadTriangleDownBlack="",t.noteheadTriangleDownDoubleWhole="",t.noteheadTriangleDownHalf="",t.noteheadTriangleDownWhite="",t.noteheadTriangleDownWhole="",t.noteheadTriangleLeftBlack="",t.noteheadTriangleLeftWhite="",t.noteheadTriangleRightBlack="",t.noteheadTriangleRightWhite="",t.noteheadTriangleRoundDownBlack="",t.noteheadTriangleRoundDownWhite="",t.noteheadTriangleUpBlack="",t.noteheadTriangleUpDoubleWhole="",t.noteheadTriangleUpHalf="",t.noteheadTriangleUpRightBlack="",t.noteheadTriangleUpRightWhite="",t.noteheadTriangleUpWhite="",t.noteheadTriangleUpWhole="",t.noteheadVoidWithX="",t.noteheadWhole="",t.noteheadWholeFilled="",t.noteheadWholeWithX="",t.noteheadXBlack="",t.noteheadXDoubleWhole="",t.noteheadXHalf="",t.noteheadXOrnate="",t.noteheadXOrnateEllipse="",t.noteheadXWhole="",t.octaveBaselineA="",t.octaveBaselineB="",t.octaveBaselineM="",t.octaveBaselineV="",t.octaveBassa="",t.octaveLoco="",t.octaveParensLeft="",t.octaveParensRight="",t.octaveSuperscriptA="",t.octaveSuperscriptB="",t.octaveSuperscriptM="",t.octaveSuperscriptV="",t.oneHandedRollStevens="",t.organGerman2Fusae="",t.organGerman2Minimae="",t.organGerman2OctaveUp="",t.organGerman2Semifusae="",t.organGerman2Semiminimae="",t.organGerman3Fusae="",t.organGerman3Minimae="",t.organGerman3Semifusae="",t.organGerman3Semiminimae="",t.organGerman4Fusae="",t.organGerman4Minimae="",t.organGerman4Semifusae="",t.organGerman4Semiminimae="",t.organGerman5Fusae="",t.organGerman5Minimae="",t.organGerman5Semifusae="",t.organGerman5Semiminimae="",t.organGerman6Fusae="",t.organGerman6Minimae="",t.organGerman6Semifusae="",t.organGerman6Semiminimae="",t.organGermanALower="",t.organGermanAUpper="",t.organGermanAugmentationDot="",t.organGermanBLower="",t.organGermanBUpper="",t.organGermanBuxheimerBrevis2="",t.organGermanBuxheimerBrevis3="",t.organGermanBuxheimerMinimaRest="",t.organGermanBuxheimerSemibrevis="",t.organGermanBuxheimerSemibrevisRest="",t.organGermanCLower="",t.organGermanCUpper="",t.organGermanCisLower="",t.organGermanCisUpper="",t.organGermanDLower="",t.organGermanDUpper="",t.organGermanDisLower="",t.organGermanDisUpper="",t.organGermanELower="",t.organGermanEUpper="",t.organGermanFLower="",t.organGermanFUpper="",t.organGermanFisLower="",t.organGermanFisUpper="",t.organGermanFusa="",t.organGermanFusaRest="",t.organGermanGLower="",t.organGermanGUpper="",t.organGermanGisLower="",t.organGermanGisUpper="",t.organGermanHLower="",t.organGermanHUpper="",t.organGermanMinima="",t.organGermanMinimaRest="",t.organGermanOctaveDown="",t.organGermanOctaveUp="",t.organGermanSemibrevis="",t.organGermanSemibrevisRest="",t.organGermanSemifusa="",t.organGermanSemifusaRest="",t.organGermanSemiminima="",t.organGermanSemiminimaRest="",t.organGermanTie="",t.ornamentBottomLeftConcaveStroke="",t.ornamentBottomLeftConcaveStrokeLarge="",t.ornamentBottomLeftConvexStroke="",t.ornamentBottomRightConcaveStroke="",t.ornamentBottomRightConvexStroke="",t.ornamentComma="",t.ornamentDoubleObliqueLinesAfterNote="",t.ornamentDoubleObliqueLinesBeforeNote="",t.ornamentDownCurve="",t.ornamentHaydn="",t.ornamentHighLeftConcaveStroke="",t.ornamentHighLeftConvexStroke="",t.ornamentHighRightConcaveStroke="",t.ornamentHighRightConvexStroke="",t.ornamentHookAfterNote="",t.ornamentHookBeforeNote="",t.ornamentLeftFacingHalfCircle="",t.ornamentLeftFacingHook="",t.ornamentLeftPlus="",t.ornamentLeftShakeT="",t.ornamentLeftVerticalStroke="",t.ornamentLeftVerticalStrokeWithCross="",t.ornamentLowLeftConcaveStroke="",t.ornamentLowLeftConvexStroke="",t.ornamentLowRightConcaveStroke="",t.ornamentLowRightConvexStroke="",t.ornamentMiddleVerticalStroke="",t.ornamentMordent="",t.ornamentObliqueLineAfterNote="",t.ornamentObliqueLineBeforeNote="",t.ornamentObliqueLineHorizAfterNote="",t.ornamentObliqueLineHorizBeforeNote="",t.ornamentOriscus="",t.ornamentPinceCouperin="",t.ornamentPortDeVoixV="",t.ornamentPrecompAppoggTrill="",t.ornamentPrecompAppoggTrillSuffix="",t.ornamentPrecompCadence="",t.ornamentPrecompCadenceUpperPrefix="",t.ornamentPrecompCadenceUpperPrefixTurn="",t.ornamentPrecompCadenceWithTurn="",t.ornamentPrecompDescendingSlide="",t.ornamentPrecompDoubleCadenceLowerPrefix="",t.ornamentPrecompDoubleCadenceUpperPrefix="",t.ornamentPrecompDoubleCadenceUpperPrefixTurn="",t.ornamentPrecompInvertedMordentUpperPrefix="",t.ornamentPrecompMordentRelease="",t.ornamentPrecompMordentUpperPrefix="",t.ornamentPrecompPortDeVoixMordent="",t.ornamentPrecompSlide="",t.ornamentPrecompSlideTrillBach="",t.ornamentPrecompSlideTrillDAnglebert="",t.ornamentPrecompSlideTrillMarpurg="",t.ornamentPrecompSlideTrillMuffat="",t.ornamentPrecompSlideTrillSuffixMuffat="",t.ornamentPrecompTrillLowerSuffix="",t.ornamentPrecompTrillSuffixDandrieu="",t.ornamentPrecompTrillWithMordent="",t.ornamentPrecompTurnTrillBach="",t.ornamentPrecompTurnTrillDAnglebert="",t.ornamentQuilisma="",t.ornamentRightFacingHalfCircle="",t.ornamentRightFacingHook="",t.ornamentRightVerticalStroke="",t.ornamentSchleifer="",t.ornamentShake3="",t.ornamentShakeMuffat1="",t.ornamentShortObliqueLineAfterNote="",t.ornamentShortObliqueLineBeforeNote="",t.ornamentShortTrill="",t.ornamentTopLeftConcaveStroke="",t.ornamentTopLeftConvexStroke="",t.ornamentTopRightConcaveStroke="",t.ornamentTopRightConvexStroke="",t.ornamentTremblement="",t.ornamentTremblementCouperin="",t.ornamentTrill="",t.ornamentTurn="",t.ornamentTurnInverted="",t.ornamentTurnSlash="",t.ornamentTurnUp="",t.ornamentTurnUpS="",t.ornamentUpCurve="",t.ornamentVerticalLine="",t.ornamentZigZagLineNoRightEnd="",t.ornamentZigZagLineWithRightEnd="",t.ottava="",t.ottavaAlta="",t.ottavaBassa="",t.ottavaBassaBa="",t.ottavaBassaVb="",t.pendereckiTremolo="",t.pictAgogo="",t.pictAlmglocken="",t.pictAnvil="",t.pictBambooChimes="",t.pictBambooScraper="",t.pictBassDrum="",t.pictBassDrumOnSide="",t.pictBeaterBow="",t.pictBeaterBox="",t.pictBeaterBrassMalletsDown="",t.pictBeaterBrassMalletsLeft="",t.pictBeaterBrassMalletsRight="",t.pictBeaterBrassMalletsUp="",t.pictBeaterCombiningDashedCircle="",t.pictBeaterCombiningParentheses="",t.pictBeaterDoubleBassDrumDown="",t.pictBeaterDoubleBassDrumUp="",t.pictBeaterFinger="",t.pictBeaterFingernails="",t.pictBeaterFist="",t.pictBeaterGuiroScraper="",t.pictBeaterHammer="",t.pictBeaterHammerMetalDown="",t.pictBeaterHammerMetalUp="",t.pictBeaterHammerPlasticDown="",t.pictBeaterHammerPlasticUp="",t.pictBeaterHammerWoodDown="",t.pictBeaterHammerWoodUp="",t.pictBeaterHand="",t.pictBeaterHardBassDrumDown="",t.pictBeaterHardBassDrumUp="",t.pictBeaterHardGlockenspielDown="",t.pictBeaterHardGlockenspielLeft="",t.pictBeaterHardGlockenspielRight="",t.pictBeaterHardGlockenspielUp="",t.pictBeaterHardTimpaniDown="",t.pictBeaterHardTimpaniLeft="",t.pictBeaterHardTimpaniRight="",t.pictBeaterHardTimpaniUp="",t.pictBeaterHardXylophoneDown="",t.pictBeaterHardXylophoneLeft="",t.pictBeaterHardXylophoneRight="",t.pictBeaterHardXylophoneUp="",t.pictBeaterHardYarnDown="",t.pictBeaterHardYarnLeft="",t.pictBeaterHardYarnRight="",t.pictBeaterHardYarnUp="",t.pictBeaterJazzSticksDown="",t.pictBeaterJazzSticksUp="",t.pictBeaterKnittingNeedle="",t.pictBeaterMallet="",t.pictBeaterMalletDown="",t.pictBeaterMediumBassDrumDown="",t.pictBeaterMediumBassDrumUp="",t.pictBeaterMediumTimpaniDown="",t.pictBeaterMediumTimpaniLeft="",t.pictBeaterMediumTimpaniRight="",t.pictBeaterMediumTimpaniUp="",t.pictBeaterMediumXylophoneDown="",t.pictBeaterMediumXylophoneLeft="",t.pictBeaterMediumXylophoneRight="",t.pictBeaterMediumXylophoneUp="",t.pictBeaterMediumYarnDown="",t.pictBeaterMediumYarnLeft="",t.pictBeaterMediumYarnRight="",t.pictBeaterMediumYarnUp="",t.pictBeaterMetalBassDrumDown="",t.pictBeaterMetalBassDrumUp="",t.pictBeaterMetalDown="",t.pictBeaterMetalHammer="",t.pictBeaterMetalLeft="",t.pictBeaterMetalRight="",t.pictBeaterMetalUp="",t.pictBeaterSnareSticksDown="",t.pictBeaterSnareSticksUp="",t.pictBeaterSoftBassDrumDown="",t.pictBeaterSoftBassDrumUp="",t.pictBeaterSoftGlockenspielDown="",t.pictBeaterSoftGlockenspielLeft="",t.pictBeaterSoftGlockenspielRight="",t.pictBeaterSoftGlockenspielUp="",t.pictBeaterSoftTimpaniDown="",t.pictBeaterSoftTimpaniLeft="",t.pictBeaterSoftTimpaniRight="",t.pictBeaterSoftTimpaniUp="",t.pictBeaterSoftXylophone="",t.pictBeaterSoftXylophoneDown="",t.pictBeaterSoftXylophoneLeft="",t.pictBeaterSoftXylophoneRight="",t.pictBeaterSoftXylophoneUp="",t.pictBeaterSoftYarnDown="",t.pictBeaterSoftYarnLeft="",t.pictBeaterSoftYarnRight="",t.pictBeaterSoftYarnUp="",t.pictBeaterSpoonWoodenMallet="",t.pictBeaterSuperballDown="",t.pictBeaterSuperballLeft="",t.pictBeaterSuperballRight="",t.pictBeaterSuperballUp="",t.pictBeaterTriangleDown="",t.pictBeaterTrianglePlain="",t.pictBeaterTriangleUp="",t.pictBeaterWireBrushesDown="",t.pictBeaterWireBrushesUp="",t.pictBeaterWoodTimpaniDown="",t.pictBeaterWoodTimpaniLeft="",t.pictBeaterWoodTimpaniRight="",t.pictBeaterWoodTimpaniUp="",t.pictBeaterWoodXylophoneDown="",t.pictBeaterWoodXylophoneLeft="",t.pictBeaterWoodXylophoneRight="",t.pictBeaterWoodXylophoneUp="",t.pictBell="",t.pictBellOfCymbal="",t.pictBellPlate="",t.pictBellTree="",t.pictBirdWhistle="",t.pictBoardClapper="",t.pictBongos="",t.pictBrakeDrum="",t.pictCabasa="",t.pictCannon="",t.pictCarHorn="",t.pictCastanets="",t.pictCastanetsWithHandle="",t.pictCelesta="",t.pictCencerro="",t.pictCenter1="",t.pictCenter2="",t.pictCenter3="",t.pictChainRattle="",t.pictChimes="",t.pictChineseCymbal="",t.pictChokeCymbal="",t.pictClaves="",t.pictCoins="",t.pictConga="",t.pictCowBell="",t.pictCrashCymbals="",t.pictCrotales="",t.pictCrushStem="",t.pictCuica="",t.pictCymbalTongs="",t.pictDamp1="",t.pictDamp2="",t.pictDamp3="",t.pictDamp4="",t.pictDeadNoteStem="",t.pictDrumStick="",t.pictDuckCall="",t.pictEdgeOfCymbal="",t.pictEmptyTrap="",t.pictFingerCymbals="",t.pictFlexatone="",t.pictFootballRatchet="",t.pictGlassHarmonica="",t.pictGlassHarp="",t.pictGlassPlateChimes="",t.pictGlassTubeChimes="",t.pictGlsp="",t.pictGlspSmithBrindle="",t.pictGobletDrum="",t.pictGong="",t.pictGongWithButton="",t.pictGuiro="",t.pictGumHardDown="",t.pictGumHardLeft="",t.pictGumHardRight="",t.pictGumHardUp="",t.pictGumMediumDown="",t.pictGumMediumLeft="",t.pictGumMediumRight="",t.pictGumMediumUp="",t.pictGumSoftDown="",t.pictGumSoftLeft="",t.pictGumSoftRight="",t.pictGumSoftUp="",t.pictHalfOpen1="",t.pictHalfOpen2="",t.pictHandbell="",t.pictHiHat="",t.pictHiHatOnStand="",t.pictJawHarp="",t.pictJingleBells="",t.pictKlaxonHorn="",t.pictLeftHandCircle="",t.pictLionsRoar="",t.pictLithophone="",t.pictLogDrum="",t.pictLotusFlute="",t.pictMar="",t.pictMarSmithBrindle="",t.pictMaraca="",t.pictMaracas="",t.pictMegaphone="",t.pictMetalPlateChimes="",t.pictMetalTubeChimes="",t.pictMusicalSaw="",t.pictNormalPosition="",t.pictOnRim="",t.pictOpen="",t.pictOpenRimShot="",t.pictPistolShot="",t.pictPoliceWhistle="",t.pictQuijada="",t.pictRainstick="",t.pictRatchet="",t.pictRecoReco="",t.pictRightHandSquare="",t.pictRim1="",t.pictRim2="",t.pictRim3="",t.pictRimShotOnStem="",t.pictSandpaperBlocks="",t.pictScrapeAroundRim="",t.pictScrapeAroundRimClockwise="",t.pictScrapeCenterToEdge="",t.pictScrapeEdgeToCenter="",t.pictShellBells="",t.pictShellChimes="",t.pictSiren="",t.pictSistrum="",t.pictSizzleCymbal="",t.pictSleighBell="",t.pictSlideBrushOnGong="",t.pictSlideWhistle="",t.pictSlitDrum="",t.pictSnareDrum="",t.pictSnareDrumMilitary="",t.pictSnareDrumSnaresOff="",t.pictSteelDrums="",t.pictStickShot="",t.pictSuperball="",t.pictSuspendedCymbal="",t.pictSwishStem="",t.pictTabla="",t.pictTamTam="",t.pictTamTamWithBeater="",t.pictTambourine="",t.pictTempleBlocks="",t.pictTenorDrum="",t.pictThundersheet="",t.pictTimbales="",t.pictTimpani="",t.pictTomTom="",t.pictTomTomChinese="",t.pictTomTomIndoAmerican="",t.pictTomTomJapanese="",t.pictTriangle="",t.pictTubaphone="",t.pictTubularBells="",t.pictTurnLeftStem="",t.pictTurnRightLeftStem="",t.pictTurnRightStem="",t.pictVib="",t.pictVibMotorOff="",t.pictVibSmithBrindle="",t.pictVibraslap="",t.pictVietnameseHat="",t.pictWhip="",t.pictWindChimesGlass="",t.pictWindMachine="",t.pictWindWhistle="",t.pictWoodBlock="",t.pictWoundHardDown="",t.pictWoundHardLeft="",t.pictWoundHardRight="",t.pictWoundHardUp="",t.pictWoundSoftDown="",t.pictWoundSoftLeft="",t.pictWoundSoftRight="",t.pictWoundSoftUp="",t.pictXyl="",t.pictXylBass="",t.pictXylSmithBrindle="",t.pictXylTenor="",t.pictXylTenorTrough="",t.pictXylTrough="",t.pluckedBuzzPizzicato="",t.pluckedDamp="",t.pluckedDampAll="",t.pluckedDampOnStem="",t.pluckedFingernailFlick="",t.pluckedLeftHandPizzicato="",t.pluckedPlectrum="",t.pluckedSnapPizzicatoAbove="",t.pluckedSnapPizzicatoBelow="",t.pluckedWithFingernails="",t.quindicesima="",t.quindicesimaAlta="",t.quindicesimaBassa="",t.quindicesimaBassaMb="",t.repeat1Bar="",t.repeat2Bars="",t.repeat4Bars="",t.repeatBarLowerDot="",t.repeatBarSlash="",t.repeatBarUpperDot="",t.repeatDot="",t.repeatDots="",t.repeatLeft="",t.repeatRight="",t.repeatRightLeft="",t.rest1024th="",t.rest128th="",t.rest16th="",t.rest256th="",t.rest32nd="",t.rest512th="",t.rest64th="",t.rest8th="",t.restDoubleWhole="",t.restDoubleWholeLegerLine="",t.restHBar="",t.restHBarLeft="",t.restHBarMiddle="",t.restHBarRight="",t.restHalf="",t.restHalfLegerLine="",t.restLonga="",t.restMaxima="",t.restQuarter="",t.restQuarterOld="",t.restQuarterZ="",t.restWhole="",t.restWholeLegerLine="",t.reversedBrace="",t.reversedBracketBottom="",t.reversedBracketTop="",t.rightRepeatSmall="",t.scaleDegree1="",t.scaleDegree2="",t.scaleDegree3="",t.scaleDegree4="",t.scaleDegree5="",t.scaleDegree6="",t.scaleDegree7="",t.scaleDegree8="",t.scaleDegree9="",t.schaefferClef="",t.schaefferFClefToGClef="",t.schaefferGClefToFClef="",t.schaefferPreviousClef="",t.segno="",t.segnoSerpent1="",t.segnoSerpent2="",t.semipitchedPercussionClef1="",t.semipitchedPercussionClef2="",t.smnFlat="",t.smnFlatWhite="",t.smnHistoryDoubleFlat="",t.smnHistoryDoubleSharp="",t.smnHistoryFlat="",t.smnHistorySharp="",t.smnNatural="",t.smnSharp="",t.smnSharpDown="",t.smnSharpWhite="",t.smnSharpWhiteDown="",t.splitBarDivider="",t.staff1Line="",t.staff1LineNarrow="",t.staff1LineWide="",t.staff2Lines="",t.staff2LinesNarrow="",t.staff2LinesWide="",t.staff3Lines="",t.staff3LinesNarrow="",t.staff3LinesWide="",t.staff4Lines="",t.staff4LinesNarrow="",t.staff4LinesWide="",t.staff5Lines="",t.staff5LinesNarrow="",t.staff5LinesWide="",t.staff6Lines="",t.staff6LinesNarrow="",t.staff6LinesWide="",t.staffDivideArrowDown="",t.staffDivideArrowUp="",t.staffDivideArrowUpDown="",t.staffPosLower1="",t.staffPosLower2="",t.staffPosLower3="",t.staffPosLower4="",t.staffPosLower5="",t.staffPosLower6="",t.staffPosLower7="",t.staffPosLower8="",t.staffPosRaise1="",t.staffPosRaise2="",t.staffPosRaise3="",t.staffPosRaise4="",t.staffPosRaise5="",t.staffPosRaise6="",t.staffPosRaise7="",t.staffPosRaise8="",t.stem="",t.stemBowOnBridge="",t.stemBowOnTailpiece="",t.stemBuzzRoll="",t.stemDamp="",t.stemHarpStringNoise="",t.stemMultiphonicsBlack="",t.stemMultiphonicsBlackWhite="",t.stemMultiphonicsWhite="",t.stemPendereckiTremolo="",t.stemRimShot="",t.stemSprechgesang="",t.stemSulPonticello="",t.stemSussurando="",t.stemSwished="",t.stemVibratoPulse="",t.stockhausenTremolo="",t.stringsBowBehindBridge="",t.stringsBowBehindBridgeFourStrings="",t.stringsBowBehindBridgeOneString="",t.stringsBowBehindBridgeThreeStrings="",t.stringsBowBehindBridgeTwoStrings="",t.stringsBowOnBridge="",t.stringsBowOnTailpiece="",t.stringsChangeBowDirection="",t.stringsDownBow="",t.stringsDownBowAwayFromBody="",t.stringsDownBowBeyondBridge="",t.stringsDownBowTowardsBody="",t.stringsDownBowTurned="",t.stringsFouette="",t.stringsHalfHarmonic="",t.stringsHarmonic="",t.stringsJeteAbove="",t.stringsJeteBelow="",t.stringsMuteOff="",t.stringsMuteOn="",t.stringsOverpressureDownBow="",t.stringsOverpressureNoDirection="",t.stringsOverpressurePossibileDownBow="",t.stringsOverpressurePossibileUpBow="",t.stringsOverpressureUpBow="",t.stringsScrapeCircularClockwise="",t.stringsScrapeCircularCounterclockwise="",t.stringsScrapeParallelInward="",t.stringsScrapeParallelOutward="",t.stringsThumbPosition="",t.stringsThumbPositionTurned="",t.stringsTripleChopInward="",t.stringsTripleChopOutward="",t.stringsUpBow="",t.stringsUpBowAwayFromBody="",t.stringsUpBowBeyondBridge="",t.stringsUpBowTowardsBody="",t.stringsUpBowTurned="",t.stringsVibratoPulse="",t.swissRudimentsNoteheadBlackDouble="",t.swissRudimentsNoteheadBlackFlam="",t.swissRudimentsNoteheadHalfDouble="",t.swissRudimentsNoteheadHalfFlam="",t.systemDivider="",t.systemDividerExtraLong="",t.systemDividerLong="",t.textAugmentationDot="",t.textBlackNoteFrac16thLongStem="",t.textBlackNoteFrac16thShortStem="",t.textBlackNoteFrac32ndLongStem="",t.textBlackNoteFrac8thLongStem="",t.textBlackNoteFrac8thShortStem="",t.textBlackNoteLongStem="",t.textBlackNoteShortStem="",t.textCont16thBeamLongStem="",t.textCont16thBeamShortStem="",t.textCont32ndBeamLongStem="",t.textCont8thBeamLongStem="",t.textCont8thBeamShortStem="",t.textHeadlessBlackNoteFrac16thLongStem="",t.textHeadlessBlackNoteFrac16thShortStem="",t.textHeadlessBlackNoteFrac32ndLongStem="",t.textHeadlessBlackNoteFrac8thLongStem="",t.textHeadlessBlackNoteFrac8thShortStem="",t.textHeadlessBlackNoteLongStem="",t.textHeadlessBlackNoteShortStem="",t.textTie="",t.textTuplet3LongStem="",t.textTuplet3ShortStem="",t.textTupletBracketEndLongStem="",t.textTupletBracketEndShortStem="",t.textTupletBracketStartLongStem="",t.textTupletBracketStartShortStem="",t.timeSig0="",t.timeSig0Reversed="",t.timeSig0Turned="",t.timeSig1="",t.timeSig1Reversed="",t.timeSig1Turned="",t.timeSig2="",t.timeSig2Reversed="",t.timeSig2Turned="",t.timeSig3="",t.timeSig3Reversed="",t.timeSig3Turned="",t.timeSig4="",t.timeSig4Reversed="",t.timeSig4Turned="",t.timeSig5="",t.timeSig5Reversed="",t.timeSig5Turned="",t.timeSig6="",t.timeSig6Reversed="",t.timeSig6Turned="",t.timeSig7="",t.timeSig7Reversed="",t.timeSig7Turned="",t.timeSig8="",t.timeSig8Reversed="",t.timeSig8Turned="",t.timeSig9="",t.timeSig9Reversed="",t.timeSig9Turned="",t.timeSigBracketLeft="",t.timeSigBracketLeftSmall="",t.timeSigBracketRight="",t.timeSigBracketRightSmall="",t.timeSigCombDenominator="",t.timeSigCombNumerator="",t.timeSigComma="",t.timeSigCommon="",t.timeSigCommonReversed="",t.timeSigCommonTurned="",t.timeSigCut2="",t.timeSigCut3="",t.timeSigCutCommon="",t.timeSigCutCommonReversed="",t.timeSigCutCommonTurned="",t.timeSigEquals="",t.timeSigFractionHalf="",t.timeSigFractionOneThird="",t.timeSigFractionQuarter="",t.timeSigFractionThreeQuarters="",t.timeSigFractionTwoThirds="",t.timeSigFractionalSlash="",t.timeSigMinus="",t.timeSigMultiply="",t.timeSigOpenPenderecki="",t.timeSigParensLeft="",t.timeSigParensLeftSmall="",t.timeSigParensRight="",t.timeSigParensRightSmall="",t.timeSigPlus="",t.timeSigPlusSmall="",t.timeSigSlash="",t.timeSigX="",t.tremolo1="",t.tremolo2="",t.tremolo3="",t.tremolo4="",t.tremolo5="",t.tremoloDivisiDots2="",t.tremoloDivisiDots3="",t.tremoloDivisiDots4="",t.tremoloDivisiDots6="",t.tremoloFingered1="",t.tremoloFingered2="",t.tremoloFingered3="",t.tremoloFingered4="",t.tremoloFingered5="",t.tripleTongueAbove="",t.tripleTongueBelow="",t.tuplet0="",t.tuplet1="",t.tuplet2="",t.tuplet3="",t.tuplet4="",t.tuplet5="",t.tuplet6="",t.tuplet7="",t.tuplet8="",t.tuplet9="",t.tupletColon="",t.unmeasuredTremolo="",t.unmeasuredTremoloSimple="",t.unpitchedPercussionClef1="",t.unpitchedPercussionClef2="",t.ventiduesima="",t.ventiduesimaAlta="",t.ventiduesimaBassa="",t.ventiduesimaBassaMb="",t.vocalFingerClickStockhausen="",t.vocalHalbGesungen="",t.vocalMouthClosed="",t.vocalMouthOpen="",t.vocalMouthPursed="",t.vocalMouthSlightlyOpen="",t.vocalMouthWideOpen="",t.vocalNasalVoice="",t.vocalSprechgesang="",t.vocalTongueClickStockhausen="",t.vocalTongueFingerClickStockhausen="",t.vocalsSussurando="",t.wiggleArpeggiatoDown="",t.wiggleArpeggiatoDownArrow="",t.wiggleArpeggiatoDownSwash="",t.wiggleArpeggiatoUp="",t.wiggleArpeggiatoUpArrow="",t.wiggleArpeggiatoUpSwash="",t.wiggleCircular="",t.wiggleCircularConstant="",t.wiggleCircularConstantFlipped="",t.wiggleCircularConstantFlippedLarge="",t.wiggleCircularConstantLarge="",t.wiggleCircularEnd="",t.wiggleCircularLarge="",t.wiggleCircularLarger="",t.wiggleCircularLargerStill="",t.wiggleCircularLargest="",t.wiggleCircularSmall="",t.wiggleCircularStart="",t.wiggleGlissando="",t.wiggleGlissandoGroup1="",t.wiggleGlissandoGroup2="",t.wiggleGlissandoGroup3="",t.wiggleRandom1="",t.wiggleRandom2="",t.wiggleRandom3="",t.wiggleRandom4="",t.wiggleSawtooth="",t.wiggleSawtoothNarrow="",t.wiggleSawtoothWide="",t.wiggleSquareWave="",t.wiggleSquareWaveNarrow="",t.wiggleSquareWaveWide="",t.wiggleTrill="",t.wiggleTrillFast="",t.wiggleTrillFaster="",t.wiggleTrillFasterStill="",t.wiggleTrillFastest="",t.wiggleTrillSlow="",t.wiggleTrillSlower="",t.wiggleTrillSlowerStill="",t.wiggleTrillSlowest="",t.wiggleVIbratoLargestSlower="",t.wiggleVIbratoMediumSlower="",t.wiggleVibrato="",t.wiggleVibratoLargeFast="",t.wiggleVibratoLargeFaster="",t.wiggleVibratoLargeFasterStill="",t.wiggleVibratoLargeFastest="",t.wiggleVibratoLargeSlow="",t.wiggleVibratoLargeSlower="",t.wiggleVibratoLargeSlowest="",t.wiggleVibratoLargestFast="",t.wiggleVibratoLargestFaster="",t.wiggleVibratoLargestFasterStill="",t.wiggleVibratoLargestFastest="",t.wiggleVibratoLargestSlow="",t.wiggleVibratoLargestSlowest="",t.wiggleVibratoMediumFast="",t.wiggleVibratoMediumFaster="",t.wiggleVibratoMediumFasterStill="",t.wiggleVibratoMediumFastest="",t.wiggleVibratoMediumSlow="",t.wiggleVibratoMediumSlowest="",t.wiggleVibratoSmallFast="",t.wiggleVibratoSmallFaster="",t.wiggleVibratoSmallFasterStill="",t.wiggleVibratoSmallFastest="",t.wiggleVibratoSmallSlow="",t.wiggleVibratoSmallSlower="",t.wiggleVibratoSmallSlowest="",t.wiggleVibratoSmallestFast="",t.wiggleVibratoSmallestFaster="",t.wiggleVibratoSmallestFasterStill="",t.wiggleVibratoSmallestFastest="",t.wiggleVibratoSmallestSlow="",t.wiggleVibratoSmallestSlower="",t.wiggleVibratoSmallestSlowest="",t.wiggleVibratoStart="",t.wiggleVibratoWide="",t.wiggleWavy="",t.wiggleWavyNarrow="",t.wiggleWavyWide="",t.windClosedHole="",t.windFlatEmbouchure="",t.windHalfClosedHole1="",t.windHalfClosedHole2="",t.windHalfClosedHole3="",t.windLessRelaxedEmbouchure="",t.windLessTightEmbouchure="",t.windMouthpiecePop="",t.windMultiphonicsBlackStem="",t.windMultiphonicsBlackWhiteStem="",t.windMultiphonicsWhiteStem="",t.windOpenHole="",t.windReedPositionIn="",t.windReedPositionNormal="",t.windReedPositionOut="",t.windRelaxedEmbouchure="",t.windRimOnly="",t.windSharpEmbouchure="",t.windStrongAirPressure="",t.windThreeQuartersClosedHole="",t.windTightEmbouchure="",t.windTrillKey="",t.windVeryTightEmbouchure="",t.windWeakAirPressure=""})(M||(M={}));const Zi=16384,w1={"1/2":Zi*2,1:Zi/1,2:Zi/2,4:Zi/4,8:Zi/8,16:Zi/16,32:Zi/32,64:Zi/64,128:Zi/128,256:Zi/256},uB={w:"1",h:"2",q:"4",b:"256"},Um={C:{num:0},Am:{num:0},F:{accidental:"b",num:1},Dm:{accidental:"b",num:1},Bb:{accidental:"b",num:2},Gm:{accidental:"b",num:2},Eb:{accidental:"b",num:3},Cm:{accidental:"b",num:3},Ab:{accidental:"b",num:4},Fm:{accidental:"b",num:4},Db:{accidental:"b",num:5},Bbm:{accidental:"b",num:5},Gb:{accidental:"b",num:6},Ebm:{accidental:"b",num:6},Cb:{accidental:"b",num:7},Abm:{accidental:"b",num:7},G:{accidental:"#",num:1},Em:{accidental:"#",num:1},D:{accidental:"#",num:2},Bm:{accidental:"#",num:2},A:{accidental:"#",num:3},"F#m":{accidental:"#",num:3},E:{accidental:"#",num:4},"C#m":{accidental:"#",num:4},B:{accidental:"#",num:5},"G#m":{accidental:"#",num:5},"F#":{accidental:"#",num:6},"D#m":{accidental:"#",num:6},"C#":{accidental:"#",num:7},"A#m":{accidental:"#",num:7}},A1={treble:{lineShift:0},bass:{lineShift:6},tenor:{lineShift:4},alto:{lineShift:3},soprano:{lineShift:1},percussion:{lineShift:0},"mezzo-soprano":{lineShift:2},"baritone-c":{lineShift:5},"baritone-f":{lineShift:5},subbass:{lineShift:7},french:{lineShift:-1}},dB={C:{index:0,intVal:0},CN:{index:0,intVal:0},"C#":{index:0,intVal:1},"C##":{index:0,intVal:2},CB:{index:0,intVal:11},CBB:{index:0,intVal:10},D:{index:1,intVal:2},DN:{index:1,intVal:2},"D#":{index:1,intVal:3},"D##":{index:1,intVal:4},DB:{index:1,intVal:1},DBB:{index:1,intVal:0},E:{index:2,intVal:4},EN:{index:2,intVal:4},"E#":{index:2,intVal:5},"E##":{index:2,intVal:6},EB:{index:2,intVal:3},EBB:{index:2,intVal:2},F:{index:3,intVal:5},FN:{index:3,intVal:5},"F#":{index:3,intVal:6},"F##":{index:3,intVal:7},FB:{index:3,intVal:4},FBB:{index:3,intVal:3},G:{index:4,intVal:7},GN:{index:4,intVal:7},"G#":{index:4,intVal:8},"G##":{index:4,intVal:9},GB:{index:4,intVal:6},GBB:{index:4,intVal:5},A:{index:5,intVal:9},AN:{index:5,intVal:9},"A#":{index:5,intVal:10},"A##":{index:5,intVal:11},AB:{index:5,intVal:8},ABB:{index:5,intVal:7},B:{index:6,intVal:11},BN:{index:6,intVal:11},"B#":{index:6,intVal:12},"B##":{index:6,intVal:13},BB:{index:6,intVal:10},BBB:{index:6,intVal:9},R:{index:6},X:{index:6}},hB={n:{name:"note"},r:{name:"rest"},h:{name:"harmonic"},m:{name:"muted"},s:{name:"slash"},g:{name:"ghost"},d:{name:"diamond"},x:{name:"x"},ci:{name:"circled"},cx:{name:"circle x"},sf:{name:"slashed"},sb:{name:"slashed backward"},sq:{name:"square"},tu:{name:"triangle up"},td:{name:"triangle down"}},fB={"#":M.accidentalSharp,"##":M.accidentalDoubleSharp,b:M.accidentalFlat,bb:M.accidentalDoubleFlat,n:M.accidentalNatural,"{":M.accidentalParensLeft,"}":M.accidentalParensRight,db:M.accidentalThreeQuarterTonesFlatZimmermann,d:M.accidentalQuarterToneFlatStein,"++":M.accidentalThreeQuarterTonesSharpStein,"+":M.accidentalQuarterToneSharpStein,"+-":M.accidentalKucukMucennebSharp,bs:M.accidentalBakiyeFlat,bss:M.accidentalBuyukMucennebFlat,o:M.accidentalSori,k:M.accidentalKoron,bbs:M.accidentalBuyukMucennebSharp,"++-":M.accidentalBuyukMucennebSharp,ashs:M.accidentalBuyukMucennebSharp,afhf:M.accidentalBuyukMucennebSharp},pB={1:{a:[1],b:[1]},2:{a:[1,2]},3:{a:[1,3,2],b:[1,2,1],secondOnBottom:[1,2,3]},4:{a:[1,3,4,2],b:[1,2,3,1],spacedOutTetrachord:[1,2,1,2]},5:{a:[1,3,5,4,2],b:[1,2,4,3,1],spacedOutPentachord:[1,2,3,2,1],verySpacedOutPentachord:[1,2,1,2,1]},6:{a:[1,3,5,6,4,2],b:[1,2,4,5,3,1],spacedOutHexachord:[1,3,2,1,3,2],verySpacedOutHexachord:[1,2,1,2,1,2]}},mB={"a.":{code:M.augmentationDot,betweenLines:!0},av:{aboveCode:M.articStaccatissimoAbove,belowCode:M.articStaccatissimoBelow,betweenLines:!0},"a>":{aboveCode:M.articAccentAbove,belowCode:M.articAccentBelow,betweenLines:!0},"a-":{aboveCode:M.articTenutoAbove,belowCode:M.articTenutoBelow,betweenLines:!0},"a^":{aboveCode:M.articMarcatoAbove,belowCode:M.articMarcatoBelow,betweenLines:!1},"a+":{code:M.pluckedLeftHandPizzicato,betweenLines:!1},ao:{aboveCode:M.pluckedSnapPizzicatoAbove,belowCode:M.pluckedSnapPizzicatoBelow,betweenLines:!1},ah:{code:M.stringsHarmonic,betweenLines:!1},"a@":{aboveCode:M.fermataAbove,belowCode:M.fermataBelow,betweenLines:!1},"a@a":{code:M.fermataAbove,betweenLines:!1},"a@u":{code:M.fermataBelow,betweenLines:!1},"a@s":{aboveCode:M.fermataShortAbove,belowCode:M.fermataShortBelow,betweenLines:!1},"a@as":{code:M.fermataShortAbove,betweenLines:!1},"a@us":{code:M.fermataShortBelow,betweenLines:!1},"a@l":{aboveCode:M.fermataLongAbove,belowCode:M.fermataLongBelow,betweenLines:!1},"a@al":{code:M.fermataLongAbove,betweenLines:!1},"a@ul":{code:M.fermataLongBelow,betweenLines:!1},"a@vl":{aboveCode:M.fermataVeryLongAbove,belowCode:M.fermataVeryLongBelow,betweenLines:!1},"a@avl":{code:M.fermataVeryLongAbove,betweenLines:!1},"a@uvl":{code:M.fermataVeryLongBelow,betweenLines:!1},"a|":{code:M.stringsUpBow,betweenLines:!1},am:{code:M.stringsDownBow,betweenLines:!1},"a,":{code:M.pictChokeCymbal,betweenLines:!1}},gB={mordent:M.ornamentShortTrill,mordentInverted:M.ornamentMordent,turn:M.ornamentTurn,turnInverted:M.ornamentTurnSlash,tr:M.ornamentTrill,upprall:M.ornamentPrecompSlideTrillDAnglebert,downprall:M.ornamentPrecompDoubleCadenceUpperPrefix,prallup:M.ornamentPrecompTrillSuffixDandrieu,pralldown:M.ornamentPrecompTrillLowerSuffix,upmordent:M.ornamentPrecompSlideTrillBach,downmordent:M.ornamentPrecompDoubleCadenceUpperPrefixTurn,lineprall:M.ornamentPrecompAppoggTrill,prallprall:M.ornamentTremblement,scoop:M.brassScoop,doit:M.brassDoitMedium,fall:M.brassFallLipShort,doitLong:M.brassLiftMedium,fallLong:M.brassFallRoughMedium,bend:M.brassBend,plungerClosed:M.brassMuteClosed,plungerOpen:M.brassMuteOpen,flip:M.brassFlip,jazzTurn:M.brassJazzTurn,smear:M.brassSmear};class oe{static clefProperties(e){if(!e||!(e in A1))throw new re("BadArgument","Invalid clef: "+e);return A1[e]}static keyProperties(e,n="treble",i="N",s){let r={octaveShift:0,duration:"4"};typeof s=="object"&&(r=Object.assign(Object.assign({},r),s));const o=oe.sanitizeDuration(r.duration),a=e.split("/");if(a.length<2)throw new re("BadArguments",`First argument must be note/octave or note/octave/glyph-code: ${e}`);const c=a[0].toUpperCase();i=i.toUpperCase();const l=dB[c];if(!l)throw new re("BadArguments","Invalid key name: "+c);let u=parseInt(a[1],10);u-=r.octaveShift;let h=(u*7-4*7+l.index)/2;h+=oe.clefProperties(n).lineShift;const f=typeof l.intVal<"u"?u*12+l.intVal:void 0;let p="",m="N";return a.length>2&&a[2]?m=a[2].toUpperCase():i!=="N"?m=i:m=c,p=this.codeNoteHead(m,o),{key:c,octave:u,line:h,intValue:f,code:p,displaced:!1}}static integerToNote(e){if(typeof e>"u"||e<0||e>11)throw new re("BadArguments",`integerToNote() requires an integer in the range [0, 11]: ${e}`);const i={0:"C",1:"C#",2:"D",3:"D#",4:"E",5:"F",6:"F#",7:"G",8:"G#",9:"A",10:"A#",11:"B"}[e];if(!i)throw new re("BadArguments",`Unknown note value for integer: ${e}`);return i}static textWidth(e){return 7*e.toString().length}static articulationCodes(e){return mB[e]}static accidentalCodes(e){var n;return(n=fB[e])!==null&&n!==void 0?n:e}static ornamentCodes(e){var n;return(n=gB[e])!==null&&n!==void 0?n:e}static keySignature(e){const n=Um[e];if(!n)throw new re("BadKeySignature",`Bad key signature spec: '${e}'`);if(!n.accidental)return[];const s={b:[2,.5,2.5,1,3,1.5,3.5],"#":[0,1.5,-.5,1,2.5,.5,2]}[n.accidental],r=[];for(let o=0;o<n.num;++o){const a=s[o];r.push({type:n.accidental,line:a})}return r}static getKeySignatures(){return Um}static hasKeySignature(e){return e in Um}static sanitizeDuration(e){const n=uB[e];if(n!==void 0&&(e=n),w1[e]===void 0)throw new re("BadArguments",`The provided duration is not valid: ${e}`);return e}static durationToFraction(e){return new at().parse(oe.sanitizeDuration(e))}static durationToNumber(e){return oe.durationToFraction(e).value()}static durationToTicks(e){e=oe.sanitizeDuration(e);const n=w1[e];if(n===void 0)throw new re("InvalidDuration");return n}static codeNoteHead(e,n){switch(e){case"D0":return M.noteheadDiamondWhole;case"D1":return M.noteheadDiamondHalf;case"D2":return M.noteheadDiamondBlack;case"D3":return M.noteheadDiamondBlack;case"T0":return M.noteheadTriangleUpWhole;case"T1":return M.noteheadTriangleUpHalf;case"T2":return M.noteheadTriangleUpBlack;case"T3":return M.noteheadTriangleUpBlack;case"X0":return M.noteheadXWhole;case"X1":return M.noteheadXHalf;case"X2":return M.noteheadXBlack;case"X3":return M.noteheadCircleX;case"S1":return M.noteheadSquareWhite;case"S2":return M.noteheadSquareBlack;case"R1":return M.noteheadSquareWhite;case"R2":return M.noteheadSquareWhite;case"DO":return M.noteheadTriangleUpBlack;case"RE":return M.noteheadMoonBlack;case"MI":return M.noteheadDiamondBlack;case"FA":return M.noteheadTriangleLeftBlack;case"FAUP":return M.noteheadTriangleRightBlack;case"SO":return M.noteheadBlack;case"LA":return M.noteheadSquareBlack;case"TI":return M.noteheadTriangleRoundDownBlack;case"DI":case"H":switch(n){case"1/2":return M.noteheadDiamondDoubleWhole;case"1":return M.noteheadDiamondWhole;case"2":return M.noteheadDiamondHalf;default:return M.noteheadDiamondBlack}case"X":case"M":switch(n){case"1/2":return M.noteheadXDoubleWhole;case"1":return M.noteheadXWhole;case"2":return M.noteheadXHalf;default:return M.noteheadXBlack}case"CX":switch(n){case"1/2":return M.noteheadCircleXDoubleWhole;case"1":return M.noteheadCircleXWhole;case"2":return M.noteheadCircleXHalf;default:return M.noteheadCircleX}case"CI":switch(n){case"1/2":return M.noteheadCircledDoubleWhole;case"1":return M.noteheadCircledWhole;case"2":return M.noteheadCircledHalf;default:return M.noteheadCircledBlack}case"SQ":switch(n){case"1/2":return M.noteheadDoubleWholeSquare;case"1":return M.noteheadSquareWhite;case"2":return M.noteheadSquareWhite;default:return M.noteheadSquareBlack}case"TU":switch(n){case"1/2":return M.noteheadTriangleUpDoubleWhole;case"1":return M.noteheadTriangleUpWhole;case"2":return M.noteheadTriangleUpHalf;default:return M.noteheadTriangleUpBlack}case"TD":switch(n){case"1/2":return M.noteheadTriangleDownDoubleWhole;case"1":return M.noteheadTriangleDownWhole;case"2":return M.noteheadTriangleDownHalf;default:return M.noteheadTriangleDownBlack}case"SF":switch(n){case"1/2":return M.noteheadSlashedDoubleWhole1;case"1":return M.noteheadSlashedWhole1;case"2":return M.noteheadSlashedHalf1;default:return M.noteheadSlashedBlack1}case"SB":switch(n){case"1/2":return M.noteheadSlashedDoubleWhole2;case"1":return M.noteheadSlashedWhole2;case"2":return M.noteheadSlashedHalf2;default:return M.noteheadSlashedBlack2}case"R":switch(n){case"1/2":return M.restDoubleWhole;case"1":return M.restWhole;case"2":return M.restHalf;case"4":return M.restQuarter;case"8":return M.rest8th;case"16":return M.rest16th;case"32":return M.rest32nd;case"64":return M.rest64th;case"128":return M.rest128th}break;case"S":switch(n){case"1/2":return M.noteheadSlashWhiteDoubleWhole;case"1":return M.noteheadSlashWhiteWhole;case"2":return M.noteheadSlashWhiteHalf;default:return M.noteheadSlashVerticalEnds}default:switch(n){case"1/2":return M.noteheadDoubleWhole;case"1":return M.noteheadWhole;case"2":return M.noteheadHalf;default:return M.noteheadBlack}}return M.null}}oe.UNISON=!0;oe.SOFTMAX_FACTOR=10;oe.STEM_WIDTH=1.5;oe.STEM_HEIGHT=35;oe.STAVE_LINE_THICKNESS=1;oe.RENDER_PRECISION_PLACES=3;oe.RESOLUTION=Zi;oe.durationCodes={"1/2":{stem:!1},1:{stem:!1},2:{stem:!0},4:{stem:!0},8:{stem:!0,beamCount:1,stemBeamExtension:0,codeFlagUp:M.flag8thUp},16:{beamCount:2,stemBeamExtension:0,stem:!0,codeFlagUp:M.flag16thUp},32:{beamCount:3,stemBeamExtension:7.5,stem:!0,codeFlagUp:M.flag32ndUp},64:{beamCount:4,stemBeamExtension:15,stem:!0,codeFlagUp:M.flag64thUp},128:{beamCount:5,stemBeamExtension:22.5,stem:!0,codeFlagUp:M.flag128thUp}};oe.NOTATION_FONT_SCALE=39;oe.TABLATURE_FONT_SCALE=39;oe.SLASH_NOTEHEAD_WIDTH=15;oe.STAVE_LINE_DISTANCE=10;oe.TEXT_HEIGHT_OFFSET_HACK=1;oe.accidentalColumnsTable=pB;oe.unicode={sharp:"♯",flat:"♭",natural:"♮",triangle:"△","o-with-slash":"ø",degrees:"°",circle:"○"};oe.validTypes=hB;oe.TIME4_4={numBeats:4,beatValue:4,resolution:Zi};function Rs(t,e,n=!0){if(typeof t!="object"||t===null)return!1;let i=t.constructor;if(n){for(;t!==null;){if(i=t.constructor,"CATEGORY"in i&&i.CATEGORY===e)return!0;t=Object.getPrototypeOf(t)}return!1}else return"CATEGORY"in i&&i.CATEGORY===e}const EB=t=>Rs(t,"Accidental"),vB=t=>Rs(t,"Annotation"),eA=t=>Rs(t,"Barline"),bB=t=>Rs(t,"Dot"),tA=t=>Rs(t,"GraceNote"),SB=t=>Rs(t,"GraceNoteGroup"),nA=t=>Rs(t,"Note"),xB=t=>Rs(t,"RenderContext"),nr=t=>Rs(t,"StaveNote"),xf=t=>Rs(t,"StemmableNote"),ns=t=>Rs(t,"TabNote");function kd(...t){ka.DEBUG&&pn("VexFlow.Accidental",t)}class ka extends Re{static get CATEGORY(){return"Accidental"}static format(e,n){if(!e||e.length===0)return;const i=Ce.get("Accidental.noteheadAccidentalPadding"),s=n.leftShift+i,r=Ce.get("Accidental.accidentalSpacing"),o=Ce.get("Accidental.leftPadding"),a=[];let c,l=0;for(let E=0;E<e.length;++E){const x=e[E],S=x.getNote(),v=S.getStave(),T=x.checkIndex(),w=S.getKeyProps()[T];if(S!==c){for(let D=0;D<S.keys.length;++D)l=Math.max(S.getLeftDisplacedHeadPx()-S.getXShift(),l);c=S}if(v){const D=v.getSpacingBetweenLines(),A=v.getYForLine(w.line),y=Math.round(A/D*2)/2;a.push({y:A,line:y,extraXSpaceNeeded:l,accidental:x,spacingBetweenStaveLines:D})}else a.push({line:w.line,extraXSpaceNeeded:l,accidental:x})}a.sort((E,x)=>x.line-E.line);const u=[];let d=0;for(let E=0;E<a.length;E++){const x=a[E],S=x.accidental.type,v=u[u.length-1];let T;!v||(v==null?void 0:v.line)!==x.line?(T={line:x.line,flatLine:!0,dblSharpLine:!0,numAcc:0,width:0,column:0},u.push(T)):T=v,S!=="b"&&S!=="bb"&&(T.flatLine=!1),S!=="##"&&(T.dblSharpLine=!1),T.numAcc++,T.width+=x.accidental.getWidth()+r,d=Math.max(x.extraXSpaceNeeded,d)}let h=0;for(let E=0;E<u.length;E++){let x=!1;const S=E;let v=E;for(;v+1<u.length&&!x;)this.checkCollision(u[v],u[v+1])?v++:x=!0;const T=U=>u[S+U],w=U=>U.map(T),D=(U,X)=>{const[K,Y]=w([U,X]).map(_=>_.line);return K-Y},A=(...U)=>U.map(w).every(([X,K])=>!this.checkCollision(X,K)),y=v-S+1;let O=this.checkCollision(u[S],u[v])?"a":"b";switch(y){case 3:O==="a"&&D(1,2)===.5&&D(0,1)!==.5&&(O="secondOnBottom");break;case 4:A([0,2],[1,3])&&(O="spacedOutTetrachord");break;case 5:O==="b"&&A([1,3])&&(O="spacedOutPentachord",A([0,2],[2,4])&&(O="verySpacedOutPentachord"));break;case 6:A([0,3],[1,4],[2,5])&&(O="spacedOutHexachord"),A([0,2],[2,4],[1,3],[3,5])&&(O="verySpacedOutHexachord");break}let L,P;if(y>=7){let U=2,X=!0;for(;X===!0;){X=!1;for(let K=0;K+U<u.length;K++)if(this.checkCollision(u[K],u[K+U])){X=!0,U++;break}}for(L=E;L<=v;L++)P=(L-E)%U+1,u[L].column=P,h=h>P?h:P}else for(L=E;L<=v;L++)P=oe.accidentalColumnsTable[y][O][L-E],u[L].column=P,h=h>P?h:P;E=v}const f=[],p=[];for(let E=0;E<=h;E++)f[E]=0,p[E]=0;f[0]=s+d,p[0]=s,u.forEach(E=>{E.width>f[E.column]&&(f[E.column]=E.width)});for(let E=1;E<f.length;E++)p[E]=f[E]+p[E-1];const m=p[p.length-1];let b=0;u.forEach(E=>{let x=0;const S=b+E.numAcc;for(b;b<S;b++){const v=p[E.column-1]+x+d;a[b].accidental.setXShift(v),x+=a[b].accidental.getWidth()+r,kd("Line, accCount, shift: ",E.line,b,v)}}),n.leftShift=m+o}static checkCollision(e,n){let i=n.line-e.line,s=3;i>0?(s=n.flatLine||n.dblSharpLine?2.5:3,e.dblSharpLine&&(i-=.5)):(s=e.flatLine||e.dblSharpLine?2.5:3,n.dblSharpLine&&(i-=.5));const r=Math.abs(i)<s;return kd("Line1, Line2, Collision: ",e.line,n.line,r),r}static applyAccidentals(e,n){const i=[],s={};e.forEach(c=>{const l=new at(0,1);c.getTickables().forEach(d=>{if(d.shouldIgnoreTicks())return;const h=s[l.value()];h?h.push(d):(i.push(l.value()),s[l.value()]=[d]),l.add(d.getTicks())})});const r=new Ut;n||(n="C");const o=r.createScaleMap(n),a={};i.forEach(c=>{const l=s[c],u=[],d=h=>{if(!nr(h)||h.isRest()||h.shouldIgnoreTicks())return;const f=h;f.keys.forEach((p,m)=>{const b=r.getNoteParts(p.split("/")[0]),E=p.split("/")[1],x=b.accidental||"n",S=b.root+x;a[b.root+E]||(a[b.root+E]=o[b.root]);const v=a[b.root+E]===S,T=u.indexOf(p)>-1;if(f.getModifiers().forEach((w,D)=>{EB(w)&&w.type==x&&w.getIndex()==m&&f.getModifiers().splice(D,1)}),!v||v&&T){a[b.root+E]=S;const w=new ka(x);f.addModifier(w,m),u.push(p)}}),f.getModifiers().forEach(p=>{SB(p)&&p.getGraceNotes().forEach(d)})};l.forEach(d)})}constructor(e){super(),kd("New accidental: ",e),this.type=e,this.position=Re.Position.LEFT,this.cautionary=!1,this.reset()}reset(){this.text="",this.cautionary?(this.text+=oe.accidentalCodes("{"),this.text+=oe.accidentalCodes(this.type),this.text+=oe.accidentalCodes("}"),this.fontInfo.size=Ce.get("Accidental.cautionary.fontSize")):(this.text+=oe.accidentalCodes(this.type),this.fontInfo.size=Ce.get("Accidental.fontSize")),tA(this.note)&&(this.fontInfo.size=Ce.get("Accidental.grace.fontSize"))}setNote(e){return rn(e,"ArgumentError",`Bad note value: ${e}`),this.note=e,this.reset(),this}setAsCautionary(){return this.cautionary=!0,this.reset(),this}draw(){const{type:e,position:n,index:i}=this,s=this.checkContext(),r=this.checkAttachedNote();this.setRendered();const o=r.getModifierStartXY(n,i);this.x=o.x-this.width,this.y=o.y,kd("Rendering: ",e,o.x,o.y),this.renderText(s,0,0)}}ka.DEBUG=!1;function TB(...t){ve.DEBUG&&pn("VexFlow.Stem",t)}class ve extends Ye{static get CATEGORY(){return"Stem"}static get UP(){return 1}static get DOWN(){return-1}static get WIDTH(){return oe.STEM_WIDTH}static get HEIGHT(){return oe.STEM_HEIGHT}constructor(e){var n,i,s,r,o,a,c;super(),this.stemUpYOffset=0,this.stemDownYOffset=0,this.stemUpYBaseOffset=0,this.stemDownYBaseOffset=0,this.xBegin=(n=e==null?void 0:e.xBegin)!==null&&n!==void 0?n:0,this.xEnd=(i=e==null?void 0:e.xEnd)!==null&&i!==void 0?i:0,this.yTop=(s=e==null?void 0:e.yTop)!==null&&s!==void 0?s:0,this.yBottom=(r=e==null?void 0:e.yBottom)!==null&&r!==void 0?r:0,this.stemExtension=(o=e==null?void 0:e.stemExtension)!==null&&o!==void 0?o:0,this.stemDirection=(a=e==null?void 0:e.stemDirection)!==null&&a!==void 0?a:0,this.hide=(e==null?void 0:e.hide)||!1,this.isStemlet=(e==null?void 0:e.isStemlet)||!1,this.stemletHeight=(c=e==null?void 0:e.stemletHeight)!==null&&c!==void 0?c:0,this.renderHeightAdjustment=0,this.setOptions(e)}setOptions(e){var n,i,s,r;this.stemUpYOffset=(n=e==null?void 0:e.stemUpYOffset)!==null&&n!==void 0?n:0,this.stemDownYOffset=(i=e==null?void 0:e.stemDownYOffset)!==null&&i!==void 0?i:0,this.stemUpYBaseOffset=(s=e==null?void 0:e.stemUpYBaseOffset)!==null&&s!==void 0?s:0,this.stemDownYBaseOffset=(r=e==null?void 0:e.stemDownYBaseOffset)!==null&&r!==void 0?r:0}setNoteHeadXBounds(e,n){return this.xBegin=e,this.xEnd=n,this}setDirection(e){this.stemDirection=e}setExtension(e){this.stemExtension=e}getExtension(){return this.stemExtension}setYBounds(e,n){this.yTop=e,this.yBottom=n}getHeight(){const e=this.stemDirection===ve.UP?this.stemUpYOffset:this.stemDownYOffset;return(this.yBottom-this.yTop+(ve.HEIGHT-e+this.stemExtension))*this.stemDirection}getBoundingBox(){throw new re("NotImplemented","getBoundingBox() not implemented.")}getExtents(){const e=this.stemDirection===ve.UP,n=[this.yTop,this.yBottom],i=ve.HEIGHT+this.stemExtension,s=(e?Math.min:Math.max)(...n),r=(e?Math.max:Math.min)(...n);return{topY:s+i*-this.stemDirection,baseY:r}}setVisibility(e){return this.hide=!e,this}setStemlet(e,n){return this.isStemlet=e,this.stemletHeight=n,this}adjustHeightForFlag(){this.renderHeightAdjustment=Ce.get("Stem.heightAdjustmentForFlag",-3)}adjustHeightForBeam(){this.renderHeightAdjustment=-ve.WIDTH/2}draw(){if(this.setRendered(),this.hide)return;const e=this.checkContext();let n,i;const s=this.stemDirection;let r=0;s===ve.DOWN?(n=this.xBegin,i=this.yTop+this.stemDownYOffset,r=this.stemDownYBaseOffset):(n=this.xEnd,i=this.yBottom-this.stemUpYOffset,r=this.stemUpYBaseOffset);const o=this.getHeight();TB("Rendering stem - ","Top Y: ",this.yTop,"Bottom Y: ",this.yBottom);const a=this.isStemlet?o-this.stemletHeight*this.stemDirection:0;e.openGroup("stem",this.getAttribute("id")),e.beginPath(),e.setLineWidth(ve.WIDTH),e.moveTo(n,i-a+r),e.lineTo(n,i-o-this.renderHeightAdjustment*s),e.stroke(),e.closeGroup()}}ve.DEBUG=!1;function CB(...t){wi.DEBUG&&pn("VexFlow.Annotation",t)}var ai;(function(t){t[t.LEFT=1]="LEFT",t[t.CENTER=2]="CENTER",t[t.RIGHT=3]="RIGHT",t[t.CENTER_STEM=4]="CENTER_STEM"})(ai||(ai={}));var ci;(function(t){t[t.TOP=1]="TOP",t[t.CENTER=2]="CENTER",t[t.BOTTOM=3]="BOTTOM",t[t.CENTER_STEM=4]="CENTER_STEM"})(ci||(ci={}));class wi extends Re{static get CATEGORY(){return"Annotation"}static get minAnnotationPadding(){return Ce.get("NoteHead.minPadding")}static format(e,n){if(!e||e.length===0)return!1;let i=0,s=0,r=0,o=0;for(let l=0;l<e.length;++l){const u=e[l];let h=(2+et.convertSizeToPixelValue(u.fontInfo.size))/oe.STAVE_LINE_DISTANCE;const f=u.checkAttachedNote(),p=f.getGlyphWidth(),m=u.getWidth();u.horizontalJustification===ai.RIGHT?(r=Math.max(p,r),i=Math.max(i,m)+wi.minAnnotationPadding):u.horizontalJustification===ai.LEFT?(o=Math.max(p,o),s=Math.max(s,m)):(i=Math.max(i,m/2)+wi.minAnnotationPadding,s=Math.max(s,m/2),r=Math.max(p/2,r),o=Math.max(p/2,o));const b=f.getStave(),E=f.hasStem()?f.getStemDirection():ve.UP;let x=0,S=5;if(ns(f))if(f.renderOptions.drawStem){const v=f.getStem();v&&(x=Math.abs(v.getHeight())/oe.STAVE_LINE_DISTANCE)}else x=0;else if(xf(f)){const v=f.getStem();v&&f.getNoteType()==="n"&&(x=Math.abs(v.getHeight())/oe.STAVE_LINE_DISTANCE)}if(b&&(S=b.getNumLines()),u.verticalJustification===this.VerticalJustify.TOP){let v=f.getLineNumber(!0);ns(f)&&(v=S-(f.leastString()-.5)),E===ve.UP&&(v+=x),v+n.topTextLine+.5<S?(u.setTextLine(S-v),h+=S-v,n.topTextLine=h):(u.setTextLine(n.topTextLine),n.topTextLine+=h)}else if(u.verticalJustification===this.VerticalJustify.BOTTOM){let v=S-f.getLineNumber();ns(f)&&(v=f.greatestString()-1),E===ve.DOWN&&(v+=x);const T=v+n.textLine+1;T<S?(u.setTextLine(S-T),h+=S-T,n.textLine=h):(u.setTextLine(n.textLine),n.textLine+=h)}else u.setTextLine(n.textLine)}const a=Math.min(Math.max(s-o,0),Math.max(s-n.rightShift,0)),c=Math.min(Math.max(i-r,0),Math.max(i-n.leftShift,0));return n.leftShift+=c,n.rightShift+=a,!0}constructor(e){super(),this.text=e,this.horizontalJustification=ai.CENTER,this.verticalJustification=ci.TOP}setVerticalJustification(e){return this.verticalJustification=typeof e=="string"?wi.VerticalJustifyString[e]:e,this}getJustification(){return this.horizontalJustification}setJustification(e){return this.horizontalJustification=typeof e=="string"?wi.HorizontalJustifyString[e]:e,this}draw(){const e=this.checkContext(),n=this.checkAttachedNote(),i=n.hasStem()?n.getStemDirection():ve.UP,s=n.getModifierStartXY(jt.ABOVE,this.index);this.setRendered(),e.openGroup("annotation",this.getAttribute("id"));const r=this.getWidth(),o=et.convertSizeToPixelValue(this.fontInfo.size);let a,c;this.horizontalJustification===ai.LEFT?a=s.x:this.horizontalJustification===ai.RIGHT?a=s.x-r:this.horizontalJustification===ai.CENTER?a=s.x-r/2:a=n.getStemX()-r/2;let l={},u=0;const d=n.hasStem(),h=n.checkStave();if(d&&(l=n.checkStem().getExtents(),u=h.getSpacingBetweenLines()),this.verticalJustification===ci.BOTTOM)c=n.getYs().reduce((p,m)=>p>m?p:m),c+=(this.textLine+1)*oe.STAVE_LINE_DISTANCE+o,d&&i===ve.DOWN&&(c=Math.max(c,l.topY+o+u*this.textLine));else if(this.verticalJustification===ci.CENTER){const f=n.getYForTopText(this.textLine)-1,p=h.getYForBottomText(this.textLine);c=f+(p-f)/2+o/2}else if(this.verticalJustification===ci.TOP)c=Math.min(...n.getYs())-(this.textLine+1)*oe.STAVE_LINE_DISTANCE,d&&i===ve.UP&&(u=l.topY<h.getTopLineTopY()?oe.STAVE_LINE_DISTANCE:u,c=Math.min(c,l.topY-u*(this.textLine+1)));else{const f=n.getStemExtents();c=f.topY+(f.baseY-f.topY)/2+o/2}CB("Rendering annotation: ",this.text,a,c),this.x=a,this.y=c,this.renderText(e,0,0),e.closeGroup()}}wi.DEBUG=!1;wi.HorizontalJustify=ai;wi.HorizontalJustifyString={left:ai.LEFT,right:ai.RIGHT,center:ai.CENTER,centerStem:ai.CENTER_STEM};wi.VerticalJustify=ci;wi.VerticalJustifyString={above:ci.TOP,top:ci.TOP,below:ci.BOTTOM,bottom:ci.BOTTOM,center:ci.CENTER,centerStem:ci.CENTER_STEM};function wB(...t){ir.DEBUG&&pn("VexFlow.Articulation",t)}const{ABOVE:Ys,BELOW:Il}=Re.Position;function iA(t,e){return t(e/.5)*.5}function RE(t,e){return e===Ys?t<=5:t>=1}function sA(t,e){return RE(t,e)?e===Ys?Math.ceil:Math.floor:Math.round}function AB(t,e,n,i){const s=iA(sA(e,n),e),r=t&&RE(s,n),o=s%1===0;return r&&o?s+.5*-i:s}const LE=t=>nr(t)||tA(t);function rA(t,e){const n=t.getStemDirection(),{topY:i,baseY:s}=t.getStemExtents();if(LE(t))return t.hasStem()?n===ve.UP?i:s:Math.min(...t.getYs());if(ns(t))return t.hasStem()&&n===ve.UP?i:t.checkStave().getYForTopText(e);throw new re("UnknownCategory","Only can get the top and bottom ys of stavenotes and tabnotes")}function oA(t,e){const n=t.getStemDirection(),{topY:i,baseY:s}=t.getStemExtents();if(LE(t))return t.hasStem()?n===ve.UP?s:i:Math.max(...t.getYs());if(ns(t))return t.hasStem()?n===ve.UP?t.checkStave().getYForBottomText(e):i:t.checkStave().getYForBottomText(e);throw new re("UnknownCategory","Only can get the top and bottom ys of stavenotes and tabnotes")}function aA(t,e){const n=e===Ys&&t.getStemDirection()===ve.UP||e===Il&&t.getStemDirection()===ve.DOWN;return LE(t)?t.hasStem()&&n?.5:1:t.hasStem()&&n?1:0}class ir extends Re{static get CATEGORY(){return"Articulation"}static format(e,n){if(!e||e.length===0)return!1;const i=.5;let s=0;const r=(c,l,u)=>iA(sA(l,u),c.height/10+i);e.forEach(c=>{const l=c.checkAttachedNote();s=Math.max(l.getGlyphWidth(),s);let u=5;const d=l.hasStem()?l.getStemDirection():ve.UP;let h=0;if(xf(l)){const p=l.getStem();p&&(h=Math.abs(p.getHeight())/oe.STAVE_LINE_DISTANCE)}const f=l.getStave();if(f&&(u=f.getNumLines()),c.getPosition()===Ys){let p=l.getLineNumber(!0);d===ve.UP&&(p+=h);let m=r(c,n.topTextLine,Ys);const b=p+n.topTextLine+.5;!c.articulation.betweenLines&&b<u&&(m+=u-b),c.setTextLine(n.topTextLine),n.topTextLine+=m,c.setOrigin(.5,1)}else if(c.getPosition()===Il){let p=Math.max(u-l.getLineNumber(),0);d===ve.DOWN&&(p+=h);let m=r(c,n.textLine,Il);const b=p+n.textLine+.5;!c.articulation.betweenLines&&b<u&&(m+=u-b),c.setTextLine(n.textLine),n.textLine+=m,c.setOrigin(.5,0)}});const o=e.map(c=>c.getWidth()).reduce((c,l)=>Math.max(l,c)),a=Math.min(Math.max(o-s,0),Math.max(o-(n.leftShift+n.rightShift),0));return n.leftShift+=a/2,n.rightShift+=a/2,!0}static easyScoreHook({articulations:e},n,i){if(!e)return;const s={staccato:"a.",tenuto:"a-",accent:"a>"};e.split(",").map(r=>r.trim().split(".")).map(([r,o])=>{const a={type:s[r]};return o&&(a.position=Re.PositionString[o]),i.getFactory().Articulation(a)}).map(r=>n.addModifier(r,0))}constructor(e){var n;super(),this.heightShift=0,this.type=e,this.position=Ys,oe.articulationCodes(this.type)||(((n=this.type.codePointAt(0))!==null&&n!==void 0?n:0)%2===0?this.position=Ys:this.position=Il),this.articulation={betweenLines:!1},this.reset()}reset(){this.articulation=oe.articulationCodes(this.type),this.articulation||(this.articulation={code:this.type,betweenLines:!1});const e=(this.position===Ys?this.articulation.aboveCode:this.articulation.belowCode)||this.articulation.code||M.null;this.text=e}setBetweenLines(e=!0){return this.articulation.betweenLines=e,this}draw(){const e=this.checkContext(),n=this.checkAttachedNote();this.setRendered();const i=this.checkIndex(),{position:s,textLine:r}=this,o=this.articulation.betweenLines,a=n.checkStave(),c=a.getSpacingBetweenLines(),l=ns(n),{x:u}=n.getModifierStartXY(s,i),d=!o||l,h=aA(n,s);let f={[Ys]:()=>{const p=rA(n,r)-(r+h)*c;return d?Math.min(a.getYForTopText(ir.INITIAL_OFFSET),p):p},[Il]:()=>{const p=oA(n,r)+(r+h)*c;return d?Math.max(a.getYForBottomText(ir.INITIAL_OFFSET),p):p}}[s]();if(!l){const p=s===Ys?-1:1,m=n.getKeyProps()[i].line,E=(n.getYs()[i]-f)/c+Number(m),x=AB(o,E,s,p);RE(x,s)&&this.setOrigin(.5,.5),f+=Math.abs(x-E)*c*p}wB(`Rendering articulation at (x: ${u}, y: ${f})`),this.x=u,this.y=f,this.renderText(e,0,0)}}ir.DEBUG=!1;ir.INITIAL_OFFSET=-.5;class ME{static get CATEGORY(){return"RenderContext"}set font(e){this.setFont(e)}get font(){return this.getFont()}}function NB(t,e,n,i="#F55"){t.save(),t.setFillStyle(i),t.beginPath(),t.arc(e,n,3,0,Math.PI*2,!1),t.closePath(),t.fill(),t.restore()}class yB extends Ye{static get CATEGORY(){return"Tickable"}constructor(){super(),this._preFormatted=!1,this._postFormatted=!1,this.ticks=new at(0,1),this.intrinsicTicks=0,this.tickMultiplier=new at(1,1),this.modifiers=[],this.tupletStack=[],this.alignCenter=!1,this.centerXShift=0,this.ignoreTicks=!1,this.formatterMetrics={freedom:{left:0,right:0},duration:"",iterations:0,space:{used:0,mean:0,deviation:0}}}reset(){return this}getTicks(){return this.ticks}shouldIgnoreTicks(){return this.ignoreTicks}setIgnoreTicks(e){return this.ignoreTicks=e,this}getWidth(){if(!this._preFormatted)throw new re("UnformattedNote","Can't call GetWidth on an unformatted note.");return this.width+(this.modifierContext?this.modifierContext.getWidth():0)}getX(){return this.checkTickContext("Can't getX() without a TickContext.").getX()+this.xShift}getFormatterMetrics(){return this.formatterMetrics}getCenterXShift(){return this.isCenterAligned()?this.centerXShift:0}setCenterXShift(e){return this.centerXShift=e,this}isCenterAligned(){return this.alignCenter}setCenterAlignment(e){return this.alignCenter=e,this}getVoice(){return rn(this.voice,"NoVoice","Tickable has no voice.")}setVoice(e){this.voice=e}getTuplet(){return this.tuplet}getTupletStack(){return this.tupletStack}resetTuplet(e){let n,i;if(e){const s=this.tupletStack.indexOf(e);return s!==-1&&(this.tupletStack.splice(s,1),n=e.getNoteCount(),i=e.getNotesOccupied(),this.applyTickMultiplier(n,i)),this}for(;this.tupletStack.length;)e=this.tupletStack.pop(),n=e.getNoteCount(),i=e.getNotesOccupied(),this.applyTickMultiplier(n,i);return this}setTuplet(e){if(e){this.tupletStack.push(e);const n=e.getNoteCount(),i=e.getNotesOccupied();this.applyTickMultiplier(i,n)}return this.tuplet=e,this}addToModifierContext(e){this.modifierContext=e;for(let n=0;n<this.modifiers.length;++n)this.modifierContext.addMember(this.modifiers[n]);return this.modifierContext.addMember(this),this._preFormatted=!1,this}addModifier(e,n=0){return this.modifiers.push(e),this._preFormatted=!1,this}getModifiers(){return this.modifiers}setTickContext(e){this.tickContext=e,this._preFormatted=!1}checkTickContext(e="Tickable has no tick context."){return rn(this.tickContext,"NoTickContext",e)}preFormat(){this._preFormatted||(this.width=0,this.modifierContext&&(this.modifierContext.preFormat(),this.width+=this.modifierContext.getWidth()))}set preFormatted(e){this._preFormatted=e}get preFormatted(){return this._preFormatted}postFormat(){return this._postFormatted?this:(this._postFormatted=!0,this)}set postFormatted(e){this._postFormatted=e}get postFormatted(){return this._postFormatted}getIntrinsicTicks(){return this.intrinsicTicks}setIntrinsicTicks(e){this.intrinsicTicks=e,this.ticks=this.tickMultiplier.clone().multiply(this.intrinsicTicks)}getTickMultiplier(){return this.tickMultiplier}applyTickMultiplier(e,n){this.tickMultiplier.multiply(e,n),this.ticks=this.tickMultiplier.clone().multiply(this.intrinsicTicks)}setDuration(e){const n=e.numerator*(oe.RESOLUTION/e.denominator);this.ticks=this.tickMultiplier.clone().multiply(n),this.intrinsicTicks=this.ticks.value()}getAbsoluteX(){return this.checkTickContext("Can't getAbsoluteX() without a TickContext.").getX()}setModifierContext(e){return this.modifierContext=e,this}getModifierContext(){return this.modifierContext}checkModifierContext(){return rn(this.modifierContext,"NoModifierContext","No modifier context attached to this tickable.")}}let mi=class Rl extends yB{static get CATEGORY(){return"Note"}static getGlyphProps(e,n="n"){e=oe.sanitizeDuration(e);let i=oe.durationCodes[e];i===void 0&&(i=oe.durationCodes[4]);const s=oe.codeNoteHead(n.toUpperCase(),e);return s!==M.null&&(i=Object.assign(Object.assign({},i),{codeHead:s})),i}static plotMetrics(e,n,i){var s;const r=n.getMetrics(),o=n.getAbsoluteX()-r.modLeftPx-r.leftDisplacedHeadPx,a=n.getAbsoluteX()-r.leftDisplacedHeadPx,c=n.getAbsoluteX(),l=n.getAbsoluteX()+r.notePx,u=n.getAbsoluteX()+r.notePx+r.rightDisplacedHeadPx,d=n.getAbsoluteX()+r.notePx+r.rightDisplacedHeadPx+r.modRightPx,h=d+((s=n.getFormatterMetrics().freedom.right)!==null&&s!==void 0?s:0),f=d-o;e.save(),e.setFont(Ce.get("fontFamily"),8),e.fillText(Math.round(f)+"px",o+n.getXShift(),i);const p=i+7;function m(E,x,S,v=p){e.beginPath(),e.setStrokeStyle(S),e.setFillStyle(S),e.setLineWidth(3),e.moveTo(E+n.getXShift(),v),e.lineTo(x+n.getXShift(),v),e.stroke()}m(o,a,"red"),m(a,c,"#999"),m(c,l,"green"),m(l,u,"#999"),m(u,d,"red"),m(d,h,"#DD0"),m(o-n.getXShift(),o,"#BBB"),NB(e,c+n.getXShift(),p,"blue");const b=n.getFormatterMetrics();if(b.iterations>0){const E=b.space.deviation,x=E>=0?"+":"";e.setFillStyle("red"),e.fillText(x+Math.round(E),c+n.getXShift(),i-10)}e.restore()}static parseDuration(e){if(!e)return;const i=/(\d*\/?\d+|[a-z])(d*)([nrhms]|$)/.exec(e);if(!i)return;const s=i[1],r=i[2].length,o=i[3]||"n";return{duration:s,dots:r,type:o}}static parseNoteStruct(e){const n=Rl.parseDuration(e.duration);if(!n)return;let i=e.type;if(i&&!oe.validTypes[i])return;const s=[];i||(i=n.type||"n",e.keys!==void 0&&e.keys.forEach((c,l)=>{const u=c.split("/");s[l]=u&&u.length===3?u[2]:i}));let r=oe.durationToTicks(n.duration);if(!r)return;const o=e.dots?e.dots:n.dots;if(typeof o!="number")return;let a=r;for(let c=0;c<o;c++){if(a<=1)return;a=a/2,r+=a}return{duration:n.duration,type:i,customTypes:s,dots:o,ticks:r}}constructor(e){if(super(),!e)throw new re("BadArguments","Note must have valid initialization data to identify duration and type.");const n=Rl.parseNoteStruct(e);if(!n)throw new re("BadArguments",`Invalid note initialization object: ${JSON.stringify(e)}`);this.keys=e.keys||[],this.keyProps=[],this.duration=n.duration,this.noteType=n.type,this.customTypes=n.customTypes,e.durationOverride?this.setDuration(e.durationOverride):this.setIntrinsicTicks(n.ticks),this.modifiers=[],this.glyphProps=Rl.getGlyphProps(this.duration,this.noteType),this.customGlyphs=this.customTypes.map(i=>Rl.getGlyphProps(this.duration,i)),this.playNote=void 0,this.ignoreTicks=!1,this.width=0,this.leftDisplacedHeadPx=0,this.rightDisplacedHeadPx=0,this.xShift=0,this.ys=[],e.alignCenter&&this.setCenterAlignment(e.alignCenter),this.renderOptions={annotationSpacing:5,strokePx:1,yShift:0}}getPlayNote(){return this.playNote}setPlayNote(e){return this.playNote=e,this}isRest(){return!1}addStroke(e,n){return n.setNote(this),n.setIndex(e),this.modifiers.push(n),this.preFormatted=!1,this}getStave(){return this.stave}checkStave(){return rn(this.stave,"NoStave","No stave attached to instance.")}setStave(e){return this.stave=e,this.setYs([e.getYForLine(0)]),this.setContext(this.stave.getContext()),this}getLeftDisplacedHeadPx(){return this.leftDisplacedHeadPx}getRightDisplacedHeadPx(){return this.rightDisplacedHeadPx}setLeftDisplacedHeadPx(e){return this.leftDisplacedHeadPx=e,this}setRightDisplacedHeadPx(e){return this.rightDisplacedHeadPx=e,this}shouldIgnoreTicks(){return this.ignoreTicks}getLineNumber(e){return 0}getLineForRest(){return 0}getGlyphProps(){return this.glyphProps}getGlyphWidth(){return 0}setYs(e){return this.ys=e,this}getYs(){if(this.ys.length===0)throw new re("NoYValues","No Y-values calculated for this note.");return this.ys}getYForTopText(e){return this.checkStave().getYForTopText(e)}getVoice(){if(!this.voice)throw new re("NoVoice","Note has no voice.");return this.voice}setVoice(e){return this.voice=e,this.preFormatted=!1,this}getTickContext(){return this.checkTickContext()}setTickContext(e){return this.tickContext=e,this.preFormatted=!1,this}getDuration(){return this.duration}isDotted(){return this.getModifiersByType("Dot").length>0}hasStem(){return!1}getNoteType(){return this.noteType}getBeam(){return this.beam}checkBeam(){return rn(this.beam,"NoBeam","No beam attached to instance")}hasBeam(){return this.beam!==void 0}setBeam(e){return this.beam=e,this}addModifier(e,n=0){const i="Note.addModifier(modifier: Modifier, index: number=0)";if(typeof n=="string"&&(n=parseInt(n),console.warn(i+" expected a number for `index`, but received a string.")),typeof e!="object"||typeof n!="number")throw new re("WrongParams","Incorrect call signature. Use "+i+" instead.");return e.setNote(this),e.setIndex(n),super.addModifier(e),this}getModifiersByType(e){return this.modifiers.filter(n=>n.getCategory()===e)}getModifierStartXY(e,n,i){if(!this.preFormatted)throw new re("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");return{x:this.getAbsoluteX(),y:this.ys[0]}}getRightParenthesisPx(e){return this.getKeyProps()[e].displaced?this.getRightDisplacedHeadPx():0}getLeftParenthesisPx(e){return this.getKeyProps()[e].displaced?this.getLeftDisplacedHeadPx()-this.xShift:-this.xShift}getFirstDotPx(){let e=this.getRightDisplacedHeadPx();const n=this.checkModifierContext().getMembers("Parenthesis");return n.length!==0&&(e+=n[0].getWidth()+1),e}getMetrics(){if(!this.preFormatted)throw new re("UnformattedNote","Can't call getMetrics on an unformatted note.");const e=this.modifierContext?this.modifierContext.getState().leftShift:0,n=this.modifierContext?this.modifierContext.getState().rightShift:0,i=this.getWidth(),s=this.getGlyphWidth(),r=i-e-n-this.leftDisplacedHeadPx-this.rightDisplacedHeadPx;return{width:i,glyphWidth:s,notePx:r,modLeftPx:e,modRightPx:n,leftDisplacedHeadPx:this.leftDisplacedHeadPx,rightDisplacedHeadPx:this.rightDisplacedHeadPx,glyphPx:0}}getAbsoluteX(){let n=this.checkTickContext("Can't getAbsoluteX() without a TickContext.").getX();return this.stave&&(n+=this.stave.getNoteStartX()+Ce.get("Stave.padding",0)),this.isCenterAligned()&&(n+=this.getCenterXShift()),n}getStemDirection(){throw new re("NoStem","No stem attached to this note.")}getStemExtents(){throw new re("NoStem","No stem attached to this note.")}getTieRightX(){let e=this.getAbsoluteX();const n=this.getGlyphWidth();return e+=n/2,e+=-this.width/2+this.width+2,e}getTieLeftX(){let e=this.getAbsoluteX();const n=this.getGlyphWidth();return e+=n/2,e-=this.width/2+2,e}getKeys(){return this.keys}getKeyProps(){return this.keyProps}getBoundingBox(){const e=super.getBoundingBox();for(let n=0;n<this.modifiers.length;n++)e.mergeWith(this.modifiers[n].getBoundingBox());return e}};var rt;(function(t){t[t.CENTER=0]="CENTER",t[t.LEFT=1]="LEFT",t[t.RIGHT=2]="RIGHT",t[t.ABOVE=3]="ABOVE",t[t.BELOW=4]="BELOW",t[t.BEGIN=5]="BEGIN",t[t.END=6]="END"})(rt||(rt={}));class rr extends Ye{static get CATEGORY(){return"StaveModifier"}static get Position(){return rt}constructor(){super(),this.padding=10,this.position=rt.ABOVE}getPosition(){return this.position}setPosition(e){return this.position=e,this}getStave(){return this.stave}checkStave(){return rn(this.stave,"NoStave","No stave attached to instance.")}setStave(e){return this.stave=e,this}getPadding(e){return e!==void 0&&e<2?0:this.padding}setPadding(e){return this.padding=e,this}setLayoutMetrics(e){return this.layoutMetrics=e,this}getLayoutMetrics(){return this.layoutMetrics}}var yt;(function(t){t[t.SINGLE=1]="SINGLE",t[t.DOUBLE=2]="DOUBLE",t[t.END=3]="END",t[t.REPEAT_BEGIN=4]="REPEAT_BEGIN",t[t.REPEAT_END=5]="REPEAT_END",t[t.REPEAT_BOTH=6]="REPEAT_BOTH",t[t.NONE=7]="NONE"})(yt||(yt={}));class As extends rr{static get CATEGORY(){return"Barline"}static get type(){return yt}static get typeString(){return{single:yt.SINGLE,double:yt.DOUBLE,end:yt.END,repeatBegin:yt.REPEAT_BEGIN,repeatEnd:yt.REPEAT_END,repeatBoth:yt.REPEAT_BOTH,none:yt.NONE}}constructor(e){super(),this.thickness=oe.STAVE_LINE_THICKNESS;const n=yt;this.widths={},this.widths[n.SINGLE]=5,this.widths[n.DOUBLE]=5,this.widths[n.END]=5,this.widths[n.REPEAT_BEGIN]=5,this.widths[n.REPEAT_END]=5,this.widths[n.REPEAT_BOTH]=5,this.widths[n.NONE]=5,this.paddings={},this.paddings[n.SINGLE]=0,this.paddings[n.DOUBLE]=0,this.paddings[n.END]=0,this.paddings[n.REPEAT_BEGIN]=15,this.paddings[n.REPEAT_END]=15,this.paddings[n.REPEAT_BOTH]=15,this.paddings[n.NONE]=0,this.layoutMetricsMap={},this.layoutMetricsMap[n.SINGLE]={xMin:0,xMax:1,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[n.DOUBLE]={xMin:-3,xMax:1,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[n.END]={xMin:-5,xMax:1,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[n.REPEAT_END]={xMin:-10,xMax:1,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[n.REPEAT_BEGIN]={xMin:-2,xMax:10,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[n.REPEAT_BOTH]={xMin:-10,xMax:10,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[n.NONE]={xMin:0,xMax:0,paddingLeft:5,paddingRight:5},this.setPosition(rt.BEGIN),this.setType(e)}getType(){return this.type}setType(e){return this.type=typeof e=="string"?As.typeString[e]:e,this.setWidth(this.widths[this.type]),this.setPadding(this.paddings[this.type]),this.setLayoutMetrics(this.layoutMetricsMap[this.type]),this}draw(){const e=this.checkStave(),n=e.checkContext();switch(this.setRendered(),n.openGroup("stavebarline",this.getAttribute("id")),this.type){case yt.SINGLE:this.drawVerticalBar(e,this.x,!1);break;case yt.DOUBLE:this.drawVerticalBar(e,this.x,!0);break;case yt.END:this.drawVerticalEndBar(e,this.x);break;case yt.REPEAT_BEGIN:this.drawRepeatBar(e,this.x,!0),e.getX()!==this.x&&this.drawVerticalBar(e,e.getX());break;case yt.REPEAT_END:this.drawRepeatBar(e,this.x,!1);break;case yt.REPEAT_BOTH:this.drawRepeatBar(e,this.x,!1),this.drawRepeatBar(e,this.x,!0);break}n.closeGroup()}drawVerticalBar(e,n,i){const s=e.checkContext(),r=e.getTopLineTopY(),o=e.getBottomLineBottomY();i&&s.fillRect(n-3,r,1,o-r),s.fillRect(n,r,1,o-r)}drawVerticalEndBar(e,n){const i=e.checkContext(),s=e.getTopLineTopY(),r=e.getBottomLineBottomY();i.fillRect(n-5,s,1,r-s),i.fillRect(n-2,s,3,r-s)}drawRepeatBar(e,n,i){const s=e.checkContext(),r=e.getTopLineTopY(),o=e.getBottomLineBottomY();let a=3;i||(a=-5),s.fillRect(n+a,r,1,o-r),s.fillRect(n-2,r,3,o-r);const c=2;i?a+=4:a-=4;const l=n+a+c/2;let u=(e.getNumLines()-1)*e.getSpacingBetweenLines();u=u/2-e.getSpacingBetweenLines()/2;let d=r+u+c/2;s.beginPath(),s.arc(l,d,c,0,Math.PI*2,!1),s.fill(),d+=e.getSpacingBetweenLines(),s.beginPath(),s.arc(l,d,c,0,Math.PI*2,!1),s.fill()}}function kB(...t){Tf.DEBUG&&pn("VexFlow.BarNote",t)}class Tf extends mi{static get CATEGORY(){return"BarNote"}constructor(e=yt.SINGLE){super({duration:"b"}),this.metrics={widths:{}};const n=yt;this.metrics.widths={[n.SINGLE]:8,[n.DOUBLE]:12,[n.END]:15,[n.REPEAT_BEGIN]:14,[n.REPEAT_END]:14,[n.REPEAT_BOTH]:18,[n.NONE]:0},this.ignoreTicks=!0,this.setType(e)}getType(){return this.type}setType(e){return this.type=typeof e=="string"?As.typeString[e]:e,this.setWidth(this.metrics.widths[this.type]),this}addToModifierContext(e){return this}preFormat(){return this.preFormatted=!0,this}draw(){const e=this.checkContext();kB("Rendering bar line at: ",this.getAbsoluteX());const n=new As(this.type);n.setX(this.getAbsoluteX()),n.setStave(this.checkStave()),n.setContext(e),n.drawWithStyle(),this.setRendered()}}Tf.DEBUG=!1;function N1(t){let e=0;return t.forEach(n=>{n.keyProps&&n.keyProps.forEach(i=>{e+=i.line-3})}),e>=0?ve.DOWN:ve.UP}function DB(t,e){const n=t.getStemExtents().topY,i=t.getStemX(),s=e.getStemExtents().topY,r=e.getStemX();return(s-n)/(r-i)}const Vm="L",OB="R",y1="B";class wo extends Ye{static get CATEGORY(){return"Beam"}getStemDirection(){return this._stemDirection}static getDefaultBeamGroups(e){(!e||e==="c")&&(e="4/4");const i={"1/2":["1/2"],"2/2":["1/2"],"3/2":["1/2"],"4/2":["1/2"],"1/4":["1/4"],"2/4":["1/4"],"3/4":["1/4"],"4/4":["1/4"],"1/8":["1/8"],"2/8":["2/8"],"3/8":["3/8"],"4/8":["2/8"],"1/16":["1/16"],"2/16":["2/16"],"3/16":["3/16"],"4/16":["2/16"]}[e];if(i===void 0){const s=parseInt(e.split("/")[0],10),r=parseInt(e.split("/")[1],10);if(s%3===0)return[new at(3,r)];if(r>4)return[new at(2,r)];if(r<=4)return[new at(1,r)]}else return i.map(s=>new at().parse(s));return[new at(1,4)]}static applyAndGetBeams(e,n,i){return wo.generateBeams(e.getTickables(),{groups:i,stemDirection:n})}static generateBeams(e,n={}){(!n.groups||!n.groups.length)&&(n.groups=[new at(2,8)]);const i=n.groups.map(v=>{if(!v.multiply)throw new re("InvalidBeamGroups","The beam groups must be an array of VexFlow.Fractions");return v.clone().multiply(oe.RESOLUTION,1)}),s=e;let r=0,o=[],a=[];function c(v){return v.reduce((T,w)=>w.getTicks().clone().add(T),new at(0,1))}function l(){i.length-1>r?r+=1:r=0}function u(){let v=[],T=new at(0,1);s.forEach(w=>{if(v=[],w.shouldIgnoreTicks()){o.push(a),a=v;return}a.push(w);const D=i[r].clone(),A=c(a).add(T),y=oe.durationToNumber(w.getDuration())<8;if(y&&w.getTuplet()&&(D.numerator*=2),A.greaterThan(D)){if(!y){const O=a.pop();O&&v.push(O)}o.push(a);do T=A.subtract(i[r]),l();while(T.greaterThanEquals(i[r]));a=v}else A.equals(D)&&(o.push(a),T=new at(0,1),a=v,l())}),a.length>0&&o.push(a)}function d(){return o.filter(v=>{if(v.length>1){let T=!0;return v.forEach(w=>{w.getIntrinsicTicks()>=oe.durationToTicks("4")&&(T=!1)}),T}return!1})}function h(){const v=[];o.forEach(T=>{let w=[];T.forEach((D,A,y)=>{const O=A===0||A===y.length-1,L=y[A-1],P=!n.beamRests&&D.isRest(),U=n.beamRests&&n.beamMiddleOnly&&D.isRest()&&O;let X=!1;if(n.maintainStemDirections&&L&&!D.isRest()&&!L.isRest()){const _=L.getStemDirection();X=D.getStemDirection()!==_}const K=parseInt(D.getDuration(),10)<8;P||U||X||K?(w.length>0&&v.push(w),w=X?[D]:[]):w.push(D)}),w.length>0&&v.push(w)}),o=v}function f(){o.forEach(v=>{let T;if(n.maintainStemDirections){const w=p(v);T=w?w.getStemDirection():ve.UP}else n.stemDirection?T=n.stemDirection:T=N1(v);m(v,T)})}function p(v){for(let T=0;T<v.length;T++){const w=v[T];if(!w.isRest())return w}return!1}function m(v,T){v.forEach(w=>{w.setStemDirection(T)})}function b(){const v=[];return o.forEach(T=>{let w;T.forEach(D=>{const A=D.getTuplet();A&&w!==A&&(w=A,v.push(w))})}),v}u(),h(),f();const E=d(),x=b(),S=[];return E.forEach(v=>{const T=new wo(v);n.showStemlets&&(T.renderOptions.showStemlets=!0),n.secondaryBreaks&&(T.renderOptions.secondaryBreakTicks=oe.durationToTicks(n.secondaryBreaks)),n.flatBeams===!0&&(T.renderOptions.flatBeams=!0,T.renderOptions.flatBeamOffset=n.flatBeamOffset),S.push(T)}),x.forEach(v=>{const T=v.notes[0].stemDirection===ve.DOWN?-1:1;v.setTupletLocation(T);let w=!1;for(let D=0;D<v.notes.length;D++)if(!v.notes[D].hasBeam()){w=!0;break}v.setBracketed(w)}),S}constructor(e,n=!1){if(super(),this.slope=0,this.yShift=0,this.forcedPartialDirections={},!e||e.length===0)throw new re("BadArguments","No notes provided for beam.");if(e.length===1)throw new re("BadArguments","Too few notes for beam.");if(this._ticks=e[0].getIntrinsicTicks(),this._ticks>=oe.durationToTicks("4"))throw new re("BadArguments","Beams can only be applied to notes shorter than a quarter note.");let i,s;this._stemDirection=e[0].getStemDirection();let r=this._stemDirection;for(n&&nr(e[0])?r=N1(e):n&&ns(e[0])&&(r=e.reduce((a,c)=>a+c.getStemDirection(),0)>-1?ve.UP:ve.DOWN),i=0;i<e.length;++i)s=e[i],n&&(s.setStemDirection(r),this._stemDirection=r),s.setBeam(this);this.postFormatted=!1,this.notes=e,this._beamCount=this.getBeamCount(),this.breakOnIndexes=[],this.renderOptions={beamWidth:5,maxSlope:.25,minSlope:-.25,slopeIterations:20,slopeCost:100,showStemlets:!1,stemletExtension:7,partialBeamLength:10,flatBeams:!1,minFlatBeamOffset:15}}getNotes(){return this.notes}getBeamCount(){return this.notes.map(i=>i.getGlyphProps().beamCount).reduce((i,s)=>s>i?s:i)}breakSecondaryAt(e){return this.breakOnIndexes=e,this}setPartialBeamSideAt(e,n){return this.forcedPartialDirections[e]=n,this}unsetPartialBeamSideAt(e){return delete this.forcedPartialDirections[e],this}getSlopeY(e,n,i,s){return i+(e-n)*s}calculateSlope(){const{notes:e,renderOptions:{maxSlope:n,minSlope:i,slopeIterations:s,slopeCost:r}}=this,o=this._stemDirection,a=e[0],c=DB(a,e[e.length-1]),l=(n-i)/s;let u=Number.MAX_VALUE,d=0,h=0;for(let f=i;f<=n;f+=l){let p=0,m=0;for(let S=1;S<e.length;++S){const v=e[S];if(v.hasStem()||v.isRest()){const T=this.getSlopeY(v.getStemX(),a.getStemX(),a.getStemExtents().topY,f)+m,w=v.getStemExtents().topY;if(w*o<T*o){const D=Math.abs(w-T);m+=D*-o,p+=D*S}else p+=(w-T)*o}}const b=c/2,E=Math.abs(b-f),x=r*E+Math.abs(p);x<u&&(u=x,d=f,h=m)}this.slope=d,this.yShift=h}calculateFlatSlope(){const{notes:e,renderOptions:{beamWidth:n,minFlatBeamOffset:i,flatBeamOffset:s}}=this,r=this._stemDirection;let o=0,a=0,c=0,l=0;for(let f=0;f<e.length;f++){const p=e[f],m=p.getStemExtents().topY;o+=m,r===ve.DOWN&&l<m?(l=m,a=Math.max(...p.getYs()),c=p.getBeamCount()):r===ve.UP&&(l===0||l>m)&&(l=m,a=Math.min(...p.getYs()),c=p.getBeamCount())}let u=o/e.length;const d=i+c*n*1.5,h=a+d*-r;r===ve.DOWN&&u<h?u=a+d:r===ve.UP&&u>h&&(u=a-d),s?r===ve.DOWN&&u>s?this.renderOptions.flatBeamOffset=u:r===ve.UP&&u<s&&(this.renderOptions.flatBeamOffset=u):this.renderOptions.flatBeamOffset=u,this.slope=0,this.yShift=0}getBeamYToDraw(){let i=this.notes[0].getStemExtents().topY;return this.renderOptions.flatBeams&&this.renderOptions.flatBeamOffset&&(i=this.renderOptions.flatBeamOffset),i}applyStemExtensions(){const{notes:e,slope:n,renderOptions:{showStemlets:i,stemletExtension:s,beamWidth:r}}=this,o=this.yShift,a=this._beamCount,c=e[0],l=this.getBeamYToDraw(),u=c.getStemX();for(let d=0;d<e.length;++d){const h=e[d],f=h.getStem();if(f){const p=h.getStemX(),{topY:m}=h.getStemExtents(),b=this.getSlopeY(p,u,l,n)+o,E=f.getExtension(),x=h.getStemDirection()===ve.UP?m-b:b-m;let S=0;if(h.getStemDirection()!==this._stemDirection&&(S=(1+(h.getGlyphProps().beamCount-1)*1.5)*this.renderOptions.beamWidth),f.setExtension(E+x+S),f.adjustHeightForBeam(),h.isRest()&&i){const v=(a-1)*r*1.5+r;f.setVisibility(!0).setStemlet(!0,v+s)}}}}lookupBeamDirection(e,n,i,s,r){if(e==="4")return Vm;const o=this.forcedPartialDirections[r];if(o)return o;const a=`${oe.durationToNumber(e)/2}`,c=n<oe.durationToTicks(a),l=s<oe.durationToTicks(a),u=i<oe.durationToTicks(a);return c&&l&&u?y1:c&&!l&&u?Vm:!c&&l&&u?OB:this.lookupBeamDirection(a,n,i,s,r)}getBeamLines(e){const n=oe.durationToTicks(e);let i=!1;const s=[];let r;const o=this.renderOptions.partialBeamLength;let a=!1,c=0;for(let u=0;u<this.notes.length;++u){const d=this.notes[u],h=d.getTicks().value();c+=h;let f=!1;parseInt(e,10)>=8&&(f=this.breakOnIndexes.indexOf(u)!==-1,this.renderOptions.secondaryBreakTicks&&c>=this.renderOptions.secondaryBreakTicks&&(c=0,f=!0));const p=d.getIntrinsicTicks()<n,m=d.getStemX()-ve.WIDTH/2,b=this.notes[u-1],E=this.notes[u+1],x=E&&E.getIntrinsicTicks()<n,S=b&&b.getIntrinsicTicks()<n,v=b&&E&&p&&!S&&!x;if(p)if(i)r=s[s.length-1],r.end=m,f&&(i=!1,E&&!x&&r.end===void 0&&(r.end=r.start-o));else{if(r={start:m,end:void 0},i=!0,v){const T=b.getIntrinsicTicks(),w=E.getIntrinsicTicks(),D=d.getIntrinsicTicks(),A=this.lookupBeamDirection(e,T,D,w,u);[Vm,y1].includes(A)?r.end=r.start-o:r.end=r.start+o}else x?f&&(r.end=r.start-o,i=!1):(a||u===0)&&E?r.end=r.start+o:r.end=r.start-o;s.push(r)}else i=!1;a=f}const l=s[s.length-1];return l&&l.end===void 0&&(l.end=l.start-o),s}drawStems(e){this.notes.forEach(n=>{const i=n.getStem();if(i){const s=n.getStemX();i.setNoteHeadXBounds(s,s),i.setContext(e).drawWithStyle()}},this)}drawBeamLines(e){const n=["4","8","16","32","64"],i=this.notes[0];let s=this.getBeamYToDraw();const r=i.getStemX(),o=this.renderOptions.beamWidth*this._stemDirection;for(let a=0;a<n.length;++a){const c=n[a],l=this.getBeamLines(c);for(let u=0;u<l.length;++u){const d=l[u],h=d.start,f=this.getSlopeY(h,r,s,this.slope),p=d.end;if(p){const m=this.getSlopeY(p,r,s,this.slope);e.beginPath(),e.moveTo(h,f),e.lineTo(h,f+o),e.lineTo(p+1,m+o),e.lineTo(p+1,m),e.closePath(),e.fill()}else throw new re("NoLastBeamX","lastBeamX undefined.")}s+=o*1.5}}preFormat(){return this}postFormat(){this.postFormatted||(ns(this.notes[0])||this.renderOptions.flatBeams?this.calculateFlatSlope():this.calculateSlope(),this.applyStemExtensions(),this.postFormatted=!0)}draw(){const e=this.checkContext();this.setRendered(),!this.unbeamable&&(this.postFormatted||this.postFormat(),e.openGroup("beam",this.getAttribute("id")),this.drawStems(e),this.drawBeamLines(e),e.closeGroup())}}class Ki extends Re{static get CATEGORY(){return"Bend"}static get UP(){return 0}static get DOWN(){return 1}static format(e,n){if(!e||e.length===0)return!1;let i=0;for(let s=0;s<e.length;++s){const r=e[s],o=r.checkAttachedNote();if(ns(o)){const a=o.leastString()-1;n.topTextLine<a&&(n.topTextLine=a)}r.setXShift(i),i=r.getWidth(),r.setTextLine(n.topTextLine)}return n.rightShift+=i,n.topTextLine+=1,!0}setStyleLine(e){return this.styleLine=e,this}getStyleLine(){return this.styleLine}constructor(e){super(),this.styleLine=Ce.getStyle("Bend.line"),this.xShift=0,this.tap="",this.renderOptions={bendWidth:8,releaseWidth:8},this.phrase=e,this.updateWidth()}setXShift(e){return this.xShift=e,this.updateWidth(),this}setTap(e){return this.tap=e,this}getTextHeight(){const e=new Ye("Bend");return e.setText(this.phrase[0].text),e.getHeight()}updateWidth(){const e=i=>{const s=new Ye("Bend");return s.setText(i),s.getWidth()};let n=0;for(let i=0;i<this.phrase.length;++i){const s=this.phrase[i];if(s.width!==void 0)n+=s.width;else{const r=s.type===Ki.UP?this.renderOptions.bendWidth:this.renderOptions.releaseWidth;s.width=Math.max(r,e(s.text))+3,s.drawWidth=s.width/2,n+=s.width}}return this.setWidth(n+this.xShift),this}draw(){var e;const n=this.checkContext(),i=this.checkAttachedNote();this.setRendered();const s=i.getModifierStartXY(Re.Position.RIGHT,this.index);s.x+=3,s.y+=.5;const r=this.xShift,a=i.checkStave().getSpacingBetweenLines(),c=i.getYs().reduce((x,S)=>x<S?x:S),l=s.y-((this.textLine+1)*a+s.y-c)+3,u=s.y-((this.textLine+1)*a+s.y-c)-1,d=(x,S,v,T)=>{const w=x+v,D=S;this.applyStyle(n,this.styleLine),n.beginPath(),n.moveTo(x,S),n.quadraticCurveTo(w,D,x+v,T),n.stroke()},h=(x,S,v,T)=>{this.applyStyle(n,this.styleLine),n.beginPath(),n.moveTo(x,T),n.quadraticCurveTo(x+v,T,x+v,S),n.stroke()},f=(x,S,v)=>{const w=S+4*v;n.beginPath(),n.moveTo(x,S),n.lineTo(x-4,w),n.lineTo(x+4,w),n.closePath(),n.fill()},p=(x,S)=>{n.setFont(this.fontInfo);const v=x-n.measureText(S).width/2;n.fillText(S,v,u)};let m,b=0,E=0;if(!((e=this.tap)===null||e===void 0)&&e.length){const x=i.getModifierStartXY(Re.Position.CENTER,this.index);p(x.x,this.tap)}for(let x=0;x<this.phrase.length;++x){const S=this.phrase[x];S.drawWidth||(S.drawWidth=0),x===0&&(S.drawWidth+=r),E=S.drawWidth+b-(x===1?r:0),S.type===Ki.UP&&(m&&m.type===Ki.UP&&f(s.x,l,1),d(s.x,s.y,E,l)),S.type===Ki.DOWN&&(m&&m.type===Ki.UP&&h(s.x,s.y,E,l),m&&m.type===Ki.DOWN&&(f(s.x,s.y,-1),h(s.x,s.y,E,l)),m||(E=S.drawWidth,h(s.x,s.y,E,l))),p(s.x+E,S.text),m=S,b=S.drawWidth,m.x=s.x,s.x+=E}if(!m||m.x===void 0)throw new re("NoLastBendForBend","Internal error.");m.type===Ki.UP?f(m.x+E,l,1):m.type===Ki.DOWN&&f(m.x+E,s.y,-1)}}function BE(t){if(!t)return!1;const e=ku();return typeof e.HTMLCanvasElement=="function"&&t instanceof e.HTMLCanvasElement||typeof t.getContext=="function"&&typeof t.toDataURL=="function"}function PB(t){if(!t)return!1;const e=ku();return typeof e.HTMLDivElement=="function"&&t instanceof e.HTMLDivElement||typeof t.appendChild=="function"&&typeof t.style=="object"}class pc extends ME{static get WIDTH(){return 600}static get HEIGHT(){return 400}static get CANVAS_BROWSER_SIZE_LIMIT(){return 32767}static sanitizeCanvasDims(e,n){const i=this.CANVAS_BROWSER_SIZE_LIMIT;return Math.max(e,n)>i&&(aB("Canvas dimensions exceed browser limit. Cropping to "+i),e>i&&(e=i),n>i&&(n=i)),[e,n]}constructor(e){super(),this.textHeight=0,this.context2D=e,this.curTransfrom=e.getTransform(),e.canvas?this.canvas=e.canvas:this.canvas={width:pc.WIDTH,height:pc.HEIGHT}}clear(){this.context2D.clearRect(0,0,this.canvas.width,this.canvas.height)}openGroup(e,n){}closeGroup(){}openRotation(e,n,i){this.curTransfrom=this.context2D.getTransform(),this.context2D.translate(n,i),this.context2D.rotate(e*Math.PI/180),this.context2D.translate(-n,-i)}closeRotation(){this.context2D.setTransform(this.curTransfrom)}add(e){}setFillStyle(e){return this.context2D.fillStyle=e,this}setBackgroundFillStyle(e){return this}setStrokeStyle(e){return this.context2D.strokeStyle=e,this}setShadowColor(e){return this.context2D.shadowColor=e,this}setShadowBlur(e){const n=this.context2D.getTransform(),i=Math.sqrt(n.a*n.a+n.b*n.b+n.c*n.c+n.d*n.d);return this.context2D.shadowBlur=i*e,this}setLineWidth(e){return this.context2D.lineWidth=e,this}setLineCap(e){return this.context2D.lineCap=e,this}setLineDash(e){return this.context2D.setLineDash(e),this}scale(e,n){return this.context2D.scale(e,n),this}resize(e,n,i){var s;const r=this.context2D.canvas,o=(s=i??ku().devicePixelRatio)!==null&&s!==void 0?s:1;return[e,n]=pc.sanitizeCanvasDims(e*o,n*o),e=e/o|0,n=n/o|0,r.width=e*o,r.height=n*o,BE(r)&&(r.style.width=e+"px",r.style.height=n+"px"),this.scale(o,o)}rect(e,n,i,s){return this.context2D.rect(e,n,i,s),this}fillRect(e,n,i,s){return this.context2D.fillRect(e,n,i,s),this}pointerRect(e,n,i,s){return this}clearRect(e,n,i,s){return this.context2D.clearRect(e,n,i,s),this}beginPath(){return this.context2D.beginPath(),this}moveTo(e,n){return this.context2D.moveTo(e,n),this}lineTo(e,n){return this.context2D.lineTo(e,n),this}bezierCurveTo(e,n,i,s,r,o){return this.context2D.bezierCurveTo(e,n,i,s,r,o),this}quadraticCurveTo(e,n,i,s){return this.context2D.quadraticCurveTo(e,n,i,s),this}arc(e,n,i,s,r,o){return this.context2D.arc(e,n,i,s,r,o),this}fill(){return this.context2D.fill(),this}stroke(){return this.context2D.stroke(),this}closePath(){return this.context2D.closePath(),this}measureText(e){const n=this.context2D.measureText(e);let i=0,s=0;return n.fontBoundingBoxAscent?(i=-n.fontBoundingBoxAscent,s=n.fontBoundingBoxDescent+n.fontBoundingBoxAscent):(i=-n.actualBoundingBoxAscent,s=n.actualBoundingBoxDescent+n.actualBoundingBoxAscent),{x:0,y:i,width:n.width,height:s}}fillText(e,n,i){return this.context2D.fillText(e,n,i),this}save(){return this.context2D.save(),this}restore(){return this.context2D.restore(),this}set fillStyle(e){this.context2D.fillStyle=e}get fillStyle(){return this.context2D.fillStyle}set strokeStyle(e){this.context2D.strokeStyle=e}get strokeStyle(){return this.context2D.strokeStyle}setFont(e,n,i,s){const r=et.validate(e,n,i,s);return this.context2D.font=et.toCSSString(r),this.textHeight=et.convertSizeToPixelValue(r.size),this}getFont(){return this.context2D.font}}function k1(...t){_t.DEBUG&&pn("VexFlow.ChordSymbol",t)}class IB extends Ye{constructor(e,n,i,s,r){super(),this.text=e,this.symbolModifier=n,this.xShift=i,this.yShift=s,this.vAlign=r}isSuperscript(){return this.symbolModifier===kr.SUPERSCRIPT}isSubscript(){return this.symbolModifier===kr.SUBSCRIPT}}var xi;(function(t){t[t.LEFT=1]="LEFT",t[t.CENTER=2]="CENTER",t[t.RIGHT=3]="RIGHT",t[t.CENTER_STEM=4]="CENTER_STEM"})(xi||(xi={}));var Ns;(function(t){t[t.TOP=1]="TOP",t[t.BOTTOM=2]="BOTTOM"})(Ns||(Ns={}));var kr;(function(t){t[t.NONE=1]="NONE",t[t.SUBSCRIPT=2]="SUBSCRIPT",t[t.SUPERSCRIPT=3]="SUPERSCRIPT"})(kr||(kr={}));class _t extends Re{static get CATEGORY(){return"ChordSymbol"}static get superSubRatio(){return Ce.get("ChordSymbol.superSubRatio")}static get spacingBetweenBlocks(){return Ce.get("ChordSymbol.spacing")}static get superscriptOffset(){return Ce.get("ChordSymbol.superscriptOffset")}static get subscriptOffset(){return Ce.get("ChordSymbol.subscriptOffset")}static get minPadding(){return Ce.get("NoteHead.minPadding")}static format(e,n){if(!e||e.length===0)return!1;let i=0,s=0,r=0,o=0,a=0;for(const u of e){const d=u.checkAttachedNote();let h=1;for(let f=0;f<u.symbolBlocks.length;++f){const p=u.symbolBlocks[f],m=p.isSuperscript(),b=p.isSubscript();if(p.setXShift(i),(m||b)&&(h=2),b&&f>0){const E=u.symbolBlocks[f-1];E.isSuperscript()&&(p.setXShift(i-E.getWidth()-_t.minPadding),p.vAlign=!0,i+=-E.getWidth()-_t.minPadding+(E.getWidth()>p.getWidth()?E.getWidth()-p.getWidth():0))}i+=p.getWidth()+_t.minPadding}if(u.getVertical()===Ns.TOP?(u.setTextLine(n.topTextLine),n.topTextLine+=h):(u.setTextLine(n.textLine+1),n.textLine+=h+1),u.getReportWidth()){if(xf(d)){const f=d.getGlyphWidth();u.getHorizontal()===xi.RIGHT?(o=Math.max(f,o),s=Math.max(s,i)+_t.minPadding):u.getHorizontal()===xi.LEFT?(a=Math.max(f,a),r=Math.max(r,i)):(s=Math.max(s,i/2)+_t.minPadding,r=Math.max(r,i/2),o=Math.max(f/2,o),a=Math.max(f/2,a))}u.width=i}i=0}const c=Math.min(Math.max(r-a,0),Math.max(r-n.rightShift,0)),l=Math.min(Math.max(s-o,0),Math.max(s-n.leftShift,0));return n.leftShift+=l,n.rightShift+=c,!0}constructor(){super(),this.symbolBlocks=[],this.horizontal=xi.LEFT,this.vertical=Ns.TOP,this.reportWidth=!0}get superscriptOffset(){return _t.superscriptOffset*et.convertSizeToPixelValue(this.fontInfo.size)}get subscriptOffset(){return _t.subscriptOffset*et.convertSizeToPixelValue(this.fontInfo.size)}setReportWidth(e){return this.reportWidth=e,this}getReportWidth(){return this.reportWidth}getSymbolBlock(e={}){var n,i;const s=new IB((n=e.text)!==null&&n!==void 0?n:"",(i=e.symbolModifier)!==null&&i!==void 0?i:kr.NONE,0,0,!1);if(s.isSubscript()&&s.setYShift(this.subscriptOffset),s.isSuperscript()&&s.setYShift(this.superscriptOffset),s.isSubscript()||s.isSuperscript()){const{family:r,size:o,weight:a,style:c}=this.fontInfo,l=et.scaleSize(o,_t.superSubRatio);s.setFont(r,l,a,c)}else s.setFont(this.fontInfo);return s}addSymbolBlock(e){return this.symbolBlocks.push(this.getSymbolBlock(e)),this}addText(e,n={}){return this.addSymbolBlock(Object.assign(Object.assign({},n),{text:e}))}addTextSuperscript(e){const n=kr.SUPERSCRIPT;return this.addSymbolBlock({text:e,symbolModifier:n})}addTextSubscript(e){const n=kr.SUBSCRIPT;return this.addSymbolBlock({text:e,symbolModifier:n})}addGlyphSuperscript(e){return this.addTextSuperscript(_t.glyphs[e])}addGlyph(e,n={}){return this.addText(_t.glyphs[e],n)}addGlyphOrText(e,n={}){let i="";for(let s=0;s<e.length;++s){const r=e[s],o=_t.glyphs[r];o?i+=o:i+=r}return i.length>0&&this.addText(i,n),this}addLine(e={}){return this.addText("",e)}setVertical(e){return this.vertical=typeof e=="string"?_t.VerticalJustifyString[e]:e,this}getVertical(){return this.vertical}setHorizontal(e){return this.horizontal=typeof e=="string"?_t.HorizontalJustifyString[e]:e,this}getHorizontal(){return this.horizontal}draw(){const e=this.checkContext(),n=this.checkAttachedNote();this.setRendered(),e.openGroup("chordsymbol",this.getAttribute("id"));const i=n.getModifierStartXY(Re.Position.ABOVE,this.index);e.setFont(this.fontInfo);let s;const r=n.hasStem(),o=n.checkStave();if(this.vertical===Ns.BOTTOM){if(s=o.getYForBottomText(this.textLine+oe.TEXT_HEIGHT_OFFSET_HACK),r){const c=n.checkStem().getExtents(),l=o.getSpacingBetweenLines(),u=n.getStemDirection()===1?c.baseY:c.topY;s=Math.max(s,u+l*(this.textLine+2))}}else{const c=Math.min(...n.getYs());if(s=Math.min(o.getYForTopText(this.textLine),c-10),r){const l=n.checkStem().getExtents(),u=o.getSpacingBetweenLines();s=Math.min(s,l.topY-5-u*this.textLine)}}let a=i.x;this.horizontal===xi.LEFT?a=i.x:this.horizontal===xi.RIGHT?a=i.x+this.getWidth():this.horizontal===xi.CENTER?a=i.x-this.getWidth()/2:a=n.getStemX()-this.getWidth()/2,k1("Rendering ChordSymbol: ",a,s),this.symbolBlocks.forEach(c=>{k1("Rendering Text: ",c.getText(),a+c.getXShift(),s+c.getYShift()),c.setX(a),c.setY(s),c.renderText(e,0,0)}),e.closeGroup()}getBoundingBox(){const e=this.symbolBlocks[0].getBoundingBox();for(let n=1;n<this.symbolBlocks.length;n++)e.mergeWith(this.symbolBlocks[n].getBoundingBox());return e}}_t.DEBUG=!1;_t.HorizontalJustify=xi;_t.HorizontalJustifyString={left:xi.LEFT,right:xi.RIGHT,center:xi.CENTER,centerStem:xi.CENTER_STEM};_t.VerticalJustify=Ns;_t.VerticalJustifyString={top:Ns.TOP,above:Ns.TOP,below:Ns.BOTTOM,bottom:Ns.BOTTOM};_t.glyphs={diminished:M.csymDiminished,dim:M.csymDiminished,halfDiminished:M.csymHalfDiminished,"+":M.csymAugmented,augmented:M.csymAugmented,majorSeventh:M.csymMajorSeventh,minor:M.csymMinor,"-":M.csymMinor,"(":"(",leftParen:"(",")":")",rightParen:")",leftBracket:M.csymBracketLeftTall,rightBracket:M.csymBracketRightTall,leftParenTall:"(",rightParenTall:")","/":M.csymDiagonalArrangementSlash,over:M.csymDiagonalArrangementSlash,"#":M.csymAccidentalSharp,b:M.csymAccidentalFlat};_t.symbolModifiers=kr;function RB(...t){Ci.DEBUG&&pn("VexFlow.Clef",t)}class Ci extends rr{static get CATEGORY(){return"Clef"}static get types(){const{gClef:e,fClef:n,cClef:i,unpitchedPercussionClef1:s,sixStringTabClef:r}=M;return{treble:{code:e,line:3},bass:{code:n,line:1},alto:{code:i,line:2},tenor:{code:i,line:1},percussion:{code:s,line:2},soprano:{code:i,line:4},"mezzo-soprano":{code:i,line:3},"baritone-c":{code:i,line:0},"baritone-f":{code:n,line:2},subbass:{code:n,line:0},french:{code:e,line:4},tab:{code:r,line:2.5}}}constructor(e,n,i){super(),this.code=Ci.types.treble.code,this.line=Ci.types.treble.line,this.size="default",this.type="treble",this.setPosition(rt.BEGIN),this.setType(e,n,i),RB("Creating clef:",e)}setType(e,n="default",i){return this.type=e,this.code=Ci.types[e].code,this.line=Ci.types[e].line,this.size=n??"default",i==="8va"&&(this.code===M.gClef&&(this.code=M.gClef8va),this.code===M.fClef&&(this.code=M.fClef8va)),i==="8vb"&&(this.code===M.gClef&&(this.code=M.gClef8vb),this.code===M.fClef&&(this.code=M.fClef8vb)),this.text=this.code,this.fontInfo.size=Math.floor(Ci.getPoint(this.size)),this}static getPoint(e){return e==="default"?Ce.get("fontSize"):Ce.get("fontSize")*2/3}setStave(e){return this.stave=e,this}draw(){const e=this.checkStave(),n=e.checkContext();this.setRendered(),n.openGroup("clef",this.getAttribute("id")),this.y=e.getYForLine(this.line),this.renderText(n,0,0),n.closeGroup()}}Ci.DEBUG=!1;class cA extends mi{static get CATEGORY(){return"ClefNote"}constructor(e,n="default",i){super({duration:"b"}),this.setType(e,n,i),this.ignoreTicks=!0}setType(e,n,i){return this.clef=new Ci(e,n,i),this.setWidth(this.clef.getWidth()),this}getClef(){return this.clef}preFormat(){return this.preFormatted=!0,this}draw(){const e=this.checkStave(),n=this.checkContext();this.setRendered(),this.clef.setX(this.getAbsoluteX()),this.clef.setY(e.getYForLine(this.clef.line)),this.clef.renderText(n,0,0)}getBoundingBox(){return this.clef.getBoundingBox()}}class ou{static getNextContext(e){const n=e.tContexts,i=n.indexOf(e);if(i+1<n.length)return n[i+1]}constructor(e){var n;this.preFormatted=!1,this.postFormatted=!1,this.tickID=(n=e==null?void 0:e.tickID)!==null&&n!==void 0?n:0,this.currentTick=new at(0,1),this.maxTicks=new at(0,1),this.maxTickable=void 0,this.minTicks=void 0,this.minTickable=void 0,this.padding=1,this.x=0,this.xBase=0,this.xOffset=0,this.tickables=[],this.tickablesByVoice={},this.notePx=0,this.glyphPx=0,this.leftDisplacedHeadPx=0,this.rightDisplacedHeadPx=0,this.modLeftPx=0,this.modRightPx=0,this.totalLeftPx=0,this.totalRightPx=0,this.tContexts=[],this.width=0,this.formatterMetrics={freedom:{left:0,right:0}}}getTickID(){return this.tickID}getX(){return this.x}setX(e){return this.x=e,this.xBase=e,this.xOffset=0,this}getXBase(){return this.xBase}setXBase(e){this.xBase=e,this.x=e+this.xOffset}getXOffset(){return this.xOffset}setXOffset(e){this.xOffset=e,this.x=this.xBase+e}getWidth(){return this.width+this.padding*2}setPadding(e){return this.padding=e,this}getMaxTicks(){return this.maxTicks}getMinTicks(){return this.minTicks}getMaxTickable(){return this.maxTickable}getMinTickable(){return this.minTickable}getTickables(){return this.tickables}getTickableForVoice(e){return this.tickablesByVoice[e]}getTickablesByVoice(){return this.tickablesByVoice}getCenterAlignedTickables(){return this.tickables.filter(e=>e.isCenterAligned())}getMetrics(){const{width:e,glyphPx:n,notePx:i,leftDisplacedHeadPx:s,rightDisplacedHeadPx:r,modLeftPx:o,modRightPx:a,totalLeftPx:c,totalRightPx:l}=this;return{width:e,glyphPx:n,notePx:i,leftDisplacedHeadPx:s,rightDisplacedHeadPx:r,modLeftPx:o,modRightPx:a,totalLeftPx:c,totalRightPx:l}}getCurrentTick(){return this.currentTick}setCurrentTick(e){this.currentTick=e,this.preFormatted=!1}addTickable(e,n){if(!e)throw new re("BadArgument","Invalid tickable added.");if(!e.shouldIgnoreTicks()){const i=e.getTicks();i.greaterThan(this.maxTicks)&&(this.maxTicks=i.clone(),this.maxTickable=e),this.minTicks===void 0?(this.minTicks=i.clone(),this.minTickable=e):i.lessThan(this.minTicks)&&(this.minTicks=i.clone(),this.minTickable=e)}return e.setTickContext(this),this.tickables.push(e),this.tickablesByVoice[n??0]=e,this.preFormatted=!1,this}preFormat(){var e;if(this.preFormatted)return this;for(let n=0;n<this.tickables.length;++n){const i=this.tickables[n];i.preFormat();const s=i.getMetrics();this.leftDisplacedHeadPx=Math.max(this.leftDisplacedHeadPx,s.leftDisplacedHeadPx),this.rightDisplacedHeadPx=Math.max(this.rightDisplacedHeadPx,s.rightDisplacedHeadPx),this.notePx=Math.max(this.notePx,s.notePx),this.glyphPx=Math.max(this.glyphPx,(e=s.glyphWidth)!==null&&e!==void 0?e:0),this.modLeftPx=Math.max(this.modLeftPx,s.modLeftPx),this.modRightPx=Math.max(this.modRightPx,s.modRightPx),this.totalLeftPx=Math.max(this.totalLeftPx,s.modLeftPx+s.leftDisplacedHeadPx),this.totalRightPx=Math.max(this.totalRightPx,s.modRightPx+s.rightDisplacedHeadPx),this.width=this.notePx+this.totalLeftPx+this.totalRightPx}return this}postFormat(){return this.postFormatted?this:(this.postFormatted=!0,this)}getFormatterMetrics(){return this.formatterMetrics}move(e,n,i){this.setX(this.getX()+e),this.getFormatterMetrics().freedom.left+=e,this.getFormatterMetrics().freedom.right-=e,n&&(n.getFormatterMetrics().freedom.right+=e),i&&(i.getFormatterMetrics().freedom.left-=e)}getDeviationCost(){return ql(this.tickables.map(e=>e.getFormatterMetrics().space.deviation))}getAverageDeviationCost(){return this.tickables.length?this.getDeviationCost()/this.tickables.length:0}}function LB(...t){FE.DEBUG&&pn("VexFlow.Crescendo",t)}function MB(t,e){const n=e.beginX,i=e.endX,s=e.y,r=e.height/2;t.beginPath(),e.reverse?(t.moveTo(n,s-r),t.lineTo(i,s),t.lineTo(n,s+r)):(t.moveTo(i,s-r),t.lineTo(n,s),t.lineTo(i,s+r)),t.stroke(),t.closePath()}class FE extends mi{static get CATEGORY(){return"Crescendo"}constructor(e){var n;super(e),this.options={extendLeft:0,extendRight:0,yShift:0},this.decrescendo=!1,this.line=(n=e.line)!==null&&n!==void 0?n:0,this.height=15}setLine(e){return this.line=e,this}setHeight(e){return this.height=e,this}setDecrescendo(e){return this.decrescendo=e,this}preFormat(){return this.preFormatted=!0,this}draw(){const e=this.checkContext(),n=this.checkStave();this.setRendered();const i=this.getTickContext(),s=ou.getNextContext(i),r=this.getAbsoluteX(),o=s?s.getX():n.getX()+n.getWidth(),a=n.getYForLine(this.line+-3)+1;LB("Drawing ",this.decrescendo?"decrescendo ":"crescendo ",this.height,"x",r-o),MB(e,{beginX:r-this.options.extendLeft,endX:o+this.options.extendRight,y:a+this.options.yShift,height:this.height,reverse:this.decrescendo})}}FE.DEBUG=!1;var vs;(function(t){t[t.NEAR_HEAD=1]="NEAR_HEAD",t[t.NEAR_TOP=2]="NEAR_TOP"})(vs||(vs={}));class Cf extends Ye{static get CATEGORY(){return"Curve"}static get Position(){return vs}static get PositionString(){return{nearHead:vs.NEAR_HEAD,nearTop:vs.NEAR_TOP}}constructor(e,n,i){super(),this.renderOptions=Object.assign({thickness:2,xShift:0,yShift:10,position:vs.NEAR_HEAD,positionEnd:vs.NEAR_HEAD,invert:!1,cps:[{x:0,y:10},{x:0,y:10}],openingDirection:"auto"},i),this.setNotes(e,n)}setNotes(e,n){if(!e&&!n)throw new re("BadArguments","Curve needs to have either `from` or `to` set.");return this.from=e,this.to=n,this}isPartial(){return!this.from||!this.to}renderCurve(e){var n,i;const s=this.checkContext(),r=this.renderOptions.xShift,o=this.renderOptions.yShift*e.direction,a=e.firstX+r,c=e.firstY+o,l=e.lastX-r,u=e.lastY+o,d=this.renderOptions.thickness,h=this.renderOptions.cps,{x:f,y:p}=h[0],{x:m,y:b}=h[1],E=(l-a)/(h.length+2);s.beginPath(),s.moveTo(a,c),s.bezierCurveTo(a+E+f,c+p*e.direction,l-E+m,u+b*e.direction,l,u),!((n=this.style)===null||n===void 0)&&n.lineDash||s.bezierCurveTo(l-E+m,u+(b+d)*e.direction,a+E+f,c+(p+d)*e.direction,a,c),s.stroke(),s.closePath(),!((i=this.style)===null||i===void 0)&&i.lineDash||s.fill()}draw(){this.checkContext(),this.setRendered();const e=this.from,n=this.to;let i,s,r,o,a=0,c="baseY",l="baseY";function u(f){return typeof f=="string"?Cf.PositionString[f]:f}const d=u(this.renderOptions.position),h=u(this.renderOptions.positionEnd);return d===vs.NEAR_TOP&&(c="topY",l="topY"),h===vs.NEAR_HEAD?l="baseY":h===vs.NEAR_TOP&&(l="topY"),e?(i=e.getTieRightX(),a=e.getStemDirection(),r=e.getStemExtents()[c]):(i=n.checkStave().getTieStartX(),r=n.getStemExtents()[c]),n?(s=n.getTieLeftX(),a=n.getStemDirection(),o=n.getStemExtents()[l]):(s=e.checkStave().getTieEndX(),o=e.getStemExtents()[l]),this.renderOptions.openingDirection==="up"&&(a=1),this.renderOptions.openingDirection==="down"&&(a=-1),this.renderCurve({firstX:i,lastX:s,firstY:r,lastY:o,direction:a*(this.renderOptions.invert===!0?-1:1)}),!0}}class po extends Re{static get CATEGORY(){return"Dot"}static getDots(e){return e.getModifiersByType(po.CATEGORY)}static buildAndAttach(e,n){for(const i of e)if(n!=null&&n.all)for(let s=0;s<i.keys.length;s++){const r=new po;i.addModifier(r,s)}else if((n==null?void 0:n.index)!==void 0){const s=new po;i.addModifier(s,n==null?void 0:n.index)}else{const s=new po;i.addModifier(s,0)}}static format(e,n){const i=n.rightShift,s=1;if(!e||e.length===0)return!1;const r=[],o={};for(let f=0;f<e.length;++f){const p=e[f],m=p.getNote();let b,E;if(nr(m)){const S=p.checkIndex();b=m.getKeyProps()[S],E=m.getFirstDotPx()}else if(ns(m))b={line:.5},E=i;else throw new re("Internal","Unexpected instance.");const x=m.getAttribute("id");r.push({line:b.line,note:m,noteId:x,dot:p}),o[x]=Math.max(o[x]||E,E)}r.sort((f,p)=>p.line-f.line);let a=i,c=0,l=null,u=null,d=null,h=0;for(let f=0;f<r.length;++f){const{dot:p,note:m,noteId:b,line:E}=r[f];(E!==l||m!==u)&&(a=o[b]),!m.isRest()&&E!==l&&(Math.abs(E%1)===.5?h=0:(h=.5,(u!==null&&!u.isRest()&&l!==null&&l-E===.5||E+h===d)&&(h=-.5))),m.isRest()?p.dotShiftY+=-h:p.dotShiftY=-h,d=E+h,p.setXShift(a),a+=p.getWidth()+s,c=a>c?a:c,l=E,u=m}return n.rightShift+=c,!0}constructor(){super(),this.position=Re.Position.RIGHT,this.setText(M.augmentationDot),this.dotShiftY=0}setNote(e){return this.note=e,this.font=e.font,this}setDotShiftY(e){return this.dotShiftY=e,this}draw(){const e=this.checkContext(),n=this.checkAttachedNote();this.setRendered();const s=n.checkStave().getSpacingBetweenLines(),r=n.getModifierStartXY(this.position,this.index,{forceFlagRight:!0});ns(n)&&(r.y=n.getStemExtents().baseY),this.x=r.x,this.y=r.y+this.dotShiftY*s,this.renderText(e,0,0)}}class wf extends Re{static get CATEGORY(){return"FretHandFinger"}static format(e,n){const{leftShift:i,rightShift:s}=n,r=1;if(!e||e.length===0)return!1;const o=[];let a=null,c=0,l=0;for(let b=0;b<e.length;++b){const E=e[b],x=E.getNote(),S=E.getPosition(),v=E.checkIndex(),T=x.getKeyProps()[v],w=Ce.get("FretHandFinger.fontSize");if(E.position===jt.ABOVE&&(n.topTextLine+=w/oe.STAVE_LINE_DISTANCE+.5),E.position===jt.BELOW&&(n.textLine+=w/oe.STAVE_LINE_DISTANCE+.5),x!==a){for(let D=0;D<x.keys.length;++D)i===0&&(c=Math.max(x.getLeftDisplacedHeadPx(),c)),s===0&&(l=Math.max(x.getRightDisplacedHeadPx(),l));a=x}o.push({note:x,num:E,pos:S,line:T.line,shiftL:c,shiftR:l})}o.sort((b,E)=>E.line-b.line);let u=0,d=0,h=0,f=0,p=null,m=null;for(let b=0;b<o.length;++b){let E=0;const{note:x,pos:S,num:v,line:T,shiftL:w,shiftR:D}=o[b];(T!==p||x!==m)&&(u=i+w,d=s+D);const A=v.getWidth()+r;S===Re.Position.LEFT?(v.setXShift(i+u),E=i+A,h=E>h?E:h):S===Re.Position.RIGHT&&(v.setXShift(d),E=l+A,f=E>f?E:f),p=T,m=x}return n.leftShift+=h,n.rightShift+=f,!0}static easyScoreHook({fingerings:e}={},n,i){e==null||e.split(",").map(s=>{const r=s.trim().split("."),o={number:r[0]};return r[1]&&(o.position=r[1]),i.getFactory().Fingering(o)}).map((s,r)=>n.addModifier(s,r))}constructor(e){super(),this.setFretHandFinger(e),this.position=Re.Position.LEFT,this.xOffset=0,this.yOffset=0}setFretHandFinger(e){return this.text=e,this}getFretHandFinger(){return this.text}setOffsetX(e){return this.xOffset=e,this}setOffsetY(e){return this.yOffset=e,this}draw(){const e=this.checkContext(),n=this.checkAttachedNote();this.setRendered();const i=n.getModifierStartXY(this.position,this.index);let s=i.x+this.xOffset,r=i.y+this.yOffset+5;switch(this.position){case Re.Position.ABOVE:s-=4,r-=12;break;case Re.Position.BELOW:s-=2,r+=10;break;case Re.Position.LEFT:s-=this.width;break;case Re.Position.RIGHT:s+=1;break;default:throw new re("InvalidPosition",`The position ${this.position} does not exist`)}this.renderText(e,s,r)}}function D1(...t){Af.DEBUG&&pn("VexFlow.Parser",t)}const Dd=-1;function Kd(t){if("matchedString"in t)return t.matchedString;if("results"in t)return Kd(t.results);const e=t;return e.length===1?Kd(e[0]):e.length===0?null:e.map(Kd)}class Af{constructor(e){this.grammar=e,this.line="",this.pos=0,this.errorPos=Dd}parse(e){this.line=e,this.pos=0,this.errorPos=Dd;const n=this.expect(this.grammar.begin());return n.errorPos=this.errorPos,n}matchFail(e){this.errorPos===Dd&&(this.errorPos=this.pos),this.pos=e}matchSuccess(){this.errorPos=Dd}matchToken(e,n=!1){const i=n?new RegExp("^(("+e+"))"):new RegExp("^(("+e+")\\s*)"),r=this.line.slice(this.pos).match(i);return r!==null?{success:!0,matchedString:r[2],incrementPos:r[1].length,pos:this.pos}:{success:!1,pos:this.pos}}expectOne(e,n=!1){const i=[],s=this.pos;let r=!0,o=!1;if(n=n===!0||e.maybe===!0,e.expect)for(const u of e.expect){const d=this.pos,h=this.expect(u);if(h.success){if(i.push(h),o=!0,e.or)break}else if(r=!1,!e.or){this.pos=d;break}}const a=e.or&&o||r,c=a||n===!0,l=a?1:0;return n&&!a&&(this.pos=s),c?this.matchSuccess():this.matchFail(s),{success:c,results:i,numMatches:l}}expectOneOrMore(e,n=!1){const i=[],s=this.pos;let r=0,o=!0;do{const c=this.expectOne(e);c.success&&c.results?(r++,i.push(c.results)):o=!1}while(o);const a=r>0||n===!0;return n&&!(r>0)&&(this.pos=s),a?this.matchSuccess():this.matchFail(s),{success:a,results:i,numMatches:r}}expectZeroOrMore(e){return this.expectOneOrMore(e,!0)}expect(e){if(D1("Evaluating rule function:",e),!e)throw new re("Invalid rule function");let n;const i=e.bind(this.grammar)();if(i.token)n=this.matchToken(i.token,i.noSpace===!0),n.success&&(this.pos+=n.incrementPos);else if(i.expect)i.oneOrMore?n=this.expectOneOrMore(i):i.zeroOrMore?n=this.expectZeroOrMore(i):n=this.expectOne(i);else throw D1(i),new re("Bad grammar! No `token` or `expect` property "+i);const s=[];return n.matches=s,n.results&&n.results.forEach(r=>s.push(Kd(r))),i.run&&n.success&&i.run({matches:s}),n}}Af.DEBUG=!1;function ps(...t){Nf.DEBUG&&pn("VexFlow.EasyScore",t)}class BB{constructor(e){this.builder=e}begin(){return this.LINE}LINE(){return{expect:[this.PIECE,this.PIECES,this.EOL]}}PIECE(){return{expect:[this.CHORDORNOTE,this.PARAMS],run:()=>this.builder.commitPiece()}}PIECES(){return{expect:[this.COMMA,this.PIECE],zeroOrMore:!0}}PARAMS(){return{expect:[this.DURATION,this.TYPE,this.DOTS,this.OPTS]}}CHORDORNOTE(){return{expect:[this.CHORD,this.SINGLENOTE],or:!0}}CHORD(){return{expect:[this.LPAREN,this.NOTES,this.RPAREN],run:e=>this.builder.addChord(e.matches[1])}}NOTES(){return{expect:[this.NOTE],oneOrMore:!0}}NOTE(){return{expect:[this.NOTENAME,this.ACCIDENTAL,this.OCTAVE]}}SINGLENOTE(){return{expect:[this.NOTENAME,this.ACCIDENTAL,this.OCTAVE],run:e=>{const n=e;this.builder.addSingleNote(n.matches[0],n.matches[1],n.matches[2])}}}ACCIDENTAL(){return{expect:[this.MICROTONES,this.ACCIDENTALS],maybe:!0,or:!0}}DOTS(){return{expect:[this.DOT],zeroOrMore:!0,run:e=>this.builder.setNoteDots(e.matches)}}TYPE(){return{expect:[this.SLASH,this.MAYBESLASH,this.TYPES],maybe:!0,run:e=>this.builder.setNoteType(e.matches[2])}}DURATION(){return{expect:[this.SLASH,this.DURATIONS],maybe:!0,run:e=>this.builder.setNoteDuration(e.matches[1])}}OPTS(){return{expect:[this.LBRACKET,this.KEYVAL,this.KEYVALS,this.RBRACKET],maybe:!0}}KEYVALS(){return{expect:[this.COMMA,this.KEYVAL],zeroOrMore:!0}}KEYVAL(){const e=n=>n.slice(1,-1);return{expect:[this.KEY,this.EQUALS,this.VAL],run:n=>this.builder.addNoteOption(n.matches[0],e(n.matches[2]))}}VAL(){return{expect:[this.SVAL,this.DVAL],or:!0}}KEY(){return{token:"[a-zA-Z][a-zA-Z0-9]*"}}DVAL(){return{token:'["][^"]*["]'}}SVAL(){return{token:"['][^']*[']"}}NOTENAME(){return{token:"[a-gA-G]"}}OCTAVE(){return{token:"[0-9]+"}}ACCIDENTALS(){return{token:"bb|b|##|#|n"}}MICROTONES(){return{token:"bbs|bss|bs|db|d|\\+\\+-|\\+-|\\+\\+|\\+|k|o"}}DURATIONS(){return{token:"[0-9whq]+"}}TYPES(){return{token:"[rRsSmMhHgG]"}}LPAREN(){return{token:"[(]"}}RPAREN(){return{token:"[)]"}}COMMA(){return{token:"[,]"}}DOT(){return{token:"[.]"}}SLASH(){return{token:"[/]"}}MAYBESLASH(){return{token:"[/]?"}}EQUALS(){return{token:"[=]"}}LBRACKET(){return{token:"\\["}}RBRACKET(){return{token:"\\]"}}EOL(){return{token:"$"}}}class FB{constructor(e){this.chord=[],this.dots=0,this.options={},this.duration=e}}class UB{constructor(e){this.commitHooks=[],this.factory=e,this.reset()}reset(e){this.options=Object.assign({stem:"auto",clef:"treble"},e),this.elements={notes:[],accidentals:[]},this.rollingDuration="8",this.resetPiece()}getFactory(){return this.factory}getElements(){return this.elements}addCommitHook(e){this.commitHooks.push(e)}resetPiece(){ps("resetPiece"),this.piece=new FB(this.rollingDuration)}setNoteDots(e){ps("setNoteDots:",e),e&&(this.piece.dots=e.length)}setNoteDuration(e){ps("setNoteDuration:",e),this.rollingDuration=this.piece.duration=e||this.rollingDuration}setNoteType(e){ps("setNoteType:",e),e&&(this.piece.type=e)}addNoteOption(e,n){ps("addNoteOption: key:",e,"value:",n),this.piece.options[e]=n}addNote(e,n,i){ps("addNote:",e,n,i),this.piece.chord.push({key:e,accid:n,octave:i})}addSingleNote(e,n,i){ps("addSingleNote:",e,n,i),this.addNote(e,n,i)}addChord(e){ps("startChord"),typeof e[0]!="object"?this.addSingleNote(e[0]):e.forEach(n=>{n&&this.addNote(...n)}),ps("endChord")}commitPiece(){ps("commitPiece");const{factory:e}=this;if(!e)return;const n=Object.assign(Object.assign({},this.options),this.piece.options),i=rn(n.stem,"BadArguments","options.stem is not defined").toLowerCase(),s=rn(n.clef,"BadArguments","options.clef is not defined").toLowerCase(),{chord:r,duration:o,dots:a,type:c}=this.piece,l=Ut.accidentals,u=r.map(p=>{var m;return p.key+(l.includes((m=p.accid)!==null&&m!==void 0?m:"")?p.accid:"")+"/"+p.octave}),d=i==="auto",h=(c==null?void 0:c.toLowerCase())==="g"?e.GhostNote({duration:o,dots:a}):e.StaveNote({keys:u,duration:o,dots:a,type:c,clef:s,autoStem:d});d||h.setStemDirection(i==="up"?ve.UP:ve.DOWN);const f=[];r.forEach((p,m)=>{const b=p.accid;if(typeof b=="string"){const E=e.Accidental({type:b});h.addModifier(E,m),f.push(E)}else f.push(void 0)});for(let p=0;p<a;p++)po.buildAndAttach([h],{all:!0});this.commitHooks.forEach(p=>p(n,h,this)),this.elements.notes.push(h),this.elements.accidentals.push(f),this.resetPiece()}}function VB(t,e){t.id!==void 0&&e.setAttribute("id",t.id)}const WB=/\s*,\s*/;function HB(t,e){t.class!==void 0&&t.class.split(WB).forEach(n=>e.addClass(n))}class Nf{constructor(e={}){this.defaults={clef:"treble",time:"4/4",stem:"auto"},this.setOptions(e)}set(e){return this.defaults=Object.assign(Object.assign({},this.defaults),e),this}setOptions(e){var n,i;const s=e.factory,r=(n=e.builder)!==null&&n!==void 0?n:new UB(s);return this.options=Object.assign(Object.assign({commitHooks:[VB,HB,ir.easyScoreHook,wf.easyScoreHook],throwOnError:!1},e),{factory:s,builder:r}),this.factory=s,this.builder=r,this.grammar=new BB(this.builder),this.parser=new Af(this.grammar),(i=this.options.commitHooks)===null||i===void 0||i.forEach(o=>this.addCommitHook(o)),this}setContext(e){return this.factory.setContext(e),this}parse(e,n={}){this.builder.reset(n);const i=this.parser.parse(e);if(!i.success&&this.options.throwOnError)throw ps(i),new re("Error parsing line: "+e);return i}beam(e,n){return this.factory.Beam({notes:e,options:n}),e}tuplet(e,n){return this.factory.Tuplet({notes:e,options:n}),e}notes(e,n={}){return n=Object.assign({clef:this.defaults.clef,stem:this.defaults.stem},n),this.parse(e,n),this.builder.getElements().notes}voice(e,n={}){return n=Object.assign({time:this.defaults.time},n),this.factory.Voice(n).addTickables(e)}addCommitHook(e){this.builder.addCommitHook(e)}}Nf.DEBUG=!1;function XB(...t){yf.DEBUG&&pn("VexFlow.NoteHead",t)}class yf extends mi{static get CATEGORY(){return"NoteHead"}constructor(e){var n;super(e),this.customGlyph=!1,this.ledger={"":"","":""},this.index=e.index,this.x=e.x||0,this.y=e.y||0,e.noteType&&(this.noteType=e.noteType),this.displaced=e.displaced||!1,this.stemDirection=e.stemDirection||ve.UP,this.line=e.line||0,this.glyphProps=mi.getGlyphProps(this.duration,this.noteType),rn(this.glyphProps,"BadArguments",`No glyph found for duration '${this.duration}' and type '${this.noteType}'`),(this.line>5||this.line<0)&&this.ledger[this.glyphProps.codeHead]&&(this.glyphProps.codeHead=this.ledger[this.glyphProps.codeHead]),this.text=this.glyphProps.codeHead,e.customGlyphCode&&(this.customGlyph=!0,this.text=e.customGlyphCode),this.setStyle((n=e.style)!==null&&n!==void 0?n:{}),this.slashed=e.slashed||!1,this.renderOptions=Object.assign({},this.renderOptions)}getWidth(){return this.width}isDisplaced(){return this.displaced===!0}getLine(){return this.line}setLine(e){return this.line=e,this}getAbsoluteX(){const e=this.preFormatted?super.getAbsoluteX():this.x,n=ve.WIDTH/2;return e+(this.displaced?(this.width-n)*this.stemDirection:0)}setStave(e){const n=this.getLine();return this.stave=e,this.stave&&(this.setY(this.stave.getYForNote(n)),this.setContext(this.stave.getContext())),this}preFormat(){return this.preFormatted?this:(this.preFormatted=!0,this)}draw(){var e;const n=this.checkContext();this.setRendered(),n.openGroup("notehead",this.getAttribute("id")),XB("Drawing note head '",this.noteType,this.duration,"' at",this.x,this.y),this.x=this.getAbsoluteX(),this.renderText(n,0,0),(e=this.parent)===null||e===void 0||e.drawModifiers(this),n.closeGroup()}}yf.DEBUG=!1;function jB(...t){UE.DEBUG&&pn("VexFlow.Flag",t)}class UE extends Ye{static get CATEGORY(){return"Flag"}draw(){const e=this.checkContext();this.setRendered(),e.openGroup("flag",this.getAttribute("id")),jB("Drawing flag '",this.text,"' at",this.x,this.y),this.renderText(e,0,0),e.closeGroup()}}UE.DEBUG=!1;class VE extends mi{static get CATEGORY(){return"StemmableNote"}constructor(e){super(e),this.flag=new UE}getStem(){return this.stem}checkStem(){if(!this.stem)throw new re("NoStem","No stem attached to instance");return this.stem}setStem(e){return this.stem=e,this.addChild(e),this}buildStem(){const e=new ve;return this.setStem(e),this}buildFlag(){var e,n,i;const{glyphProps:s}=this;if(this.hasFlag()){const r=this.getStemDirection()===ve.DOWN?String.fromCodePoint(((n=(e=s.codeFlagUp)===null||e===void 0?void 0:e.codePointAt(0))!==null&&n!==void 0?n:-1)+1):(i=s.codeFlagUp)!==null&&i!==void 0?i:M.null;this.flag.setText(r),this.flag.fontInfo=this.fontInfo}}getBaseCustomNoteHeadGlyphProps(){return this.getStemDirection()===ve.DOWN?this.customGlyphs[this.customGlyphs.length-1]:this.customGlyphs[0]}getStemLength(){return ve.HEIGHT+this.getStemExtension()}getBeamCount(){const e=this.getGlyphProps();return e?e.beamCount:0}getStemMinimumLength(){const e=oe.durationToFraction(this.duration),n=this.beam===void 0;let i=e.value()<=1?0:20;switch(this.duration){case"8":case"16":i=n?35:25;break;case"32":i=n?45:35;break;case"64":i=n?50:40;break;case"128":i=n?55:45;break}return i}getStemDirection(){if(!this.stemDirection)throw new re("NoStem","No stem attached to this note.");return this.stemDirection}setStemDirection(e){if(e||(e=ve.UP),e!==ve.UP&&e!==ve.DOWN)throw new re("BadArgument",`Invalid stem direction: ${e}`);return this.stemDirection=e,this.reset(),this.hasFlag()&&this.buildFlag(),this.beam=void 0,this.stem&&(this.stem.setDirection(e),this.stem.setExtension(this.getStemExtension())),this.preFormatted&&this.preFormat(),this}getStemX(){const e=this.getAbsoluteX()+this.xShift,n=this.getAbsoluteX()+this.xShift+this.getGlyphWidth();return this.stemDirection===ve.DOWN?e:n}getCenterGlyphX(){return this.getAbsoluteX()+this.xShift+this.getGlyphWidth()/2}getStemExtension(){const e=this.getGlyphProps(),n=this.flag.getHeight(),i=this.getFontScale();return this.stemExtensionOverride!==void 0?this.stemExtensionOverride:this.beam?e.stemBeamExtension*i:n>ve.HEIGHT*i?n-ve.HEIGHT*i:0}setStemLength(e){return this.stemExtensionOverride=e-ve.HEIGHT,this}getStemExtents(){if(!this.stem)throw new re("NoStem","No stem attached to this note.");return this.stem.getExtents()}getYForTopText(e){const n=this.checkStave();if(this.hasStem()){const i=this.getStemExtents();if(!i)throw new re("InvalidState","Stem does not have extents.");return Math.min(n.getYForTopText(e),i.topY-this.renderOptions.annotationSpacing*(e+1))}else return n.getYForTopText(e)}getYForBottomText(e){const n=this.checkStave();if(this.hasStem()){const i=this.getStemExtents();if(!i)throw new re("InvalidState","Stem does not have extents.");return Math.max(n.getYForTopText(e),i.baseY+this.renderOptions.annotationSpacing*e)}else return n.getYForBottomText(e)}hasFlag(){return this.glyphProps.codeFlagUp!==void 0&&!this.beam&&!this.isRest()}postFormat(){var e;return(e=this.beam)===null||e===void 0||e.postFormat(),this.postFormatted=!0,this}drawStem(e){var n;this.checkContext(),this.setRendered(),this.setStem(new ve(e)),(n=this.stem)===null||n===void 0||n.setContext(this.getContext()).drawWithStyle()}}function qB(...t){Vi.DEBUG&&pn("VexFlow.StaveNote",t)}const zB=(t,e)=>e===(t.getStemDirection()===ve.UP?t.keyProps.length-1:0);function Od(t,e,n){const i=n;t.line+=i,t.maxLine+=i,t.minLine+=i,t.note.setKeyLine(0,t.note.getKeyLine(0)+i)}function YB(t,e,n){const i=t.line-IE(e.minLine,n.maxLine);t.note.setKeyLine(0,t.note.getKeyLine(0)-i),t.line-=i,t.maxLine-=i,t.minLine-=i}class Vi extends VE{static get CATEGORY(){return"StaveNote"}static get LEDGER_LINE_OFFSET(){return 3}static get minNoteheadPadding(){return Ce.get("NoteHead.minPadding")}static format(e,n){if(!e||e.length<2)return!1;const i=[];for(let d=0;d<e.length;d++){const h=e[d].sortedKeyProps,f=h[0].keyProps.line;let p=h[h.length-1].keyProps.line;const m=e[d].getStemDirection(),b=e[d].getStemLength()/10,E=e[d].getStemMinimumLength()/10;let x;e[d].isRest()?(x=f+Math.ceil(e[d]._noteHeads[0].getTextMetrics().actualBoundingBoxAscent/oe.STAVE_LINE_DISTANCE),p=f-Math.ceil(e[d]._noteHeads[0].getTextMetrics().actualBoundingBoxDescent/oe.STAVE_LINE_DISTANCE)):(x=m===1?h[h.length-1].keyProps.line+b:h[h.length-1].keyProps.line,p=m===1?h[0].keyProps.line:h[0].keyProps.line-b),i.push({line:h[0].keyProps.line,maxLine:x,minLine:p,isrest:e[d].isRest(),stemDirection:m,stemMax:b,stemMin:E,voiceShift:e[d].getVoiceShiftWidth(),isDisplaced:e[d].isDisplaced(),note:e[d]})}let s=0,r,o,a;const c=[!1,!1,!1];for(let d=0;d<i.length;d++)c[d]=i[d].note.renderOptions.draw!==!1;if(c[0]&&c[1]&&c[2])s=3,r=i[0],o=i[1],a=i[2];else if(c[0]&&c[1])s=2,r=i[0],a=i[1];else if(c[0]&&c[2])s=2,r=i[0],a=i[2];else if(c[1]&&c[2])s=2,r=i[1],a=i[2];else return!0;s===2&&r.stemDirection===-1&&a.stemDirection===1&&(r=i[1],a=i[0]);const l=Math.max(r.voiceShift,a.voiceShift);let u=0;if(s===2){const d=r.note.hasStem()&&a.note.hasStem()&&r.stemDirection===a.stemDirection?0:.5;if(a.isrest&&r.isrest&&r.note.duration===a.note.duration)a.note.renderOptions.draw=!1;else if(r.minLine<=a.maxLine+d)if(r.isrest)Od(r,a,1);else if(a.isrest)Od(a,r,-1);else{const h=Math.abs(r.line-a.line);if(r.note.hasStem()&&a.note.hasStem()){const f=r.note.sortedKeyProps[0].keyProps.code,p=a.note.sortedKeyProps[a.note.sortedKeyProps.length-1].keyProps.code;!oe.UNISON||f!==p||r.note.getModifiers().filter(m=>m.getCategory()==="Dot"&&m.getIndex()===0).length!==a.note.getModifiers().filter(m=>m.getCategory()==="Dot"&&m.getIndex()===0).length||h<1&&h>0||JSON.stringify(r.note.getStyle())!==JSON.stringify(a.note.getStyle())?(u=l+2,r.stemDirection===a.stemDirection?r.note.setXShift(u):a.note.setXShift(u)):r.note.voice!==a.note.voice&&r.stemDirection===a.stemDirection&&(r.line!==a.line?(u=l+2,r.note.setXShift(u)):a.stemDirection===1&&(a.stemDirection=-1,a.note.setStemDirection(-1)))}else h<1?(u=l+2,r.note.duration<a.note.duration?r.note.setXShift(u):a.note.setXShift(u)):r.note.hasStem()?(r.stemDirection=-r.note.getStemDirection(),r.note.setStemDirection(r.stemDirection)):a.note.hasStem()&&(a.stemDirection=-a.note.getStemDirection(),a.note.setStemDirection(a.stemDirection))}return n.rightShift+=u,!0}if(!o)throw new re("InvalidState","noteM not defined.");if(o.isrest&&!r.isrest&&!a.isrest&&(r.minLine<=o.maxLine||o.minLine<=a.maxLine)){const d=o.maxLine-o.minLine,h=r.minLine-a.maxLine;return d<h?YB(o,r,a):(u=l+2,o.note.setXShift(u),a.note.hasBeam()===!1&&(a.stemDirection=-1,a.note.setStemDirection(-1)),r.minLine<=a.maxLine&&r.note.hasBeam()===!1&&(r.stemDirection=1,r.note.setStemDirection(1))),n.rightShift+=u,!0}return r.isrest&&o.isrest&&a.isrest?(r.note.renderOptions.draw=!1,a.note.renderOptions.draw=!1,n.rightShift+=u,!0):(o.isrest&&r.isrest&&o.minLine<=a.maxLine&&(o.note.renderOptions.draw=!1),o.isrest&&a.isrest&&r.minLine<=o.maxLine&&(o.note.renderOptions.draw=!1),r.isrest&&r.minLine<=o.maxLine&&Od(r,o,1),a.isrest&&o.minLine<=a.maxLine&&Od(a,o,-1),(r.minLine<=o.maxLine+.5||o.minLine<=a.maxLine)&&(u=l+2,o.note.setXShift(u),a.note.hasBeam()===!1&&(a.stemDirection=-1,a.note.setStemDirection(-1)),r.minLine<=a.maxLine&&r.note.hasBeam()===!1&&(r.stemDirection=1,r.note.setStemDirection(1))),n.rightShift+=u,!0)}static postFormat(e){return e?(e.forEach(n=>n.postFormat()),!0):!1}constructor(e){var n,i,s;super(e),this.minLine=0,this.maxLine=0,this.sortedKeyProps=[],this.ledgerLineStyle={},this.clef=(n=e.clef)!==null&&n!==void 0?n:"treble",this.octaveShift=(i=e.octaveShift)!==null&&i!==void 0?i:0,this.glyphProps=mi.getGlyphProps(this.duration,this.noteType),rn(this.glyphProps,"BadArguments",`No glyph found for duration '${this.duration}' and type '${this.noteType}'`),this.displaced=!1,this.dotShiftY=0,this.useDefaultHeadX=!1,this._noteHeads=[],this.modifiers=[],this.renderOptions=Object.assign(Object.assign({},this.renderOptions),{strokePx:e.strokePx||Vi.LEDGER_LINE_OFFSET}),this.calculateKeyProps(),this.buildStem(),e.autoStem?this.autoStem():this.setStemDirection((s=e.stemDirection)!==null&&s!==void 0?s:ve.UP),this.reset(),this.buildFlag()}reset(){super.reset();const e=this._noteHeads.map(i=>i.getStyle());this.buildNoteHeads(),this._noteHeads.forEach((i,s)=>{const r=e[s];r&&i.setStyle(r)});const n=this.stave;return n&&this.setStave(n),this.calcNoteDisplacements(),this}setBeam(e){return this.beam=e,this.calcNoteDisplacements(),this.stem&&this.stem.setExtension(this.getStemExtension()),this}buildStem(){return this.setStem(new ve({hide:this.isRest()})),this}buildNoteHeads(){this._noteHeads=[];const e=this.getStemDirection(),n=this.getKeys();let i,s,r=!1,o,a,c;e===ve.UP?(o=0,a=n.length,c=1):(o=n.length-1,a=-1,c=-1);for(let l=o;l!==a;l+=c){const u=this.sortedKeyProps[l].keyProps,d=u.line;i===void 0?i=d:(s=Math.abs(i-d),s===0||s===.5?r=!r:(r=!1,this.useDefaultHeadX=!0)),i=d;const h=new yf({duration:this.duration,noteType:this.noteType,displaced:r,stemDirection:e,customGlyphCode:u.code,line:u.line});h.fontInfo=this.fontInfo,this.addChild(h),this._noteHeads[this.sortedKeyProps[l].index]=h}return this._noteHeads}autoStem(){this.setStemDirection(this.calculateOptimalStemDirection())}calculateOptimalStemDirection(){return this.minLine=this.sortedKeyProps[0].keyProps.line,this.maxLine=this.sortedKeyProps[this.keyProps.length-1].keyProps.line,(this.minLine+this.maxLine)/2<3?ve.UP:ve.DOWN}calculateKeyProps(){var e;let n;for(let i=0;i<this.keys.length;++i){const s=this.keys[i],r={octaveShift:(e=this.octaveShift)!==null&&e!==void 0?e:0,duration:this.duration},o=oe.keyProperties(s,this.clef,this.noteType,r);if(!o)throw new re("BadArguments",`Invalid key for note properties: ${s}`);o.key==="R"&&(this.duration==="1"||this.duration==="w"?o.line=4:o.line=3);const a=o.line;n===void 0?n=a:Math.abs(n-a)<1&&(this.displaced=!0,o.displaced=!0,this.keyProps.length>0&&(this.keyProps[i-1].displaced=!0)),n=a,this.keyProps.push(o)}this.keyProps.forEach((i,s)=>{this.sortedKeyProps.push({keyProps:i,index:s})}),this.sortedKeyProps.sort((i,s)=>i.keyProps.line-s.keyProps.line)}getBoundingBox(){const e=new tr(this.getAbsoluteX(),this.ys[0],0,0);this._noteHeads.forEach(s=>{e.mergeWith(s.getBoundingBox())});const{yTop:n,yBottom:i}=this.getNoteHeadBounds();if(!this.isRest()&&this.hasStem()){const s=this.stem.getHeight(),r=this.getStemDirection()===ve.DOWN?n-s-this.flag.getTextMetrics().actualBoundingBoxDescent:i-s+this.flag.getTextMetrics().actualBoundingBoxAscent;e.mergeWith(new tr(this.getAbsoluteX(),r,0,0))}if(this.hasFlag()){const s=this.flag.getBoundingBox();e.mergeWith(s)}for(let s=0;s<this.modifiers.length;s++)e.mergeWith(this.modifiers[s].getBoundingBox());return e}getLineNumber(e){if(!this.keyProps.length)throw new re("NoKeyProps","Can't get bottom note line, because note is not initialized properly.");let n=this.keyProps[0].line;for(let i=0;i<this.keyProps.length;i++){const s=this.keyProps[i].line;e?s>n&&(n=s):s<n&&(n=s)}return n}isRest(){const e=this.glyphProps.codeHead;return e>=""&&e<=""}isChord(){return!this.isRest()&&this.keys.length>1}hasStem(){return this.glyphProps.stem}hasFlag(){return super.hasFlag()&&!this.isRest()}getStemX(){return this.noteType==="r"?this.getCenterGlyphX():super.getStemX()+(this.stemDirection?ve.WIDTH/(2*-this.stemDirection):0)}getYForTopText(e){const n=this.getStemExtents();return Math.min(this.checkStave().getYForTopText(e),n.topY-this.renderOptions.annotationSpacing*(e+1))}getYForBottomText(e){const n=this.getStemExtents();return Math.max(this.checkStave().getYForTopText(e),n.baseY+this.renderOptions.annotationSpacing*e)}setStave(e){super.setStave(e);const n=this._noteHeads.map(i=>(i.setStave(e),i.getY()));if(this.setYs(n),this.stem){const{yTop:i,yBottom:s}=this.getNoteHeadBounds();this.stem.setYBounds(i,s)}return this}isDisplaced(){return this.displaced}setNoteDisplaced(e){return this.displaced=e,this}getTieRightX(){let e=this.getAbsoluteX();return e+=this.getGlyphWidth()+this.xShift+this.rightDisplacedHeadPx,this.modifierContext&&(e+=this.modifierContext.getRightShift()),e}getTieLeftX(){let e=this.getAbsoluteX();return e+=this.xShift-this.leftDisplacedHeadPx,e}getLineForRest(){let e=this.keyProps[0].line;if(this.keyProps.length>1){const n=this.keyProps[this.keyProps.length-1].line,i=Math.max(e,n),s=Math.min(e,n);e=IE(i,s)}return e}getModifierStartXY(e,n,i={}){if(!this.preFormatted)throw new re("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");if(this.ys.length===0)throw new re("NoYValues","No Y-Values calculated for this note.");const{ABOVE:s,BELOW:r,LEFT:o,RIGHT:a}=Re.Position;let c=0;e===o?c=-1*2:e===a?(c=this.getGlyphWidth()+this.xShift+2,this.stemDirection===ve.UP&&this.hasFlag()&&(i.forceFlagRight||zB(this,n))&&(c+=this.flag.getWidth())):(e===r||e===s)&&(c=this.getGlyphWidth()/2);let l=0;switch(this._noteHeads[n].getText()){case M.restDoubleWhole:case M.restWhole:l+=.5;break;case M.restHalf:case M.restQuarter:case M.rest8th:case M.rest16th:l-=.5;break;case M.rest32nd:case M.rest64th:l-=1.5;break;case M.rest128th:l-=2.5;break}return{x:this.getAbsoluteX()+c,y:this.ys[n]+l*this.checkStave().getSpacingBetweenLines()}}setStyle(e){return super.setGroupStyle(e)}setStemStyle(e){const n=this.getStem();return n&&n.setStyle(e),this}getStemStyle(){var e;return(e=this.stem)===null||e===void 0?void 0:e.getStyle()}setLedgerLineStyle(e){this.ledgerLineStyle=e}getLedgerLineStyle(){return this.ledgerLineStyle}setFlagStyle(e){this.flag.setStyle(e)}getFlagStyle(){return this.flag.getStyle()}getGlyphWidth(){return this.noteHeads[0].getWidth()}setKeyStyle(e,n){return this._noteHeads[e].setStyle(n),this}setKeyLine(e,n){return this.keyProps[e].line=n,this.reset(),this}getKeyLine(e){return this.keyProps[e].line}getVoiceShiftWidth(){return this.getGlyphWidth()*(this.displaced?2:1)}calcNoteDisplacements(){this.setLeftDisplacedHeadPx(this.displaced&&this.stemDirection===ve.DOWN?this.getGlyphWidth():0),this.setRightDisplacedHeadPx(!this.hasFlag()&&this.displaced&&this.stemDirection===ve.UP?this.getGlyphWidth():0)}preFormat(){if(this.preFormatted)return;let e=0;this.modifierContext&&(this.modifierContext.preFormat(),this.modifierContext.getWidth()===0&&(e=Vi.minNoteheadPadding));let n=this.getGlyphWidth()+this.leftDisplacedHeadPx+this.rightDisplacedHeadPx+e;this.shouldDrawFlag()&&this.stemDirection===ve.UP&&(n+=this.getGlyphWidth()),this.setWidth(n),this.preFormatted=!0}getNoteHeadBounds(){let e=1/0,n=-1/0,i,s,r=this.checkStave().getNumLines(),o=1,a,c,l=r,u=o;return this._noteHeads.forEach(d=>{const h=d.getLine(),f=d.getY();e=Math.min(f,e),n=Math.max(f,n),s===void 0&&d.isDisplaced()&&(s=d.getAbsoluteX()),i===void 0&&!d.isDisplaced()&&(i=d.getAbsoluteX()),r=Math.max(h,r),o=Math.min(h,o),d.isDisplaced()?(a=a===void 0?h:Math.max(h,a),c=c===void 0?h:Math.min(h,c)):(l=Math.max(h,l),u=Math.min(h,u))},this),{yTop:e,yBottom:n,displacedX:s,nonDisplacedX:i,highestLine:r,lowestLine:o,highestDisplacedLine:a,lowestDisplacedLine:c,highestNonDisplacedLine:l,lowestNonDisplacedLine:u}}getNoteHeadBeginX(){return this.getAbsoluteX()+this.xShift}getNoteHeadEndX(){return this.getNoteHeadBeginX()+this.getGlyphWidth()}get noteHeads(){return this._noteHeads.slice()}drawLedgerLines(){const e=this.checkStave(),{renderOptions:{strokePx:n}}=this,i=this.checkContext(),s=this.getGlyphWidth()+n*2,r=2*(this.getGlyphWidth()+n)-ve.WIDTH/2;if(this.isRest())return;if(!i)throw new re("NoCanvasContext","Can't draw without a canvas context.");const{highestLine:o,lowestLine:a,highestDisplacedLine:c,highestNonDisplacedLine:l,lowestDisplacedLine:u,lowestNonDisplacedLine:d,displacedX:h,nonDisplacedX:f}=this.getNoteHeadBounds();if(o<6&&a>0)return;const p=Math.min(h??0,f??0),m=(E,x,S)=>{let v;S&&x?v=p-n:x?v=(f??0)-n:v=(h??0)-n;const T=x&&S?r:s;i.beginPath(),i.moveTo(v,E),i.lineTo(v+T,E),i.stroke()},b=Object.assign(Object.assign({},e.getDefaultLedgerLineStyle()),this.getLedgerLineStyle());i.save(),this.applyStyle(i,b);for(let E=6;E<=o;++E){const x=f!==void 0&&E<=l,S=c!==void 0&&E<=c;m(e.getYForNote(E),x,S)}for(let E=0;E>=a;--E){const x=f!==void 0&&E>=d,S=u!==void 0&&E>=u;m(e.getYForNote(E),x,S)}i.restore()}drawModifiers(e){const n=this.checkContext();for(let i=0;i<this.modifiers.length;i++){const s=this.modifiers[i],r=s.checkIndex();this._noteHeads[r]===e&&(s.setContext(n),s.drawWithStyle())}}shouldDrawFlag(){const e=this.stem!==void 0,n=this.glyphProps.codeFlagUp!==void 0,i=this.beam===void 0;return e&&n&&i&&!this.isRest()}drawFlag(){const e=this.checkContext();if(!e)throw new re("NoCanvasContext","Can't draw without a canvas context.");if(this.shouldDrawFlag()){const{yTop:n,yBottom:i}=this.getNoteHeadBounds(),s=this.stem.getHeight(),r=this.getStemX()-oe.STEM_WIDTH/2,o=this.getStemDirection()===ve.DOWN?n-s-this.flag.getTextMetrics().actualBoundingBoxDescent:i-s+this.flag.getTextMetrics().actualBoundingBoxAscent;this.flag.setContext(e).setX(r).setY(o).drawWithStyle()}}drawNoteHeads(){const e=this.checkContext();this._noteHeads.forEach(n=>{n.setContext(e).drawWithStyle()})}drawStem(e){const n=this.checkContext();e&&this.setStem(new ve(e)),this.shouldDrawFlag()&&this.stem&&this.stem.adjustHeightForFlag(),this.stem&&this.stem.setContext(n).drawWithStyle()}getStemExtension(){const e=super.getStemExtension();if(!this.glyphProps.stem)return e;const n=this.getStemDirection();if(n!==this.calculateOptimalStemDirection())return e;let i;const s=3;n===ve.UP?i=s-this.maxLine:i=this.minLine-s;const r=i-3.5;if(r<=0)return e;const o=this.getStave();let a=10;return o!==void 0&&(a=o.getSpacingBetweenLines()),e+r*a}draw(){if(this.renderOptions.draw===!1)return;if(this.ys.length===0)throw new re("NoYValues","Can't draw note without Y values.");const e=this.checkContext(),n=this.getNoteHeadBeginX(),i=this.hasStem()&&!this.beam;if(this._noteHeads.forEach(r=>r.setX(n)),this.stem){const r=this.getStemX();this.stem.setNoteHeadXBounds(r,r)}qB("Rendering ",this.isChord()?"chord :":"note :",this.keys),e.openGroup("stavenote",this.getAttribute("id")),this.drawLedgerLines(),i&&this.drawStem(),this.drawNoteHeads(),this.drawFlag();const s=this.getBoundingBox();e.pointerRect(s.getX(),s.getY(),s.getW(),s.getH()),e.closeGroup(),this.setRendered()}}Vi.DEBUG=!1;class kf extends Ye{static get CATEGORY(){return"StaveTie"}constructor(e,n=""){super(),this.setNotes(e),this.text=n,this.renderOptions={cp1:8,cp2:12,shortTieCutoff:10,cp1Short:2,cp2Short:8,textShiftX:0,firstXShift:0,lastXShift:0,yShift:7,tieSpacing:0}}getDirection(){return this.direction!==void 0&&this.direction!==null?this.direction:this.notes.lastNote?this.notes.lastNote.getStemDirection():this.notes.firstNote?this.notes.firstNote.getStemDirection():0}setDirection(e){return this.direction=e,this}setNotes(e){if(!e.firstNote&&!e.lastNote)throw new re("BadArguments","Tie needs to have either firstNote or lastNote set.");if(e.firstIndexes||(e.firstIndexes=[0]),e.lastIndexes||(e.lastIndexes=[0]),e.firstIndexes.length!==e.lastIndexes.length)throw new re("BadArguments","Tied notes must have same number of indexes.");return this.notes=e,this}isPartial(){return!this.notes.firstNote||!this.notes.lastNote}renderTie(e){if(e.firstYs.length===0||e.lastYs.length===0)throw new re("BadArguments","No Y-values to render");const n=this.checkContext();let i=this.renderOptions.cp1,s=this.renderOptions.cp2;Math.abs(e.lastX-e.firstX)<this.renderOptions.shortTieCutoff&&(i=this.renderOptions.cp1Short,s=this.renderOptions.cp2Short);const r=this.renderOptions.firstXShift,o=this.renderOptions.lastXShift,a=this.renderOptions.yShift*e.direction,c=this.notes.firstIndexes,l=this.notes.lastIndexes;n.openGroup("stavetie",this.getAttribute("id"));for(let u=0;u<c.length;++u){const d=(e.lastX+o+(e.firstX+r))/2,h=e.firstYs[c[u]]+a,f=e.lastYs[l[u]]+a;if(isNaN(h)||isNaN(f))throw new re("BadArguments","Bad indexes for tie rendering.");const p=(h+f)/2+i*e.direction,m=(h+f)/2+s*e.direction;n.beginPath(),n.moveTo(e.firstX+r,h),n.quadraticCurveTo(d,p,e.lastX+o,f),n.quadraticCurveTo(d,m,e.firstX+r,h),n.closePath(),n.fill()}n.closeGroup()}renderTieText(e,n){var i,s,r;const o=this.checkContext();let a=(e+n)/2;a-=o.measureText(this.text).width/2;const c=(s=(i=this.notes.firstNote)===null||i===void 0?void 0:i.checkStave())!==null&&s!==void 0?s:(r=this.notes.lastNote)===null||r===void 0?void 0:r.checkStave();c&&(o.setFont(this.fontInfo),o.fillText(this.text,a+this.renderOptions.textShiftX,c.getYForTopText()-1))}getNotes(){return this.notes}getFirstX(){return this.notes.firstNote?this.notes.firstNote.getTieRightX()+this.renderOptions.tieSpacing:this.notes.lastNote?this.notes.lastNote.checkStave().getTieStartX():0}getLastX(){return this.notes.lastNote?this.notes.lastNote.getTieLeftX()+this.renderOptions.tieSpacing:this.notes.firstNote?this.notes.firstNote.checkStave().getTieEndX():0}getFirstYs(){return this.notes.firstNote?this.notes.firstNote.getYs():this.notes.lastNote?this.notes.lastNote.getYs():[0]}getLastYs(){return this.notes.lastNote?this.notes.lastNote.getYs():this.notes.firstNote?this.notes.firstNote.getYs():[0]}synchronizeIndexes(){if(!(this.notes.firstNote&&this.notes.lastNote)){if(!this.notes.firstNote&&!this.notes.lastNote)return;this.notes.firstNote?this.notes.lastIndexes=this.notes.firstIndexes:this.notes.firstIndexes=this.notes.lastIndexes}}draw(){this.checkContext(),this.setRendered(),this.synchronizeIndexes();const e=this.getFirstX(),n=this.getLastX();return this.renderTie({firstX:e,lastX:n,firstYs:this.getFirstYs(),lastYs:this.getLastYs(),direction:this.getDirection()}),this.renderTieText(e,n),!0}}class Dc extends kf{static get CATEGORY(){return"TabTie"}static createHammeron(e){return new Dc(e,"H")}static createPulloff(e){return new Dc(e,"P")}constructor(e,n){super(e,n),this.renderOptions.cp1=9,this.renderOptions.cp2=11,this.renderOptions.yShift=3,this.direction=-1}}var bs;(function(t){t[t.STRICT=1]="STRICT",t[t.SOFT=2]="SOFT",t[t.FULL=3]="FULL"})(bs||(bs={}));class Ts extends Ye{static get CATEGORY(){return"Voice"}static get Mode(){return bs}constructor(e){super(),this.resolutionMultiplier=1,this.mode=bs.STRICT,this.preFormatted=!1,this.ticksUsed=new at(0,1),this.largestTickWidth=0,this.tickables=[],this.options={softmaxFactor:oe.SOFTMAX_FACTOR};let n;if(typeof e=="string"){const i=e.match(/(\d+)\/(\d+)/);i&&(n={numBeats:parseInt(i[1]),beatValue:parseInt(i[2])})}else n=e;this.time=Object.assign({numBeats:4,beatValue:4,resolution:oe.RESOLUTION},n),this.totalTicks=new at(this.time.numBeats*(this.time.resolution/this.time.beatValue),1),this.smallestTickCount=this.totalTicks.clone()}getTotalTicks(){return this.totalTicks}getTicksUsed(){return this.ticksUsed}getLargestTickWidth(){return this.largestTickWidth}getSmallestTickCount(){return this.smallestTickCount}getTickables(){return this.tickables}getMode(){return this.mode}setMode(e){return this.mode=e,this}getResolutionMultiplier(){return this.resolutionMultiplier}getActualResolution(){return this.resolutionMultiplier*this.time.resolution}setStave(e){return this.stave=e,this}getStave(){return this.stave}getBoundingBox(){const e=this.tickables[0].getBoundingBox();for(let n=1;n<this.tickables.length;++n){const i=this.tickables[n];!i.getStave()&&this.stave&&i.setStave(this.stave);const s=i.getBoundingBox();e.mergeWith(s)}return e}setStrict(e){return this.mode=e?bs.STRICT:bs.SOFT,this}isComplete(){return this.mode===bs.STRICT||this.mode===bs.FULL?this.ticksUsed.equals(this.totalTicks):!0}setSoftmaxFactor(e){return this.options.softmaxFactor=e,this.expTicksUsed=0,this}reCalculateExpTicksUsed(){const e=this.ticksUsed.value(),n=i=>Math.pow(this.options.softmaxFactor,i.getTicks().value()/e);return this.expTicksUsed=ql(this.tickables.map(n)),this.expTicksUsed}softmax(e){this.expTicksUsed||(this.expTicksUsed=this.reCalculateExpTicksUsed());const n=this.ticksUsed.value();return(r=>Math.pow(this.options.softmaxFactor,r/n))(e)/this.expTicksUsed}addTickable(e){if(!e.shouldIgnoreTicks()){const n=e.getTicks();if(this.ticksUsed.add(n),this.expTicksUsed=0,(this.mode===bs.STRICT||this.mode===bs.FULL)&&this.ticksUsed.greaterThan(this.totalTicks))throw this.ticksUsed.subtract(n),new re("BadArgument","Too many ticks.");n.lessThan(this.smallestTickCount)&&(this.smallestTickCount=n.clone()),this.resolutionMultiplier=this.ticksUsed.denominator,this.totalTicks.add(0,this.ticksUsed.denominator)}return this.tickables.push(e),e.setVoice(this),this}addTickables(e){for(let n=0;n<e.length;++n)this.addTickable(e[n]);return this}preFormat(){if(this.preFormatted)return this;const e=this.checkStave();return this.tickables.forEach(n=>{n.getStave()||n.setStave(e)}),this.preFormatted=!0,this}checkStave(){return rn(this.stave,"NoStave","No stave attached to instance.")}draw(e=this.checkContext(),n){n=n??this.stave,this.setRendered();for(let i=0;i<this.tickables.length;++i){const s=this.tickables[i];n&&s.setStave(n),rn(s.getStave(),"MissingStave","The voice cannot draw tickables without staves."),s.setContext(e),s.drawWithStyle()}}}function JB(...t){Du.DEBUG&&pn("VexFlow.GraceNoteGroup",t)}class Du extends Re{static get CATEGORY(){return"GraceNoteGroup"}static format(e,n){if(!e||e.length===0)return!1;const r=[];let o=null,a=0;for(let h=0;h<e.length;++h){const f=e[h],p=f.getNote(),m=nr(p),b=m?4:0;if(m&&p!==o){for(let E=0;E<p.keys.length;++E)a=Math.max(p.getLeftDisplacedHeadPx(),a);o=p}r.push({shift:a,gracenoteGroup:f,spacing:b})}let c=r[0].shift,l,u=!1,d=!1;for(let h=0;h<r.length;++h){const f=r[h].gracenoteGroup;f.position===Re.Position.RIGHT?u=!0:d=!0,f.preFormat(),l=f.getWidth()+r[h].spacing,c=Math.max(l,c)}for(let h=0;h<r.length;++h){const f=r[h].gracenoteGroup;l=f.getWidth()+r[h].spacing,f.setSpacingFromNextModifier(c-Math.min(l,c)+Vi.minNoteheadPadding)}return u&&(n.rightShift+=c),d&&(n.leftShift+=c),!0}constructor(e,n){return super(),this.preFormatted=!1,this.position=Re.Position.LEFT,this.graceNotes=e,this.width=0,this.showSlur=n,this.slur=void 0,this.voice=new Ts({numBeats:4,beatValue:4,resolution:oe.RESOLUTION}).setStrict(!1),this.renderOptions={slurYShift:0},this.beams=[],this.voice.addTickables(this.graceNotes),this}preFormat(){this.preFormatted||(this.formatter||(this.formatter=new Kn),this.formatter.joinVoices([this.voice]).format([this.voice],0,{}),this.setWidth(this.formatter.getMinTotalWidth()),this.preFormatted=!0)}beamNotes(e){if(e=e||this.graceNotes,e.length>1){const n=new wo(e);n.renderOptions.beamWidth=3,n.renderOptions.partialBeamLength=4,this.beams.push(n)}return this}setWidth(e){return this.width=e,this}getWidth(){return this.width+Vi.minNoteheadPadding}getGraceNotes(){return this.graceNotes}draw(){const e=this.checkContext(),n=this.checkAttachedNote();if(this.setRendered(),JB("Drawing grace note group for:",n),this.alignSubNotesWithNote(this.getGraceNotes(),n,this.position),this.graceNotes.forEach(i=>i.setContext(e).drawWithStyle()),this.beams.forEach(i=>i.setContext(e).drawWithStyle()),this.showSlur){const i=nr(n),s=i?kf:Dc;this.slur=new s({lastNote:this.graceNotes[0],firstNote:n,firstIndexes:[0],lastIndexes:[0]}),this.slur.renderOptions.cp2=12,this.slur.renderOptions.yShift=(i?7:5)+this.renderOptions.slurYShift,this.slur.setContext(e).drawWithStyle()}}}Du.DEBUG=!1;class WE extends Re{static get CATEGORY(){return"NoteSubGroup"}static format(e,n){if(!e||e.length===0)return!1;let i=0;for(let s=0;s<e.length;++s){const r=e[s];r.preFormat(),i+=r.getWidth()}return n.leftShift+=i,!0}constructor(e){super(),this.preFormatted=!1,this.position=Re.Position.LEFT,this.subNotes=e,this.subNotes.forEach(n=>{n.setIgnoreTicks(!1)}),this.width=0,this.formatter=new Kn,this.voice=new Ts({numBeats:4,beatValue:4,resolution:oe.RESOLUTION}).setStrict(!1),this.voice.addTickables(this.subNotes)}preFormat(){this.preFormatted||(this.formatter.joinVoices([this.voice]).format([this.voice],0),this.setWidth(this.formatter.getMinTotalWidth()),this.preFormatted=!0)}setWidth(e){return this.width=e,this}getWidth(){return this.width}draw(){const e=this.checkContext(),n=this.checkAttachedNote();this.setRendered(),this.alignSubNotesWithNote(this.subNotes,n),this.subNotes.forEach(i=>i.setContext(e).drawWithStyle())}}function ZB(...t){bi.DEBUG&&pn("VexFlow.Ornament",t)}class bi extends Re{static get CATEGORY(){return"Ornament"}static get minPadding(){return Ce.get("NoteHead.minPadding")}static format(e,n){var i,s;if(!e||e.length===0)return!1;let r=0,o=n.rightShift,a=n.leftShift;for(let c=0;c<e.length;++c){const l=e[c],u=2;if(l.position===jt.RIGHT)l.xShift+=o+2,o+=l.width+bi.minPadding;else if(l.position===jt.LEFT)l.xShift-=a+l.width+2,a+=l.width+bi.minPadding;else if(l.position===jt.ABOVE){r=Math.max(l.getWidth(),r);const d=l.getNote();let h=d.getLineNumber(!0)+n.topTextLine;const f=d.getStem();f&&d.getStemDirection()===ve.UP&&(h+=Math.abs(f.getHeight())/oe.STAVE_LINE_DISTANCE);const p=(s=(i=d.getStave())===null||i===void 0?void 0:i.getNumLines())!==null&&s!==void 0?s:0;h<p&&(n.topTextLine+=p-h),l.setTextLine(n.topTextLine),n.topTextLine+=u}else r=Math.max(l.getWidth(),r),l.setTextLine(n.textLine),n.textLine+=u}return n.leftShift=a+r/2,n.rightShift=o+r/2,!0}static get ornamentNoteTransition(){return["flip","jazzTurn","smear"]}static get ornamentAttack(){return["scoop"]}static get ornamentAlignWithNoteHead(){return["doit","fall","fallLong","doitLong","scoop"]}static get ornamentRelease(){return["doit","fall","fallLong","doitLong","jazzTurn","smear","flip"]}static get ornamentLeft(){return["scoop"]}static get ornamentRight(){return["doit","fall","fallLong","doitLong"]}static get ornamentYShift(){return["fallLong"]}static get ornamentArticulation(){return["bend","plungerClosed","plungerOpen"]}constructor(e){super(),this.position=jt.ABOVE,bi.ornamentRight.indexOf(e)>=0&&(this.position=jt.RIGHT),bi.ornamentLeft.indexOf(e)>=0&&(this.position=jt.LEFT),this.type=e,this.delayed=!1,this.renderOptions={accidentalLowerPadding:3,accidentalUpperPadding:3},this.adjustForStemDirection=!1,this.ornamentAlignWithNoteHead=bi.ornamentAlignWithNoteHead.indexOf(this.type)>=0,bi.ornamentNoteTransition.indexOf(this.type)>=0&&(this.delayed=!0),this.text=oe.ornamentCodes(this.type)}setNote(e){return super.setNote(e),bi.ornamentArticulation.indexOf(this.type)>=0&&(e.getLineNumber()>=3?this.position=Re.Position.ABOVE:this.position=Re.Position.BELOW),this}setDelayed(e){return this.delayed=e,this}setUpperAccidental(e){return this.accidentalUpper=new Ye,this.accidentalUpper.setText(oe.accidentalCodes(e)),this}setLowerAccidental(e){return this.accidentalLower=new Ye,this.accidentalLower.setText(oe.accidentalCodes(e)),this}draw(){const e=this.checkContext(),n=this.checkAttachedNote();this.setRendered();const i=n.checkStave();e.openGroup("ornament",this.getAttribute("id"));const s=n.getModifierStartXY(this.position,this.index);let r=s.x;const o=i.getSpacingBetweenLines(),a=aA(n,this.position);let c=this.ornamentAlignWithNoteHead?s.y:0;if(this.position===jt.ABOVE&&(c=rA(n,this.textLine)-(this.textLine+a)*o),this.position===jt.BELOW&&(c=oA(n,this.textLine)+(this.textLine+a+1.5)*o),this.delayed){let l=0;const u=n.getTickContext().getX();if(this.delayXShift!==void 0)l=this.delayXShift;else{const d=n.getVoice().getTickables(),h=d.indexOf(n),f=h+1<d.length?d[h+1].checkTickContext():void 0;f?l+=(f.getX()-u)*.5:l+=(i.getX()+i.getWidth()-r)*.5,this.delayXShift=l}r+=l}ZB("Rendering ornament: ",this.text.charCodeAt(0),r,c),this.accidentalLower&&(this.accidentalLower.renderText(e,r+this.xShift-this.accidentalLower.getWidth()*.5,c+this.yShift-this.accidentalLower.getTextMetrics().actualBoundingBoxDescent),c-=this.accidentalLower.getHeight()+this.renderOptions.accidentalLowerPadding),bi.ornamentYShift.indexOf(this.type)>=0&&(this.yShift+=this.getHeight()),this.x=r-(this.position===jt.ABOVE||this.position===jt.BELOW?this.width*.5:0),this.y=c,this.renderText(e,0,0),this.accidentalUpper&&(c-=this.getHeight()+this.renderOptions.accidentalUpperPadding,this.accidentalUpper.renderText(e,r+this.xShift-this.accidentalUpper.getWidth()*.5,c+this.yShift-this.accidentalUpper.getTextMetrics().actualBoundingBoxDescent)),e.closeGroup()}}bi.DEBUG=!1;class au extends Re{static get CATEGORY(){return"Parenthesis"}static buildAndAttach(e){for(const n of e)for(let i=0;i<n.keys.length;i++)n.addModifier(new au(jt.LEFT),i),n.addModifier(new au(jt.RIGHT),i)}static format(e,n){if(!e||e.length===0)return!1;let i=0,s=0;for(let r=0;r<e.length;++r){const o=e[r],a=o.getNote(),c=o.getPosition(),l=o.checkIndex();let u=0;c===jt.RIGHT&&(u=a.getRightParenthesisPx(l),s=s>u+o.width?s:u+o.width),c===jt.LEFT&&(u=a.getLeftParenthesisPx(l)+o.width,i=i>u+o.width?i:u+o.width),o.setXShift(u)}return n.leftShift+=i,n.rightShift+=s,!0}constructor(e){super(),this.position=e??Re.Position.LEFT,this.position===Re.Position.RIGHT?this.text="":this.position===Re.Position.LEFT&&(this.text="")}setNote(e){return this.note=e,this.setFont(e.getFont()),this}draw(){const e=this.checkContext(),n=this.checkAttachedNote();this.setRendered();const i=n.getModifierStartXY(this.position,this.index,{forceFlagRight:!0});this.renderText(e,i.x,i.y)}}const KB={path:{x:!0,y:!0,width:!0,height:!0,"font-family":!0,"font-weight":!0,"font-style":!0,"font-size":!0},rect:{"font-family":!0,"font-weight":!0,"font-style":!0,"font-size":!0},text:{width:!0,height:!0}},QB="http://www.w3.org/2000/svg",O1=2*Math.PI;class fa extends ME{constructor(e){super(),this.width=0,this.height=0,this.precision=1,this.backgroundFillStyle="white",this.fontCSSString="",this.element=e,this.precision=Math.pow(10,oe.RENDER_PRECISION_PLACES);const n=this.create("svg");n.setAttribute("pointer-events","none"),this.element.appendChild(n),this.svg=n,this.parent=this.svg,this.groups=[this.svg],this.path="",this.pen={x:NaN,y:NaN};const i={"font-family":Ce.get("fontFamily"),"font-size":"10pt","font-weight":ha.NORMAL,"font-style":fo.NORMAL};this.state=Object.assign({scaleX:1,scaleY:1},i),this.attributes=Object.assign({"stroke-width":1,"stroke-dasharray":"none",fill:"black",stroke:"black",shadowBlur:0,shadowColor:"black"},i),this.groupAttributes=[],this.applyAttributes(n,this.attributes),this.groupAttributes.push(Object.assign({},this.attributes)),this.stateStack=[]}round(e){return Math.round(e*this.precision)/this.precision}create(e){return document.createElementNS(QB,e)}openGroup(e,n){const i=this.create("g");return this.groups.push(i),this.parent.appendChild(i),this.parent=i,e&&i.setAttribute("class",yg(e)),n&&i.setAttribute("id",yg(n)),this.applyAttributes(i,this.attributes),this.groupAttributes.push(Object.assign(Object.assign({},this.groupAttributes[this.groupAttributes.length-1]),this.attributes)),i}closeGroup(){this.groups.pop(),this.groupAttributes.pop(),this.parent=this.groups[this.groups.length-1]}openRotation(e,n,i){this.openGroup().setAttribute("transform",`translate(${n},${i}) rotate(${e}) translate(-${n},-${i})`)}closeRotation(){this.closeGroup()}add(e){this.parent.appendChild(e)}setFillStyle(e){return this.attributes.fill=e,this}setBackgroundFillStyle(e){return this.backgroundFillStyle=e,this}setStrokeStyle(e){return this.attributes.stroke=e,this}setShadowColor(e){return this.attributes.shadowColor=e,this}setShadowBlur(e){return this.attributes.shadowBlur=e,this}setLineWidth(e){return this.attributes["stroke-width"]=e,this}setLineDash(e){if(Object.prototype.toString.call(e)==="[object Array]")return this.attributes["stroke-dasharray"]=e.join(","),this;throw new re("ArgumentError","lineDash must be an array of integers.")}setLineCap(e){return this.attributes["stroke-linecap"]=e,this}resize(e,n){this.width=e,this.height=n,this.element.style.width=e.toString(),this.svg.style.width=e.toString(),this.svg.style.height=n.toString();const i={width:e,height:n};return this.applyAttributes(this.svg,i),this.scale(this.state.scaleX,this.state.scaleY),this}scale(e,n){this.state.scaleX=this.state.scaleX?this.state.scaleX*e:e,this.state.scaleY=this.state.scaleY?this.state.scaleY*n:n;const i=this.width/this.state.scaleX,s=this.height/this.state.scaleY;return this.setViewBox(0,0,i,s),this}setViewBox(e,n,i,s){if(typeof e=="string")this.svg.setAttribute("viewBox",e);else{const r=e+" "+n+" "+i+" "+s;this.svg.setAttribute("viewBox",r)}}applyAttributes(e,n){const i=KB[e.nodeName];for(const s in n)i&&i[s]||n[s]&&(this.groupAttributes.length===0||n[s]!=this.groupAttributes[this.groupAttributes.length-1][s])&&e.setAttributeNS(null,s,n[s]);return e}clear(){for(;this.svg.lastChild;)this.svg.removeChild(this.svg.lastChild)}rect(e,n,i,s,r){s<0&&(n+=s,s*=-1);const o=this.create("rect");return r=r??{fill:"none","stroke-width":this.attributes["stroke-width"],stroke:"black"},e=this.round(e),n=this.round(n),i=this.round(i),s=this.round(s),this.applyAttributes(o,Object.assign({x:e,y:n,width:i,height:s},r)),this.add(o),this}fillRect(e,n,i,s){const r={fill:this.attributes.fill,stroke:"none"};return this.rect(e,n,i,s,r),this}pointerRect(e,n,i,s){const r={opacity:"0","pointer-events":"auto"};return this.rect(e,n,i,s,r),this}clearRect(e,n,i,s){return this.rect(e,n,i,s,{fill:this.backgroundFillStyle,stroke:"none"}),this}beginPath(){return this.path="",this.pen.x=NaN,this.pen.y=NaN,this}moveTo(e,n){return e=this.round(e),n=this.round(n),this.path+="M"+e+" "+n,this.pen.x=e,this.pen.y=n,this}lineTo(e,n){return e=this.round(e),n=this.round(n),this.path+="L"+e+" "+n,this.pen.x=e,this.pen.y=n,this}bezierCurveTo(e,n,i,s,r,o){return r=this.round(r),o=this.round(o),e=this.round(e),n=this.round(n),i=this.round(i),s=this.round(s),this.path+="C"+e+" "+n+","+i+" "+s+","+r+" "+o,this.pen.x=r,this.pen.y=o,this}quadraticCurveTo(e,n,i,s){return i=this.round(i),s=this.round(s),e=this.round(e),n=this.round(n),this.path+="Q"+e+" "+n+","+i+" "+s,this.pen.x=i,this.pen.y=s,this}arc(e,n,i,s,r,o){let a=e+i*Math.cos(s),c=n+i*Math.sin(s);a=this.round(a),c=this.round(c);const l=T1(s),u=T1(r);if(!o&&r-s>=O1||o&&s-r>=O1||l===u){let d=e+i*Math.cos(s+Math.PI),h=n+i*Math.sin(s+Math.PI);d=this.round(d),h=this.round(h),i=this.round(i),this.path+=`M${a} ${c} A${i} ${i} 0 0 0 ${d} ${h} `,this.path+=`A${i} ${i} 0 0 0 ${a} ${c}`,this.pen.x=a,this.pen.y=c}else{let d=e+i*Math.cos(r),h=n+i*Math.sin(r);s=l,r=u;let f;Math.abs(r-s)<Math.PI?f=o:f=!o,s>r&&(f=!f);const p=!o;d=this.round(d),h=this.round(h),i=this.round(i),this.path+=`M${a} ${c} A${i} ${i} 0 ${+f} ${+p} ${d} ${h}`,this.pen.x=d,this.pen.y=h}return this}closePath(){return this.path+="Z",this}getShadowStyle(){return`filter: drop-shadow(0 0 ${this.attributes.shadowBlur/1.5}px ${this.attributes.shadowColor})`}fill(e){const n=this.create("path");return typeof e>"u"&&(e=Object.assign(Object.assign({},this.attributes),{stroke:"none"})),e.d=this.path,this.attributes.shadowBlur>0&&(e.style=this.getShadowStyle()),this.applyAttributes(n,e),this.add(n),this}stroke(){const e=this.create("path"),n=Object.assign(Object.assign({},this.attributes),{fill:"none",d:this.path});return this.attributes.shadowBlur>0&&(n.style=this.getShadowStyle()),this.applyAttributes(e,n),this.add(e),this}measureText(e){fa.measureTextElement.setText(e),fa.measureTextElement.setFont(this.attributes["font-family"],this.attributes["font-size"],this.attributes["font-weight"],this.attributes["font-style"]);const n=fa.measureTextElement.getBoundingBox();return{x:n.x,y:n.y,width:n.w,height:n.h}}fillText(e,n,i){if(!e||e.length<=0)return this;n=this.round(n),i=this.round(i);const s=Object.assign(Object.assign({},this.attributes),{stroke:"none",x:n,y:i}),r=this.create("text");return r.textContent=e,this.applyAttributes(r,s),this.add(r),this}save(){return this.stateStack.push({state:structuredClone(this.state),attributes:structuredClone(this.attributes)}),this}restore(){const e=this.stateStack.pop();if(e){const n=e;this.state=structuredClone(n.state),this.attributes=structuredClone(n.attributes)}return this}set fillStyle(e){this.setFillStyle(e)}get fillStyle(){return this.attributes.fill}set strokeStyle(e){this.setStrokeStyle(e)}get strokeStyle(){return this.attributes.stroke}setFont(e,n,i,s){const r=et.validate(e,n,i,s);this.fontCSSString=et.toCSSString(r);const o={"font-family":r.family,"font-size":r.size,"font-weight":r.weight,"font-style":r.style};return this.attributes=Object.assign(Object.assign({},this.attributes),o),this.state=Object.assign(Object.assign({},this.state),o),this}getFont(){return this.fontCSSString}}fa.measureTextElement=new Ye;var Sh;(function(t){t[t.CANVAS=1]="CANVAS",t[t.SVG=2]="SVG"})(Sh||(Sh={}));var xh;(function(t){t[t.NONE=1]="NONE",t[t.UP=2]="UP",t[t.DOWN=3]="DOWN"})(xh||(xh={}));class Vt{static buildContext(e,n,i,s,r="#FFF"){const o=new Vt(e,n);i&&s&&o.resize(i,s);const a=o.getContext();return a.setBackgroundFillStyle(r),Vt.lastContext=a,a}static getCanvasContext(e,n,i,s){return Vt.buildContext(e,Vt.Backends.CANVAS,n,i,s)}static getSVGContext(e,n,i,s){return Vt.buildContext(e,Vt.Backends.SVG,n,i,s)}static drawDashedLine(e,n,i,s,r,o){e.beginPath();const a=s-n,c=r-i,l=Math.atan2(c,a);let u=n,d=i;e.moveTo(n,i);let h=0,f=!0;for(;!((a<0?u<=s:u>=s)&&(c<0?d<=r:d>=r));){const p=o[h++%o.length],m=u+Math.cos(l)*p;u=a<0?Math.max(s,m):Math.min(s,m);const b=d+Math.sin(l)*p;d=c<0?Math.max(r,b):Math.min(r,b),f?e.lineTo(u,d):e.moveTo(u,d),f=!f}e.closePath(),e.stroke()}constructor(e,n){if(xB(e))this.ctx=e;else{if(n===void 0)throw new re("InvalidArgument","Missing backend argument");const i=n;let s;if(typeof e=="string"){const r=document.getElementById(e);if(!r)throw new re("BadElementId",`Can't find element with ID "${r}"`);s=r}else s=e;if(i===Vt.Backends.CANVAS){if(!BE(s))throw new re("BadElement","CANVAS context requires an HTMLCanvasElement.");const r=s.getContext("2d",{willReadFrequently:!0});if(!r)throw new re("BadElement","Can't get canvas context");this.ctx=new pc(r)}else if(i===Vt.Backends.SVG){if(!PB(s))throw new re("BadElement","SVG context requires an HTMLDivElement.");this.ctx=new fa(s)}else throw new re("InvalidBackend",`No support for backend: ${i}`)}}resize(e,n){return this.ctx.resize(e,n),this}getContext(){return this.ctx}}Vt.Backends=Sh;Vt.LineEndType=xh;Vt.lastContext=void 0;class HE extends Re{static get CATEGORY(){return"StringNumber"}static format(e,n){const i=n.leftShift,s=n.rightShift,r=1;if(!e||e.length===0)return!1;const o=[];let a=null,c=0,l=0;for(let m=0;m<e.length;++m){const b=e[m],E=b.getNote(),x=b.getPosition();if(!nr(E))throw new re("NoStaveNote");const S=b.checkIndex(),v=E.getKeyProps()[S],T=E.getModifierContext(),w=b.radius*2/oe.STAVE_LINE_DISTANCE+.5;if(T&&(x===jt.ABOVE?(b.textLine=T.getState().topTextLine,n.topTextLine+=w):x===jt.BELOW&&(b.textLine=T.getState().textLine,n.textLine+=w)),E!==a){for(let A=0;A<E.keys.length;++A)x===Re.Position.LEFT&&(c=Math.max(E.getLeftDisplacedHeadPx(),c)),s===0&&(l=Math.max(E.getRightDisplacedHeadPx(),l));a=E}const D=v.line;o.push({pos:x,note:E,num:b,line:D,shiftL:c,shiftR:l})}o.sort((m,b)=>b.line-m.line);let u=0,d=0,h=0,f=null,p=null;for(let m=0;m<o.length;++m){const b=o[m].note,E=o[m].pos,x=o[m].num,S=o[m].line,v=o[m].shiftR;(S!==f||b!==p)&&(u=s+v);const T=x.getWidth()+r;let w=0;E===Re.Position.LEFT?(x.setXShift(i+c),w=T,d=Math.max(w,d)):E===Re.Position.RIGHT&&(x.setXShift(u),w+=T,h=w>h?w:h),f=S,p=b}return n.leftShift+=d,n.rightShift+=h,!0}constructor(e){super(),this.stringNumber=e,this.position=Re.Position.ABOVE,this.xShift=0,this.yShift=0,this.textLine=0,this.stemOffset=0,this.xOffset=0,this.yOffset=0,this.dashed=!0,this.leg=Vt.LineEndType.NONE,this.radius=8,this.drawCircle=!0,this.setWidth(this.radius*2+4)}setLineEndType(e){return e>=Vt.LineEndType.NONE&&e<=Vt.LineEndType.DOWN&&(this.leg=e),this}setStringNumber(e){return this.stringNumber=e,this}setOffsetX(e){return this.xOffset=e,this}setOffsetY(e){return this.yOffset=e,this}setLastNote(e){return this.lastNote=e,this}setDashed(e){return this.dashed=e,this}setDrawCircle(e){return this.drawCircle=e,this}draw(){const e=this.checkContext(),n=this.checkAttachedNote();this.setRendered();const i=n.getModifierStartXY(this.position,this.index),s=n.hasStem()?n.getStemDirection():ve.UP;let r=i.x+this.xShift+this.xOffset,o={};n.hasStem()&&(o=n.checkStem().getExtents());let a=i.y+this.yShift+this.yOffset;switch(this.position){case Re.Position.ABOVE:a=n.getYs().reduce((d,h)=>d<h?d:h),n.hasStem()&&s===ve.UP&&(a=o.topY+Ce.get("StringNumber.stemPadding")),a-=this.radius+Ce.get("StringNumber.verticalPadding")+this.textLine*oe.STAVE_LINE_DISTANCE;break;case Re.Position.BELOW:a=n.getYs().reduce((d,h)=>d>h?d:h),n.hasStem()&&s===ve.DOWN&&(a=o.topY-Ce.get("StringNumber.stemPadding")),a+=this.radius+Ce.get("StringNumber.verticalPadding")+this.textLine*oe.STAVE_LINE_DISTANCE;break;case Re.Position.LEFT:r-=this.radius/2+Ce.get("StringNumber.leftPadding");break;case Re.Position.RIGHT:r+=this.radius/2+Ce.get("StringNumber.rightPadding");break;default:throw new re("InvalidPosition",`The position ${this.position} is invalid`)}this.drawCircle&&(e.beginPath(),e.arc(r,a,this.radius,0,Math.PI*2,!1),e.setLineWidth(1.5),e.stroke()),e.setFont(this.fontInfo);const c=r-e.measureText(this.stringNumber).width/2;e.fillText(""+this.stringNumber,c,a+4.5);const l=this.lastNote;if(xf(l)){const u=l.getStemX()-n.getX()+5;e.setStrokeStyle("#000000"),e.setLineCap("round"),e.setLineWidth(.6),this.dashed?Vt.drawDashedLine(e,r+10,a,r+u,a,[3,3]):Vt.drawDashedLine(e,r+10,a,r+u,a,[3,0]);let d,h;switch(this.leg){case Vt.LineEndType.UP:d=-10,h=this.dashed?[3,3]:[3,0],Vt.drawDashedLine(e,r+u,a,r+u,a+d,h);break;case Vt.LineEndType.DOWN:d=10,h=this.dashed?[3,3]:[3,0],Vt.drawDashedLine(e,r+u,a,r+u,a+d,h);break}}}}class yn extends Re{static get CATEGORY(){return"Stroke"}static format(e,n){const i=n.leftShift,s=5;if(!e||e.length===0)return!1;const r=e.map(c=>{const l=c.getNote(),u=c.checkIndex();if(nr(l)){const{line:d}=l.getKeyProps()[u],h=l.getLeftDisplacedHeadPx();return{line:d,shift:h,stroke:c}}else if(ns(l)){const{str:d}=l.getPositions()[u];return{line:d,shift:0,stroke:c}}else throw new re("Internal","Unexpected instance.")}),o=i,a=r.reduce((c,{stroke:l,shift:u})=>(l.setXShift(o+u),Math.max(l.getWidth()+s,c)),0);return n.leftShift+=a,!0}constructor(e,n){super(),this.options=Object.assign({allVoices:!0},n),this.allVoices=this.options.allVoices,this.type=e,this.position=Re.Position.LEFT,this.renderOptions={fontScale:Ce.get("Stroke.fontSize")},this.setXShift(0),this.setWidth(10)}getPosition(){return this.position}addEndNote(e){return this.noteEnd=e,this}draw(){const e=this.checkContext(),n=this.checkAttachedNote();this.setRendered();const i=n.getModifierStartXY(this.position,this.index);let s=n.getYs(),r=i.y,o=i.y;const a=i.x-5,c=n.checkStave().getSpacingBetweenLines(),l=this.checkModifierContext().getMembers(n.getCategory());for(let f=0;f<l.length;f++){const p=l[f];if(nA(p)){s=p.getYs();for(let m=0;m<s.length;m++)(this.note===l[f]||this.allVoices)&&(r=Math.min(r,s[m]),o=Math.max(o,s[m]))}}let u="",d=0,h=0;switch(this.type){case yn.Type.BRUSH_DOWN:case yn.Type.ROLL_DOWN:case yn.Type.RASGUEADO_DOWN:u=M.arrowheadBlackUp,d=r,r-=c/2,o+=c/2;break;case yn.Type.BRUSH_UP:case yn.Type.ROLL_UP:case yn.Type.RASGUEADO_UP:u=M.arrowheadBlackDown,d=o+c,r-=c/2;break;case yn.Type.ARPEGGIO_DIRECTIONLESS:r-=c/2,o+=c/2;break;default:throw new re("InvalidType",`The stroke type ${this.type} does not exist`)}if(this.type===yn.Type.BRUSH_DOWN||this.type===yn.Type.BRUSH_UP)e.fillRect(a+this.xShift,r,1,o-r);else{const f=u===M.arrowheadBlackDown?M.wiggleArpeggiatoDown:M.wiggleArpeggiatoUp;let p="";const m=new Ye;for(;m.getWidth()<o-r;)p+=f,m.setText(p);this.type===yn.Type.RASGUEADO_DOWN||this.type===yn.Type.ROLL_DOWN||this.type===yn.Type.ARPEGGIO_DIRECTIONLESS?(e.openRotation(90,a+this.xShift,r),m.renderText(e,a+this.xShift,r-m.getTextMetrics().actualBoundingBoxDescent+m.getHeight()/2),e.closeRotation(),h=r+m.getWidth()+5):(e.openRotation(-90,a+this.xShift,o),m.renderText(e,a+this.xShift,o-m.getTextMetrics().actualBoundingBoxDescent+m.getHeight()/2),e.closeRotation(),h=o-m.getWidth()-5)}if(d!==0){const f=new Ye;f.setText(u),f.renderText(e,a+this.xShift-f.getWidth()/2,d)}if(this.type===yn.Type.RASGUEADO_DOWN||this.type===yn.Type.RASGUEADO_UP){const f=new Ye("Stroke.text");f.setText("R"),f.renderText(e,a+this.xShift-f.getWidth()/2,h+(this.type===yn.Type.RASGUEADO_DOWN?f.getHeight():0))}}}yn.Type={BRUSH_DOWN:1,BRUSH_UP:2,ROLL_DOWN:3,ROLL_UP:4,RASGUEADO_DOWN:5,RASGUEADO_UP:6,ARPEGGIO_DIRECTIONLESS:7};class XE extends Re{static get CATEGORY(){return"Vibrato"}static format(e,n,i){if(!e||e.length===0)return!1;let s=n.topTextLine,r=0,o=n.rightShift-7;const a=i.getMembers(Ki.CATEGORY);if(a&&a.length>0){const c=a.map(l=>l.getTextHeight()).reduce((l,u)=>l>u?l:u)/oe.STAVE_LINE_DISTANCE;s=s-(c+1)}else n.topTextLine+=1;for(let c=0;c<e.length;++c){const l=e[c];l.setXShift(o),l.setTextLine(s),r+=l.getWidth(),o+=r}return n.rightShift+=r,!0}constructor(){super(),this.position=Re.Position.RIGHT,this.renderOptions={code:60080,width:20},this.setVibratoWidth(this.renderOptions.width)}setVibratoWidth(e){this.renderOptions.width=e,this.text=String.fromCodePoint(this.renderOptions.code);const n=this.getWidth();if(!n)throw new re("Cannot set vibrato width if width is 0");const i=Math.round(this.renderOptions.width/n);for(let s=1;s<i;s++)this.text+=String.fromCodePoint(this.renderOptions.code);return this}setVibratoCode(e){return this.renderOptions.code=e,this.setVibratoWidth(this.renderOptions.width)}draw(){const e=this.checkContext(),n=this.checkAttachedNote();this.setRendered();const s=n.getModifierStartXY(Re.Position.RIGHT,this.index).x,r=n.getYForTopText(this.textLine)+5;this.renderText(e,s,r)}}function Pd(...t){Oc.DEBUG&&pn("VexFlow.ModifierContext",t)}class Oc{constructor(){this.state={leftShift:0,rightShift:0,textLine:0,topTextLine:0},this.members={},this.preFormatted=!1,this.postFormatted=!1,this.formatted=!1,this.width=0,this.spacing=0}addModifier(e){return Pd("addModifier is deprecated, use addMember instead."),this.addMember(e)}addMember(e){const n=e.getCategory();return this.members[n]||(this.members[n]=[]),this.members[n].push(e),e.setModifierContext(this),this.preFormatted=!1,this}getModifiers(e){return Pd("getModifiers is deprecated, use getMembers instead."),this.getMembers(e)}getMembers(e){var n;return(n=this.members[e])!==null&&n!==void 0?n:[]}getWidth(){return this.width}getLeftShift(){return this.state.leftShift}getRightShift(){return this.state.rightShift}getState(){return this.state}getMetrics(){if(!this.formatted)throw new re("UnformattedMember","Unformatted member has no metrics.");return{width:this.state.leftShift+this.state.rightShift+this.spacing,spacing:this.spacing}}preFormat(){if(this.preFormatted)return;Pd("Preformatting ModifierContext");const e=this.state,n=this.members;Vi.format(n.StaveNote,e),au.format(n.Parenthesis,e),po.format(n.Dot,e),wf.format(n.FretHandFinger,e),ka.format(n.Accidental,e),yn.format(n.Stroke,e),Du.format(n.GraceNoteGroup,e),WE.format(n.NoteSubGroup,e),HE.format(n.StringNumber,e),ir.format(n.Articulation,e),bi.format(n.Ornament,e),wi.format(n.Annotation,e),_t.format(n.ChordSymbol,e),Ki.format(n.Bend,e),XE.format(n.Vibrato,e,this),this.width=e.leftShift+e.rightShift,this.preFormatted=!0}postFormat(){this.postFormatted||(Pd("Postformatting ModifierContext"),Vi.postFormat(this.getMembers("StaveNote")))}}Oc.DEBUG=!1;class Pc extends rr{static get CATEGORY(){return"KeySignature"}constructor(e,n,i){super(),this.accList=[],this.setKeySig(e,n,i),this.setPosition(rt.BEGIN),this.children=[],this.paddingForced=!1}convertToGlyph(e,n,i){const s=oe.accidentalCodes(e.type),r=new Ye("KeySignature");r.setText(s);let o=1;if(r.setYShift(i.getYForLine(e.line)),this.children.length>0){const a=this.children[this.children.length-1],c=u=>u.getText()===M.accidentalNatural,l=(u,d)=>Math.abs(d.getYShift()-u.getYShift());(c(a)||c(r))&&l(a,r)<10&&(o=2),r.setXShift(a.getXShift()+a.getWidth()+o)}this.children.push(r),this.width+=r.getWidth()+o}cancelKey(e){return this.formatted=!1,this.cancelKeySpec=e,this}convertToCancelAccList(e){const n=oe.keySignature(e),i=this.accList.length>0&&n.length>0&&n[0].type!==this.accList[0].type,s=i?n.length:n.length-this.accList.length;if(s<1)return;const r=[];for(let o=0;o<s;o++){let a=o;i||(a=n.length-s+o);const c=n[a];r.push({type:"n",line:c.line})}return this.accList=r.concat(this.accList),{accList:r,type:n[0].type}}addToStave(e){return this.paddingForced=!0,e.addModifier(this),this}setStave(e){return this.formatted=!1,super.setStave(e)}getBoundingBox(){return this.formatted||this.format(),super.getBoundingBox()}calculateDimensions(){let e;this.children.length>0?e=this.children[0].getBoundingBox():e=new tr(this.x+this.xShift,this.y+this.yShift,0,0),this.children.forEach(n=>{e.mergeWith(n.getBoundingBox())}),this.width=e.getW(),this.height=e.getH(),this.y=e.getY()}convertAccLines(e,n,i=this.accList){let s=0,r;switch(e){case"soprano":n==="#"?r=[2.5,.5,2,0,1.5,-.5,1]:s=-1;break;case"mezzo-soprano":n==="b"?r=[0,2,.5,2.5,1,3,1.5]:s=1.5;break;case"alto":s=.5;break;case"tenor":n==="#"?r=[3,1,2.5,.5,2,0,1.5]:s=-.5;break;case"baritone-f":case"baritone-c":n==="b"?r=[.5,2.5,1,3,1.5,3.5,2]:s=2;break;case"bass":case"french":s=1;break}let o;if(typeof r<"u")for(o=0;o<i.length;++o)i[o].line=r[o];else if(s!==0)for(o=0;o<i.length;++o)i[o].line+=s}getPadding(e){return this.formatted||this.format(),this.children.length===0||!this.paddingForced&&e<2?0:this.padding}getWidth(){return this.formatted||this.format(),this.width}setKeySig(e,n,i){return this.formatted=!1,this.keySpec=e,this.cancelKeySpec=n,this.alterKeySpec=i,this}alterKey(e){return this.formatted=!1,this.alterKeySpec=e,this}convertToAlterAccList(e){const n=Math.min(e.length,this.accList.length);for(let i=0;i<n;++i)e[i]&&(this.accList[i].type=e[i])}format(){let e=this.getStave();e||(e=new Dr(0,0,100),this.setStave(e)),this.width=0,this.children=[],this.accList=oe.keySignature(rn(this.keySpec));const n=this.accList,i=n.length>0?n[0].type:void 0;let s;if(this.cancelKeySpec&&(s=this.convertToCancelAccList(this.cancelKeySpec)),this.alterKeySpec&&this.convertToAlterAccList(this.alterKeySpec),this.accList.length>0){const r=(this.position===rt.END?e.getEndClef():e.getClef())||e.getClef();s&&this.convertAccLines(r,s.type,s.accList),this.convertAccLines(r,i,n);for(let o=0;o<this.accList.length;++o)this.convertToGlyph(this.accList[o],this.accList[o+1],e)}this.calculateDimensions(),this.formatted=!0}draw(){const n=this.checkStave().checkContext();this.formatted||this.format(),this.setRendered(),n.openGroup("keysignature",this.getAttribute("id"));for(let i=0;i<this.children.length;i++)this.children[i].renderText(n,this.x,0);n.closeGroup()}}class un extends rr{static get CATEGORY(){return"Repetition"}constructor(e,n,i){super(),this.symbolType=e,this.x=n,this.xShift=0,this.yShift=i}setShiftX(e){return this.xShift=e,this}setShiftY(e){return this.yShift=e,this}draw(){const e=this.checkStave(),n=e.getModifierXShift(this.getPosition());switch(this.setRendered(),this.symbolType){case un.type.CODA_RIGHT:this.drawCodaFixed(e,n+e.getWidth());break;case un.type.CODA_LEFT:this.drawSymbolText(e,n,"Coda",!0);break;case un.type.SEGNO_LEFT:this.drawSegnoFixed(e,n);break;case un.type.SEGNO_RIGHT:this.drawSegnoFixed(e,n+e.getWidth());break;case un.type.DC:this.drawSymbolText(e,n,"D.C.",!1);break;case un.type.DC_AL_CODA:this.drawSymbolText(e,n,"D.C. al",!0);break;case un.type.DC_AL_FINE:this.drawSymbolText(e,n,"D.C. al Fine",!1);break;case un.type.DS:this.drawSymbolText(e,n,"D.S.",!1);break;case un.type.DS_AL_CODA:this.drawSymbolText(e,n,"D.S. al",!0);break;case un.type.DS_AL_FINE:this.drawSymbolText(e,n,"D.S. al Fine",!1);break;case un.type.FINE:this.drawSymbolText(e,n,"Fine",!1);break;case un.type.TO_CODA:this.drawSymbolText(e,n,"To",!0);break}}drawCodaFixed(e,n){const i=e.getYForTopText(e.getNumLines());return this.text=M.coda,this.renderText(e.checkContext(),n,i+Ce.get("Repetition.coda.offsetY")),this}drawSegnoFixed(e,n){const i=e.getYForTopText(e.getNumLines());return this.text=M.segno,this.renderText(e.checkContext(),n,i+Ce.get("Repetition.segno.offsetY")),this}drawSymbolText(e,n,i,s){const r=e.checkContext();let o=0;switch(this.text=i,s&&(this.text+=" "),this.setFont(Ce.getFontInfo("Repetition.text")),this.symbolType){case un.type.CODA_LEFT:o=e.getVerticalBarWidth();break;case un.type.DC:case un.type.DC_AL_FINE:case un.type.DS:case un.type.DS_AL_FINE:case un.type.FINE:default:o=n-(e.getNoteStartX()-this.x)+e.getWidth()-this.width-Ce.get("Repetition.text.offsetX")}const a=e.getYForTopText(e.getNumLines())+Ce.get("Repetition.text.offsetY");return this.renderText(r,o,a),this}}un.type={NONE:1,CODA_LEFT:2,CODA_RIGHT:3,SEGNO_LEFT:4,SEGNO_RIGHT:5,DC:6,DC_AL_CODA:7,DC_AL_FINE:8,DS:9,DS_AL_CODA:10,DS_AL_FINE:11,FINE:12,TO_CODA:13};class GB extends rr{static get CATEGORY(){return"StaveSection"}constructor(e,n=0,i=0,s=!0){super(),this.setText(e),this.x=n,this.yShift=i,this.drawRect=s,this.padding=Ce.get("StaveSection.padding")}setDrawRect(e){return this.drawRect=e,this}draw(){const e=this.checkStave(),n=e.checkContext();this.setRendered(),this.x=e.getX()+e.getModifierXShift(this.getPosition());const i=-1*this.textMetrics.actualBoundingBoxDescent,s=this.width+2*this.padding,r=this.height+2*this.padding,o=e.getYForTopText(1.5)+this.yShift,a=this.x+this.xShift;this.drawRect&&(n.beginPath(),n.rect(a,o-r+i,s,r),n.stroke()),this.renderText(n,this.xShift+this.padding,o-this.padding)}}class lA extends rr{static get CATEGORY(){return"StaveTempo"}constructor(e,n,i){super(),this.durationToCode={"1/4":M.metNoteDoubleWholeSquare,long:M.metNoteDoubleWholeSquare,"1/2":M.metNoteDoubleWhole,breve:M.metNoteDoubleWhole,1:M.metNoteWhole,whole:M.metNoteWhole,w:M.metNoteWhole,2:M.metNoteHalfUp,half:M.metNoteHalfUp,h:M.metNoteHalfUp,4:M.metNoteQuarterUp,quarter:M.metNoteQuarterUp,q:M.metNoteQuarterUp,8:M.metNote8thUp,eighth:M.metNote8thUp,16:M.metNote16thUp,"16th":M.metNote16thUp,32:M.metNote32ndUp,"32nd":M.metNote32ndUp,64:M.metNote64thUp,"64th":M.metNote64thUp,128:M.metNote128thUp,"128th":M.metNote128thUp,256:M.metNote256thUp,"256th":M.metNote256thUp,512:M.metNote512thUp,"512th":M.metNote512thUp,1024:M.metNote1024thUp,"1024th":M.metNote1024thUp},this.tempo=e,this.position=rt.ABOVE,this.x=n,this.setXShift(10),this.setYShift(i)}setTempo(e){return this.tempo=e,this}draw(){const e=this.checkStave(),n=e.getModifierXShift(this.getPosition()),i=e.checkContext();this.setRendered();const{name:s,duration:r,dots:o,bpm:a,duration2:c,dots2:l,parenthesis:u}=this.tempo;let d=this.x+n;const h=e.getYForTopText(1),f=new Ye("StaveTempo.glyph"),p=new Ye("StaveTempo");if(s&&(this.text=s,this.fontInfo=Ce.getFontInfo("StaveTempo.name"),this.renderText(i,n,h),d+=this.getWidth()+3),(s&&r||u)&&(p.setText("("),p.renderText(i,d+this.xShift,h+this.yShift),d+=p.getWidth()+3),r){if(f.setText(this.durationToCode[r]),f.renderText(i,d+this.xShift,h+this.yShift),d+=f.getWidth()+3,o){f.setText(M.metAugmentationDot);for(let m=0;m<o;m++)f.renderText(i,d+this.xShift,h+2+this.yShift),d+=f.getWidth()+3}if(p.setText("="),p.renderText(i,d+this.xShift,h+this.yShift),d+=p.getWidth()+3,c){if(f.setText(this.durationToCode[c]),f.renderText(i,d+this.xShift,h+this.yShift),d+=f.getWidth()+3,l){f.setText(M.metAugmentationDot);for(let m=0;m<l;m++)f.renderText(i,d+this.xShift,h+2+this.yShift),d+=f.getWidth()+3}}else a&&(p.setText(""+a),p.renderText(i,d+this.xShift,h+this.yShift),d+=p.getWidth()+3);(s||u)&&(p.setText(")"),p.renderText(i,d+this.xShift,h+this.yShift))}}}var _i;(function(t){t[t.LEFT=1]="LEFT",t[t.CENTER=2]="CENTER",t[t.RIGHT=3]="RIGHT"})(_i||(_i={}));class Qc extends mi{static get CATEGORY(){return"TextNote"}static get GLYPHS(){return{segno:M.segno,tr:M.ornamentTrill,mordent:M.ornamentMordent,mordentUpper:M.ornamentShortTrill,mordentLower:M.ornamentMordent,f:M.dynamicForte,p:M.dynamicPiano,m:M.dynamicMezzo,s:M.dynamicSforzando,z:M.dynamicZ,coda:M.coda,pedalOpen:M.keyboardPedalPed,pedalClose:M.keyboardPedalUp,caesuraStraight:M.caesura,caesuraCurved:M.caesuraCurved,breath:M.breathMarkComma,tick:M.breathMarkTick,turn:M.ornamentTurn,turnInverted:M.ornamentTurnSlash}}constructor(e){var n,i;super(e),this.text=(n=e.text)!==null&&n!==void 0?n:"",e.glyph&&(this.text+=Qc.GLYPHS[e.glyph]||e.glyph),e.font?this.setFont(e.font):e.glyph===void 0&&this.setFont(Ce.getFontInfo("TextNote.text.fontSize"));const s=et.convertSizeToPointValue(this.fontInfo.size)*.769231;e.superscript&&(this.superscript=new Ye("TexNote.subSuper"),this.superscript.setText(e.superscript),this.superscript.setFontSize(s)),e.subscript&&(this.subscript=new Ye("TexNote.subSuper"),this.subscript.setText(e.subscript),this.subscript.setFontSize(s)),this.line=(i=e.line)!==null&&i!==void 0?i:0,this.smooth=e.smooth||!1,this.ignoreTicks=e.ignoreTicks||!1,this.justification=_i.LEFT}setJustification(e){return this.justification=e,this}setLine(e){return this.line=e,this}getLine(){return this.line}preFormat(){if(this.preFormatted)return;const e=this.checkTickContext("Can't preformat without a TickContext.");this.justification===_i.CENTER?this.leftDisplacedHeadPx=this.width/2:this.justification===_i.RIGHT&&(this.leftDisplacedHeadPx=this.width),this.rightDisplacedHeadPx=e.getMetrics().glyphPx/2,this.preFormatted=!0}draw(){const e=this.checkContext(),n=this.checkStave(),i=this.checkTickContext("Can't draw without a TickContext.");this.setRendered();let s=this.getAbsoluteX()+i.getMetrics().glyphPx/2;const r=this.getWidth();this.justification===_i.CENTER?s-=r/2:this.justification===_i.RIGHT&&(s-=r);const o=n.getYForLine(this.line+-3);this.renderText(e,s,o);const a=this.getHeight();this.superscript&&this.superscript.renderText(e,s+this.width+2,o-a/2.2),this.subscript&&this.subscript.renderText(e,s+this.width+2,o+a/2.2-1)}}Qc.Justification=_i;class uA extends rr{static get CATEGORY(){return"StaveText"}constructor(e,n,i={}){var s,r,o;super(),this.setText(e),this.setXShift((s=i.shiftX)!==null&&s!==void 0?s:0),this.setYShift((r=i.shiftY)!==null&&r!==void 0?r:0),this.position=n,this.justification=(o=i.justification)!==null&&o!==void 0?o:Qc.Justification.CENTER}draw(){const e=this.checkStave(),n=e.checkContext();this.setRendered();let i,s;switch(this.position){case rt.LEFT:case rt.RIGHT:s=(e.getYForLine(0)+e.getBottomLineY())/2,this.position===rt.LEFT?i=e.getX()-this.width-24:i=e.getX()+e.getWidth()+24;break;case rt.ABOVE:case rt.BELOW:i=e.getX(),this.justification===_i.CENTER?i+=e.getWidth()/2-this.width/2:this.justification===_i.RIGHT&&(i+=e.getWidth()-this.width),this.position===rt.ABOVE?s=e.getYForTopText(2):s=e.getYForBottomText(2);break;default:throw new re("InvalidPosition","Value Must be in Modifier.Position.")}this.renderText(n,i,s+4)}}var xr;(function(t){t[t.NONE=1]="NONE",t[t.BEGIN=2]="BEGIN",t[t.MID=3]="MID",t[t.END=4]="END",t[t.BEGIN_END=5]="BEGIN_END"})(xr||(xr={}));class dA extends rr{static get CATEGORY(){return"Volta"}static get type(){return xr}constructor(e,n,i,s){super(),this.type=e,this.x=i,this.yShift=s,this.text=n}draw(){const e=this.checkStave(),n=e.getModifierXShift(this.getPosition()),i=e.checkContext();this.setRendered();let s=e.getWidth()-n;const r=e.getYForTopText(e.getNumLines())+this.yShift,o=1.5*e.getSpacingBetweenLines();switch(this.type){case xr.BEGIN:i.fillRect(this.x+n,r,1,o);break;case xr.END:s-=5,i.fillRect(this.x+n+s,r,1,o);break;case xr.BEGIN_END:s-=3,i.fillRect(this.x+n,r,1,o),i.fillRect(this.x+n+s,r,1,o);break}(this.type===xr.BEGIN||this.type===xr.BEGIN_END)&&this.renderText(i,n+5,r-this.yShift+15),i.fillRect(this.x+n,r,s,1)}}const _B=t=>{t.split("/").forEach(n=>{if(/^[0-9+\-()]+$/.test(n)===!1)throw new re("BadTimeSignature",`Invalid time spec: ${t}. Must contain valid signatures.`)})};class Qs extends rr{static get CATEGORY(){return"TimeSignature"}constructor(e="4/4",n=15,i=!0){super(),this.timeSpec="4/4",this.line=0,this.isNumeric=!0,this.topStartX=0,this.botStartX=0,this.lineShift=0,this.topText=new Ye,this.botText=new Ye,this.validateArgs=i;const s=n;this.topLine=1,this.bottomLine=3,this.setPosition(rt.BEGIN),this.setTimeSig(e),this.setPadding(s)}static getTimeSigCode(e,n=!1){let i=M.null;switch(e){case"C":i=M.timeSigCommon;break;case"C|":i=M.timeSigCutCommon;break;case"+":i=n?M.timeSigPlusSmall:M.timeSigPlus;break;case"-":i=M.timeSigMinus;break;case"(":i=n?M.timeSigParensLeftSmall:M.timeSigParensLeft;break;case")":i=n?M.timeSigParensRightSmall:M.timeSigParensRight;break;default:i=String.fromCodePoint(57472+Number(e[0]));break}return i}makeTimeSignatureGlyph(e,n){let i="",s=0,r=0;for(let a=0;a<e.length;++a){const c=Qs.getTimeSigCode(e[a],n.length>0);i+=c}this.topText.setText(i),s=this.topText.getWidth(),r=this.topText.getHeight();let o=0;i="";for(let a=0;a<n.length;++a){const c=Qs.getTimeSigCode(n[a],!0);i+=c}this.botText.setText(i),o=this.botText.getWidth(),r=Math.max(r,this.botText.getHeight()),this.lineShift=r>30?.5:0,this.width=Math.max(s,o),this.topStartX=(this.width-s)/2,this.botStartX=(this.width-o)/2}setTimeSig(e){var n,i;if(this.timeSpec=e,e==="C"||e==="C|"){const s=Qs.getTimeSigCode(e);this.line=2,this.text=s,this.isNumeric=!1}else{this.validateArgs&&_B(e);const s=e.split("/");this.line=0,this.isNumeric=!0,this.makeTimeSignatureGlyph((n=s[0])!==null&&n!==void 0?n:"",(i=s[1])!==null&&i!==void 0?i:"")}return this}getTimeSpec(){return this.timeSpec}getLine(){return this.line}setLine(e){this.line=e}getIsNumeric(){return this.isNumeric}setIsNumeric(e){this.isNumeric=e}draw(){const e=this.checkStave(),n=e.checkContext();this.setRendered(),n.openGroup("timesignature",this.getAttribute("id")),this.drawAt(n,e,this.x),n.closeGroup()}drawAt(e,n,i){if(this.setRendered(),this.isNumeric){let s=i+this.topStartX,r=0;this.botText.getText().length>0?r=n.getYForLine(this.topLine-this.lineShift):r=(n.getYForLine(this.topLine)+n.getYForLine(this.bottomLine))/2,this.topText.renderText(e,s,r),s=i+this.botStartX,r=n.getYForLine(this.bottomLine+this.lineShift),this.botText.renderText(e,s,r)}else this.renderText(e,i-this.x,n.getYForLine(this.line))}}const $B={[As.CATEGORY]:0,[Ci.CATEGORY]:1,[Pc.CATEGORY]:2,[Qs.CATEGORY]:3},e5={[Qs.CATEGORY]:0,[Pc.CATEGORY]:1,[As.CATEGORY]:2,[Ci.CATEGORY]:3};class Dr extends Ye{static get CATEGORY(){return"Stave"}static get defaultPadding(){return Ce.get("Stave.padding")+Ce.get("Stave.endPaddingMax")}static get rightPadding(){return Ce.get("Stave.endPaddingMax")}constructor(e,n,i,s){super(),this.x=e,this.y=n,this.width=i,this.formatted=!1,this.startX=e+5,this.endX=e+i,this.modifiers=[],this.measure=0,this.clef="treble",this.endClef=void 0,this.options=Object.assign({verticalBarWidth:10,numLines:5,leftBar:!0,rightBar:!0,spacingBetweenLinesPx:oe.STAVE_LINE_DISTANCE,spaceAboveStaffLn:4,spaceBelowStaffLn:4,topTextPosition:1,bottomTextPosition:4,lineConfig:[]},s),this.bounds={x:this.x,y:this.y,w:this.width,h:0},this.defaultLedgerLineStyle={strokeStyle:"#444",lineWidth:2},this.resetLines(),this.addModifier(new As(this.options.leftBar?yt.SINGLE:yt.NONE)),this.addEndModifier(new As(this.options.rightBar?yt.SINGLE:yt.NONE))}setDefaultLedgerLineStyle(e){this.defaultLedgerLineStyle=e}getDefaultLedgerLineStyle(){return Object.assign(Object.assign({},this.getStyle()),this.defaultLedgerLineStyle)}space(e){return this.options.spacingBetweenLinesPx*e}resetLines(){this.options.lineConfig=[];for(let e=0;e<this.options.numLines;e++)this.options.lineConfig.push({visible:!0});this.height=(this.options.numLines+this.options.spaceAboveStaffLn)*this.options.spacingBetweenLinesPx,this.options.bottomTextPosition=this.options.numLines}setNoteStartX(e){return this.formatted||this.format(),this.startX=e,this}getNoteStartX(){return this.formatted||this.format(),this.startX}getNoteEndX(){return this.formatted||this.format(),this.endX}getTieStartX(){return this.startX}getTieEndX(){return this.endX}getNumLines(){return this.options.numLines}setNumLines(e){return this.options.numLines=e,this.resetLines(),this}getTopLineTopY(){return this.getYForLine(0)}getBottomLineBottomY(){var e;return this.getYForLine(this.getNumLines()-1)+((e=this.getStyle().lineWidth)!==null&&e!==void 0?e:1)}setX(e){const n=e-this.x;this.formatted=!1,this.x=e,this.startX+=n,this.endX+=n;for(let i=0;i<this.modifiers.length;i++){const s=this.modifiers[i];s.setX(s.getX()+n)}return this}setWidth(e){return this.formatted=!1,this.width=e,this.endX=this.x+e,this}setMeasure(e){return this.measure=e,this}getMeasure(){return this.measure}getModifierXShift(e=0){if(typeof e!="number")throw new re("InvalidIndex","Must be of number type");if(this.formatted||this.format(),this.getModifiers(rt.BEGIN).length===1||this.modifiers[e].getPosition()===rt.RIGHT)return 0;let n=this.startX-this.x;const i=this.modifiers[0];return i.getType()===yt.REPEAT_BEGIN&&n>i.getWidth()&&(n-=i.getWidth()),n}setRepetitionType(e,n=0){return this.modifiers.push(new un(e,this.x,n)),this}setVoltaType(e,n,i){return this.modifiers.push(new dA(e,n,this.x,i)),this}setSection(e,n,i=0,s,r=!0){const o=new GB(e).setYShift(n).setXShift(i).setDrawRect(r);return s&&o.setFontSize(s),this.addModifier(o),this}setTempo(e,n){return this.modifiers.push(new lA(e,this.x,n)),this}setStaveText(e,n,i={}){return this.modifiers.push(new uA(e,n,i)),this}getSpacingBetweenLines(){return this.options.spacingBetweenLinesPx}getBoundingBox(){return new tr(this.x,this.y,this.width,this.getBottomY()-this.y)}getBottomY(){const e=this.options,n=e.spacingBetweenLinesPx;return this.getYForLine(e.numLines)+e.spaceBelowStaffLn*n}getBottomLineY(){return this.getYForLine(this.options.numLines)}getYForLine(e){const n=this.options,i=n.spacingBetweenLinesPx,s=n.spaceAboveStaffLn;return this.y+e*i+s*i}getLineForY(e){const n=this.options,i=n.spacingBetweenLinesPx,s=n.spaceAboveStaffLn;return(e-this.y)/i-s}getYForTopText(e=0){return this.getYForLine(-e-this.options.topTextPosition)}getYForBottomText(e=0){return this.getYForLine(this.options.bottomTextPosition+e)}getYForNote(e){const n=this.options,i=n.spacingBetweenLinesPx,s=n.spaceAboveStaffLn;return this.y+s*i+5*i-e*i}getYForGlyphs(){return this.getYForLine(3)}addModifier(e,n){return n!==void 0&&e.setPosition(n),e.setStave(this),this.formatted=!1,this.modifiers.push(e),this}addEndModifier(e){return this.addModifier(e,rt.END),this}setBegBarType(e){const{SINGLE:n,REPEAT_BEGIN:i,NONE:s}=yt;return(e===n||e===i||e===s)&&(this.modifiers[0].setType(e),this.formatted=!1),this}setEndBarType(e){return e!==yt.REPEAT_BEGIN&&(this.modifiers[1].setType(e),this.formatted=!1),this}setClef(e,n,i,s){s===void 0&&(s=rt.BEGIN),s===rt.END?this.endClef=e:this.clef=e;const r=this.getModifiers(s,Ci.CATEGORY);return r.length===0?this.addClef(e,n,i,s):r[0].setType(e,n,i),this}getClef(){return this.clef}setEndClef(e,n,i){return this.setClef(e,n,i,rt.END),this}getEndClef(){return this.endClef}setKeySignature(e,n,i){i===void 0&&(i=rt.BEGIN);const s=this.getModifiers(i,Pc.CATEGORY);return s.length===0?this.addKeySignature(e,n,i):s[0].setKeySig(e,n),this}setEndKeySignature(e,n){return this.setKeySignature(e,n,rt.END),this}setTimeSignature(e,n,i){i===void 0&&(i=rt.BEGIN);const s=this.getModifiers(i,Qs.CATEGORY);return s.length===0?this.addTimeSignature(e,n,i):s[0].setTimeSig(e),this}setEndTimeSignature(e,n){return this.setTimeSignature(e,n,rt.END),this}addKeySignature(e,n,i){return i===void 0&&(i=rt.BEGIN),this.addModifier(new Pc(e,n).setPosition(i),i),this}addClef(e,n,i,s){return s===void 0||s===rt.BEGIN?this.clef=e:s===rt.END&&(this.endClef=e),this.addModifier(new Ci(e,n,i),s),this}addEndClef(e,n,i){return this.addClef(e,n,i,rt.END),this}addTimeSignature(e,n,i){return this.addModifier(new Qs(e,n),i),this}addEndTimeSignature(e,n){return this.addTimeSignature(e,n,rt.END),this}addTrebleGlyph(){return this.addClef("treble"),this}getModifiers(e,n){const i=e===void 0,s=n===void 0;return i&&s?this.modifiers:i?this.modifiers.filter(r=>n===r.getCategory()):s?this.modifiers.filter(r=>e===r.getPosition()):this.modifiers.filter(r=>e===r.getPosition()&&n===r.getCategory())}sortByCategory(e,n){for(let i=e.length-1;i>=0;i--)for(let s=0;s<i;s++)if(n[e[s].getCategory()]>n[e[s+1].getCategory()]){const r=e[s];e[s]=e[s+1],e[s+1]=r}}format(){var e,n,i,s;const r=this.modifiers[0],o=this.modifiers[1],a=this.getModifiers(rt.BEGIN),c=this.getModifiers(rt.END);this.sortByCategory(a,$B),this.sortByCategory(c,e5),a.length>1&&r.getType()===yt.REPEAT_BEGIN&&(a.push(a.splice(0,1)[0]),a.splice(0,0,new As(yt.SINGLE))),c.indexOf(o)>0&&c.splice(0,0,new As(yt.NONE));let l,u,d,h=0,f=this.x;for(let b=0;b<a.length;b++)d=a[b],u=d.getPadding(b+h),l=d.getWidth(),f+=u,d.setX(f),f+=l,u+l===0&&h--;this.startX=f,f=this.x+this.width;const p={left:0,right:0,paddingRight:0,paddingLeft:0};let m=0;for(let b=0;b<c.length;b++){d=c[b],m=eA(d)?b:m,p.right=0,p.left=0,p.paddingRight=0,p.paddingLeft=0;const E=d.getLayoutMetrics();E?(b!==0&&(p.right=(e=E.xMax)!==null&&e!==void 0?e:0,p.paddingRight=(n=E.paddingRight)!==null&&n!==void 0?n:0),p.left=-((i=E.xMin)!==null&&i!==void 0?i:0),p.paddingLeft=(s=E.paddingLeft)!==null&&s!==void 0?s:0,b===c.length-1&&(p.paddingLeft=0)):(p.paddingRight=d.getPadding(b-m),b!==0&&(p.right=d.getWidth()),b===0&&(p.left=d.getWidth())),f-=p.paddingRight,f-=p.right,d.setX(f),f-=p.left,f-=p.paddingLeft}this.endX=c.length===1?this.x+this.width:f,this.formatted=!0}draw(){var e;const n=this.checkContext();this.setRendered(),n.openGroup("stave",this.getAttribute("id")),this.formatted||this.format();const i=this.options.numLines,s=this.width,r=this.x;let o;const c=((e=this.getStyle().lineWidth)!==null&&e!==void 0?e:1)%2===0?0:.5;for(let l=0;l<i;l++)o=this.getYForLine(l),this.options.lineConfig[l].visible&&(n.beginPath(),n.moveTo(r,o+c),n.lineTo(r+s,o+c),n.stroke());n.closeGroup();for(let l=0;l<this.modifiers.length;l++){const u=this.modifiers[l];u.setContext(n),u.setStave(this),u.drawWithStyle()}if(this.measure>0){n.setFont(this.fontInfo);const l=n.measureText(""+this.measure).width;o=this.getYForTopText(0)+3,n.fillText(""+this.measure,this.x-l/2,o)}}getVerticalBarWidth(){return this.options.verticalBarWidth}getConfigForLines(){return this.options.lineConfig}setConfigForLine(e,n){if(e>=this.options.numLines||e<0)throw new re("StaveConfigError","The line number must be within the range of the number of lines in the Stave.");if(n.visible===void 0)throw new re("StaveConfigError","The line configuration object is missing the 'visible' property.");if(typeof n.visible!="boolean")throw new re("StaveConfigError","The line configuration objects 'visible' property must be true or false.");return this.options.lineConfig[e]=n,this}setConfigForLines(e){if(e.length!==this.options.numLines)throw new re("StaveConfigError","The length of the lines configuration array must match the number of lines in the Stave");for(const n in e)e[n].visible===void 0&&(e[n]=this.options.lineConfig[n]),this.options.lineConfig[n]=Object.assign(Object.assign({},this.options.lineConfig[n]),e[n]);return this.options.lineConfig=e,this}static formatBegModifiers(e){const n=s=>{let r=0;e.forEach(a=>{const c=a.getModifiers(rt.BEGIN,s);c.length>0&&c[0].getX()>r&&(r=c[0].getX())});let o=0;e.forEach(a=>{o=0,a.getModifiers(rt.BEGIN,s).forEach(d=>{r-d.getX()>o&&(o=r-d.getX())});const l=a.getModifiers(rt.BEGIN);let u=!1;l.forEach(d=>{d.getCategory()===s&&(u=!0),u&&o>0&&d.setX(d.getX()+o)}),a.setNoteStartX(a.getNoteStartX()+o)})};e.forEach(s=>{s.formatted||s.format()}),n("Clef"),n("KeySignature"),n("TimeSignature");let i=0;e.forEach(s=>{s.getNoteStartX()>i&&(i=s.getNoteStartX())}),e.forEach(s=>{s.setNoteStartX(i)}),i=0,e.forEach(s=>{s.getModifiers(rt.BEGIN,"Barline").forEach(o=>{o.getType()===yt.REPEAT_BEGIN&&o.getX()>i&&(i=o.getX())})}),e.forEach(s=>{s.getModifiers(rt.BEGIN,"Barline").forEach(o=>{o.getType()===yt.REPEAT_BEGIN&&o.setX(i)})})}}function P1(t,e,n,i,s){if(e!==ot.type.BOLD_DOUBLE_LEFT&&e!==ot.type.BOLD_DOUBLE_RIGHT)throw new re("InvalidConnector","A REPEAT_BEGIN or REPEAT_END type must be provided.");let r=3,o=3.5;const a=2;e===ot.type.BOLD_DOUBLE_RIGHT&&(r=-5,o=3),t.fillRect(n+r,i,1,s-i),t.fillRect(n-a,i,o,s-i)}class ot extends Ye{static get CATEGORY(){return"StaveConnector"}constructor(e,n){super(),this.thickness=oe.STAVE_LINE_THICKNESS,this.topStave=e,this.bottomStave=n,this.type=ot.type.DOUBLE,this.xShift=0,this.texts=[]}setType(e){const n=typeof e=="string"?ot.typeString[e]:e;return Object.values(ot.type).includes(n)&&(this.type=n),this}getType(){return this.type}setText(e,n={}){var i,s;const r=new Ye("StaveConnector.text");return r.setText(e),r.setXShift((i=n.shiftX)!==null&&i!==void 0?i:0),r.setYShift((s=n.shiftY)!==null&&s!==void 0?s:0),this.texts.push(r),this}draw(){const e=this.checkContext();this.setRendered();let n=this.topStave.getYForLine(0),i=this.bottomStave.getYForLine(this.bottomStave.getNumLines()-1)+this.thickness,s=3,r=this.topStave.getX();(this.type===ot.type.SINGLE_RIGHT||this.type===ot.type.BOLD_DOUBLE_RIGHT||this.type===ot.type.THIN_DOUBLE)&&(r=this.topStave.getX()+this.topStave.getWidth());let a=i-n;const c=new Ye;switch(this.type){case ot.type.SINGLE:s=1;break;case ot.type.SINGLE_LEFT:s=1;break;case ot.type.SINGLE_RIGHT:s=1;break;case ot.type.DOUBLE:r-=5,n-=this.thickness,a+=.5;break;case ot.type.BRACE:{s=12;const l=this.topStave.getX()-2+this.xShift,u=n,d=l,h=i,f=l-s,p=u+a/2,m=f-.9*s,b=u+.2*a,E=l+1.1*s,x=p-.135*a,S=E,v=p+.135*a,T=m,w=h-.2*a,D=f-s,A=w,y=l+.4*s,O=p+.135*a,L=y,P=p-.135*a,U=D,X=b;e.beginPath(),e.moveTo(l,u),e.bezierCurveTo(m,b,E,x,f,p),e.bezierCurveTo(S,v,T,w,d,h),e.bezierCurveTo(D,A,y,O,f,p),e.bezierCurveTo(L,P,U,X,l,u),e.fill(),e.stroke();break}case ot.type.BRACKET:n-=6,i+=6,a=i-n,c.setText(M.bracketTop),c.renderText(e,r-5,n),c.setText(M.bracketBottom),c.renderText(e,r-5,i),r-=5;break;case ot.type.BOLD_DOUBLE_LEFT:P1(e,this.type,r+this.xShift,n,i-this.thickness);break;case ot.type.BOLD_DOUBLE_RIGHT:P1(e,this.type,r,n,i-this.thickness);break;case ot.type.THIN_DOUBLE:s=1,a-=this.thickness;break;case ot.type.NONE:break;default:throw new re("InvalidType",`The provided StaveConnector.type (${this.type}) is invalid.`)}this.type!==ot.type.BRACE&&this.type!==ot.type.BOLD_DOUBLE_LEFT&&this.type!==ot.type.BOLD_DOUBLE_RIGHT&&this.type!==ot.type.NONE&&e.fillRect(r,n,s,a),this.type===ot.type.THIN_DOUBLE&&e.fillRect(r-3,n,s,a);for(let l=0;l<this.texts.length;l++){const u=this.texts[l],d=this.topStave.getX()-u.getWidth()-24,h=(this.topStave.getYForLine(0)+this.bottomStave.getBottomLineY())/2;u.renderText(e,d,h+4)}}}ot.type={SINGLE_RIGHT:0,SINGLE_LEFT:1,SINGLE:1,DOUBLE:2,BRACE:3,BRACKET:4,BOLD_DOUBLE_LEFT:5,BOLD_DOUBLE_RIGHT:6,THIN_DOUBLE:7,NONE:8};ot.typeString={singleRight:ot.type.SINGLE_RIGHT,singleLeft:ot.type.SINGLE_LEFT,single:ot.type.SINGLE,double:ot.type.DOUBLE,brace:ot.type.BRACE,bracket:ot.type.BRACKET,boldDoubleLeft:ot.type.BOLD_DOUBLE_LEFT,boldDoubleRight:ot.type.BOLD_DOUBLE_RIGHT,thinDouble:ot.type.THIN_DOUBLE,none:ot.type.NONE};function t5(t,e,n){if(t.length===0)return{map:{},array:[],list:[],resolutionMultiplier:0};const i={},s=[],r=[],o=Kn.getResolutionMultiplier(t);return t.forEach((a,c)=>{const l=new at(0,o);a.getTickables().forEach(u=>{const d=l.numerator;if(!i[d]){const h=e({tickID:d});r.push(h),i[d]=h,s.push(d)}n(u,i[d],c),l.add(u.getTicks())})}),{map:i,array:r,list:s.sort((a,c)=>a-c),resolutionMultiplier:o}}function n5(...t){Kn.DEBUG&&pn("VexFlow.Formatter",t)}function I1(t,e,n,i){let s=e;for(let r=n+1;r<t.length;r++){const o=t[r];if(nA(o)&&!o.isRest()&&!o.shouldIgnoreTicks()){s=o.getLineForRest();break}}if(i&&e!==s){const r=Math.max(e,s),o=Math.min(e,s);s=IE(r,o)}return s}class Kn{static SimpleFormat(e,n=0,{paddingBetween:i=10}={}){e.reduce((s,r)=>{r.addToModifierContext(new Oc);const o=new ou().addTickable(r).preFormat(),a=o.getMetrics();return o.setX(s+a.totalLeftPx),s+o.getWidth()+a.totalRightPx+i},n)}static plotDebugging(e,n,i,s,r,o){var a,c;o=Object.assign({stavePadding:Ce.get("Stave.padding")},o);const l=i+o.stavePadding,u=n.contextGaps;function d(h,f,p){e.beginPath(),e.setStrokeStyle(p),e.setFillStyle(p),e.setLineWidth(1),e.fillRect(h,s,Math.max(f-h,0),r-s)}e.save(),e.setFont(Ce.get("fontFamily"),8),u.gaps.forEach(h=>{d(l+h.x1,l+h.x2,"rgba(100,200,100,0.4)"),e.setFillStyle("green"),e.fillText(Math.round(h.x2-h.x1).toString(),l+h.x1,r+12)}),e.setFillStyle("red"),e.fillText(`Loss: ${((a=n.totalCost)!==null&&a!==void 0?a:0).toFixed(2)} Shift: ${((c=n.totalShift)!==null&&c!==void 0?c:0).toFixed(2)} Gap: ${u.total.toFixed(2)}`,l-20,r+27),e.restore()}static FormatAndDraw(e,n,i,s){let r={autoBeam:!1,alignRests:!1};typeof s=="object"?r=Object.assign(Object.assign({},r),s):typeof s=="boolean"&&(r.autoBeam=s);const o=new Ts(oe.TIME4_4).setMode(Ts.Mode.SOFT).addTickables(i),a=r.autoBeam?wo.applyAndGetBeams(o):[];return new Kn().joinVoices([o]).formatToStave([o],n,{alignRests:r.alignRests,stave:n}),o.setContext(e).setStave(n).drawWithStyle(),a.forEach(c=>c.setContext(e).drawWithStyle()),o.getBoundingBox()}static FormatAndDrawTab(e,n,i,s,r,o,a){let c={autoBeam:o,alignRests:!1};typeof a=="object"?c=Object.assign(Object.assign({},c),a):typeof a=="boolean"&&(c.autoBeam=a);const l=new Ts(oe.TIME4_4).setMode(Ts.Mode.SOFT).addTickables(r),u=new Ts(oe.TIME4_4).setMode(Ts.Mode.SOFT).addTickables(s),d=c.autoBeam?wo.applyAndGetBeams(l):[];new Kn().joinVoices([l]).joinVoices([u]).formatToStave([l,u],i,{alignRests:c.alignRests}),l.draw(e,i),u.draw(e,n),d.forEach(h=>h.setContext(e).drawWithStyle()),new ot(i,n).setContext(e).drawWithStyle()}static AlignRestsToNotes(e,n,i){e.forEach((s,r)=>{if(nr(s)&&s.isRest()){if(s.getTuplet()&&!i||s.getLineForRest()!==3)return;if(n||s.getBeam()){const a=s.getKeyProps()[0];if(r===0)a.line=I1(e,a.line,r,!1);else if(r>0&&r<e.length){const c=e[r-1];if(nr(c))if(c.isRest())a.line=c.getKeyProps()[0].line;else{const l=c.getLineForRest();a.line=I1(e,l,r,!0)}}s.setKeyLine(0,a.line)}}})}constructor(e){this.formatterOptions=Object.assign({globalSoftmax:!1,softmaxFactor:oe.SOFTMAX_FACTOR,maxIterations:5},e),this.justifyWidth=0,this.totalCost=0,this.totalShift=0,this.durationStats={},this.minTotalWidth=0,this.hasMinTotalWidth=!1,this.tickContexts={map:{},array:[],list:[],resolutionMultiplier:0},this.modifierContexts=[],this.contextGaps={total:0,gaps:[]},this.voices=[],this.lossHistory=[]}alignRests(e,n){if(!e||!e.length)throw new re("BadArgument","No voices to format rests");e.forEach(i=>Kn.AlignRestsToNotes(i.getTickables(),n))}preCalculateMinTotalWidth(e){const n=Ce.get("Stave.unalignedNotePadding");let i=0,s=0,r=0;const o=[],a=[];if(this.hasMinTotalWidth)return this.minTotalWidth;if(!e)throw new re("BadArgument","'voices' required to run preCalculateMinTotalWidth");this.createTickContexts(e);const{list:c,map:l}=this.tickContexts;this.minTotalWidth=0,c.forEach(x=>{const S=l[x];S.preFormat(),S.getTickables().length<e.length&&(i+=1),S.getTickables().forEach(T=>{s+=T.getMetrics().width,r+=T.getTicks().value(),o.push(T.getMetrics().width),a.push(T.getTicks().value())});const v=S.getWidth();this.minTotalWidth+=v}),this.hasMinTotalWidth=!0;const u=s>0?s/o.length:1/o.length,d=ql(o.map(x=>Math.pow(x-u,2))),h=Math.pow(d/o.length,.5)/u,f=r/a.length,p=ql(a.map(x=>Math.pow(x-f,2))),m=Math.pow(p/a.length,.5)/f,b=Math.max(m,h)*c.length*n,E=n*i;return this.minTotalWidth+Math.max(E,b)}getMinTotalWidth(){if(!this.hasMinTotalWidth)throw new re("NoMinTotalWidth","Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'");return this.minTotalWidth}static getResolutionMultiplier(e){if(!e||!e.length)throw new re("BadArgument","No voices to format");const n=e[0].getTotalTicks();return e.reduce((s,r)=>{if(!r.getTotalTicks().equals(n))throw new re("TickMismatch","Voices should have same total note duration in ticks.");if(r.getMode()===Ts.Mode.STRICT&&!r.isComplete())throw new re("IncompleteVoice","Voice does not have enough notes.");return Math.max(s,at.LCM(s,r.getResolutionMultiplier()))},1)}createModifierContexts(e){if(e.length===0)return;const n=Kn.getResolutionMultiplier(e),i=new Map,s=[];e.forEach(r=>{const o=new at(0,n);r.getTickables().forEach(a=>{const c=o.numerator;let l=i.get(a.getStave());if(l||(i.set(a.getStave(),{}),l=i.get(a.getStave())),!(l&&l[c])){const u=new Oc;s.push(u),l[c]=u}a.addToModifierContext(l[c]),o.add(a.getTicks())})}),this.modifierContexts.push({map:i,array:s,resolutionMultiplier:n})}createTickContexts(e){const i=t5(e,r=>new ou(r),(r,o,a)=>o.addTickable(r,a));this.tickContexts=i;const s=this.tickContexts.array;return s.forEach(r=>{r.tContexts=s}),i}getTickContexts(){return this.tickContexts}preFormat(e=0,n,i,s){const r=this.tickContexts;if(!r)throw new re("NoTickContexts","preFormat requires TickContexts");const{list:o,map:a}=r;this.lossHistory=[],i&&s&&i.forEach(q=>q.setStave(s).preFormat());let c=0,l=0;this.minTotalWidth=0;let u=0;o.forEach(q=>{const ee=a[q];ee.preFormat();const j=ee.getWidth();this.minTotalWidth+=j;const he=ee.getMaxTicks().value();u+=he;const le=ee.getMetrics();c=c+l+le.totalLeftPx,ee.setX(c),l=j-le.totalLeftPx});const{globalSoftmax:d,softmaxFactor:h,maxIterations:f}=this.formatterOptions,p=q=>Math.pow(h,a[q].getMaxTicks().value()/u),m=ql(o.map(p));if(this.minTotalWidth=c+l,this.hasMinTotalWidth=!0,e<=0)return this.evaluate();const b=a[o[0]],E=a[o[o.length-1]];function x(q){return o.map((j,he)=>{const le=a[j],Le=le.getTickablesByVoice();let Ae;if(he>0){const De=a[o[he-1]];for(let Me=he-1;Me>=0;Me--){const z=a[o[Me]].getTickablesByVoice(),me=[];if(Object.keys(Le).forEach(xe=>{z[xe]&&me.push(xe)}),me.length>0){let xe=0,qe=1/0,ut=0;return me.forEach(F=>{const V=z[F].getTicks().value();V>xe&&(Ae=z[F],xe=V);const H=Le[F],$=H.getX()-(H.getMetrics().modLeftPx+H.getMetrics().leftDisplacedHeadPx),ne=z[F].getMetrics(),ae=z[F].getX()+ne.notePx+ne.modRightPx+ne.rightDisplacedHeadPx;qe=Math.min(qe,$-ae)}),qe=Math.min(qe,le.getX()-(De.getX()+q*.05)),d?ut=Math.pow(h,xe/u)/m*q:typeof Ae<"u"&&(ut=Ae.getVoice().softmax(xe)*q),{expectedDistance:ut,maxNegativeShiftPx:qe,fromTickable:Ae}}}}return{expectedDistance:0,fromTickablePx:0,maxNegativeShiftPx:0}})}function S(q){const ee=v/2;let j=0;return o.forEach((he,le)=>{const Le=a[he];if(le>0){const Ae=Le.getX(),De=q[le],Me=rn(De.fromTickable).getX()+De.expectedDistance-(Ae+j);let te=0;Me>0?j+=Me:Me<0&&(te=Math.min(De.maxNegativeShiftPx,Math.abs(Me)),j+=-te),Le.setX(Ae+j)}Le.getCenterAlignedTickables().forEach(Ae=>{Ae.setCenterXShift(ee-Le.getX())})}),E.getX()-b.getX()}const v=e-E.getMetrics().notePx-E.getMetrics().totalRightPx-b.getMetrics().totalLeftPx,T=Ce.get("Stave.endPaddingMin"),w=Ce.get("Stave.endPaddingMax"),D=Ce.get("Stave.padding");let A=v;const y=x(A);let O=S(y);if(o.length===1)return 0;const P=((q,ee)=>{let j=q/2;if(ee.length>1)for(let he=1;he<ee.length;++he)j=Math.min(ee[he].expectedDistance/2,j);return j})(A,y),U=q=>{let ee=0;const j=E&&E.getMaxTickable();if(j){const he=j.getVoice();if(he.getTicksUsed().value()>he.getTotalTicks().value())return w*2<P?P:w;const le=j.getWidth();ee=he.softmax(E.getMaxTicks().value())*q-(le+D)}return w*2<ee?ee:w};let X=U(A),K=X-(w-T);const Y=v-K;let _=f;for(;O>Y&&_>0||O+X<Y&&_>1;)A-=O-Y,X=U(A),K=X-(w-T),O=S(x(A)),_--;return this.justifyWidth=e,this.evaluate()}evaluate(){const e=this.tickContexts,n=this.justifyWidth;this.contextGaps={total:0,gaps:[]},e.list.forEach((o,a)=>{if(a===0)return;const c=e.list[a-1],l=e.map[c],u=e.map[o],d=l.getMetrics(),h=u.getMetrics(),f=l.getX()+d.notePx+d.totalRightPx,p=u.getX()-h.totalLeftPx,m=p-f;this.contextGaps.total+=m,this.contextGaps.gaps.push({x1:f,x2:p}),u.getFormatterMetrics().freedom.left=m,l.getFormatterMetrics().freedom.right=m}),this.durationStats={};const i=this.durationStats;function s(o,a){const c=i[o];c===void 0?i[o]={mean:a,count:1,total:a}:(c.count+=1,c.total+=a,c.mean=c.total/c.count)}this.voices.forEach(o=>{o.getTickables().forEach((a,c,l)=>{const u=a.getTicks().clone().simplify().toString(),d=a.getMetrics(),h=a.getFormatterMetrics(),f=a.getX()+d.notePx+d.modRightPx+d.rightDisplacedHeadPx;let p=0;if(c<l.length-1){const m=l[c+1],b=m.getMetrics();p=m.getX()-b.modLeftPx-b.leftDisplacedHeadPx-f,h.space.used=m.getX()-a.getX(),m.getFormatterMetrics().freedom.left=p}else p=n-f,h.space.used=n-a.getX();h.freedom.right=p,s(u,h.space.used)})});let r=0;return this.voices.forEach(o=>{o.getTickables().forEach(a=>{const c=a.getTicks().clone().simplify().toString(),l=a.getFormatterMetrics();l.space.mean=i[c].mean,l.duration=c,l.iterations+=1,l.space.deviation=l.space.used-l.space.mean,r+=Math.pow(l.space.deviation,2)})}),this.totalCost=Math.sqrt(r),this.lossHistory.push(this.totalCost),this.totalCost}tune(e){var n;const i=this.tickContexts;if(!i)return 0;const s=(n=e==null?void 0:e.alpha)!==null&&n!==void 0?n:.5;let r=0;return this.totalShift=0,i.list.forEach((o,a,c)=>{const l=i.map[o],u=a>0?i.map[c[a-1]]:void 0,d=a<c.length-1?i.map[c[a+1]]:void 0;l.move(r,u,d);const h=-l.getDeviationCost();h>0?r=-Math.min(l.getFormatterMetrics().freedom.right,Math.abs(h)):h<0&&(d?r=Math.min(d.getFormatterMetrics().freedom.right,Math.abs(h)):r=0),r*=s,this.totalShift+=r}),this.evaluate()}postFormat(){return this.modifierContexts.forEach(e=>{e.array.forEach(n=>n.postFormat())}),this.tickContexts.list.forEach(e=>{this.tickContexts.map[e].postFormat()}),this}joinVoices(e){return this.createModifierContexts(e),this.hasMinTotalWidth=!1,this}format(e,n,i){const s=Object.assign({alignRests:!1},i);this.voices=e;const r=this.formatterOptions.softmaxFactor;return r&&this.voices.forEach(o=>o.setSoftmaxFactor(r)),this.alignRests(e,s.alignRests),this.createTickContexts(e),this.preFormat(n,s.context,e,s.stave),s.stave&&this.postFormat(),this}formatToStave(e,n,i){const s=Object.assign({context:n.getContext()},i),r=n.getNoteEndX()-n.getNoteStartX()-Dr.defaultPadding;return n5("Formatting voices to width: ",r),this.format(e,r,s)}getTickContext(e){var n;return(n=this.tickContexts)===null||n===void 0?void 0:n.map[e]}}Kn.DEBUG=!1;const R1="Ghost note must have valid initialization data to identify duration.";class hA extends VE{static get CATEGORY(){return"GhostNote"}constructor(e){if(!e)throw new re("BadArguments",R1);let n;if(typeof e=="string")n={duration:e};else if(typeof e=="object")n=e;else throw new re("BadArguments",R1);super(n),this.setWidth(0)}isRest(){return!0}setStave(e){return super.setStave(e),this}addToModifierContext(e){return this}preFormat(){return this.preFormatted=!0,this}draw(){this.setRendered();for(let e=0;e<this.modifiers.length;++e){const n=this.modifiers[e];vB(n)&&(n.setContext(this.getContext()),n.drawWithStyle())}}}class jE extends mi{static get CATEGORY(){return"GlyphNote"}constructor(e,n,i){super(n),this.options=Object.assign({ignoreTicks:!1,line:2},i),this.ignoreTicks=this.options.ignoreTicks,this.setGlyph(e)}setGlyph(e){return this.text=e,this}preFormat(){return!this.preFormatted&&this.modifierContext&&this.modifierContext.preFormat(),this.preFormatted=!0,this}drawModifiers(){const e=this.checkContext();for(let n=0;n<this.modifiers.length;n++){const i=this.modifiers[n];i.setContext(e),i.drawWithStyle()}}draw(){const e=this.checkStave(),n=e.checkContext();this.setRendered(),n.openGroup("glyphNote",this.getAttribute("id")),this.x=this.isCenterAligned()?this.getAbsoluteX()-this.getWidth()/2:this.getAbsoluteX(),this.y=e.getYForLine(this.options.line),this.renderText(n,0,0),this.drawModifiers(),n.closeGroup()}}class Df extends Vi{static get CATEGORY(){return"GraceNote"}static get LEDGER_LINE_OFFSET(){return 2}constructor(e){super(Object.assign({strokePx:Df.LEDGER_LINE_OFFSET},e)),this.slash=e.slash||!1,this.slur=!0,this.buildNoteHeads(),this.width=3}getStemExtension(){if(this.stemExtensionOverride)return this.stemExtensionOverride;let e=super.getStemExtension();return e=ve.HEIGHT*this.getFontScale()-ve.HEIGHT+e,e}draw(){super.draw(),this.setRendered();const e=this.stem;if(this.slash&&e){const n=this.getFontScale();let i;const s=this.beam;if(s)s.postFormatted||s.postFormat(),i=this.calcBeamedNotesSlashBBox(8*n,8*n,{stem:6*n,beam:5*n});else{const o=this.getStemDirection(),a=this.getNoteHeadBounds(),c=this.noteHeads[0].getWidth(),l=o===ve.DOWN?this.getAbsoluteX():this.getAbsoluteX()+c,u=oe.STEM_HEIGHT*n/2,d=o===ve.DOWN?a.yBottom+u:a.yTop-u;o===ve.DOWN?i={x1:l-c,y1:d-c,x2:l+c,y2:d+c}:i={x1:l-c,y1:d+c,x2:l+c,y2:d-c}}const r=this.checkContext();r.setLineWidth(1*n),r.beginPath(),r.moveTo(i.x1,i.y1),r.lineTo(i.x2,i.y2),r.closePath(),r.stroke()}}calcBeamedNotesSlashBBox(e,n,i){const s=this.beam;if(!s)throw new re("NoBeam","Can't calculate without a beam.");const r=s.slope,a=s.notes[s.notes.length-1]===this?-1:1,c=Math.atan(r*a),l={dx:Math.cos(c)*n,dy:Math.sin(c)*n};e*=this.getStemDirection();const u=Math.atan((l.dy-e)/l.dx),d=Math.cos(u)*i.stem*a,h=Math.sin(u)*i.stem,f=Math.cos(u)*i.beam*a,p=Math.sin(u)*i.beam,m=this.getStemX(),b=s.notes[0].getStemX(),E=s.getBeamYToDraw()+(m-b)*r;return{x1:m-d,y1:E+e-h,x2:m+l.dx*a+f,y2:E+l.dy+p}}}class fA extends mi{static get CATEGORY(){return"KeySigNote"}constructor(e,n,i){super({duration:"b"}),this.keySignature=new Pc(e,n,i),this.ignoreTicks=!0}addToModifierContext(e){return this}preFormat(){return this.preFormatted=!0,this.keySignature.setStave(this.checkStave()),this.setWidth(this.keySignature.getWidth()),this}draw(){const e=this.checkStave().checkContext();this.setRendered(),this.keySignature.setX(this.getAbsoluteX()),this.keySignature.setContext(e),this.keySignature.drawWithStyle()}}class pA extends Ye{static get CATEGORY(){return"MultiMeasureRest"}constructor(e,n){var i;super(),this.xs={left:NaN,right:NaN},this.hasPaddingLeft=!1,this.hasPaddingRight=!1,this.hasLineThickness=!1,this.hasSymbolSpacing=!1;const s=(i=n.numberGlyphPoint)!==null&&i!==void 0?i:Ce.get("MultiMeasureRest.fontSize");this.fontInfo.size=s,this.numberOfMeasures=e,this.text="";const r=`${this.numberOfMeasures}`;for(const o of r)this.text+=String.fromCodePoint(57472+Number(o));this.hasPaddingLeft=typeof n.paddingLeft=="number",this.hasPaddingRight=typeof n.paddingRight=="number",this.hasLineThickness=typeof n.lineThickness=="number",this.hasSymbolSpacing=typeof n.symbolSpacing=="number",this.renderOptions=Object.assign({useSymbols:!1,showNumber:!0,numberLine:-.5,numberGlyphPoint:s,line:2,spacingBetweenLinesPx:oe.STAVE_LINE_DISTANCE,serifThickness:2,semibreveRestGlyphScale:Ce.get("fontSize"),paddingLeft:0,paddingRight:0,lineThickness:5,symbolSpacing:0},n)}getXs(){return this.xs}setStave(e){return this.stave=e,this}getStave(){return this.stave}checkStave(){return rn(this.stave,"NoStave","No stave attached to instance.")}drawLine(e,n,i,s){const r=this.renderOptions,o=e.getYForLine(r.line),a=(s-i)*.1;i+=a,s-=a;let c="";const l=new Ye;l.setText(c);const u=l.getWidth();if(!u)throw new re("Cannot drawLine if width is 0");for(let d=1;(d+2)*u+i<=s;d++)c+="";c+="",l.setText(c),l.renderText(n,i+(s-i)*.5-l.getWidth()*.5,o)}drawSymbols(e,n,i,s){const r=Math.floor(this.numberOfMeasures/4),o=this.numberOfMeasures%4,a=Math.floor(o/2),c=o%2,l=this.renderOptions,u=new Ye;let d="";for(let x=0;x<r;++x)d+=M.restLonga+" ";for(let x=0;x<a;++x)d+=M.restDoubleWhole+" ";u.setText(d);const h=new Ye;d="";for(let x=0;x<c;++x)d+=M.restWhole+" ";h.setText(d);const f=u.getWidth()+h.getWidth();let p=i+(s-i)*.5-f*.5;const m=l.line,b=e.getYForLine(m-1),E=e.getYForLine(m);u.renderText(n,p,E),p+=u.getWidth(),h.renderText(n,p,b),p+=h.getWidth()}draw(){const e=this.checkContext();this.setRendered();const n=this.checkStave();let i=n.getNoteStartX(),s=n.getNoteEndX();const r=n.getModifiers(rt.BEGIN);r.length===1&&eA(r[0])&&(i-=r[0].getWidth());const o=this.renderOptions;this.hasPaddingLeft&&(i=n.getX()+o.paddingLeft),this.hasPaddingRight&&(s=n.getX()+n.getWidth()-o.paddingRight),this.xs.left=i,this.xs.right=s,o.useSymbols?this.drawSymbols(n,e,i,s):this.drawLine(n,e,i,s),o.showNumber&&this.renderText(e,i+(s-i)*.5-this.width*.5,n.getYForLine(o.numberLine)-this.height*.5)}}function i5(...t){Jt.DEBUG&&pn("VexFlow.PedalMarking",t)}class Jt extends Ye{static get CATEGORY(){return"PedalMarking"}static createSustain(e){return new Jt(e)}static createSostenuto(e){const n=new Jt(e);return n.setType(Jt.type.MIXED),n.setCustomText("Sost. Ped."),n}static createUnaCorda(e){const n=new Jt(e);return n.setType(Jt.type.TEXT),n.setCustomText("una corda","tre corda"),n}constructor(e){super(),this.notes=e,this.type=Jt.type.TEXT,this.line=0,this.depressText=Jt.GLYPHS.pedalDepress,this.releaseText=Jt.GLYPHS.pedalRelease,this.renderOptions={bracketHeight:10,textMarginRight:6,bracketLineWidth:1,color:"black"}}setType(e){return e=typeof e=="string"?Jt.typeString[e]:e,e>=Jt.type.TEXT&&e<=Jt.type.MIXED&&(this.type=e),this}setCustomText(e,n){return this.depressText=e||"",this.releaseText=n||"",this.setFont(Ce.getFontInfo("PedalMarking.text")),this}setLine(e){return this.line=e,this}drawBracketed(){const e=this.checkContext();let n=!1,i,s,r=0;this.notes.forEach((o,a,c)=>{var l,u,d,h;n=!n;const f=o.getAbsoluteX(),p=o.checkStave().getYForBottomText(this.line+3);if(f<i)throw new re("InvalidConfiguration","The notes provided must be in order of ascending x positions");const m=c[a+1]===o,b=c[a-1]===o;let E=0;if(n)E=b?5:0,this.type===Jt.type.MIXED&&!b?(r=e.measureText(this.depressText).width,e.fillText(this.depressText,f,p),E=r+this.renderOptions.textMarginRight):(e.beginPath(),e.moveTo(f,p-this.renderOptions.bracketHeight),e.lineTo(f+E,p),e.stroke(),e.closePath());else{const x=o.getVoice().getTickables().indexOf(o),S=o.getVoice().getTickables().length,v=x+1<S?o.getVoice().getTickables()[x+1].getAbsoluteX():((u=(l=o.getStave())===null||l===void 0?void 0:l.getX())!==null&&u!==void 0?u:0)+((h=(d=o.getStave())===null||d===void 0?void 0:d.getWidth())!==null&&h!==void 0?h:0);e.beginPath(),e.moveTo(i,s),e.lineTo(m?f-5:v-5,p),e.lineTo(m?f:v-5,p-this.renderOptions.bracketHeight),e.stroke(),e.closePath()}i=f+E,s=p})}drawText(){const e=this.checkContext();let n=!1,i=0;this.notes.forEach(s=>{var r,o,a,c;n=!n;const l=s.checkStave(),u=s.getAbsoluteX(),d=l.getYForBottomText(this.line+3);if(n)i=e.measureText(this.depressText).width,e.fillText(this.depressText,u,d);else{const h=s.getVoice().getTickables().indexOf(s),f=s.getVoice().getTickables().length,p=h+1<f?s.getVoice().getTickables()[h+1].getAbsoluteX():((o=(r=s.getStave())===null||r===void 0?void 0:r.getX())!==null&&o!==void 0?o:0)+((c=(a=s.getStave())===null||a===void 0?void 0:a.getWidth())!==null&&c!==void 0?c:0);i=e.measureText(this.releaseText).width,e.fillText(this.releaseText,p-i,d)}})}draw(){const e=this.checkContext();this.setRendered(),e.setStrokeStyle(this.renderOptions.color),e.setFillStyle(this.renderOptions.color),e.setFont(this.font),i5("Rendering Pedal Marking"),this.type===Jt.type.BRACKET||this.type===Jt.type.MIXED?(e.setLineWidth(this.renderOptions.bracketLineWidth),this.drawBracketed()):this.type===Jt.type.TEXT&&this.drawText()}}Jt.DEBUG=!1;Jt.GLYPHS={pedalDepress:M.keyboardPedalPed,pedalRelease:M.keyboardPedalUp};Jt.type={TEXT:1,BRACKET:2,MIXED:3};Jt.typeString={text:Jt.type.TEXT,bracket:Jt.type.BRACKET,mixed:Jt.type.MIXED};const s5={1:M.repeat1Bar,2:M.repeat2Bars,4:M.repeat4Bars,slash:M.repeatBarSlash};class mA extends jE{static get CATEGORY(){return"RepeatNote"}constructor(e,n,i){const s=s5[e]||"";super(s,Object.assign({duration:"q",alignCenter:e!=="slash"},n),i)}}function L1(t,e,n,i,s,r,o){t.beginPath(),t.moveTo(e,n),t.lineTo(i,s),t.lineTo(r,o),t.lineTo(e,n),t.closePath(),t.fill()}class Qi extends Ye{static get CATEGORY(){return"StaveLine"}constructor(e){super(),this.setNotes(e),this.text="",this.renderOptions={paddingLeft:4,paddingRight:3,lineWidth:1,lineDash:void 0,roundedEnd:!0,color:void 0,drawStartArrow:!1,drawEndArrow:!1,arrowheadLength:10,arrowheadAngle:Math.PI/8,textPositionVertical:Qi.TextVerticalPosition.TOP,textJustification:Qi.TextJustification.CENTER}}setText(e){return this.text=e,this}setNotes(e){if(!e.firstNote&&!e.lastNote)throw new re("BadArguments","Notes needs to have either firstNote or lastNote set.");if(e.firstIndexes||(e.firstIndexes=[0]),e.lastIndexes||(e.lastIndexes=[0]),e.firstIndexes.length!==e.lastIndexes.length)throw new re("BadArguments","Connected notes must have same number of indexes.");return this.notes=e,this.firstNote=e.firstNote,this.firstIndexes=e.firstIndexes,this.lastNote=e.lastNote,this.lastIndexes=e.lastIndexes,this}applyLineStyle(){const e=this.checkContext(),n=this.renderOptions;n.lineDash&&e.setLineDash(n.lineDash),n.lineWidth&&e.setLineWidth(n.lineWidth),n.roundedEnd?e.setLineCap("round"):e.setLineCap("square")}drawArrowLine(e,n,i){const s=this.renderOptions.drawStartArrow&&this.renderOptions.drawEndArrow,r=n.x,o=n.y,a=i.x,c=i.y,l=Math.sqrt((a-r)*(a-r)+(c-o)*(c-o)),u=(l-this.renderOptions.arrowheadLength/3)/l;let d,h,f,p;this.renderOptions.drawEndArrow||s?(d=Math.round(r+(a-r)*u),h=Math.round(o+(c-o)*u)):(d=a,h=c),this.renderOptions.drawStartArrow||s?(f=r+(a-r)*(1-u),p=o+(c-o)*(1-u)):(f=r,p=o),this.renderOptions.color&&(e.setStrokeStyle(this.renderOptions.color),e.setFillStyle(this.renderOptions.color)),e.beginPath(),e.moveTo(f,p),e.lineTo(d,h),e.stroke(),e.closePath();const m=Math.atan2(c-o,a-r),b=Math.abs(this.renderOptions.arrowheadLength/Math.cos(this.renderOptions.arrowheadAngle));let E,x,S,v,T,w;(this.renderOptions.drawEndArrow||s)&&(E=m+Math.PI+this.renderOptions.arrowheadAngle,S=a+Math.cos(E)*b,v=c+Math.sin(E)*b,x=m+Math.PI-this.renderOptions.arrowheadAngle,T=a+Math.cos(x)*b,w=c+Math.sin(x)*b,L1(e,S,v,a,c,T,w)),(this.renderOptions.drawStartArrow||s)&&(E=m+this.renderOptions.arrowheadAngle,S=r+Math.cos(E)*b,v=o+Math.sin(E)*b,x=m-this.renderOptions.arrowheadAngle,T=r+Math.cos(x)*b,w=o+Math.sin(x)*b,L1(e,S,v,r,o,T,w))}draw(){const e=this.checkContext();this.setRendered();const n=this.firstNote,i=this.lastNote,s=this.renderOptions;this.applyLineStyle();let r={x:0,y:0},o={x:0,y:0};this.firstIndexes.forEach((f,p)=>{const m=this.lastIndexes[p];r=n.getModifierStartXY(2,f),o=i.getModifierStartXY(1,m);const b=r.y>o.y;r.x+=n.getMetrics().modRightPx+s.paddingLeft,o.x-=i.getMetrics().modLeftPx+s.paddingRight;const E=n.getGlyphWidth();n.getKeyProps()[f].displaced&&n.getStemDirection()===1&&(r.x+=E+s.paddingLeft),i.getKeyProps()[m].displaced&&i.getStemDirection()===-1&&(o.x-=E+s.paddingRight),r.y+=b?-3:1,o.y+=b?2:0,this.drawArrowLine(e,r,o)});const a=this.width,c=s.textJustification;let l=0;c===Qi.TextJustification.LEFT?l=r.x:c===Qi.TextJustification.CENTER?l=(o.x-r.x)/2+r.x-a/2:c===Qi.TextJustification.RIGHT&&(l=o.x-a);let u=0;const d=s.textPositionVertical;d===Qi.TextVerticalPosition.TOP?u=n.checkStave().getYForTopText():d===Qi.TextVerticalPosition.BOTTOM&&(u=n.checkStave().getYForBottomText(oe.TEXT_HEIGHT_OFFSET_HACK));const h=s.color;this.applyStyle(e,{fillStyle:h,strokeStyle:h}),this.renderText(e,l,u)}}Qi.TextVerticalPosition={TOP:1,BOTTOM:2};Qi.TextJustification=_i;class gA extends Ye{static get CATEGORY(){return"System"}constructor(e={}){super(),this.setOptions(e),this.partStaves=[],this.partStaveInfos=[],this.partVoices=[]}setOptions(e={}){if(!e.factory)throw new re("NoFactory","System.setOptions(options) requires a factory.");this.factory=e.factory,this.options=Object.assign(Object.assign({factory:this.factory,x:10,y:10,width:500,spaceBetweenStaves:12,autoWidth:!1,noJustification:!1,debugFormatter:!1,formatIterations:0,noPadding:!1},e),{details:Object.assign({alpha:.5},e.details),formatOptions:Object.assign({},e.formatOptions)}),this.options.noJustification===!1&&typeof e.width>"u"&&(this.options.autoWidth=!0)}getX(){return this.options.x}setX(e){return this.options.x=e,this.partStaves.forEach(n=>{n.setX(e)}),this}getY(){return this.options.y}setY(e){return this.options.y=e,this.partStaves.forEach(n=>{n.setY(e)}),this}getStaves(){return this.partStaves}getVoices(){return this.partVoices}setContext(e){return super.setContext(e),this.factory.setContext(e),this}addConnector(e="double"){return this.connector=this.factory.StaveConnector({topStave:this.partStaves[0],bottomStave:this.partStaves[this.partStaves.length-1],type:e}),this.connector}addStave(e){var n;const i=Object.assign({leftBar:!1},e.options),s=(n=e.stave)!==null&&n!==void 0?n:this.factory.Stave({x:this.options.x,y:this.options.y,width:this.options.width,options:i}),r=Object.assign(Object.assign({spaceAbove:0,spaceBelow:0,debugNoteMetrics:!1,noJustification:!1},e),{options:i}),o=this.getContext();return r.voices.forEach(a=>{a.setContext(o).setStave(s).getTickables().forEach(c=>c.setStave(s)),this.partVoices.push(a)}),this.partStaves.push(s),this.partStaveInfos.push(r),s}addVoices(e){const n=this.getContext();e.forEach(i=>{i.setContext(n),this.partVoices.push(i)})}format(){const e=this.options.details;let n=0;const i=new Kn(e);this.formatter=i;let s=this.options.y,r=0;const o=[];this.partStaves.forEach((a,c)=>{s=s+a.space(this.partStaveInfos[c].spaceAbove),a.setY(s),s=s+a.space(this.partStaveInfos[c].spaceBelow),s=s+a.space(this.options.spaceBetweenStaves),this.partStaveInfos[c].debugNoteMetrics&&(o.push({y:s,stave:a}),s+=15),r=Math.max(r,a.getNoteStartX())}),this.partVoices.forEach(a=>{a.getTickables().forEach(c=>{const l=c.getStave();l&&c.setStave(l)})}),i.joinVoices(this.partVoices),this.partStaves.forEach(a=>a.setNoteStartX(r)),this.options.autoWidth&&this.partVoices.length>0?(n=i.preCalculateMinTotalWidth(this.partVoices),this.options.width=n+Dr.rightPadding+(r-this.options.x),this.partStaves.forEach(a=>{a.setWidth(this.options.width)})):n=this.options.noPadding?this.options.width-(r-this.options.x):this.options.width-(r-this.options.x)-Dr.defaultPadding,this.partVoices.length>0&&i.format(this.partVoices,this.options.noJustification?0:n,this.options.formatOptions),i.postFormat();for(let a=0;a<this.options.formatIterations;a++)i.tune(e);this.startX=r,this.debugNoteMetricsYs=o,this.lastY=s,Dr.formatBegModifiers(this.partStaves)}getBoundingBox(){var e;return new tr(this.options.x,this.options.y,this.options.width,((e=this.lastY)!==null&&e!==void 0?e:0)-this.options.y)}draw(){const e=this.checkContext();if(!this.formatter||!this.startX||!this.lastY||!this.debugNoteMetricsYs)throw new re("NoFormatter","format() must be called before draw()");this.setRendered(),this.options.debugFormatter&&Kn.plotDebugging(e,this.formatter,this.startX,this.options.y,this.lastY),this.debugNoteMetricsYs.forEach(n=>{this.partVoices.forEach(i=>{i.getTickables().forEach(s=>{s.getStave()===n.stave&&mi.plotMetrics(e,s,n.y)})})})}}function r5(t,e){const n=[];let i=[];for(let s=1;s<=t;s++)e.indexOf(s)>-1?(n.push(i),i=[]):i.push(s);return i.length>0&&n.push(i),n}function o5(t,e,n,i){const s=i!==1,r=i!==-1,o=n.getSpacingBetweenLines(),a=n.getNumLines(),c=[];return e.forEach(l=>{const u=l.indexOf(a)>-1,d=l.indexOf(1)>-1;if(s&&d||r&&u)return;l.length===1&&l.push(l[0]);const h=[];l.forEach((f,p,m)=>{const b=f===1,E=f===a;let x=n.getYForLine(f-1);p===0&&!b?x-=o/2-1:p===m.length-1&&!E&&(x+=o/2-1),h.push(x),i===1&&b?h.push(t-2):i===-1&&E&&h.push(t+2)}),c.push(h.sort((f,p)=>f-p))}),c}class Ou extends VE{static get CATEGORY(){return"TabNote"}constructor(e,n=!1){super(e),this.fretElement=[],this.greatestString=()=>this.positions.map(i=>i.str).reduce((i,s)=>i>s?i:s),this.leastString=()=>this.positions.map(i=>i.str).reduce((i,s)=>i<s?i:s),this.ghost=!1,this.positions=e.positions||[],this.renderOptions=Object.assign(Object.assign({},this.renderOptions),{drawStem:n,drawDots:n,drawStemThroughStave:!1,yShift:0}),this.glyphProps=mi.getGlyphProps(this.duration,this.noteType),rn(this.glyphProps,"BadArguments",`No glyph found for duration '${this.duration}' and type '${this.noteType}'`),this.buildStem(),e.stemDirection?this.setStemDirection(e.stemDirection):this.setStemDirection(ve.UP),this.ghost=!1,this.updateWidth()}reset(){return super.reset(),this.stave&&this.setStave(this.stave),this}setGhost(e){return this.ghost=e,this.updateWidth(),this}hasStem(){return!!this.renderOptions.drawStem}getStemExtension(){return this.stemExtensionOverride!==void 0?this.stemExtensionOverride:this.flag.getHeight()>ve.HEIGHT?this.flag.getHeight()-ve.HEIGHT:0}static tabToElement(e){let n;return e.toUpperCase()==="X"?(n=new Ye("TabNote"),n.setText(M.accidentalDoubleSharp)):(n=new Ye("TabNote.text"),n.setText(e),n.setYShift(n.getHeight()/2)),n}updateWidth(){this.fretElement=[],this.width=0;for(let e=0;e<this.positions.length;++e){let n=this.positions[e].fret;this.ghost&&(n="("+n+")");const i=Ou.tabToElement(n.toString());this.fretElement.push(i),this.width=Math.max(i.getWidth(),this.width)}}setStave(e){super.setStave(e);const n=e.getContext();this.setContext(n);const i=this.positions.map(({str:s})=>e.getYForLine(Number(s)-1));return this.setYs(i),this.stem&&this.stem.setYBounds(this.getStemY(),this.getStemY()),this}getPositions(){return this.positions}getModifierStartXY(e,n){if(!this.preFormatted)throw new re("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");if(this.ys.length===0)throw new re("NoYValues","No Y-Values calculated for this note.");let i=0;return e===Re.Position.LEFT?i=-1*2:e===Re.Position.RIGHT?i=this.width+2:(e===Re.Position.BELOW||e===Re.Position.ABOVE)&&(i=this.width/2),{x:this.getAbsoluteX()+i,y:this.ys[n]}}getLineForRest(){return Number(this.positions[0].str)}preFormat(){this.preFormatted||(this.modifierContext&&this.modifierContext.preFormat(),this.preFormatted=!0)}getStemX(){return this.getCenterGlyphX()}getStemY(){const e=this.checkStave().getNumLines(),n=-.5,i=e-.5,s=ve.UP===this.stemDirection?n:i;return this.checkStave().getYForLine(s)}getStemExtents(){return this.checkStem().getExtents()}drawFlag(){const{beam:e,glyphProps:n,renderOptions:{drawStem:i}}=this,s=this.checkContext(),r=e===void 0&&i;if(n.codeFlagUp&&r){const o=this.getStemX(),a=this.getStemDirection()===ve.DOWN?this.getStemY()-this.checkStem().getHeight()-this.getStemExtension():this.getStemY()-this.checkStem().getHeight()+this.getStemExtension();this.flag.setContext(s).setX(o).setY(a).drawWithStyle()}}drawModifiers(){this.modifiers.forEach(e=>{bB(e)&&!this.renderOptions.drawDots||(e.setContext(this.getContext()),e.drawWithStyle())})}drawStemThrough(){const e=this.getStemX(),n=this.getStemY(),i=this.checkContext(),s=this.renderOptions.drawStem,r=this.renderOptions.drawStemThroughStave;if(s&&r){const o=this.checkStave().getNumLines(),a=this.positions.map(u=>Number(u.str)),c=r5(o,a),l=o5(n,c,this.checkStave(),this.getStemDirection());i.setLineWidth(ve.WIDTH),l.forEach(u=>{u.length!==0&&(i.beginPath(),i.moveTo(e,u[0]),i.lineTo(e,u[u.length-1]),i.stroke(),i.closePath())})}}drawPositions(){const e=this.checkContext(),n=this.getAbsoluteX(),i=this.ys;for(let s=0;s<this.positions.length;++s){const r=i[s]+this.renderOptions.yShift,o=this.fretElement[s],a=n-o.getWidth()/2;e.clearRect(a-2,r-3,o.getWidth()+4,6),o.renderText(e,a,r)}}draw(){const e=this.checkContext();if(this.ys.length===0)throw new re("NoYValues","Can't draw note without Y values.");this.setRendered();const n=this.beam===void 0&&this.renderOptions.drawStem;if(e.openGroup("tabnote",this.getAttribute("id")),this.drawPositions(),this.drawStemThrough(),this.stem&&n){const i=this.getStemX();this.stem.setNoteHeadXBounds(i,i),this.stem.setContext(e).drawWithStyle()}this.drawFlag(),this.drawModifiers(),e.closeGroup()}}class EA extends Dr{static get CATEGORY(){return"TabStave"}constructor(e,n,i,s){const r=Object.assign({spacingBetweenLinesPx:13,numLines:6,topTextPosition:1},s);super(e,n,i,r)}getYForGlyphs(){return this.getYForLine(2.5)}addTabGlyph(){return this.addClef("tab"),this}}function a5(...t){Gc.DEBUG&&pn("VexFlow.TextBracket",t)}var Ss;(function(t){t[t.TOP=1]="TOP",t[t.BOTTOM=-1]="BOTTOM"})(Ss||(Ss={}));class Gc extends Ye{static get CATEGORY(){return"TextBracket"}static get Position(){return Ss}static get PositionString(){return{top:Ss.TOP,bottom:Ss.BOTTOM}}constructor({start:e,stop:n,text:i="",superscript:s="",position:r=Ss.TOP}){super(),this.start=e,this.stop=n,this.textElement=new Ye("TextBracket"),this.textElement.setText(i),this.superscriptElement=new Ye("TextBracket"),this.superscriptElement.setText(s);const o=et.scaleSize(this.fontInfo.size,.714286);this.superscriptElement.setFontSize(o),this.position=typeof r=="string"?Gc.PositionString[r]:r,this.line=1,this.renderOptions={dashed:!0,dash:[5],color:"black",lineWidth:1,showBracket:!0,bracketHeight:8,underlineSuperscript:!0}}applyStyle(e){this.textElement.setFont(this.fontInfo);const{family:n,size:i,weight:s,style:r}=this.fontInfo,o=et.scaleSize(i,.714286);this.superscriptElement.setFont(n,o,s,r);const a=this.renderOptions;return e.setStrokeStyle(a.color),e.setFillStyle(a.color),e.setLineWidth(a.lineWidth),this}setDashed(e,n){return this.renderOptions.dashed=e,n&&(this.renderOptions.dash=n),this}setLine(e){return this.line=e,this}draw(){const e=this.checkContext();this.setRendered();let n=0;switch(this.position){case Ss.TOP:n=this.start.checkStave().getYForTopText(this.line);break;case Ss.BOTTOM:n=this.start.checkStave().getYForBottomText(this.line+oe.TEXT_HEIGHT_OFFSET_HACK);break;default:throw new re("InvalidPosition",`The position ${this.position} is invalid.`)}const i={x:this.start.getAbsoluteX(),y:n},s={x:this.stop.getAbsoluteX(),y:n};a5("Rendering TextBracket: start:",i,"stop:",s,"y:",n);const r=this.renderOptions.bracketHeight*this.position;this.textElement.renderText(e,i.x,i.y);const o=this.textElement.getWidth(),a=this.textElement.getHeight(),c=i.y-a/2.5;this.superscriptElement.renderText(e,i.x+o+1,c);const l=this.superscriptElement.getWidth(),u=this.superscriptElement.getHeight();let d=i.x,h=c;const f=s.x+this.stop.getGlyphWidth();this.position===Ss.TOP?(d+=o+l+5,h-=u/2.7):this.position===Ss.BOTTOM&&(h+=u/2.7,d+=o+2,this.renderOptions.underlineSuperscript||(d+=l)),this.renderOptions.dashed?(Vt.drawDashedLine(e,d,h,f,h,this.renderOptions.dash),this.renderOptions.showBracket&&Vt.drawDashedLine(e,f,h+1*this.position,f,h+r,this.renderOptions.dash)):(e.beginPath(),e.moveTo(d,h),e.lineTo(f,h),this.renderOptions.showBracket&&e.lineTo(f,h+r),e.stroke(),e.closePath())}}Gc.DEBUG=!1;function M1(...t){_c.DEBUG&&pn("VexFlow.TextDynamics",t)}class _c extends mi{static get CATEGORY(){return"TextDynamics"}static get GLYPHS(){return{f:M.dynamicForte,p:M.dynamicPiano,m:M.dynamicMezzo,s:M.dynamicSforzando,z:M.dynamicZ,r:M.dynamicRinforzando}}constructor(e){var n,i;super(e),this.sequence=((n=e.text)!==null&&n!==void 0?n:"").toLowerCase(),this.line=(i=e.line)!==null&&i!==void 0?i:0,this.text="",M1("New Dynamics Text: ",this.sequence)}setLine(e){return this.line=e,this}preFormat(){return this.text="",this.sequence.split("").forEach(e=>{const n=_c.GLYPHS[e];if(!n)throw new re("Invalid dynamics character: "+e);this.text+=n}),this.preFormatted=!0,this}draw(){this.setRendered();const e=this.getAbsoluteX(),n=this.checkStave().getYForLine(this.line+-3);M1("Rendering Dynamics: ",this.sequence),this.renderText(this.checkContext(),e,n)}}_c.DEBUG=!1;class vA extends mi{static get CATEGORY(){return"TimeSigNote"}constructor(e,n){super({duration:"b"}),this.timeSig=new Qs(e,n),this.setWidth(this.timeSig.getWidth()),this.ignoreTicks=!0}addToModifierContext(e){return this}preFormat(){return this.preFormatted=!0,this}draw(){const e=this.checkStave(),n=this.checkContext();this.setRendered(),n.openGroup("timesignote",this.getAttribute("id")),this.timeSig.drawAt(n,e,this.getAbsoluteX()),n.closeGroup()}}class Pi extends Ye{static get CATEGORY(){return"Tuplet"}static get LOCATION_TOP(){return 1}static get LOCATION_BOTTOM(){return-1}static get NESTING_OFFSET(){return 15}constructor(e,n={}){if(super(),!e||!e.length)throw new re("BadArguments","No notes provided for tuplet.");this.notes=e;const i=n.numNotes!==void 0?n.numNotes:e.length,s=n.notesOccupied||2,r=n.bracketed!==void 0?n.bracketed:e.some(u=>!u.hasBeam()),o=n.ratioed!==void 0?n.ratioed:Math.abs(s-i)>1,a=n.location||Pi.LOCATION_TOP,c=n.yOffset||Ce.get("Tuplet.yOffset"),l=n.textYOffset||Ce.get("Tuplet.textYOffset");this.options={bracketed:r,location:a,notesOccupied:s,numNotes:i,ratioed:o,yOffset:c,textYOffset:l},this.textElement=new Ye("Tuplet"),this.setTupletLocation(a||Pi.LOCATION_TOP),Kn.AlignRestsToNotes(e,!0,!0),this.resolveGlyphs(),this.attach()}attach(){for(let e=0;e<this.notes.length;e++)this.notes[e].setTuplet(this)}detach(){for(let e=0;e<this.notes.length;e++)this.notes[e].resetTuplet(this)}setBracketed(e){return this.options.bracketed=e,this}setRatioed(e){return this.options.ratioed=e,this}setTupletLocation(e){return e!==Pi.LOCATION_TOP&&e!==Pi.LOCATION_BOTTOM&&(console.warn(`Invalid tuplet location [${e}]. Using Tuplet.LOCATION_TOP.`),e=Pi.LOCATION_TOP),this.options.location=e,this}getNotes(){return this.notes}getNoteCount(){return this.options.numNotes}getNotesOccupied(){return this.options.notesOccupied}setNotesOccupied(e){this.detach(),this.options.notesOccupied=e,this.resolveGlyphs(),this.attach()}resolveGlyphs(){let e="",n="",i=this.options.numNotes;for(;i>=1;)e=String.fromCharCode(59520+i%10)+e,i=Math.floor(i/10);if(this.options.ratioed){for(i=this.options.notesOccupied;i>=1;)n=String.fromCharCode(59520+i%10)+n,i=Math.floor(i/10);n=M.tupletColon+n}this.textElement.setText(e+n)}getNestedTupletCount(){const{location:e}=this.options,n=this.notes[0];let i=r(n,e),s=r(n,e);function r(o,a){return o.getTupletStack().filter(c=>c.options.location===a).length}return this.notes.forEach(o=>{const a=r(o,e);i=a>i?a:i,s=a<s?a:s}),i-s}getYPosition(){var e;const n=this.getNestedTupletCount()*Pi.NESTING_OFFSET*-this.options.location,i=(e=this.options.yOffset)!==null&&e!==void 0?e:0,s=this.notes[0];let r;if(this.options.location===Pi.LOCATION_TOP){r=s.checkStave().getYForLine(0)-1.5*oe.STAVE_LINE_DISTANCE;for(let o=0;o<this.notes.length;++o){const a=this.notes[o];let c=0;const l=a.getModifierContext();l&&(c=Math.max(c,l.getState().topTextLine));const u=a.getYForTopText(c)-2*oe.STAVE_LINE_DISTANCE;if(a.hasStem()||a.isRest()){const d=a.getStemDirection()===ve.UP?a.getStemExtents().topY-oe.STAVE_LINE_DISTANCE:a.getStemExtents().baseY-2*oe.STAVE_LINE_DISTANCE;r=Math.min(d,r),c>0&&(r=Math.min(u,r))}}}else{let o=4;this.notes.forEach(a=>{const c=a.getModifierContext();c&&(o=Math.max(o,c.getState().textLine+1))}),r=s.checkStave().getYForLine(o)+2*oe.STAVE_LINE_DISTANCE;for(let a=0;a<this.notes.length;++a)if(this.notes[a].hasStem()||this.notes[a].isRest()){const c=this.notes[a].getStemDirection()===ve.UP?this.notes[a].getStemExtents().baseY+2*oe.STAVE_LINE_DISTANCE:this.notes[a].getStemExtents().topY+oe.STAVE_LINE_DISTANCE;c>r&&(r=c)}}return r+n+i}draw(){const{location:e,bracketed:n,textYOffset:i}=this.options,s=this.checkContext();let r=0,o=0;const a=this.notes[0],c=this.notes[this.notes.length-1];n?(r=a.getTieLeftX()-5,this.width=c.getTieRightX()-r+5):(r=a.getStemX(),this.width=c.getStemX()-r),o=this.getYPosition();const u=r+this.width/2-this.textElement.getWidth()/2;if(s.openGroup("tuplet",this.getAttribute("id")),n){const h=this.width/2-this.textElement.getWidth()/2-5;h>0&&(s.fillRect(r,o,h,1),s.fillRect(r+this.width/2+this.textElement.getWidth()/2+5,o,h,1),s.fillRect(r,o+(e===Pi.LOCATION_BOTTOM?1:0),1,e*10),s.fillRect(r+this.width,o+(e===Pi.LOCATION_BOTTOM?1:0),1,e*10))}this.textElement.renderText(s,u,o+this.textElement.getHeight()/2+(e===Pi.LOCATION_TOP?-1:1)*i);const d=this.getBoundingBox();s.pointerRect(d.getX(),d.getY(),d.getW(),d.getH()),s.closeGroup(),this.setRendered()}}function c5(...t){Of.DEBUG&&pn("VexFlow.VibratoBracket",t)}class Of extends Ye{static get CATEGORY(){return"VibratoBracket"}constructor(e){super(),this.vibrato=new XE,e.start&&(this.start=e.start),e.stop&&(this.stop=e.stop),this.line=1}setLine(e){return this.line=e,this}setVibratoCode(e){return this.vibrato.setVibratoCode(e),this}draw(){const e=this.checkContext();this.setRendered();const n=this.start&&this.start.checkStave().getYForTopText(this.line)||this.stop&&this.stop.checkStave().getYForTopText(this.line)||0,i=this.start&&this.start.getAbsoluteX()||this.stop&&this.stop.checkStave().getTieStartX()||0,s=this.stop&&this.stop.getAbsoluteX()-this.stop.getWidth()-5||this.start&&this.start.checkStave().getTieEndX()-10||0;this.vibrato.setVibratoWidth(s-i),c5("Rendering VibratoBracket: startX:",i,"stopX:",s,"y:",n),this.vibrato.renderText(e,i,n)}}Of.DEBUG=!1;function B1(...t){Pu.DEBUG&&pn("VexFlow.Factory",t)}class Pu{static newFromElementId(e,n=500,i=200){return new Pu({renderer:{elementId:e,width:n,height:i}})}constructor(e={}){B1("New factory: ",e),this.options={stave:{space:10},renderer:{elementId:"",width:500,height:200,background:"#FFF"}},this.setOptions(e)}reset(){this.renderQ=[],this.systems=[],this.staves=[],this.voices=[],this.stave=void 0}setOptions(e){this.options=Object.assign(Object.assign({},this.options),e),this.initRenderer(),this.reset()}initRenderer(){const{elementId:e,width:n,height:i,background:s}=this.options.renderer;if(e===null)return;if(e==="")throw B1(this),new re("renderer.elementId not set in FactoryOptions");let r=this.options.renderer.backend;if(r===void 0){const o=document.getElementById(e);BE(o)?r=Vt.Backends.CANVAS:r=Vt.Backends.SVG}this.context=Vt.buildContext(e,r,n,i,s)}getContext(){return this.context}setContext(e){return this.context=e,this}getStave(){return this.stave}getVoices(){return this.voices}Stave(e){const n=this.options.stave.space,i=Object.assign({x:0,y:0,width:this.options.renderer.width-n*1,options:{spacingBetweenLinesPx:n*1}},e),s=new Dr(i.x,i.y,i.width,i.options);return this.staves.push(s),s.setContext(this.context),this.stave=s,s}TabStave(e){const n=this.options.stave.space,i=Object.assign({x:0,y:0,width:this.options.renderer.width-n*1,options:{spacingBetweenLinesPx:n*1.3}},e),s=new EA(i.x,i.y,i.width,i.options);return this.staves.push(s),s.setContext(this.context),this.stave=s,s}StaveNote(e){const n=new Vi(e);return this.stave&&n.setStave(this.stave),n.setContext(this.context),this.renderQ.push(n),n}GlyphNote(e,n,i){const s=new jE(e,n,i);return this.stave&&s.setStave(this.stave),s.setContext(this.context),this.renderQ.push(s),s}RepeatNote(e,n,i){const s=new mA(e,n,i);return this.stave&&s.setStave(this.stave),s.setContext(this.context),this.renderQ.push(s),s}GhostNote(e){const n=new hA(e);return this.stave&&n.setStave(this.stave),n.setContext(this.context),this.renderQ.push(n),n}TextNote(e){const n=new Qc(e);return this.stave&&n.setStave(this.stave),n.setContext(this.context),this.renderQ.push(n),n}BarNote(e={}){const n=new Tf(e.type);return this.stave&&n.setStave(this.stave),n.setContext(this.context),this.renderQ.push(n),n}ClefNote(e){const n=Object.assign({type:"treble",options:{size:"default",annotation:void 0}},e),i=new cA(n.type,n.options.size,n.options.annotation);return this.stave&&i.setStave(this.stave),i.setContext(this.context),this.renderQ.push(i),i}TimeSigNote(e){const n=Object.assign({time:"4/4"},e),i=new vA(n.time);return this.stave&&i.setStave(this.stave),i.setContext(this.context),this.renderQ.push(i),i}KeySigNote(e){const n=new fA(e.key,e.cancelKey,e.alterKey);return this.stave&&n.setStave(this.stave),n.setContext(this.context),this.renderQ.push(n),n}TabNote(e){const n=new Ou(e);return this.stave&&n.setStave(this.stave),n.setContext(this.context),this.renderQ.push(n),n}GraceNote(e){const n=new Df(e);return this.stave&&n.setStave(this.stave),n.setContext(this.context),n}GraceNoteGroup(e){const n=new Du(e.notes,e.slur);return n.setContext(this.context),n}Accidental(e){const n=new ka(e.type);return n.setContext(this.context),n}Annotation(e){const n=Object.assign({text:"p",hJustify:ai.CENTER,vJustify:ci.BOTTOM},e),i=new wi(n.text);return i.setJustification(n.hJustify),i.setVerticalJustification(n.vJustify),i.setFont(n.font),i.setContext(this.context),i}ChordSymbol(e){const n=Object.assign({vJustify:"top",hJustify:"center"},e),i=new _t;return i.setHorizontal(n.hJustify),i.setVertical(n.vJustify),typeof n.fontFamily=="string"&&typeof n.fontSize=="number"?typeof n.fontWeight=="string"?i.setFont(n.fontFamily,n.fontSize,n.fontWeight):i.setFont(n.fontFamily,n.fontSize,""):typeof n.fontSize=="number"&&i.setFontSize(n.fontSize),i.setContext(this.context),i}Articulation(e){var n;const i=new ir((n=e==null?void 0:e.type)!==null&&n!==void 0?n:"a.");return(e==null?void 0:e.position)!==void 0&&i.setPosition(e.position),(e==null?void 0:e.betweenLines)!==void 0&&i.setBetweenLines(e.betweenLines),i.setContext(this.context),i}Ornament(e,n){const i=Object.assign({type:e,accidental:""},n),s=new bi(e);return(n==null?void 0:n.position)!==void 0&&s.setPosition(n.position),i.upperAccidental&&s.setUpperAccidental(i.upperAccidental),i.lowerAccidental&&s.setLowerAccidental(i.lowerAccidental),typeof i.delayed<"u"&&s.setDelayed(i.delayed),s.setContext(this.context),s}TextDynamics(e){const n=Object.assign({text:"p",duration:"q",dots:0,line:0},e),i=new _c({text:n.text,line:n.line,duration:n.duration,dots:n.dots});return this.stave&&i.setStave(this.stave),i.setContext(this.context),this.renderQ.push(i),i}Fingering(e){const n=Object.assign({number:"0",position:"left"},e),i=new wf(n.number);return i.setPosition(n.position),i.setContext(this.context),i}StringNumber(e,n=!0){const i=new HE(e.number);return i.setPosition(e.position),i.setContext(this.context),i.setDrawCircle(n),i}TickContext(){return new ou}ModifierContext(){return new Oc}MultiMeasureRest(e){const n=rn(e.numberOfMeasures,"NoNumberOfMeasures"),i=new pA(n,e);return i.setContext(this.context),this.renderQ.push(i),i}Voice(e){const n=Object.assign({time:"4/4"},e),i=new Ts(n.time);return this.voices.push(i),i}StaveConnector(e){const n=new ot(e.topStave,e.bottomStave);return n.setType(e.type).setContext(this.context),this.renderQ.push(n),n}Formatter(e){return new Kn(e)}Tuplet(e){const n=Object.assign({notes:[],options:{}},e),i=new Pi(n.notes,n.options).setContext(this.context);return this.renderQ.push(i),i}Beam(e){var n,i,s,r,o;const a=new wo(e.notes,(n=e.options)===null||n===void 0?void 0:n.autoStem).setContext(this.context);return a.breakSecondaryAt((s=(i=e.options)===null||i===void 0?void 0:i.secondaryBeamBreaks)!==null&&s!==void 0?s:[]),!((r=e.options)===null||r===void 0)&&r.partialBeamDirections&&Object.entries((o=e.options)===null||o===void 0?void 0:o.partialBeamDirections).forEach(([c,l])=>{a.setPartialBeamSideAt(Number(c),l)}),this.renderQ.push(a),a}Curve(e){const n=new Cf(e.from,e.to,e.options).setContext(this.context);return this.renderQ.push(n),n}StaveTie(e){var n;const i=new kf({firstNote:e.from,lastNote:e.to,firstIndexes:e.firstIndexes,lastIndexes:e.lastIndexes},e.text);return!((n=e.options)===null||n===void 0)&&n.direction&&i.setDirection(e.options.direction),i.setContext(this.context),this.renderQ.push(i),i}StaveLine(e){var n,i;const s=new Qi({firstNote:e.from,lastNote:e.to,firstIndexes:e.firstIndexes,lastIndexes:e.lastIndexes});return!((n=e.options)===null||n===void 0)&&n.text&&s.setText(e.options.text),!((i=e.options)===null||i===void 0)&&i.font&&s.setFont(e.options.font),s.setContext(this.context),this.renderQ.push(s),s}VibratoBracket(e){const n=new Of({start:e.from,stop:e.to});return e.options.line&&n.setLine(e.options.line),e.options.code&&n.setVibratoCode(e.options.code),n.setContext(this.context),this.renderQ.push(n),n}TextBracket(e){const n=new Gc({start:e.from,stop:e.to,text:e.text,superscript:e.options.superscript,position:e.options.position});return e.options.line&&n.setLine(e.options.line),e.options.font&&n.setFont(e.options.font),n.setContext(this.context),this.renderQ.push(n),n}System(e={}){e.factory=this;const n=new gA(e).setContext(this.context);return this.systems.push(n),n}EasyScore(e={}){return e.factory=this,new Nf(e)}PedalMarking(e){const n=Object.assign({notes:[],options:{style:"mixed"}},e),i=new Jt(n.notes);return i.setType(Jt.typeString[n.options.style]),i.setContext(this.context),this.renderQ.push(i),i}NoteSubGroup(e){const n=Object.assign({notes:[]},e),i=new WE(n.notes);return i.setContext(this.context),i}draw(){const e=this.context;this.systems.forEach(n=>n.setContext(e).format()),this.staves.forEach(n=>n.setContext(e).drawWithStyle()),this.voices.forEach(n=>n.setContext(e).drawWithStyle()),this.renderQ.forEach(n=>{n.isRendered()||n.setContext(e).drawWithStyle()}),this.systems.forEach(n=>n.setContext(e).drawWithStyle()),this.reset()}}Pu.DEBUG=!1;class l5 extends Ou{static get CATEGORY(){return"GraceTabNote"}constructor(e){super(e,!1),this.renderOptions=Object.assign(Object.assign({},this.renderOptions),{yShift:.3}),this.updateWidth()}}class u5{constructor(e){this.music=new Ut,this.setKey(e)}setKey(e){return this.key=e,this.reset(),this}getKey(){return this.key}reset(){if(this.keyParts=this.music.getKeyParts(this.key),this.keyString=this.keyParts.root,this.keyParts.accidental&&(this.keyString+=this.keyParts.accidental),!Ut.scaleTypes[this.keyParts.type])throw new re("BadArguments",`Unsupported key type: ${this.key}`);this.scale=this.music.getScaleTones(this.music.getNoteValue(this.keyString),Ut.scaleTypes[this.keyParts.type]),this.scaleMap={},this.scaleMapByValue={},this.originalScaleMapByValue={};const n=Ut.rootIndexes[this.keyParts.root];for(let i=0;i<Ut.roots.length;++i){const s=(n+i)%Ut.roots.length,r=Ut.roots[s],o=this.music.getRelativeNoteName(r,this.scale[i]);this.scaleMap[r]=o,this.scaleMapByValue[this.scale[i]]=o,this.originalScaleMapByValue[this.scale[i]]=o}return this}getAccidental(e){const n=this.music.getKeyParts(e).root,i=this.music.getNoteParts(this.scaleMap[n]);return{note:this.scaleMap[n],accidental:i.accidental}}selectNote(e){e=e.toLowerCase();const n=this.music.getNoteParts(e),i=this.scaleMap[n.root],s=this.music.getNoteParts(i);if(i===e)return{note:i,accidental:n.accidental,change:!1};const r=this.scaleMapByValue[this.music.getNoteValue(e)];if(r!==void 0)return{note:r,accidental:this.music.getNoteParts(r).accidental,change:!1};const o=this.originalScaleMapByValue[this.music.getNoteValue(e)];return o!==void 0?(this.scaleMap[s.root]=o,delete this.scaleMapByValue[this.music.getNoteValue(i)],this.scaleMapByValue[this.music.getNoteValue(e)]=o,{note:o,accidental:this.music.getNoteParts(o).accidental,change:!0}):s.root===e?(delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[n.root])],this.scaleMapByValue[this.music.getNoteValue(s.root)]=s.root,this.scaleMap[s.root]=s.root,{note:s.root,accidental:void 0,change:!0}):(delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[n.root])],this.scaleMapByValue[this.music.getNoteValue(e)]=e,delete this.scaleMap[s.root],this.scaleMap[s.root]=e,{note:e,accidental:n.accidental,change:!0})}}class mc extends Ye{static get CATEGORY(){return"StaveHairpin"}static FormatByTicksAndDraw(e,n,i,s,r,o){var a,c;const l=n.pixelsPerTick;if(l===null)throw new re("BadArguments","A valid Formatter must be provide to draw offsets by ticks.");const u=l*((a=o.leftShiftTicks)!==null&&a!==void 0?a:0),d=l*((c=o.rightShiftTicks)!==null&&c!==void 0?c:0),h={height:o.height,yShift:o.yShift,leftShiftPx:u,rightShiftPx:d,rightShiftTicks:0,leftShiftTicks:0};new mc({firstNote:i.firstNote,lastNote:i.lastNote},s).setContext(e).setRenderOptions(h).setPosition(r).drawWithStyle()}constructor(e,n){super(),this.setNotes(e),this.hairpin=n,this.position=Re.Position.BELOW,this.renderOptions={height:10,yShift:0,leftShiftPx:0,rightShiftPx:0,rightShiftTicks:0,leftShiftTicks:0}}setPosition(e){return(e===Re.Position.ABOVE||e===Re.Position.BELOW)&&(this.position=e),this}setRenderOptions(e){return this.renderOptions=e,this}setNotes(e){if(!e.firstNote&&!e.lastNote)throw new re("BadArguments","Hairpin needs to have either firstNote or lastNote set.");return this.notes=e,this.firstNote=e.firstNote,this.lastNote=e.lastNote,this}renderHairpin(e){const n=this.checkContext();let i=this.renderOptions.yShift+20,s=e.firstY;this.position===Re.Position.ABOVE&&(i=-i+30,s=e.firstY-e.staffHeight);const r=this.renderOptions.leftShiftPx,o=this.renderOptions.rightShiftPx;switch(n.beginPath(),this.hairpin){case mc.type.CRESC:n.moveTo(e.lastX+o,s+i),n.lineTo(e.firstX+r,s+this.renderOptions.height/2+i),n.lineTo(e.lastX+o,s+this.renderOptions.height+i);break;case mc.type.DECRESC:n.moveTo(e.firstX+r,s+i),n.lineTo(e.lastX+o,s+this.renderOptions.height/2+i),n.lineTo(e.firstX+r,s+this.renderOptions.height+i);break}n.stroke(),n.closePath()}draw(){this.checkContext(),this.setRendered();const e=this.firstNote,n=this.lastNote;if(!e||!n)throw new re("NoNote","Notes required to draw");const i=e.getModifierStartXY(this.position,0),s=n.getModifierStartXY(this.position,0);this.renderHairpin({firstX:i.x,lastX:s.x,firstY:e.checkStave().getY()+e.checkStave().getHeight(),lastY:n.checkStave().getY()+n.checkStave().getHeight(),staffHeight:e.checkStave().getHeight()})}}mc.type={CRESC:1,DECRESC:2};class gs extends Dc{static get CATEGORY(){return"TabSlide"}static get SLIDE_UP(){return 1}static get SLIDE_DOWN(){return-1}static createSlideUp(e){return new gs(e,gs.SLIDE_UP)}static createSlideDown(e){return new gs(e,gs.SLIDE_DOWN)}constructor(e,n){if(super(e,"sl."),!n){let i=e.firstNote.getPositions()[0].fret;typeof i=="string"&&(i=parseInt(i,10));let s=e.lastNote.getPositions()[0].fret;typeof s=="string"&&(s=parseInt(s,10)),isNaN(i)||isNaN(s)?n=gs.SLIDE_UP:n=i>s?gs.SLIDE_DOWN:gs.SLIDE_UP}this.direction=n,this.renderOptions.cp1=11,this.renderOptions.cp2=14,this.renderOptions.yShift=.5}renderTie(e){if(e.firstYs.length===0||e.lastYs.length===0)throw new re("BadArguments","No Y-values to render");const n=this.checkContext(),i=e.firstX,s=e.firstYs,r=e.lastX,o=e.direction;if(o!==gs.SLIDE_UP&&o!==gs.SLIDE_DOWN)throw new re("BadSlide","Invalid slide direction");const a=this.notes.firstIndexes;for(let c=0;c<a.length;++c){const l=s[a[c]]+this.renderOptions.yShift;if(isNaN(l))throw new re("BadArguments","Bad indexes for slide rendering.");n.beginPath(),n.moveTo(i,l+3*o),n.lineTo(r,l-3*o),n.closePath(),n.stroke()}this.setRendered()}}class d5 extends Re{static get CATEGORY(){return"Tremolo"}constructor(e){super(),this.num=e,this.position=Re.Position.CENTER,this.text=M.tremolo1}draw(){const e=this.checkContext(),n=this.checkAttachedNote();this.setRendered();const i=n.getStemDirection(),s=n.getFontScale(),r=Ce.get("Tremolo.spacing")*i*s,o=n.getAbsoluteX()+(i===ve.UP?n.getGlyphWidth()-ve.WIDTH/2:ve.WIDTH/2);let a=n.getStemExtents().topY+(this.num<=3?r:0);this.fontInfo.size=Ce.get("Tremolo.fontSize")*s;for(let c=0;c<this.num;++c)this.renderText(e,o,a),a+=r}}class Th{static get names(){return{standard:"E/5,B/4,G/4,D/4,A/3,E/3",dagdad:"D/5,A/4,G/4,D/4,A/3,D/3",dropd:"E/5,B/4,G/4,D/4,A/3,D/3",eb:"Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3",standardBanjo:"D/5,B/4,G/4,D/4,G/5"}}constructor(e="E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2"){this.tuningValues=[],this.setTuning(e)}noteToInteger(e){var n;return(n=oe.keyProperties(e).intValue)!==null&&n!==void 0?n:-1}setTuning(e){Th.names[e]&&(e=Th.names[e]),this.tuningValues=[];const n=e.split(/\s*,\s*/);if(n.length===0)throw new re("BadArguments",`Invalid tuning string: ${e}`);for(let i=0;i<n.length;++i)this.tuningValues[i]=this.noteToInteger(n[i])}getValueForString(e){const n=Number(e);if(n<1||n>this.tuningValues.length)throw new re("BadArguments",`String number must be between 1 and ${this.tuningValues.length}:${e}`);return this.tuningValues[n-1]}getValueForFret(e,n){const i=this.getValueForString(n),s=Number(e);if(s<0)throw new re("BadArguments",`Fret number must be 0 or higher: ${e}`);return i+s}getNoteForFret(e,n){const i=this.getValueForFret(e,n),s=Math.floor(i/12),r=i%12;return`${oe.integerToNote(r)}/${s}`}}const h5="5.0.0",f5="0ca6f889545c33cce851b420c24945f6eb685aeb",p5="2025-03-05T17:05:43.991Z";var m5=function(t,e,n,i){function s(r){return r instanceof n?r:new n(function(o){o(r)})}return new(n||(n=Promise))(function(r,o){function a(u){try{l(i.next(u))}catch(d){o(d)}}function c(u){try{l(i.throw(u))}catch(d){o(d)}}function l(u){u.done?r(u.value):s(u.value).then(a,c)}l((i=i.apply(t,e||[])).next())})};class ge{static loadFonts(...e){return m5(this,void 0,void 0,function*(){e||(e=Object.keys(et.FILES));const n=[];for(const i of e)n.push(et.load(i));yield Promise.all(n)})}static setFonts(...e){Pl.fontFamily=e.join(","),Ce.clear()}static getFonts(){return Ce.get("fontFamily").split(",")}static get RENDER_PRECISION_PLACES(){return oe.RENDER_PRECISION_PLACES}static set RENDER_PRECISION_PLACES(e){oe.RENDER_PRECISION_PLACES=e}static get SOFTMAX_FACTOR(){return oe.SOFTMAX_FACTOR}static set SOFTMAX_FACTOR(e){oe.SOFTMAX_FACTOR=e}static get UNISON(){return oe.UNISON}static set UNISON(e){oe.UNISON=e}static get NOTATION_FONT_SCALE(){return oe.NOTATION_FONT_SCALE}static set NOTATION_FONT_SCALE(e){oe.NOTATION_FONT_SCALE=e}static get TABLATURE_FONT_SCALE(){return oe.TABLATURE_FONT_SCALE}static set TABLATURE_FONT_SCALE(e){oe.TABLATURE_FONT_SCALE=e}static get RESOLUTION(){return oe.RESOLUTION}static set RESOLUTION(e){oe.RESOLUTION=e}static get SLASH_NOTEHEAD_WIDTH(){return oe.SLASH_NOTEHEAD_WIDTH}static set SLASH_NOTEHEAD_WIDTH(e){oe.SLASH_NOTEHEAD_WIDTH=e}static get STAVE_LINE_DISTANCE(){return oe.STAVE_LINE_DISTANCE}static set STAVE_LINE_DISTANCE(e){oe.STAVE_LINE_DISTANCE=e}static get STAVE_LINE_THICKNESS(){return Pl.Stave.lineWidth}static set STAVE_LINE_THICKNESS(e){Pl.Stave.lineWidth=e,Pl.TabStave.lineWidth=e,Ce.clear("Stave"),Ce.clear("TabStave")}static get STEM_HEIGHT(){return oe.STEM_HEIGHT}static set STEM_HEIGHT(e){oe.STEM_HEIGHT=e}static get STEM_WIDTH(){return oe.STEM_WIDTH}static set STEM_WIDTH(e){oe.STEM_WIDTH=e}static get TIME4_4(){return oe.TIME4_4}static get unicode(){return oe.unicode}static keySignature(e){return oe.keySignature(e)}static hasKeySignature(e){return oe.hasKeySignature(e)}static getKeySignatures(){return oe.getKeySignatures()}static clefProperties(e){return oe.clefProperties(e)}static keyProperties(e,n,i){return oe.keyProperties(e,n,i)}static durationToTicks(e){return oe.durationToTicks(e)}}ge.BUILD={VERSION:h5,ID:f5,DATE:p5,INFO:""};ge.Accidental=ka;ge.Annotation=wi;ge.Articulation=ir;ge.Barline=As;ge.BarNote=Tf;ge.Beam=wo;ge.Bend=Ki;ge.BoundingBox=tr;ge.CanvasContext=pc;ge.ChordSymbol=_t;ge.Clef=Ci;ge.ClefNote=cA;ge.Crescendo=FE;ge.Curve=Cf;ge.Dot=po;ge.EasyScore=Nf;ge.Element=Ye;ge.Factory=Pu;ge.Font=et;ge.Formatter=Kn;ge.Fraction=at;ge.FretHandFinger=wf;ge.GhostNote=hA;ge.GlyphNote=jE;ge.GraceNote=Df;ge.GraceNoteGroup=Du;ge.GraceTabNote=l5;ge.KeyManager=u5;ge.KeySignature=Pc;ge.KeySigNote=fA;ge.Modifier=Re;ge.ModifierContext=Oc;ge.MultiMeasureRest=pA;ge.Music=Ut;ge.Note=mi;ge.NoteHead=yf;ge.NoteSubGroup=WE;ge.Ornament=bi;ge.Parenthesis=au;ge.Parser=Af;ge.PedalMarking=Jt;ge.Registry=fc;ge.RenderContext=ME;ge.Renderer=Vt;ge.RepeatNote=mA;ge.Repetition=un;ge.Stave=Dr;ge.StaveConnector=ot;ge.StaveHairpin=mc;ge.StaveLine=Qi;ge.StaveModifier=rr;ge.StaveNote=Vi;ge.StaveTempo=lA;ge.StaveText=uA;ge.StaveTie=kf;ge.Stem=ve;ge.StringNumber=HE;ge.Stroke=yn;ge.SVGContext=fa;ge.System=gA;ge.TabNote=Ou;ge.TabSlide=gs;ge.TabStave=EA;ge.TabTie=Dc;ge.TextBracket=Gc;ge.TextDynamics=_c;ge.TextNote=Qc;ge.TickContext=ou;ge.TimeSignature=Qs;ge.TimeSigNote=vA;ge.Tremolo=d5;ge.Tuning=Th;ge.Tuplet=Pi;ge.Vibrato=XE;ge.VibratoBracket=Of;ge.Voice=Ts;ge.Volta=dA;ge.RuntimeError=re;ge.Test=void 0;ge.AnnotationHorizontalJustify=ai;ge.AnnotationVerticalJustify=ci;ge.ChordSymbolHorizontalJustify=xi;ge.ChordSymbolVerticalJustify=Ns;ge.SymbolModifiers=kr;ge.CurvePosition=vs;ge.FontWeight=ha;ge.FontStyle=fo;ge.Glyphs=M;ge.ModifierPosition=jt;ge.RendererBackends=Sh;ge.RendererLineEndType=xh;ge.BarlineType=yt;ge.StaveModifierPosition=rt;ge.VoltaType=xr;ge.TextBracketPosition=Ss;ge.TextJustification=_i;ge.VoiceMode=bs;const g5="data:font/woff2;charset=utf-8;base64,",E5="data:font/woff2;charset=utf-8;base64,",v5="data:font/woff2;charset=utf-8;base64,",b5="data:font/woff2;charset=utf-8;base64,",S5="data:font/woff2;charset=utf-8;base64,",x5="data:font/woff2;charset=utf-8;base64,",qE={display:"block"},bA={display:"swap"},T5={display:"swap",weight:"bold"},C5=et.load("Bravura",v5,qE),w5=et.load("Academico",g5,bA),A5=et.load("Academico",E5,T5),N5=et.load("Gonville",b5,qE),y5=et.load("Petaluma",S5,qE),k5=et.load("Petaluma Script",x5,bA),D5=[C5,w5,A5,N5,y5,k5];ge.BUILD.INFO="vexflow";ge.setFonts("Bravura","Academico");Promise.allSettled(D5).then(()=>{});class F1{constructor(e=[]){W(this,"compases",[]);this.compases=e}getStave(e){const n=new Dr(10,0,700);n.addClef("treble").addTimeSignature("4/4");const i=[];for(const s of this.compases){const r=s.getStaveNote();r&&i.push(...r)}return n.setContext(e).draw(),Kn.FormatAndDraw(e,n,i),n}}class U1{constructor(){W(this,"pentagramas",[])}}const O5=Ue({__name:"Tocar_renglonPentagrama",props:{renglon:{},cancion:{}},setup(t){const e=t,n=J(null);return bn(()=>{if(!n.value)return;const i=new Vt(n.value,Vt.Backends.SVG);i.resize(900,100);const s=i.getContext();s.setFillStyle("#a9a8f6"),s.setStrokeStyle("#a9a8f6");for(const r of e.renglon.pentagramas)r.getStave(s)}),(i,s)=>(R(),B("div",null,[N("div",{ref_key:"scoreContainer",ref:n,class:"score"},null,512)]))}}),P5=nt(O5,[["__scopeId","data-v-4ef6dfb6"]]);class V1{constructor(e,n,i,s){W(this,"nota");W(this,"estaEnscala");W(this,"alteracion");W(this,"muestra");this.nota=n,this.estaEnscala=e,this.alteracion=i,this.muestra=s}}class zE{constructor(){W(this,"notas",["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]);W(this,"modos",{});W(this,"modosParaacorde",{});this.modos.mayor=[2,2,1,2,2,2],this.modos.menor=[2,1,2,2,1,2],this.modosParaacorde.mayor=["","m","m","","","m","dim"],this.modosParaacorde.menor=["m","dim","","m","m","",""]}ActualizarEscala(e,n,i){e.escala=i[0];for(let s=0;s<e.acordes.partes.length;s++)for(let r=0;r<e.acordes.partes[s].acordes.length;r++)e.acordes.partes[s].acordes[r]=this.GetAcordesNuevaEscala(e.acordes.partes[s].acordes[r],n,i);return e}GetNotasPosicionadasNuevaEscala(e,n,i){const s=[];for(let r=0;r<e.length;r++){s[r]=[];for(let o=0;o<e[r].length;o++)s[r][o]=this.GetNotaNuevaEscala(e[r][o],n,i)}return s}GetAcordesNuevaEscala(e,n,i){return e.split(" ").map(s=>this.GetNotaNuevaEscala(s,n,i)).join(" ")}GetNotaNuevaEscala(e,n,i){var l;let s=e,r="";s.includes("/")&&(s=s.split("/")[0],r=this.GetNotaNuevaEscala(e.split("/")[1],n,i));const o=((l=e.match(/[0-9]+/))==null?void 0:l[0])||"";s=s.replace(o,"");const a=n.indexOf(s);if(a!==-1)return i[a]+o+(r?`/${r}`:"");let c=0;for(;c<s.length&&a===-1;){const u=s.substring(0,s.length-c);for(let d=0;d<n.length;d++)if(n[d].startsWith(u)){const h=s.substring(u.length);return i[d]+h+o+(r?`/${r}`:"")}c++}return"?"+r?`/${r}`:""}GetNotasPosicionadasEscala(e,n){const i=e.acordes.GetTodosLosAcordes(),s=new Set;i.forEach(a=>{a.split(" ").forEach(c=>{c.trim()!==""&&s.add(c)})});const r=Array.from(s),o=[[],[],[],[],[],[],[],[]];return r.forEach(a=>{const c=this.PosicionNotaEnEscala(n,a);c!==-1?o[c].push(a):o[7].push(a)}),o}PosicionNotaEnEscala(e,n){let i=n;i.includes("/")&&(i=i.split("/")[0]),i=i.replace(/[0-9]/g,"");const s=e.indexOf(i);if(s===-1){for(let r=0;r<e.length;r++)if(e[r].startsWith(i[0]))return r}return s}getDistanciaNotas(e,n,i){const s=this.GetNotasdeescala(i);let r=0;isNaN(parseInt(e.slice(-1)))||(r=parseInt(e.slice(-1)));let o=0;isNaN(parseInt(n.slice(-1)))||(o=parseInt(n.slice(-1)));const a=e.replace(/[0-9]/g,""),c=n.replace(/[0-9]/g,""),l=s.indexOf(a),u=s.indexOf(c);return l-u+(r-o)*7}getAnalisis(e,n){let i=e,s="";const r=["4","5","6","7","9","11","13"];for(let o=0;o<r.length;o++)i.includes(r[o])&&(i=i.replace(r[o],""),s=r[o]);for(let o=0;o<n.length;o++)if(n[o]==i)return new V1(!0,o+1,s,e);return new V1(!1,-1,"",e)}GetNotas(){return this.notas}numeroNota(e){return this.notas.indexOf(e)}nombreNota(e){return this.notas[e]}GetNotasdeescala(e){if(e==null)return[];if(e=="")return[];let n=e,i="mayor";e.includes("m")&&(n=n.replace("m",""),i="menor");let s=this.numeroNota(n);const r=this.modos[i],o=[this.notas[s]];for(let a=0;a<r.length;a++)s+=r[a],o.push(this.notas[s%this.notas.length]);return o}GetAcordesdeescala(e){if(e=="")return[];if(e==null)return[];let n=e,i="mayor";e.includes("m")&&(n=n.replace("m",""),i="menor");let s=this.numeroNota(n);const r=this.modos[i],o=this.modosParaacorde[i],a=[this.notas[s]+o[0]];for(let c=0;c<r.length;c++)s+=r[c],a.push(this.notas[s%this.notas.length]+o[c+1]);return a}esMenor(e,n){const i=this.numeroNota(e),s=this.numeroNota(n);return console.log("Emenor",i,s),i<s}GetNotasdeacorde(e,n){const i=[];let s=e,r=!1,o=!1,a=!1,c=!1,l=!1;e.includes("/")&&(s=e.split("/")[0]),e.includes("4")&&(s=s.replace("4",""),c=!0),e.includes("9")&&(s=s.replace("9",""),l=!0),e.includes("5")&&(s=s.replace("5",""),r=!0),e.includes("6")&&(s=s.replace("6",""),o=!0),e.includes("7")&&(s=s.replace("7",""),a=!0);const u=this.GetNotasdeescala(s),d=this.notas.indexOf(u[0]);let h=n.toString();return i.push(u[0]+h),r||(this.notas.indexOf(u[2])<d&&(h=(n+1).toString()),i.push(u[2]+h)),c&&(this.notas.indexOf(u[3])<d&&(h=(n+1).toString()),i.push(u[3]+h)),this.notas.indexOf(u[4])<d&&(h=(n+1).toString()),i.push(u[4]+h),o&&(this.notas.indexOf(u[5])<d&&(h=(n+1).toString()),i.push(u[5]+h)),a&&(this.notas.indexOf(u[6])<d&&(h=(n+1).toString()),i.push(u[6]+h)),l&&(this.notas.indexOf(u[1])<d?h=(n+2).toString():h=(n+1).toString(),i.push(u[1]+h)),i}}class I5{constructor(){W(this,"Notas",[]);W(this,"duracion","2")}getStaveNote(){for(const i of this.Notas)if(i.nota===void 0||i.octava===void 0)return null;const e=this.Notas.filter(i=>i.nota!==void 0).map(i=>i.nota.toLowerCase()+"/"+i.octava);return[new Vi({keys:e,duration:this.duracion.toString()})]}}class R5{constructor(e,n){W(this,"nota");W(this,"octava");this.nota=e,this.octava=n}}class YE{constructor(){W(this,"compases",[]);W(this,"instrumento","")}}class SA{constructor(){W(this,"notas",[])}}class xA{constructor(e,n){W(this,"nota");W(this,"duracion");this.nota=e,this.duracion=n}}class kg{constructor(){W(this,"renglones",[])}}class TA{constructor(){W(this,"musica",new zE)}creaPentagrama(e){const n=new YE;n.instrumento="Piano-izq";const i=e.acordes.GetTodosLosAcordes();for(const s of i){let r=s;s.includes(" ")&&(r=s.split(" ")[0]);const o=this.musica.GetNotasdeacorde(r,4).map(c=>new xA(c,"1")),a=new SA;a.notas.push(o),n.compases.push(a)}return n}creaDisplayPentagrama(e){const n=new kg,i=e.pentagramas;if(i.length===0)return n;const s=i[0];let r=new U1;r.pentagramas.push(new F1);for(let o=0;o<s.compases.length;o++){const a=this.creaCompasPentagrama(s.compases[o]);r.pentagramas[0].compases.push(a),o>0&&(o+1)%4===0&&(n.renglones.push(r),r=new U1,r.pentagramas.push(new F1))}return r.pentagramas[0].compases.length>0&&n.renglones.push(r),n}creaCompasPentagrama(e){const n=new I5;n.duracion="1";for(let i=0;i<e.notas.length;i++)for(const s of e.notas[i]){n.duracion=s.duracion,console.log("ESTABLECE DURACION:",n.duracion);let r=s.nota,o=4;const a=r.match(/(\D+)(\d+)$/);a&&(r=a[1],o=parseInt(a[2]));const c=new R5(r,o);n.Notas.push(c)}return n}}const L5={class:"componenteMusical"},M5=Ue({__name:"Tocar_Pentagrama",props:{compas:{},cancion:{}},setup(t,{expose:e}){const n=t,i=J(new kg),s=new TA;bn(()=>{r()});function r(){console.log("Actualizando display");const o=s.creaDisplayPentagrama(n.cancion);i.value=new kg,i.value=o}return gt(()=>n.cancion,()=>{r()}),e({Actualizar:r}),(o,a)=>(R(),B("div",L5,[N("div",null,[(R(!0),B(be,null,We(o.cancion.pentagramas,(c,l)=>(R(),B("div",{key:l},ce(c.instrumento),1))),128))]),(R(!0),B(be,null,We(i.value.renglones,(c,l)=>(R(),B("div",{key:l},[Qe(P5,{renglon:c,cancion:n.cancion},null,8,["renglon","cancion"])]))),128))]))}}),CA=nt(M5,[["__scopeId","data-v-682d358f"]]);var Qd={exports:{}},Wm={exports:{}},Hm={};/**
* @vue/compiler-core v3.5.16
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const Ic=Symbol(""),gc=Symbol(""),Pf=Symbol(""),cu=Symbol(""),JE=Symbol(""),Ao=Symbol(""),ZE=Symbol(""),KE=Symbol(""),If=Symbol(""),Rf=Symbol(""),$c=Symbol(""),Lf=Symbol(""),QE=Symbol(""),Mf=Symbol(""),Bf=Symbol(""),Ff=Symbol(""),Uf=Symbol(""),Vf=Symbol(""),Wf=Symbol(""),GE=Symbol(""),_E=Symbol(""),Iu=Symbol(""),lu=Symbol(""),Hf=Symbol(""),Xf=Symbol(""),Rc=Symbol(""),el=Symbol(""),jf=Symbol(""),Ch=Symbol(""),wA=Symbol(""),wh=Symbol(""),uu=Symbol(""),AA=Symbol(""),NA=Symbol(""),qf=Symbol(""),yA=Symbol(""),kA=Symbol(""),zf=Symbol(""),$E=Symbol(""),va={[Ic]:"Fragment",[gc]:"Teleport",[Pf]:"Suspense",[cu]:"KeepAlive",[JE]:"BaseTransition",[Ao]:"openBlock",[ZE]:"createBlock",[KE]:"createElementBlock",[If]:"createVNode",[Rf]:"createElementVNode",[$c]:"createCommentVNode",[Lf]:"createTextVNode",[QE]:"createStaticVNode",[Mf]:"resolveComponent",[Bf]:"resolveDynamicComponent",[Ff]:"resolveDirective",[Uf]:"resolveFilter",[Vf]:"withDirectives",[Wf]:"renderList",[GE]:"renderSlot",[_E]:"createSlots",[Iu]:"toDisplayString",[lu]:"mergeProps",[Hf]:"normalizeClass",[Xf]:"normalizeStyle",[Rc]:"normalizeProps",[el]:"guardReactiveProps",[jf]:"toHandlers",[Ch]:"camelize",[wA]:"capitalize",[wh]:"toHandlerKey",[uu]:"setBlockTracking",[AA]:"pushScopeId",[NA]:"popScopeId",[qf]:"withCtx",[yA]:"unref",[kA]:"isRef",[zf]:"withMemo",[$E]:"isMemoSame"};function DA(t){Object.getOwnPropertySymbols(t).forEach(e=>{va[e]=t[e]})}const B5={HTML:0,0:"HTML",SVG:1,1:"SVG",MATH_ML:2,2:"MATH_ML"},F5={ROOT:0,0:"ROOT",ELEMENT:1,1:"ELEMENT",TEXT:2,2:"TEXT",COMMENT:3,3:"COMMENT",SIMPLE_EXPRESSION:4,4:"SIMPLE_EXPRESSION",INTERPOLATION:5,5:"INTERPOLATION",ATTRIBUTE:6,6:"ATTRIBUTE",DIRECTIVE:7,7:"DIRECTIVE",COMPOUND_EXPRESSION:8,8:"COMPOUND_EXPRESSION",IF:9,9:"IF",IF_BRANCH:10,10:"IF_BRANCH",FOR:11,11:"FOR",TEXT_CALL:12,12:"TEXT_CALL",VNODE_CALL:13,13:"VNODE_CALL",JS_CALL_EXPRESSION:14,14:"JS_CALL_EXPRESSION",JS_OBJECT_EXPRESSION:15,15:"JS_OBJECT_EXPRESSION",JS_PROPERTY:16,16:"JS_PROPERTY",JS_ARRAY_EXPRESSION:17,17:"JS_ARRAY_EXPRESSION",JS_FUNCTION_EXPRESSION:18,18:"JS_FUNCTION_EXPRESSION",JS_CONDITIONAL_EXPRESSION:19,19:"JS_CONDITIONAL_EXPRESSION",JS_CACHE_EXPRESSION:20,20:"JS_CACHE_EXPRESSION",JS_BLOCK_STATEMENT:21,21:"JS_BLOCK_STATEMENT",JS_TEMPLATE_LITERAL:22,22:"JS_TEMPLATE_LITERAL",JS_IF_STATEMENT:23,23:"JS_IF_STATEMENT",JS_ASSIGNMENT_EXPRESSION:24,24:"JS_ASSIGNMENT_EXPRESSION",JS_SEQUENCE_EXPRESSION:25,25:"JS_SEQUENCE_EXPRESSION",JS_RETURN_STATEMENT:26,26:"JS_RETURN_STATEMENT"},U5={ELEMENT:0,0:"ELEMENT",COMPONENT:1,1:"COMPONENT",SLOT:2,2:"SLOT",TEMPLATE:3,3:"TEMPLATE"},V5={NOT_CONSTANT:0,0:"NOT_CONSTANT",CAN_SKIP_PATCH:1,1:"CAN_SKIP_PATCH",CAN_CACHE:2,2:"CAN_CACHE",CAN_STRINGIFY:3,3:"CAN_STRINGIFY"},Rn={start:{line:1,column:1,offset:0},end:{line:1,column:1,offset:0},source:""};function OA(t,e=""){return{type:0,source:e,children:t,helpers:new Set,components:[],directives:[],hoists:[],imports:[],cached:[],temps:0,codegenNode:void 0,loc:Rn}}function Lc(t,e,n,i,s,r,o,a=!1,c=!1,l=!1,u=Rn){return t&&(a?(t.helper(Ao),t.helper(xa(t.inSSR,l))):t.helper(Sa(t.inSSR,l)),o&&t.helper(Vf)),{type:13,tag:e,props:n,children:i,patchFlag:s,dynamicProps:r,directives:o,isBlock:a,disableTracking:c,isComponent:l,loc:u}}function bo(t,e=Rn){return{type:17,loc:e,elements:t}}function Li(t,e=Rn){return{type:15,loc:e,properties:t}}function an(t,e){return{type:16,loc:Rn,key:ze(t)?Ke(t,!0):t,value:e}}function Ke(t,e=!1,n=Rn,i=0){return{type:4,loc:n,content:t,isStatic:e,constType:e?3:i}}function W5(t,e){return{type:5,loc:e,content:ze(t)?Ke(t,!1,e):t}}function is(t,e=Rn){return{type:8,loc:e,children:t}}function Cn(t,e=[],n=Rn){return{type:14,loc:n,callee:t,arguments:e}}function ba(t,e=void 0,n=!1,i=!1,s=Rn){return{type:18,params:t,returns:e,newline:n,isSlot:i,loc:s}}function Ah(t,e,n,i=!0){return{type:19,test:t,consequent:e,alternate:n,newline:i,loc:Rn}}function PA(t,e,n=!1,i=!1){return{type:20,index:t,value:e,needPauseTracking:n,inVOnce:i,needArraySpread:!1,loc:Rn}}function IA(t){return{type:21,body:t,loc:Rn}}function H5(t){return{type:22,elements:t,loc:Rn}}function X5(t,e,n){return{type:23,test:t,consequent:e,alternate:n,loc:Rn}}function j5(t,e){return{type:24,left:t,right:e,loc:Rn}}function q5(t){return{type:25,expressions:t,loc:Rn}}function z5(t){return{type:26,returns:t,loc:Rn}}function Sa(t,e){return t||e?If:Rf}function xa(t,e){return t||e?ZE:KE}function Yf(t,{helper:e,removeHelper:n,inSSR:i}){t.isBlock||(t.isBlock=!0,n(Sa(i,t.isComponent)),e(Ao),e(xa(i,t.isComponent)))}const W1=new Uint8Array([123,123]),H1=new Uint8Array([125,125]);function X1(t){return t>=97&&t<=122||t>=65&&t<=90}function Ii(t){return t===32||t===10||t===9||t===12||t===13}function _r(t){return t===47||t===62||Ii(t)}function Nh(t){const e=new Uint8Array(t.length);for(let n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}const Xn={Cdata:new Uint8Array([67,68,65,84,65,91]),CdataEnd:new Uint8Array([93,93,62]),CommentEnd:new Uint8Array([45,45,62]),ScriptEnd:new Uint8Array([60,47,115,99,114,105,112,116]),StyleEnd:new Uint8Array([60,47,115,116,121,108,101]),TitleEnd:new Uint8Array([60,47,116,105,116,108,101]),TextareaEnd:new Uint8Array([60,47,116,101,120,116,97,114,101,97])};class Y5{constructor(e,n){this.stack=e,this.cbs=n,this.state=1,this.buffer="",this.sectionStart=0,this.index=0,this.entityStart=0,this.baseState=1,this.inRCDATA=!1,this.inXML=!1,this.inVPre=!1,this.newlines=[],this.mode=0,this.delimiterOpen=W1,this.delimiterClose=H1,this.delimiterIndex=-1,this.currentSequence=void 0,this.sequenceIndex=0}get inSFCRoot(){return this.mode===2&&this.stack.length===0}reset(){this.state=1,this.mode=0,this.buffer="",this.sectionStart=0,this.index=0,this.baseState=1,this.inRCDATA=!1,this.currentSequence=void 0,this.newlines.length=0,this.delimiterOpen=W1,this.delimiterClose=H1}getPos(e){let n=1,i=e+1;for(let s=this.newlines.length-1;s>=0;s--){const r=this.newlines[s];if(e>r){n=s+2,i=e-r;break}}return{column:i,line:n,offset:e}}peek(){return this.buffer.charCodeAt(this.index+1)}stateText(e){e===60?(this.index>this.sectionStart&&this.cbs.ontext(this.sectionStart,this.index),this.state=5,this.sectionStart=this.index):!this.inVPre&&e===this.delimiterOpen[0]&&(this.state=2,this.delimiterIndex=0,this.stateInterpolationOpen(e))}stateInterpolationOpen(e){if(e===this.delimiterOpen[this.delimiterIndex])if(this.delimiterIndex===this.delimiterOpen.length-1){const n=this.index+1-this.delimiterOpen.length;n>this.sectionStart&&this.cbs.ontext(this.sectionStart,n),this.state=3,this.sectionStart=n}else this.delimiterIndex++;else this.inRCDATA?(this.state=32,this.stateInRCDATA(e)):(this.state=1,this.stateText(e))}stateInterpolation(e){e===this.delimiterClose[0]&&(this.state=4,this.delimiterIndex=0,this.stateInterpolationClose(e))}stateInterpolationClose(e){e===this.delimiterClose[this.delimiterIndex]?this.delimiterIndex===this.delimiterClose.length-1?(this.cbs.oninterpolation(this.sectionStart,this.index+1),this.inRCDATA?this.state=32:this.state=1,this.sectionStart=this.index+1):this.delimiterIndex++:(this.state=3,this.stateInterpolation(e))}stateSpecialStartSequence(e){const n=this.sequenceIndex===this.currentSequence.length;if(!(n?_r(e):(e|32)===this.currentSequence[this.sequenceIndex]))this.inRCDATA=!1;else if(!n){this.sequenceIndex++;return}this.sequenceIndex=0,this.state=6,this.stateInTagName(e)}stateInRCDATA(e){if(this.sequenceIndex===this.currentSequence.length){if(e===62||Ii(e)){const n=this.index-this.currentSequence.length;if(this.sectionStart<n){const i=this.index;this.index=n,this.cbs.ontext(this.sectionStart,n),this.index=i}this.sectionStart=n+2,this.stateInClosingTagName(e),this.inRCDATA=!1;return}this.sequenceIndex=0}(e|32)===this.currentSequence[this.sequenceIndex]?this.sequenceIndex+=1:this.sequenceIndex===0?this.currentSequence===Xn.TitleEnd||this.currentSequence===Xn.TextareaEnd&&!this.inSFCRoot?!this.inVPre&&e===this.delimiterOpen[0]&&(this.state=2,this.delimiterIndex=0,this.stateInterpolationOpen(e)):this.fastForwardTo(60)&&(this.sequenceIndex=1):this.sequenceIndex=+(e===60)}stateCDATASequence(e){e===Xn.Cdata[this.sequenceIndex]?++this.sequenceIndex===Xn.Cdata.length&&(this.state=28,this.currentSequence=Xn.CdataEnd,this.sequenceIndex=0,this.sectionStart=this.index+1):(this.sequenceIndex=0,this.state=23,this.stateInDeclaration(e))}fastForwardTo(e){for(;++this.index<this.buffer.length;){const n=this.buffer.charCodeAt(this.index);if(n===10&&this.newlines.push(this.index),n===e)return!0}return this.index=this.buffer.length-1,!1}stateInCommentLike(e){e===this.currentSequence[this.sequenceIndex]?++this.sequenceIndex===this.currentSequence.length&&(this.currentSequence===Xn.CdataEnd?this.cbs.oncdata(this.sectionStart,this.index-2):this.cbs.oncomment(this.sectionStart,this.index-2),this.sequenceIndex=0,this.sectionStart=this.index+1,this.state=1):this.sequenceIndex===0?this.fastForwardTo(this.currentSequence[0])&&(this.sequenceIndex=1):e!==this.currentSequence[this.sequenceIndex-1]&&(this.sequenceIndex=0)}startSpecial(e,n){this.enterRCDATA(e,n),this.state=31}enterRCDATA(e,n){this.inRCDATA=!0,this.currentSequence=e,this.sequenceIndex=n}stateBeforeTagName(e){e===33?(this.state=22,this.sectionStart=this.index+1):e===63?(this.state=24,this.sectionStart=this.index+1):X1(e)?(this.sectionStart=this.index,this.mode===0?this.state=6:this.inSFCRoot?this.state=34:this.inXML?this.state=6:e===116?this.state=30:this.state=e===115?29:6):e===47?this.state=8:(this.state=1,this.stateText(e))}stateInTagName(e){_r(e)&&this.handleTagName(e)}stateInSFCRootTagName(e){if(_r(e)){const n=this.buffer.slice(this.sectionStart,this.index);n!=="template"&&this.enterRCDATA(Nh("</"+n),0),this.handleTagName(e)}}handleTagName(e){this.cbs.onopentagname(this.sectionStart,this.index),this.sectionStart=-1,this.state=11,this.stateBeforeAttrName(e)}stateBeforeClosingTagName(e){Ii(e)||(e===62?(this.state=1,this.sectionStart=this.index+1):(this.state=X1(e)?9:27,this.sectionStart=this.index))}stateInClosingTagName(e){(e===62||Ii(e))&&(this.cbs.onclosetag(this.sectionStart,this.index),this.sectionStart=-1,this.state=10,this.stateAfterClosingTagName(e))}stateAfterClosingTagName(e){e===62&&(this.state=1,this.sectionStart=this.index+1)}stateBeforeAttrName(e){e===62?(this.cbs.onopentagend(this.index),this.inRCDATA?this.state=32:this.state=1,this.sectionStart=this.index+1):e===47?this.state=7:e===60&&this.peek()===47?(this.cbs.onopentagend(this.index),this.state=5,this.sectionStart=this.index):Ii(e)||this.handleAttrStart(e)}handleAttrStart(e){e===118&&this.peek()===45?(this.state=13,this.sectionStart=this.index):e===46||e===58||e===64||e===35?(this.cbs.ondirname(this.index,this.index+1),this.state=14,this.sectionStart=this.index+1):(this.state=12,this.sectionStart=this.index)}stateInSelfClosingTag(e){e===62?(this.cbs.onselfclosingtag(this.index),this.state=1,this.sectionStart=this.index+1,this.inRCDATA=!1):Ii(e)||(this.state=11,this.stateBeforeAttrName(e))}stateInAttrName(e){(e===61||_r(e))&&(this.cbs.onattribname(this.sectionStart,this.index),this.handleAttrNameEnd(e))}stateInDirName(e){e===61||_r(e)?(this.cbs.ondirname(this.sectionStart,this.index),this.handleAttrNameEnd(e)):e===58?(this.cbs.ondirname(this.sectionStart,this.index),this.state=14,this.sectionStart=this.index+1):e===46&&(this.cbs.ondirname(this.sectionStart,this.index),this.state=16,this.sectionStart=this.index+1)}stateInDirArg(e){e===61||_r(e)?(this.cbs.ondirarg(this.sectionStart,this.index),this.handleAttrNameEnd(e)):e===91?this.state=15:e===46&&(this.cbs.ondirarg(this.sectionStart,this.index),this.state=16,this.sectionStart=this.index+1)}stateInDynamicDirArg(e){e===93?this.state=14:(e===61||_r(e))&&(this.cbs.ondirarg(this.sectionStart,this.index+1),this.handleAttrNameEnd(e))}stateInDirModifier(e){e===61||_r(e)?(this.cbs.ondirmodifier(this.sectionStart,this.index),this.handleAttrNameEnd(e)):e===46&&(this.cbs.ondirmodifier(this.sectionStart,this.index),this.sectionStart=this.index+1)}handleAttrNameEnd(e){this.sectionStart=this.index,this.state=17,this.cbs.onattribnameend(this.index),this.stateAfterAttrName(e)}stateAfterAttrName(e){e===61?this.state=18:e===47||e===62?(this.cbs.onattribend(0,this.sectionStart),this.sectionStart=-1,this.state=11,this.stateBeforeAttrName(e)):Ii(e)||(this.cbs.onattribend(0,this.sectionStart),this.handleAttrStart(e))}stateBeforeAttrValue(e){e===34?(this.state=19,this.sectionStart=this.index+1):e===39?(this.state=20,this.sectionStart=this.index+1):Ii(e)||(this.sectionStart=this.index,this.state=21,this.stateInAttrValueNoQuotes(e))}handleInAttrValue(e,n){(e===n||this.fastForwardTo(n))&&(this.cbs.onattribdata(this.sectionStart,this.index),this.sectionStart=-1,this.cbs.onattribend(n===34?3:2,this.index+1),this.state=11)}stateInAttrValueDoubleQuotes(e){this.handleInAttrValue(e,34)}stateInAttrValueSingleQuotes(e){this.handleInAttrValue(e,39)}stateInAttrValueNoQuotes(e){Ii(e)||e===62?(this.cbs.onattribdata(this.sectionStart,this.index),this.sectionStart=-1,this.cbs.onattribend(1,this.index),this.state=11,this.stateBeforeAttrName(e)):(e===39||e===60||e===61||e===96)&&this.cbs.onerr(18,this.index)}stateBeforeDeclaration(e){e===91?(this.state=26,this.sequenceIndex=0):this.state=e===45?25:23}stateInDeclaration(e){(e===62||this.fastForwardTo(62))&&(this.state=1,this.sectionStart=this.index+1)}stateInProcessingInstruction(e){(e===62||this.fastForwardTo(62))&&(this.cbs.onprocessinginstruction(this.sectionStart,this.index),this.state=1,this.sectionStart=this.index+1)}stateBeforeComment(e){e===45?(this.state=28,this.currentSequence=Xn.CommentEnd,this.sequenceIndex=2,this.sectionStart=this.index+1):this.state=23}stateInSpecialComment(e){(e===62||this.fastForwardTo(62))&&(this.cbs.oncomment(this.sectionStart,this.index),this.state=1,this.sectionStart=this.index+1)}stateBeforeSpecialS(e){e===Xn.ScriptEnd[3]?this.startSpecial(Xn.ScriptEnd,4):e===Xn.StyleEnd[3]?this.startSpecial(Xn.StyleEnd,4):(this.state=6,this.stateInTagName(e))}stateBeforeSpecialT(e){e===Xn.TitleEnd[3]?this.startSpecial(Xn.TitleEnd,4):e===Xn.TextareaEnd[3]?this.startSpecial(Xn.TextareaEnd,4):(this.state=6,this.stateInTagName(e))}startEntity(){}stateInEntity(){}parse(e){for(this.buffer=e;this.index<this.buffer.length;){const n=this.buffer.charCodeAt(this.index);switch(n===10&&this.newlines.push(this.index),this.state){case 1:{this.stateText(n);break}case 2:{this.stateInterpolationOpen(n);break}case 3:{this.stateInterpolation(n);break}case 4:{this.stateInterpolationClose(n);break}case 31:{this.stateSpecialStartSequence(n);break}case 32:{this.stateInRCDATA(n);break}case 26:{this.stateCDATASequence(n);break}case 19:{this.stateInAttrValueDoubleQuotes(n);break}case 12:{this.stateInAttrName(n);break}case 13:{this.stateInDirName(n);break}case 14:{this.stateInDirArg(n);break}case 15:{this.stateInDynamicDirArg(n);break}case 16:{this.stateInDirModifier(n);break}case 28:{this.stateInCommentLike(n);break}case 27:{this.stateInSpecialComment(n);break}case 11:{this.stateBeforeAttrName(n);break}case 6:{this.stateInTagName(n);break}case 34:{this.stateInSFCRootTagName(n);break}case 9:{this.stateInClosingTagName(n);break}case 5:{this.stateBeforeTagName(n);break}case 17:{this.stateAfterAttrName(n);break}case 20:{this.stateInAttrValueSingleQuotes(n);break}case 18:{this.stateBeforeAttrValue(n);break}case 8:{this.stateBeforeClosingTagName(n);break}case 10:{this.stateAfterClosingTagName(n);break}case 29:{this.stateBeforeSpecialS(n);break}case 30:{this.stateBeforeSpecialT(n);break}case 21:{this.stateInAttrValueNoQuotes(n);break}case 7:{this.stateInSelfClosingTag(n);break}case 23:{this.stateInDeclaration(n);break}case 22:{this.stateBeforeDeclaration(n);break}case 25:{this.stateBeforeComment(n);break}case 24:{this.stateInProcessingInstruction(n);break}case 33:{this.stateInEntity();break}}this.index++}this.cleanup(),this.finish()}cleanup(){this.sectionStart!==this.index&&(this.state===1||this.state===32&&this.sequenceIndex===0?(this.cbs.ontext(this.sectionStart,this.index),this.sectionStart=this.index):(this.state===19||this.state===20||this.state===21)&&(this.cbs.onattribdata(this.sectionStart,this.index),this.sectionStart=this.index))}finish(){this.handleTrailingData(),this.cbs.onend()}handleTrailingData(){const e=this.buffer.length;this.sectionStart>=e||(this.state===28?this.currentSequence===Xn.CdataEnd?this.cbs.oncdata(this.sectionStart,e):this.cbs.oncomment(this.sectionStart,e):this.state===6||this.state===11||this.state===18||this.state===17||this.state===12||this.state===13||this.state===14||this.state===15||this.state===16||this.state===20||this.state===19||this.state===21||this.state===9||this.cbs.ontext(this.sectionStart,e))}emitCodePoint(e,n){}}const J5={COMPILER_IS_ON_ELEMENT:"COMPILER_IS_ON_ELEMENT",COMPILER_V_BIND_SYNC:"COMPILER_V_BIND_SYNC",COMPILER_V_BIND_OBJECT_ORDER:"COMPILER_V_BIND_OBJECT_ORDER",COMPILER_V_ON_NATIVE:"COMPILER_V_ON_NATIVE",COMPILER_V_IF_V_FOR_PRECEDENCE:"COMPILER_V_IF_V_FOR_PRECEDENCE",COMPILER_NATIVE_TEMPLATE:"COMPILER_NATIVE_TEMPLATE",COMPILER_INLINE_TEMPLATE:"COMPILER_INLINE_TEMPLATE",COMPILER_FILTERS:"COMPILER_FILTERS"},Z5={COMPILER_IS_ON_ELEMENT:{message:'Platform-native elements with "is" prop will no longer be treated as components in Vue 3 unless the "is" value is explicitly prefixed with "vue:".',link:"https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html"},COMPILER_V_BIND_SYNC:{message:t=>`.sync modifier for v-bind has been removed. Use v-model with argument instead. \`v-bind:${t}.sync\` should be changed to \`v-model:${t}\`.`,link:"https://v3-migration.vuejs.org/breaking-changes/v-model.html"},COMPILER_V_BIND_OBJECT_ORDER:{message:'v-bind="obj" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.',link:"https://v3-migration.vuejs.org/breaking-changes/v-bind.html"},COMPILER_V_ON_NATIVE:{message:".native modifier for v-on has been removed as is no longer necessary.",link:"https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html"},COMPILER_V_IF_V_FOR_PRECEDENCE:{message:"v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.",link:"https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html"},COMPILER_NATIVE_TEMPLATE:{message:"<template> with no special directives will render as a native template element instead of its inner content in Vue 3."},COMPILER_INLINE_TEMPLATE:{message:'"inline-template" has been removed in Vue 3.',link:"https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html"},COMPILER_FILTERS:{message:'filters have been removed in Vue 3. The "|" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.',link:"https://v3-migration.vuejs.org/breaking-changes/filters.html"}};function Dg(t,{compatConfig:e}){const n=e&&e[t];return t==="MODE"?n||3:n}function pa(t,e){const n=Dg("MODE",e),i=Dg(t,e);return n===3?i===!0:i!==!1}function Mc(t,e,n,...i){return pa(t,e)}function K5(t,e,n,...i){if(Dg(t,e)==="suppress-warning")return;const{message:r,link:o}=Z5[t],a=`(deprecation ${t}) ${typeof r=="function"?r(...i):r}${o?`
  Details: ${o}`:""}`,c=new SyntaxError(a);c.code=t,n&&(c.loc=n),e.onWarn(c)}function e0(t){throw t}function RA(t){}function $t(t,e,n,i){const s=`https://vuejs.org/error-reference/#compiler-${t}`,r=new SyntaxError(String(s));return r.code=t,r.loc=e,r}const Q5={ABRUPT_CLOSING_OF_EMPTY_COMMENT:0,0:"ABRUPT_CLOSING_OF_EMPTY_COMMENT",CDATA_IN_HTML_CONTENT:1,1:"CDATA_IN_HTML_CONTENT",DUPLICATE_ATTRIBUTE:2,2:"DUPLICATE_ATTRIBUTE",END_TAG_WITH_ATTRIBUTES:3,3:"END_TAG_WITH_ATTRIBUTES",END_TAG_WITH_TRAILING_SOLIDUS:4,4:"END_TAG_WITH_TRAILING_SOLIDUS",EOF_BEFORE_TAG_NAME:5,5:"EOF_BEFORE_TAG_NAME",EOF_IN_CDATA:6,6:"EOF_IN_CDATA",EOF_IN_COMMENT:7,7:"EOF_IN_COMMENT",EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT:8,8:"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT",EOF_IN_TAG:9,9:"EOF_IN_TAG",INCORRECTLY_CLOSED_COMMENT:10,10:"INCORRECTLY_CLOSED_COMMENT",INCORRECTLY_OPENED_COMMENT:11,11:"INCORRECTLY_OPENED_COMMENT",INVALID_FIRST_CHARACTER_OF_TAG_NAME:12,12:"INVALID_FIRST_CHARACTER_OF_TAG_NAME",MISSING_ATTRIBUTE_VALUE:13,13:"MISSING_ATTRIBUTE_VALUE",MISSING_END_TAG_NAME:14,14:"MISSING_END_TAG_NAME",MISSING_WHITESPACE_BETWEEN_ATTRIBUTES:15,15:"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES",NESTED_COMMENT:16,16:"NESTED_COMMENT",UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME:17,17:"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME",UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE:18,18:"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE",UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME:19,19:"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME",UNEXPECTED_NULL_CHARACTER:20,20:"UNEXPECTED_NULL_CHARACTER",UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME:21,21:"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME",UNEXPECTED_SOLIDUS_IN_TAG:22,22:"UNEXPECTED_SOLIDUS_IN_TAG",X_INVALID_END_TAG:23,23:"X_INVALID_END_TAG",X_MISSING_END_TAG:24,24:"X_MISSING_END_TAG",X_MISSING_INTERPOLATION_END:25,25:"X_MISSING_INTERPOLATION_END",X_MISSING_DIRECTIVE_NAME:26,26:"X_MISSING_DIRECTIVE_NAME",X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END:27,27:"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END",X_V_IF_NO_EXPRESSION:28,28:"X_V_IF_NO_EXPRESSION",X_V_IF_SAME_KEY:29,29:"X_V_IF_SAME_KEY",X_V_ELSE_NO_ADJACENT_IF:30,30:"X_V_ELSE_NO_ADJACENT_IF",X_V_FOR_NO_EXPRESSION:31,31:"X_V_FOR_NO_EXPRESSION",X_V_FOR_MALFORMED_EXPRESSION:32,32:"X_V_FOR_MALFORMED_EXPRESSION",X_V_FOR_TEMPLATE_KEY_PLACEMENT:33,33:"X_V_FOR_TEMPLATE_KEY_PLACEMENT",X_V_BIND_NO_EXPRESSION:34,34:"X_V_BIND_NO_EXPRESSION",X_V_ON_NO_EXPRESSION:35,35:"X_V_ON_NO_EXPRESSION",X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET:36,36:"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET",X_V_SLOT_MIXED_SLOT_USAGE:37,37:"X_V_SLOT_MIXED_SLOT_USAGE",X_V_SLOT_DUPLICATE_SLOT_NAMES:38,38:"X_V_SLOT_DUPLICATE_SLOT_NAMES",X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN:39,39:"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN",X_V_SLOT_MISPLACED:40,40:"X_V_SLOT_MISPLACED",X_V_MODEL_NO_EXPRESSION:41,41:"X_V_MODEL_NO_EXPRESSION",X_V_MODEL_MALFORMED_EXPRESSION:42,42:"X_V_MODEL_MALFORMED_EXPRESSION",X_V_MODEL_ON_SCOPE_VARIABLE:43,43:"X_V_MODEL_ON_SCOPE_VARIABLE",X_V_MODEL_ON_PROPS:44,44:"X_V_MODEL_ON_PROPS",X_INVALID_EXPRESSION:45,45:"X_INVALID_EXPRESSION",X_KEEP_ALIVE_INVALID_CHILDREN:46,46:"X_KEEP_ALIVE_INVALID_CHILDREN",X_PREFIX_ID_NOT_SUPPORTED:47,47:"X_PREFIX_ID_NOT_SUPPORTED",X_MODULE_MODE_NOT_SUPPORTED:48,48:"X_MODULE_MODE_NOT_SUPPORTED",X_CACHE_HANDLER_NOT_SUPPORTED:49,49:"X_CACHE_HANDLER_NOT_SUPPORTED",X_SCOPE_ID_NOT_SUPPORTED:50,50:"X_SCOPE_ID_NOT_SUPPORTED",X_VNODE_HOOKS:51,51:"X_VNODE_HOOKS",X_V_BIND_INVALID_SAME_NAME_ARGUMENT:52,52:"X_V_BIND_INVALID_SAME_NAME_ARGUMENT",__EXTEND_POINT__:53,53:"__EXTEND_POINT__"},G5={0:"Illegal comment.",1:"CDATA section is allowed only in XML context.",2:"Duplicate attribute.",3:"End tag cannot have attributes.",4:"Illegal '/' in tags.",5:"Unexpected EOF in tag.",6:"Unexpected EOF in CDATA section.",7:"Unexpected EOF in comment.",8:"Unexpected EOF in script.",9:"Unexpected EOF in tag.",10:"Incorrectly closed comment.",11:"Incorrectly opened comment.",12:"Illegal tag name. Use '&lt;' to print '<'.",13:"Attribute value was expected.",14:"End tag name was expected.",15:"Whitespace was expected.",16:"Unexpected '<!--' in comment.",17:`Attribute name cannot contain U+0022 ("), U+0027 ('), and U+003C (<).`,18:"Unquoted attribute value cannot contain U+0022 (\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).",19:"Attribute name cannot start with '='.",21:"'<?' is allowed only in XML context.",20:"Unexpected null character.",22:"Illegal '/' in tags.",23:"Invalid end tag.",24:"Element is missing end tag.",25:"Interpolation end sign was not found.",27:"End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.",26:"Legal directive name was expected.",28:"v-if/v-else-if is missing expression.",29:"v-if/else branches must use unique keys.",30:"v-else/v-else-if has no adjacent v-if or v-else-if.",31:"v-for is missing expression.",32:"v-for has invalid expression.",33:"<template v-for> key should be placed on the <template> tag.",34:"v-bind is missing expression.",52:"v-bind with same-name shorthand only allows static argument.",35:"v-on is missing expression.",36:"Unexpected custom directive on <slot> outlet.",37:"Mixed v-slot usage on both the component and nested <template>. When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.",38:"Duplicate slot names found. ",39:"Extraneous children found when component already has explicitly named default slot. These children will be ignored.",40:"v-slot can only be used on components or <template> tags.",41:"v-model is missing expression.",42:"v-model value must be a valid JavaScript member expression.",43:"v-model cannot be used on v-for or v-slot scope variables because they are not writable.",44:`v-model cannot be used on a prop, because local prop bindings are not writable.
Use a v-bind binding combined with a v-on listener that emits update:x event instead.`,45:"Error parsing JavaScript expression: ",46:"<KeepAlive> expects exactly one child component.",51:"@vnode-* hooks in templates are no longer supported. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support has been removed in 3.4.",47:'"prefixIdentifiers" option is not supported in this build of compiler.',48:"ES module mode is not supported in this build of compiler.",49:'"cacheHandlers" option is only supported when the "prefixIdentifiers" option is enabled.',50:'"scopeId" option is only supported in module mode.',53:""};function _5(t,e,n=!1,i=[],s=Object.create(null)){}function $5(t,e,n){return!1}function e6(t,e){if(t&&(t.type==="ObjectProperty"||t.type==="ArrayPattern")){let n=e.length;for(;n--;){const i=e[n];if(i.type==="AssignmentExpression")return!0;if(i.type!=="ObjectProperty"&&!i.type.endsWith("Pattern"))break}}return!1}function t6(t){let e=t.length;for(;e--;){const n=t[e];if(n.type==="NewExpression")return!0;if(n.type!=="MemberExpression")break}return!1}function n6(t,e){for(const n of t.params)for(const i of Ar(n))e(i)}function i6(t,e){for(const n of t.body)if(n.type==="VariableDeclaration"){if(n.declare)continue;for(const i of n.declarations)for(const s of Ar(i.id))e(s)}else if(n.type==="FunctionDeclaration"||n.type==="ClassDeclaration"){if(n.declare||!n.id)continue;e(n.id)}else s6(n)&&r6(n,!0,e)}function s6(t){return t.type==="ForOfStatement"||t.type==="ForInStatement"||t.type==="ForStatement"}function r6(t,e,n){const i=t.type==="ForStatement"?t.init:t.left;if(i&&i.type==="VariableDeclaration"&&(i.kind==="var"&&e))for(const s of i.declarations)for(const r of Ar(s.id))n(r)}function Ar(t,e=[]){switch(t.type){case"Identifier":e.push(t);break;case"MemberExpression":let n=t;for(;n.type==="MemberExpression";)n=n.object;e.push(n);break;case"ObjectPattern":for(const i of t.properties)i.type==="RestElement"?Ar(i.argument,e):Ar(i.value,e);break;case"ArrayPattern":t.elements.forEach(i=>{i&&Ar(i,e)});break;case"RestElement":Ar(t.argument,e);break;case"AssignmentPattern":Ar(t.left,e);break}return e}const o6=t=>/Function(?:Expression|Declaration)$|Method$/.test(t.type),LA=t=>t&&(t.type==="ObjectProperty"||t.type==="ObjectMethod")&&!t.computed,a6=(t,e)=>LA(e)&&e.key===t,MA=["TSAsExpression","TSTypeAssertion","TSNonNullExpression","TSInstantiationExpression","TSSatisfiesExpression"];function BA(t){return MA.includes(t.type)?BA(t.expression):t}const hi=t=>t.type===4&&t.isStatic;function t0(t){switch(t){case"Teleport":case"teleport":return gc;case"Suspense":case"suspense":return Pf;case"KeepAlive":case"keep-alive":return cu;case"BaseTransition":case"base-transition":return JE}}const c6=/^\d|[^\$\w\xA0-\uFFFF]/,Ru=t=>!c6.test(t),l6=/[A-Za-z_$\xA0-\uFFFF]/,u6=/[\.\?\w$\xA0-\uFFFF]/,d6=/\s+[.[]\s*|\s*[.[]\s+/g,FA=t=>t.type===4?t.content:t.loc.source,UA=t=>{const e=FA(t).trim().replace(d6,a=>a.trim());let n=0,i=[],s=0,r=0,o=null;for(let a=0;a<e.length;a++){const c=e.charAt(a);switch(n){case 0:if(c==="[")i.push(n),n=1,s++;else if(c==="(")i.push(n),n=2,r++;else if(!(a===0?l6:u6).test(c))return!1;break;case 1:c==="'"||c==='"'||c==="`"?(i.push(n),n=3,o=c):c==="["?s++:c==="]"&&(--s||(n=i.pop()));break;case 2:if(c==="'"||c==='"'||c==="`")i.push(n),n=3,o=c;else if(c==="(")r++;else if(c===")"){if(a===e.length-1)return!1;--r||(n=i.pop())}break;case 3:c===o&&(n=i.pop(),o=null);break}}return!s&&!r},h6=Mn,n0=UA,f6=/^\s*(async\s*)?(\([^)]*?\)|[\w$_]+)\s*(:[^=]+)?=>|^\s*(async\s+)?function(?:\s+[\w$]+)?\s*\(/,VA=t=>f6.test(FA(t)),p6=Mn,WA=VA;function m6(t,e,n=e.length){return HA({offset:t.offset,line:t.line,column:t.column},e,n)}function HA(t,e,n=e.length){let i=0,s=-1;for(let r=0;r<n;r++)e.charCodeAt(r)===10&&(i++,s=r);return t.offset+=n,t.line+=i,t.column=s===-1?t.column+n:n-s,t}function g6(t,e){if(!t)throw new Error(e||"unexpected compiler condition")}function li(t,e,n=!1){for(let i=0;i<t.props.length;i++){const s=t.props[i];if(s.type===7&&(n||s.exp)&&(ze(e)?s.name===e:e.test(s.name)))return s}}function Lu(t,e,n=!1,i=!1){for(let s=0;s<t.props.length;s++){const r=t.props[s];if(r.type===6){if(n)continue;if(r.name===e&&(r.value||i))return r}else if(r.name==="bind"&&(r.exp||i)&&mo(r.arg,e))return r}}function mo(t,e){return!!(t&&hi(t)&&t.content===e)}function XA(t){return t.props.some(e=>e.type===7&&e.name==="bind"&&(!e.arg||e.arg.type!==4||!e.arg.isStatic))}function Gd(t){return t.type===5||t.type===2}function i0(t){return t.type===7&&t.name==="slot"}function Bc(t){return t.type===1&&t.tagType===3}function du(t){return t.type===1&&t.tagType===2}const E6=new Set([Rc,el]);function jA(t,e=[]){if(t&&!ze(t)&&t.type===14){const n=t.callee;if(!ze(n)&&E6.has(n))return jA(t.arguments[0],e.concat(t))}return[t,e]}function hu(t,e,n){let i,s=t.type===13?t.props:t.arguments[2],r=[],o;if(s&&!ze(s)&&s.type===14){const a=jA(s);s=a[0],r=a[1],o=r[r.length-1]}if(s==null||ze(s))i=Li([e]);else if(s.type===14){const a=s.arguments[0];!ze(a)&&a.type===15?j1(e,a)||a.properties.unshift(e):s.callee===jf?i=Cn(n.helper(lu),[Li([e]),s]):s.arguments.unshift(Li([e])),!i&&(i=s)}else s.type===15?(j1(e,s)||s.properties.unshift(e),i=s):(i=Cn(n.helper(lu),[Li([e]),s]),o&&o.callee===el&&(o=r[r.length-2]));t.type===13?o?o.arguments[0]=i:t.props=i:o?o.arguments[0]=i:t.arguments[2]=i}function j1(t,e){let n=!1;if(t.key.type===4){const i=t.key.content;n=e.properties.some(s=>s.key.type===4&&s.key.content===i)}return n}function Fc(t,e){return`_${e}_${t.replace(/[^\w]/g,(n,i)=>n==="-"?"_":t.charCodeAt(i).toString())}`}function ms(t,e){if(!t||Object.keys(e).length===0)return!1;switch(t.type){case 1:for(let n=0;n<t.props.length;n++){const i=t.props[n];if(i.type===7&&(ms(i.arg,e)||ms(i.exp,e)))return!0}return t.children.some(n=>ms(n,e));case 11:return ms(t.source,e)?!0:t.children.some(n=>ms(n,e));case 9:return t.branches.some(n=>ms(n,e));case 10:return ms(t.condition,e)?!0:t.children.some(n=>ms(n,e));case 4:return!t.isStatic&&Ru(t.content)&&!!e[t.content];case 8:return t.children.some(n=>Rt(n)&&ms(n,e));case 5:case 12:return ms(t.content,e);case 2:case 3:case 20:return!1;default:return!1}}function qA(t){return t.type===14&&t.callee===zf?t.arguments[1].returns:t}const zA=/([\s\S]*?)\s+(?:in|of)\s+(\S[\s\S]*)/,YA={parseMode:"base",ns:0,delimiters:["{{","}}"],getNamespace:()=>0,isVoidTag:rc,isPreTag:rc,isIgnoreNewlineTag:rc,isCustomElement:rc,onError:e0,onWarn:RA,comments:!1,prefixIdentifiers:!1};let It=YA,fu=null,Or="",qn=null,Nt=null,Ei="",Er=-1,ta=-1,s0=0,lo=!1,Og=null;const tn=[],dn=new Y5(tn,{onerr:mr,ontext(t,e){Id(Vn(t,e),t,e)},ontextentity(t,e,n){Id(t,e,n)},oninterpolation(t,e){if(lo)return Id(Vn(t,e),t,e);let n=t+dn.delimiterOpen.length,i=e-dn.delimiterClose.length;for(;Ii(Or.charCodeAt(n));)n++;for(;Ii(Or.charCodeAt(i-1));)i--;let s=Vn(n,i);s.includes("&")&&(s=It.decodeEntities(s,!1)),Pg({type:5,content:$d(s,!1,En(n,i)),loc:En(t,e)})},onopentagname(t,e){const n=Vn(t,e);qn={type:1,tag:n,ns:It.getNamespace(n,tn[0],It.ns),tagType:0,props:[],children:[],loc:En(t-1,e),codegenNode:void 0}},onopentagend(t){z1(t)},onclosetag(t,e){const n=Vn(t,e);if(!It.isVoidTag(n)){let i=!1;for(let s=0;s<tn.length;s++)if(tn[s].tag.toLowerCase()===n.toLowerCase()){i=!0,s>0&&mr(24,tn[0].loc.start.offset);for(let o=0;o<=s;o++){const a=tn.shift();_d(a,e,o<s)}break}i||mr(23,JA(t,60))}},onselfclosingtag(t){const e=qn.tag;qn.isSelfClosing=!0,z1(t),tn[0]&&tn[0].tag===e&&_d(tn.shift(),t)},onattribname(t,e){Nt={type:6,name:Vn(t,e),nameLoc:En(t,e),value:void 0,loc:En(t)}},ondirname(t,e){const n=Vn(t,e),i=n==="."||n===":"?"bind":n==="@"?"on":n==="#"?"slot":n.slice(2);if(!lo&&i===""&&mr(26,t),lo||i==="")Nt={type:6,name:n,nameLoc:En(t,e),value:void 0,loc:En(t)};else if(Nt={type:7,name:i,rawName:n,exp:void 0,arg:void 0,modifiers:n==="."?[Ke("prop")]:[],loc:En(t)},i==="pre"){lo=dn.inVPre=!0,Og=qn;const s=qn.props;for(let r=0;r<s.length;r++)s[r].type===7&&(s[r]=k6(s[r]))}},ondirarg(t,e){if(t===e)return;const n=Vn(t,e);if(lo)Nt.name+=n,ia(Nt.nameLoc,e);else{const i=n[0]!=="[";Nt.arg=$d(i?n:n.slice(1,-1),i,En(t,e),i?3:0)}},ondirmodifier(t,e){const n=Vn(t,e);if(lo)Nt.name+="."+n,ia(Nt.nameLoc,e);else if(Nt.name==="slot"){const i=Nt.arg;i&&(i.content+="."+n,ia(i.loc,e))}else{const i=Ke(n,!0,En(t,e));Nt.modifiers.push(i)}},onattribdata(t,e){Ei+=Vn(t,e),Er<0&&(Er=t),ta=e},onattribentity(t,e,n){Ei+=t,Er<0&&(Er=e),ta=n},onattribnameend(t){const e=Nt.loc.start.offset,n=Vn(e,t);Nt.type===7&&(Nt.rawName=n),qn.props.some(i=>(i.type===7?i.rawName:i.name)===n)&&mr(2,e)},onattribend(t,e){if(qn&&Nt){if(ia(Nt.loc,e),t!==0)if(Ei.includes("&")&&(Ei=It.decodeEntities(Ei,!0)),Nt.type===6)Nt.name==="class"&&(Ei=KA(Ei).trim()),t===1&&!Ei&&mr(13,e),Nt.value={type:2,content:Ei,loc:t===1?En(Er,ta):En(Er-1,ta+1)},dn.inSFCRoot&&qn.tag==="template"&&Nt.name==="lang"&&Ei&&Ei!=="html"&&dn.enterRCDATA(Nh("</template"),0);else{let n=0;Nt.exp=$d(Ei,!1,En(Er,ta),0,n),Nt.name==="for"&&(Nt.forParseResult=b6(Nt.exp));let i=-1;Nt.name==="bind"&&(i=Nt.modifiers.findIndex(s=>s.content==="sync"))>-1&&Mc("COMPILER_V_BIND_SYNC",It,Nt.loc,Nt.arg.loc.source)&&(Nt.name="model",Nt.modifiers.splice(i,1))}(Nt.type!==7||Nt.name!=="pre")&&qn.props.push(Nt)}Ei="",Er=ta=-1},oncomment(t,e){It.comments&&Pg({type:3,content:Vn(t,e),loc:En(t-4,e+3)})},onend(){const t=Or.length;for(let e=0;e<tn.length;e++)_d(tn[e],t-1),mr(24,tn[e].loc.start.offset)},oncdata(t,e){tn[0].ns!==0?Id(Vn(t,e),t,e):mr(1,t-9)},onprocessinginstruction(t){(tn[0]?tn[0].ns:It.ns)===0&&mr(21,t-1)}}),q1=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,v6=/^\(|\)$/g;function b6(t){const e=t.loc,n=t.content,i=n.match(zA);if(!i)return;const[,s,r]=i,o=(d,h,f=!1)=>{const p=e.start.offset+h,m=p+d.length;return $d(d,!1,En(p,m),0,f?1:0)},a={source:o(r.trim(),n.indexOf(r,s.length)),value:void 0,key:void 0,index:void 0,finalized:!1};let c=s.trim().replace(v6,"").trim();const l=s.indexOf(c),u=c.match(q1);if(u){c=c.replace(q1,"").trim();const d=u[1].trim();let h;if(d&&(h=n.indexOf(d,l+c.length),a.key=o(d,h,!0)),u[2]){const f=u[2].trim();f&&(a.index=o(f,n.indexOf(f,a.key?h+d.length:l+c.length),!0))}}return c&&(a.value=o(c,l,!0)),a}function Vn(t,e){return Or.slice(t,e)}function z1(t){dn.inSFCRoot&&(qn.innerLoc=En(t+1,t+1)),Pg(qn);const{tag:e,ns:n}=qn;n===0&&It.isPreTag(e)&&s0++,It.isVoidTag(e)?_d(qn,t):(tn.unshift(qn),(n===1||n===2)&&(dn.inXML=!0)),qn=null}function Id(t,e,n){{const r=tn[0]&&tn[0].tag;r!=="script"&&r!=="style"&&t.includes("&")&&(t=It.decodeEntities(t,!1))}const i=tn[0]||fu,s=i.children[i.children.length-1];s&&s.type===2?(s.content+=t,ia(s.loc,n)):i.children.push({type:2,content:t,loc:En(e,n)})}function _d(t,e,n=!1){n?ia(t.loc,JA(e,60)):ia(t.loc,S6(e,62)+1),dn.inSFCRoot&&(t.children.length?t.innerLoc.end=St({},t.children[t.children.length-1].loc.end):t.innerLoc.end=St({},t.innerLoc.start),t.innerLoc.source=Vn(t.innerLoc.start.offset,t.innerLoc.end.offset));const{tag:i,ns:s,children:r}=t;if(lo||(i==="slot"?t.tagType=2:Y1(t)?t.tagType=3:T6(t)&&(t.tagType=1)),dn.inRCDATA||(t.children=ZA(r)),s===0&&It.isIgnoreNewlineTag(i)){const o=r[0];o&&o.type===2&&(o.content=o.content.replace(/^\r?\n/,""))}s===0&&It.isPreTag(i)&&s0--,Og===t&&(lo=dn.inVPre=!1,Og=null),dn.inXML&&(tn[0]?tn[0].ns:It.ns)===0&&(dn.inXML=!1);{const o=t.props;if(!dn.inSFCRoot&&pa("COMPILER_NATIVE_TEMPLATE",It)&&t.tag==="template"&&!Y1(t)){const c=tn[0]||fu,l=c.children.indexOf(t);c.children.splice(l,1,...t.children)}const a=o.find(c=>c.type===6&&c.name==="inline-template");a&&Mc("COMPILER_INLINE_TEMPLATE",It,a.loc)&&t.children.length&&(a.value={type:2,content:Vn(t.children[0].loc.start.offset,t.children[t.children.length-1].loc.end.offset),loc:a.loc})}}function S6(t,e){let n=t;for(;Or.charCodeAt(n)!==e&&n<Or.length-1;)n++;return n}function JA(t,e){let n=t;for(;Or.charCodeAt(n)!==e&&n>=0;)n--;return n}const x6=new Set(["if","else","else-if","for","slot"]);function Y1({tag:t,props:e}){if(t==="template"){for(let n=0;n<e.length;n++)if(e[n].type===7&&x6.has(e[n].name))return!0}return!1}function T6({tag:t,props:e}){if(It.isCustomElement(t))return!1;if(t==="component"||C6(t.charCodeAt(0))||t0(t)||It.isBuiltInComponent&&It.isBuiltInComponent(t)||It.isNativeTag&&!It.isNativeTag(t))return!0;for(let n=0;n<e.length;n++){const i=e[n];if(i.type===6){if(i.name==="is"&&i.value){if(i.value.content.startsWith("vue:"))return!0;if(Mc("COMPILER_IS_ON_ELEMENT",It,i.loc))return!0}}else if(i.name==="bind"&&mo(i.arg,"is")&&Mc("COMPILER_IS_ON_ELEMENT",It,i.loc))return!0}return!1}function C6(t){return t>64&&t<91}const w6=/\r\n/g;function ZA(t,e){const n=It.whitespace!=="preserve";let i=!1;for(let s=0;s<t.length;s++){const r=t[s];if(r.type===2)if(s0)r.content=r.content.replace(w6,`
`);else if(A6(r.content)){const o=t[s-1]&&t[s-1].type,a=t[s+1]&&t[s+1].type;!o||!a||n&&(o===3&&(a===3||a===1)||o===1&&(a===3||a===1&&N6(r.content)))?(i=!0,t[s]=null):r.content=" "}else n&&(r.content=KA(r.content))}return i?t.filter(Boolean):t}function A6(t){for(let e=0;e<t.length;e++)if(!Ii(t.charCodeAt(e)))return!1;return!0}function N6(t){for(let e=0;e<t.length;e++){const n=t.charCodeAt(e);if(n===10||n===13)return!0}return!1}function KA(t){let e="",n=!1;for(let i=0;i<t.length;i++)Ii(t.charCodeAt(i))?n||(e+=" ",n=!0):(e+=t[i],n=!1);return e}function Pg(t){(tn[0]||fu).children.push(t)}function En(t,e){return{start:dn.getPos(t),end:e==null?e:dn.getPos(e),source:e==null?e:Vn(t,e)}}function y6(t){return En(t.start.offset,t.end.offset)}function ia(t,e){t.end=dn.getPos(e),t.source=Vn(t.start.offset,e)}function k6(t){const e={type:6,name:t.rawName,nameLoc:En(t.loc.start.offset,t.loc.start.offset+t.rawName.length),value:void 0,loc:t.loc};if(t.exp){const n=t.exp.loc;n.end.offset<t.loc.end.offset&&(n.start.offset--,n.start.column--,n.end.offset++,n.end.column++),e.value={type:2,content:t.exp.content,loc:n}}return e}function $d(t,e=!1,n,i=0,s=0){return Ke(t,e,n,i)}function mr(t,e,n){It.onError($t(t,En(e,e)))}function D6(){dn.reset(),qn=null,Nt=null,Ei="",Er=-1,ta=-1,tn.length=0}function r0(t,e){if(D6(),Or=t,It=St({},YA),e){let s;for(s in e)e[s]!=null&&(It[s]=e[s])}dn.mode=It.parseMode==="html"?1:It.parseMode==="sfc"?2:0,dn.inXML=It.ns===1||It.ns===2;const n=e&&e.delimiters;n&&(dn.delimiterOpen=Nh(n[0]),dn.delimiterClose=Nh(n[1]));const i=fu=OA([],t);return dn.parse(Or),i.loc=En(0,t.length),i.children=ZA(i.children),fu=null,i}function O6(t,e){eh(t,void 0,e,QA(t,t.children[0]))}function QA(t,e){const{children:n}=t;return n.length===1&&e.type===1&&!du(e)}function eh(t,e,n,i=!1,s=!1){const{children:r}=t,o=[];for(let d=0;d<r.length;d++){const h=r[d];if(h.type===1&&h.tagType===0){const f=i?0:Ai(h,n);if(f>0){if(f>=2){h.codegenNode.patchFlag=-1,o.push(h);continue}}else{const p=h.codegenNode;if(p.type===13){const m=p.patchFlag;if((m===void 0||m===512||m===1)&&_A(h,n)>=2){const b=$A(h);b&&(p.props=n.hoist(b))}p.dynamicProps&&(p.dynamicProps=n.hoist(p.dynamicProps))}}}else if(h.type===12&&(i?0:Ai(h,n))>=2){o.push(h);continue}if(h.type===1){const f=h.tagType===1;f&&n.scopes.vSlot++,eh(h,t,n,!1,s),f&&n.scopes.vSlot--}else if(h.type===11)eh(h,t,n,h.children.length===1,!0);else if(h.type===9)for(let f=0;f<h.branches.length;f++)eh(h.branches[f],t,n,h.branches[f].children.length===1,s)}let a=!1;const c=[];if(o.length===r.length&&t.type===1){if(t.tagType===0&&t.codegenNode&&t.codegenNode.type===13&&Ne(t.codegenNode.children))t.codegenNode.children=l(bo(t.codegenNode.children)),a=!0;else if(t.tagType===1&&t.codegenNode&&t.codegenNode.type===13&&t.codegenNode.children&&!Ne(t.codegenNode.children)&&t.codegenNode.children.type===15){const d=u(t.codegenNode,"default");d&&(c.push(n.cached.length),d.returns=l(bo(d.returns)),a=!0)}else if(t.tagType===3&&e&&e.type===1&&e.tagType===1&&e.codegenNode&&e.codegenNode.type===13&&e.codegenNode.children&&!Ne(e.codegenNode.children)&&e.codegenNode.children.type===15){const d=li(t,"slot",!0),h=d&&d.arg&&u(e.codegenNode,d.arg);h&&(c.push(n.cached.length),h.returns=l(bo(h.returns)),a=!0)}}if(!a)for(const d of o)c.push(n.cached.length),d.codegenNode=n.cache(d.codegenNode);c.length&&t.type===1&&t.tagType===1&&t.codegenNode&&t.codegenNode.type===13&&t.codegenNode.children&&!Ne(t.codegenNode.children)&&t.codegenNode.children.type===15&&t.codegenNode.children.properties.push(an("__",Ke(JSON.stringify(c),!1)));function l(d){const h=n.cache(d);return s&&n.hmr&&(h.needArraySpread=!0),h}function u(d,h){if(d.children&&!Ne(d.children)&&d.children.type===15){const f=d.children.properties.find(p=>p.key===h||p.key.content===h);return f&&f.value}}o.length&&n.transformHoist&&n.transformHoist(r,n,t)}function Ai(t,e){const{constantCache:n}=e;switch(t.type){case 1:if(t.tagType!==0)return 0;const i=n.get(t);if(i!==void 0)return i;const s=t.codegenNode;if(s.type!==13||s.isBlock&&t.tag!=="svg"&&t.tag!=="foreignObject"&&t.tag!=="math")return 0;if(s.patchFlag===void 0){let o=3;const a=_A(t,e);if(a===0)return n.set(t,0),0;a<o&&(o=a);for(let c=0;c<t.children.length;c++){const l=Ai(t.children[c],e);if(l===0)return n.set(t,0),0;l<o&&(o=l)}if(o>1)for(let c=0;c<t.props.length;c++){const l=t.props[c];if(l.type===7&&l.name==="bind"&&l.exp){const u=Ai(l.exp,e);if(u===0)return n.set(t,0),0;u<o&&(o=u)}}if(s.isBlock){for(let c=0;c<t.props.length;c++)if(t.props[c].type===7)return n.set(t,0),0;e.removeHelper(Ao),e.removeHelper(xa(e.inSSR,s.isComponent)),s.isBlock=!1,e.helper(Sa(e.inSSR,s.isComponent))}return n.set(t,o),o}else return n.set(t,0),0;case 2:case 3:return 3;case 9:case 11:case 10:return 0;case 5:case 12:return Ai(t.content,e);case 4:return t.constType;case 8:let r=3;for(let o=0;o<t.children.length;o++){const a=t.children[o];if(ze(a)||pi(a))continue;const c=Ai(a,e);if(c===0)return 0;c<r&&(r=c)}return r;case 20:return 2;default:return 0}}const P6=new Set([Hf,Xf,Rc,el]);function GA(t,e){if(t.type===14&&!ze(t.callee)&&P6.has(t.callee)){const n=t.arguments[0];if(n.type===4)return Ai(n,e);if(n.type===14)return GA(n,e)}return 0}function _A(t,e){let n=3;const i=$A(t);if(i&&i.type===15){const{properties:s}=i;for(let r=0;r<s.length;r++){const{key:o,value:a}=s[r],c=Ai(o,e);if(c===0)return c;c<n&&(n=c);let l;if(a.type===4?l=Ai(a,e):a.type===14?l=GA(a,e):l=0,l===0)return l;l<n&&(n=l)}}return n}function $A(t){const e=t.codegenNode;if(e.type===13)return e.props}function eN(t,{filename:e="",prefixIdentifiers:n=!1,hoistStatic:i=!1,hmr:s=!1,cacheHandlers:r=!1,nodeTransforms:o=[],directiveTransforms:a={},transformHoist:c=null,isBuiltInComponent:l=Mn,isCustomElement:u=Mn,expressionPlugins:d=[],scopeId:h=null,slotted:f=!0,ssr:p=!1,inSSR:m=!1,ssrCssVars:b="",bindingMetadata:E=bt,inline:x=!1,isTS:S=!1,onError:v=e0,onWarn:T=RA,compatConfig:w}){const D=e.replace(/\?.*$/,"").match(/([^/\\]+)\.\w+$/),A={filename:e,selfName:D&&Oo(Qt(D[1])),prefixIdentifiers:n,hoistStatic:i,hmr:s,cacheHandlers:r,nodeTransforms:o,directiveTransforms:a,transformHoist:c,isBuiltInComponent:l,isCustomElement:u,expressionPlugins:d,scopeId:h,slotted:f,ssr:p,inSSR:m,ssrCssVars:b,bindingMetadata:E,inline:x,isTS:S,onError:v,onWarn:T,compatConfig:w,root:t,helpers:new Map,components:new Set,directives:new Set,hoists:[],imports:[],cached:[],constantCache:new WeakMap,temps:0,identifiers:Object.create(null),scopes:{vFor:0,vSlot:0,vPre:0,vOnce:0},parent:null,grandParent:null,currentNode:t,childIndex:0,inVOnce:!1,helper(y){const O=A.helpers.get(y)||0;return A.helpers.set(y,O+1),y},removeHelper(y){const O=A.helpers.get(y);if(O){const L=O-1;L?A.helpers.set(y,L):A.helpers.delete(y)}},helperString(y){return`_${va[A.helper(y)]}`},replaceNode(y){A.parent.children[A.childIndex]=A.currentNode=y},removeNode(y){const O=A.parent.children,L=y?O.indexOf(y):A.currentNode?A.childIndex:-1;!y||y===A.currentNode?(A.currentNode=null,A.onNodeRemoved()):A.childIndex>L&&(A.childIndex--,A.onNodeRemoved()),A.parent.children.splice(L,1)},onNodeRemoved:Mn,addIdentifiers(y){},removeIdentifiers(y){},hoist(y){ze(y)&&(y=Ke(y)),A.hoists.push(y);const O=Ke(`_hoisted_${A.hoists.length}`,!1,y.loc,2);return O.hoisted=y,O},cache(y,O=!1,L=!1){const P=PA(A.cached.length,y,O,L);return A.cached.push(P),P}};return A.filters=new Set,A}function tN(t,e){const n=eN(t,e);Mu(t,n),e.hoistStatic&&O6(t,n),e.ssr||I6(t,n),t.helpers=new Set([...n.helpers.keys()]),t.components=[...n.components],t.directives=[...n.directives],t.imports=n.imports,t.hoists=n.hoists,t.temps=n.temps,t.cached=n.cached,t.transformed=!0,t.filters=[...n.filters]}function I6(t,e){const{helper:n}=e,{children:i}=t;if(i.length===1){const s=i[0];if(QA(t,s)&&s.codegenNode){const r=s.codegenNode;r.type===13&&Yf(r,e),t.codegenNode=r}else t.codegenNode=s}else if(i.length>1){let s=64;t.codegenNode=Lc(e,n(Ic),void 0,t.children,s,void 0,void 0,!0,void 0,!1)}}function R6(t,e){let n=0;const i=()=>{n--};for(;n<t.children.length;n++){const s=t.children[n];ze(s)||(e.grandParent=e.parent,e.parent=t,e.childIndex=n,e.onNodeRemoved=i,Mu(s,e))}}function Mu(t,e){e.currentNode=t;const{nodeTransforms:n}=e,i=[];for(let r=0;r<n.length;r++){const o=n[r](t,e);if(o&&(Ne(o)?i.push(...o):i.push(o)),e.currentNode)t=e.currentNode;else return}switch(t.type){case 3:e.ssr||e.helper($c);break;case 5:e.ssr||e.helper(Iu);break;case 9:for(let r=0;r<t.branches.length;r++)Mu(t.branches[r],e);break;case 10:case 11:case 1:case 0:R6(t,e);break}e.currentNode=t;let s=i.length;for(;s--;)i[s]()}function o0(t,e){const n=ze(t)?i=>i===t:i=>t.test(i);return(i,s)=>{if(i.type===1){const{props:r}=i;if(i.tagType===3&&r.some(i0))return;const o=[];for(let a=0;a<r.length;a++){const c=r[a];if(c.type===7&&n(c.name)){r.splice(a,1),a--;const l=e(i,c,s);l&&o.push(l)}}return o}}}const Jf="/*@__PURE__*/",nN=t=>`${va[t]}: _${va[t]}`;function L6(t,{mode:e="function",prefixIdentifiers:n=e==="module",sourceMap:i=!1,filename:s="template.vue.html",scopeId:r=null,optimizeImports:o=!1,runtimeGlobalName:a="Vue",runtimeModuleName:c="vue",ssrRuntimeModuleName:l="vue/server-renderer",ssr:u=!1,isTS:d=!1,inSSR:h=!1}){const f={mode:e,prefixIdentifiers:n,sourceMap:i,filename:s,scopeId:r,optimizeImports:o,runtimeGlobalName:a,runtimeModuleName:c,ssrRuntimeModuleName:l,ssr:u,isTS:d,inSSR:h,source:t.source,code:"",column:1,line:1,offset:0,indentLevel:0,pure:!1,map:void 0,helper(m){return`_${va[m]}`},push(m,b=-2,E){f.code+=m},indent(){p(++f.indentLevel)},deindent(m=!1){m?--f.indentLevel:p(--f.indentLevel)},newline(){p(f.indentLevel)}};function p(m){f.push(`
`+"  ".repeat(m),0)}return f}function iN(t,e={}){const n=L6(t,e);e.onContextCreated&&e.onContextCreated(n);const{mode:i,push:s,prefixIdentifiers:r,indent:o,deindent:a,newline:c,scopeId:l,ssr:u}=n,d=Array.from(t.helpers),h=d.length>0,f=!r&&i!=="module";M6(t,n);const m=u?"ssrRender":"render",E=(u?["_ctx","_push","_parent","_attrs"]:["_ctx","_cache"]).join(", ");if(s(`function ${m}(${E}) {`),o(),f&&(s("with (_ctx) {"),o(),h&&(s(`const { ${d.map(nN).join(", ")} } = _Vue
`,-1),c())),t.components.length&&(Xm(t.components,"component",n),(t.directives.length||t.temps>0)&&c()),t.directives.length&&(Xm(t.directives,"directive",n),t.temps>0&&c()),t.filters&&t.filters.length&&(c(),Xm(t.filters,"filter",n),c()),t.temps>0){s("let ");for(let x=0;x<t.temps;x++)s(`${x>0?", ":""}_temp${x}`)}return(t.components.length||t.directives.length||t.temps)&&(s(`
`,0),c()),u||s("return "),t.codegenNode?Qn(t.codegenNode,n):s("null"),f&&(a(),s("}")),a(),s("}"),{ast:t,code:n.code,preamble:"",map:n.map?n.map.toJSON():void 0}}function M6(t,e){const{ssr:n,prefixIdentifiers:i,push:s,newline:r,runtimeModuleName:o,runtimeGlobalName:a,ssrRuntimeModuleName:c}=e,l=a,u=Array.from(t.helpers);if(u.length>0&&(s(`const _Vue = ${l}
`,-1),t.hoists.length)){const d=[If,Rf,$c,Lf,QE].filter(h=>u.includes(h)).map(nN).join(", ");s(`const { ${d} } = _Vue
`,-1)}B6(t.hoists,e),r(),s("return ")}function Xm(t,e,{helper:n,push:i,newline:s,isTS:r}){const o=n(e==="filter"?Uf:e==="component"?Mf:Ff);for(let a=0;a<t.length;a++){let c=t[a];const l=c.endsWith("__self");l&&(c=c.slice(0,-6)),i(`const ${Fc(c,e)} = ${o}(${JSON.stringify(c)}${l?", true":""})${r?"!":""}`),a<t.length-1&&s()}}function B6(t,e){if(!t.length)return;e.pure=!0;const{push:n,newline:i}=e;i();for(let s=0;s<t.length;s++){const r=t[s];r&&(n(`const _hoisted_${s+1} = `),Qn(r,e),i())}e.pure=!1}function a0(t,e){const n=t.length>3||!1;e.push("["),n&&e.indent(),Bu(t,e,n),n&&e.deindent(),e.push("]")}function Bu(t,e,n=!1,i=!0){const{push:s,newline:r}=e;for(let o=0;o<t.length;o++){const a=t[o];ze(a)?s(a,-3):Ne(a)?a0(a,e):Qn(a,e),o<t.length-1&&(n?(i&&s(","),r()):i&&s(", "))}}function Qn(t,e){if(ze(t)){e.push(t,-3);return}if(pi(t)){e.push(e.helper(t));return}switch(t.type){case 1:case 9:case 11:Qn(t.codegenNode,e);break;case 2:F6(t,e);break;case 4:sN(t,e);break;case 5:U6(t,e);break;case 12:Qn(t.codegenNode,e);break;case 8:rN(t,e);break;case 3:W6(t,e);break;case 13:H6(t,e);break;case 14:j6(t,e);break;case 15:q6(t,e);break;case 17:z6(t,e);break;case 18:Y6(t,e);break;case 19:J6(t,e);break;case 20:Z6(t,e);break;case 21:Bu(t.body,e,!0,!1);break}}function F6(t,e){e.push(JSON.stringify(t.content),-3,t)}function sN(t,e){const{content:n,isStatic:i}=t;e.push(i?JSON.stringify(n):n,-3,t)}function U6(t,e){const{push:n,helper:i,pure:s}=e;s&&n(Jf),n(`${i(Iu)}(`),Qn(t.content,e),n(")")}function rN(t,e){for(let n=0;n<t.children.length;n++){const i=t.children[n];ze(i)?e.push(i,-3):Qn(i,e)}}function V6(t,e){const{push:n}=e;if(t.type===8)n("["),rN(t,e),n("]");else if(t.isStatic){const i=Ru(t.content)?t.content:JSON.stringify(t.content);n(i,-2,t)}else n(`[${t.content}]`,-3,t)}function W6(t,e){const{push:n,helper:i,pure:s}=e;s&&n(Jf),n(`${i($c)}(${JSON.stringify(t.content)})`,-3,t)}function H6(t,e){const{push:n,helper:i,pure:s}=e,{tag:r,props:o,children:a,patchFlag:c,dynamicProps:l,directives:u,isBlock:d,disableTracking:h,isComponent:f}=t;let p;c&&(p=String(c)),u&&n(i(Vf)+"("),d&&n(`(${i(Ao)}(${h?"true":""}), `),s&&n(Jf);const m=d?xa(e.inSSR,f):Sa(e.inSSR,f);n(i(m)+"(",-2,t),Bu(X6([r,o,a,p,l]),e),n(")"),d&&n(")"),u&&(n(", "),Qn(u,e),n(")"))}function X6(t){let e=t.length;for(;e--&&t[e]==null;);return t.slice(0,e+1).map(n=>n||"null")}function j6(t,e){const{push:n,helper:i,pure:s}=e,r=ze(t.callee)?t.callee:i(t.callee);s&&n(Jf),n(r+"(",-2,t),Bu(t.arguments,e),n(")")}function q6(t,e){const{push:n,indent:i,deindent:s,newline:r}=e,{properties:o}=t;if(!o.length){n("{}",-2,t);return}const a=o.length>1||!1;n(a?"{":"{ "),a&&i();for(let c=0;c<o.length;c++){const{key:l,value:u}=o[c];V6(l,e),n(": "),Qn(u,e),c<o.length-1&&(n(","),r())}a&&s(),n(a?"}":" }")}function z6(t,e){a0(t.elements,e)}function Y6(t,e){const{push:n,indent:i,deindent:s}=e,{params:r,returns:o,body:a,newline:c,isSlot:l}=t;l&&n(`_${va[qf]}(`),n("(",-2,t),Ne(r)?Bu(r,e):r&&Qn(r,e),n(") => "),(c||a)&&(n("{"),i()),o?(c&&n("return "),Ne(o)?a0(o,e):Qn(o,e)):a&&Qn(a,e),(c||a)&&(s(),n("}")),l&&(t.isNonScopedSlot&&n(", undefined, true"),n(")"))}function J6(t,e){const{test:n,consequent:i,alternate:s,newline:r}=t,{push:o,indent:a,deindent:c,newline:l}=e;if(n.type===4){const d=!Ru(n.content);d&&o("("),sN(n,e),d&&o(")")}else o("("),Qn(n,e),o(")");r&&a(),e.indentLevel++,r||o(" "),o("? "),Qn(i,e),e.indentLevel--,r&&l(),r||o(" "),o(": ");const u=s.type===19;u||e.indentLevel++,Qn(s,e),u||e.indentLevel--,r&&c(!0)}function Z6(t,e){const{push:n,helper:i,indent:s,deindent:r,newline:o}=e,{needPauseTracking:a,needArraySpread:c}=t;c&&n("[...("),n(`_cache[${t.index}] || (`),a&&(s(),n(`${i(uu)}(-1`),t.inVOnce&&n(", true"),n("),"),o(),n("(")),n(`_cache[${t.index}] = `),Qn(t.value,e),a&&(n(`).cacheIndex = ${t.index},`),o(),n(`${i(uu)}(1),`),o(),n(`_cache[${t.index}]`),r()),n(")"),c&&n(")]")}new RegExp("\\b"+"arguments,await,break,case,catch,class,const,continue,debugger,default,delete,do,else,export,extends,finally,for,function,if,import,let,new,return,super,switch,throw,try,var,void,while,with,yield".split(",").join("\\b|\\b")+"\\b");const K6=(t,e)=>{if(t.type===5)t.content=th(t.content,e);else if(t.type===1){const n=li(t,"memo");for(let i=0;i<t.props.length;i++){const s=t.props[i];if(s.type===7&&s.name!=="for"){const r=s.exp,o=s.arg;r&&r.type===4&&!(s.name==="on"&&o)&&!(n&&o&&o.type===4&&o.content==="key")&&(s.exp=th(r,e,s.name==="slot")),o&&o.type===4&&!o.isStatic&&(s.arg=th(o,e))}}}};function th(t,e,n=!1,i=!1,s=Object.create(e.identifiers)){return t}function oN(t){return ze(t)?t:t.type===4?t.content:t.children.map(oN).join("")}const Q6=o0(/^(if|else|else-if)$/,(t,e,n)=>aN(t,e,n,(i,s,r)=>{const o=n.parent.children;let a=o.indexOf(i),c=0;for(;a-->=0;){const l=o[a];l&&l.type===9&&(c+=l.branches.length)}return()=>{if(r)i.codegenNode=Z1(s,c,n);else{const l=G6(i.codegenNode);l.alternate=Z1(s,c+i.branches.length-1,n)}}}));function aN(t,e,n,i){if(e.name!=="else"&&(!e.exp||!e.exp.content.trim())){const s=e.exp?e.exp.loc:t.loc;n.onError($t(28,e.loc)),e.exp=Ke("true",!1,s)}if(e.name==="if"){const s=J1(t,e),r={type:9,loc:y6(t.loc),branches:[s]};if(n.replaceNode(r),i)return i(r,s,!0)}else{const s=n.parent.children;let r=s.indexOf(t);for(;r-->=-1;){const o=s[r];if(o&&o.type===3){n.removeNode(o);continue}if(o&&o.type===2&&!o.content.trim().length){n.removeNode(o);continue}if(o&&o.type===9){e.name==="else-if"&&o.branches[o.branches.length-1].condition===void 0&&n.onError($t(30,t.loc)),n.removeNode();const a=J1(t,e);o.branches.push(a);const c=i&&i(o,a,!1);Mu(a,n),c&&c(),n.currentNode=null}else n.onError($t(30,t.loc));break}}}function J1(t,e){const n=t.tagType===3;return{type:10,loc:t.loc,condition:e.name==="else"?void 0:e.exp,children:n&&!li(t,"for")?t.children:[t],userKey:Lu(t,"key"),isTemplateIf:n}}function Z1(t,e,n){return t.condition?Ah(t.condition,K1(t,e,n),Cn(n.helper($c),['""',"true"])):K1(t,e,n)}function K1(t,e,n){const{helper:i}=n,s=an("key",Ke(`${e}`,!1,Rn,2)),{children:r}=t,o=r[0];if(r.length!==1||o.type!==1)if(r.length===1&&o.type===11){const c=o.codegenNode;return hu(c,s,n),c}else return Lc(n,i(Ic),Li([s]),r,64,void 0,void 0,!0,!1,!1,t.loc);else{const c=o.codegenNode,l=qA(c);return l.type===13&&Yf(l,n),hu(l,s,n),c}}function G6(t){for(;;)if(t.type===19)if(t.alternate.type===19)t=t.alternate;else return t;else t.type===20&&(t=t.value)}const cN=(t,e,n)=>{const{modifiers:i,loc:s}=t,r=t.arg;let{exp:o}=t;if(o&&o.type===4&&!o.content.trim()&&(o=void 0),!o){if(r.type!==4||!r.isStatic)return n.onError($t(52,r.loc)),{props:[an(r,Ke("",!0,s))]};lN(t),o=t.exp}return r.type!==4?(r.children.unshift("("),r.children.push(') || ""')):r.isStatic||(r.content=`${r.content} || ""`),i.some(a=>a.content==="camel")&&(r.type===4?r.isStatic?r.content=Qt(r.content):r.content=`${n.helperString(Ch)}(${r.content})`:(r.children.unshift(`${n.helperString(Ch)}(`),r.children.push(")"))),n.inSSR||(i.some(a=>a.content==="prop")&&Q1(r,"."),i.some(a=>a.content==="attr")&&Q1(r,"^")),{props:[an(r,o)]}},lN=(t,e)=>{const n=t.arg,i=Qt(n.content);t.exp=Ke(i,!1,n.loc)},Q1=(t,e)=>{t.type===4?t.isStatic?t.content=e+t.content:t.content=`\`${e}\${${t.content}}\``:(t.children.unshift(`'${e}' + (`),t.children.push(")"))},_6=o0("for",(t,e,n)=>{const{helper:i,removeHelper:s}=n;return uN(t,e,n,r=>{const o=Cn(i(Wf),[r.source]),a=Bc(t),c=li(t,"memo"),l=Lu(t,"key",!1,!0);l&&l.type===7&&!l.exp&&lN(l);let d=l&&(l.type===6?l.value?Ke(l.value.content,!0):void 0:l.exp);const h=l&&d?an("key",d):null,f=r.source.type===4&&r.source.constType>0,p=f?64:l?128:256;return r.codegenNode=Lc(n,i(Ic),void 0,o,p,void 0,void 0,!0,!f,!1,t.loc),()=>{let m;const{children:b}=r,E=b.length!==1||b[0].type!==1,x=du(t)?t:a&&t.children.length===1&&du(t.children[0])?t.children[0]:null;if(x?(m=x.codegenNode,a&&h&&hu(m,h,n)):E?m=Lc(n,i(Ic),h?Li([h]):void 0,t.children,64,void 0,void 0,!0,void 0,!1):(m=b[0].codegenNode,a&&h&&hu(m,h,n),m.isBlock!==!f&&(m.isBlock?(s(Ao),s(xa(n.inSSR,m.isComponent))):s(Sa(n.inSSR,m.isComponent))),m.isBlock=!f,m.isBlock?(i(Ao),i(xa(n.inSSR,m.isComponent))):i(Sa(n.inSSR,m.isComponent))),c){const S=ba(yh(r.parseResult,[Ke("_cached")]));S.body=IA([is(["const _memo = (",c.exp,")"]),is(["if (_cached",...d?[" && _cached.key === ",d]:[],` && ${n.helperString($E)}(_cached, _memo)) return _cached`]),is(["const _item = ",m]),Ke("_item.memo = _memo"),Ke("return _item")]),o.arguments.push(S,Ke("_cache"),Ke(String(n.cached.length))),n.cached.push(null)}else o.arguments.push(ba(yh(r.parseResult),m,!0))}})});function uN(t,e,n,i){if(!e.exp){n.onError($t(31,e.loc));return}const s=e.forParseResult;if(!s){n.onError($t(32,e.loc));return}c0(s);const{addIdentifiers:r,removeIdentifiers:o,scopes:a}=n,{source:c,value:l,key:u,index:d}=s,h={type:11,loc:e.loc,source:c,valueAlias:l,keyAlias:u,objectIndexAlias:d,parseResult:s,children:Bc(t)?t.children:[t]};n.replaceNode(h),a.vFor++;const f=i&&i(h);return()=>{a.vFor--,f&&f()}}function c0(t,e){t.finalized||(t.finalized=!0)}function yh({value:t,key:e,index:n},i=[]){return $6([t,e,n,...i])}function $6(t){let e=t.length;for(;e--&&!t[e];);return t.slice(0,e+1).map((n,i)=>n||Ke("_".repeat(i+1),!1))}const G1=Ke("undefined",!1),dN=(t,e)=>{if(t.type===1&&(t.tagType===1||t.tagType===3)){const n=li(t,"slot");if(n)return n.exp,e.scopes.vSlot++,()=>{e.scopes.vSlot--}}},eF=(t,e)=>{let n;if(Bc(t)&&t.props.some(i0)&&(n=li(t,"for"))){const i=n.forParseResult;if(i){c0(i);const{value:s,key:r,index:o}=i,{addIdentifiers:a,removeIdentifiers:c}=e;return s&&a(s),r&&a(r),o&&a(o),()=>{s&&c(s),r&&c(r),o&&c(o)}}}},tF=(t,e,n,i)=>ba(t,n,!1,!0,n.length?n[0].loc:i);function hN(t,e,n=tF){e.helper(qf);const{children:i,loc:s}=t,r=[],o=[];let a=e.scopes.vSlot>0||e.scopes.vFor>0;const c=li(t,"slot",!0);if(c){const{arg:b,exp:E}=c;b&&!hi(b)&&(a=!0),r.push(an(b||Ke("default",!0),n(E,void 0,i,s)))}let l=!1,u=!1;const d=[],h=new Set;let f=0;for(let b=0;b<i.length;b++){const E=i[b];let x;if(!Bc(E)||!(x=li(E,"slot",!0))){E.type!==3&&d.push(E);continue}if(c){e.onError($t(37,x.loc));break}l=!0;const{children:S,loc:v}=E,{arg:T=Ke("default",!0),exp:w,loc:D}=x;let A;hi(T)?A=T?T.content:"default":a=!0;const y=li(E,"for"),O=n(w,y,S,v);let L,P;if(L=li(E,"if"))a=!0,o.push(Ah(L.exp,Rd(T,O,f++),G1));else if(P=li(E,/^else(-if)?$/,!0)){let U=b,X;for(;U--&&(X=i[U],X.type===3););if(X&&Bc(X)&&li(X,/^(else-)?if$/)){let K=o[o.length-1];for(;K.alternate.type===19;)K=K.alternate;K.alternate=P.exp?Ah(P.exp,Rd(T,O,f++),G1):Rd(T,O,f++)}else e.onError($t(30,P.loc))}else if(y){a=!0;const U=y.forParseResult;U?(c0(U),o.push(Cn(e.helper(Wf),[U.source,ba(yh(U),Rd(T,O),!0)]))):e.onError($t(32,y.loc))}else{if(A){if(h.has(A)){e.onError($t(38,D));continue}h.add(A),A==="default"&&(u=!0)}r.push(an(T,O))}}if(!c){const b=(E,x)=>{const S=n(E,void 0,x,s);return e.compatConfig&&(S.isNonScopedSlot=!0),an("default",S)};l?d.length&&d.some(E=>fN(E))&&(u?e.onError($t(39,d[0].loc)):r.push(b(void 0,d))):r.push(b(void 0,i))}const p=a?2:nh(t.children)?3:1;let m=Li(r.concat(an("_",Ke(p+"",!1))),s);return o.length&&(m=Cn(e.helper(_E),[m,bo(o)])),{slots:m,hasDynamicSlots:a}}function Rd(t,e,n){const i=[an("name",t),an("fn",e)];return n!=null&&i.push(an("key",Ke(String(n),!0))),Li(i)}function nh(t){for(let e=0;e<t.length;e++){const n=t[e];switch(n.type){case 1:if(n.tagType===2||nh(n.children))return!0;break;case 9:if(nh(n.branches))return!0;break;case 10:case 11:if(nh(n.children))return!0;break}}return!1}function fN(t){return t.type!==2&&t.type!==12?!0:t.type===2?!!t.content.trim():fN(t.content)}const pN=new WeakMap,mN=(t,e)=>function(){if(t=e.currentNode,!(t.type===1&&(t.tagType===0||t.tagType===1)))return;const{tag:i,props:s}=t,r=t.tagType===1;let o=r?gN(t,e):`"${i}"`;const a=Rt(o)&&o.callee===Bf;let c,l,u=0,d,h,f,p=a||o===gc||o===Pf||!r&&(i==="svg"||i==="foreignObject"||i==="math");if(s.length>0){const m=l0(t,e,void 0,r,a);c=m.props,u=m.patchFlag,h=m.dynamicPropNames;const b=m.directives;f=b&&b.length?bo(b.map(E=>EN(E,e))):void 0,m.shouldUseBlock&&(p=!0)}if(t.children.length>0)if(o===cu&&(p=!0,u|=1024),r&&o!==gc&&o!==cu){const{slots:b,hasDynamicSlots:E}=hN(t,e);l=b,E&&(u|=1024)}else if(t.children.length===1&&o!==gc){const b=t.children[0],E=b.type,x=E===5||E===8;x&&Ai(b,e)===0&&(u|=1),x||E===2?l=b:l=t.children}else l=t.children;h&&h.length&&(d=iF(h)),t.codegenNode=Lc(e,o,c,l,u===0?void 0:u,d,f,!!p,!1,r,t.loc)};function gN(t,e,n=!1){let{tag:i}=t;const s=Ig(i),r=Lu(t,"is",!1,!0);if(r)if(s||pa("COMPILER_IS_ON_ELEMENT",e)){let a;if(r.type===6?a=r.value&&Ke(r.value.content,!0):(a=r.exp,a||(a=Ke("is",!1,r.arg.loc))),a)return Cn(e.helper(Bf),[a])}else r.type===6&&r.value.content.startsWith("vue:")&&(i=r.value.content.slice(4));const o=t0(i)||e.isBuiltInComponent(i);return o?(n||e.helper(o),o):(e.helper(Mf),e.components.add(i),Fc(i,"component"))}function l0(t,e,n=t.props,i,s,r=!1){const{tag:o,loc:a,children:c}=t;let l=[];const u=[],d=[],h=c.length>0;let f=!1,p=0,m=!1,b=!1,E=!1,x=!1,S=!1,v=!1;const T=[],w=O=>{l.length&&(u.push(Li(_1(l),a)),l=[]),O&&u.push(O)},D=()=>{e.scopes.vFor>0&&l.push(an(Ke("ref_for",!0),Ke("true")))},A=({key:O,value:L})=>{if(hi(O)){const P=O.content,U=ko(P);if(U&&(!i||s)&&P.toLowerCase()!=="onclick"&&P!=="onUpdate:modelValue"&&!Nr(P)&&(x=!0),U&&Nr(P)&&(v=!0),U&&L.type===14&&(L=L.arguments[0]),L.type===20||(L.type===4||L.type===8)&&Ai(L,e)>0)return;P==="ref"?m=!0:P==="class"?b=!0:P==="style"?E=!0:P!=="key"&&!T.includes(P)&&T.push(P),i&&(P==="class"||P==="style")&&!T.includes(P)&&T.push(P)}else S=!0};for(let O=0;O<n.length;O++){const L=n[O];if(L.type===6){const{loc:P,name:U,nameLoc:X,value:K}=L;let Y=!0;if(U==="ref"&&(m=!0,D()),U==="is"&&(Ig(o)||K&&K.content.startsWith("vue:")||pa("COMPILER_IS_ON_ELEMENT",e)))continue;l.push(an(Ke(U,!0,X),Ke(K?K.content:"",Y,K?K.loc:P)))}else{const{name:P,arg:U,exp:X,loc:K,modifiers:Y}=L,_=P==="bind",q=P==="on";if(P==="slot"){i||e.onError($t(40,K));continue}if(P==="once"||P==="memo"||P==="is"||_&&mo(U,"is")&&(Ig(o)||pa("COMPILER_IS_ON_ELEMENT",e))||q&&r)continue;if((_&&mo(U,"key")||q&&h&&mo(U,"vue:before-update"))&&(f=!0),_&&mo(U,"ref")&&D(),!U&&(_||q)){if(S=!0,X)if(_){if(w(),pa("COMPILER_V_BIND_OBJECT_ORDER",e)){u.unshift(X);continue}D(),w(),u.push(X)}else w({type:14,loc:K,callee:e.helper(jf),arguments:i?[X]:[X,"true"]});else e.onError($t(_?34:35,K));continue}_&&Y.some(j=>j.content==="prop")&&(p|=32);const ee=e.directiveTransforms[P];if(ee){const{props:j,needRuntime:he}=ee(L,t,e);!r&&j.forEach(A),q&&U&&!hi(U)?w(Li(j,a)):l.push(...j),he&&(d.push(L),pi(he)&&pN.set(L,he))}else tT(P)||(d.push(L),h&&(f=!0))}}let y;if(u.length?(w(),u.length>1?y=Cn(e.helper(lu),u,a):y=u[0]):l.length&&(y=Li(_1(l),a)),S?p|=16:(b&&!i&&(p|=2),E&&!i&&(p|=4),T.length&&(p|=8),x&&(p|=32)),!f&&(p===0||p===32)&&(m||v||d.length>0)&&(p|=512),!e.inSSR&&y)switch(y.type){case 15:let O=-1,L=-1,P=!1;for(let K=0;K<y.properties.length;K++){const Y=y.properties[K].key;hi(Y)?Y.content==="class"?O=K:Y.content==="style"&&(L=K):Y.isHandlerKey||(P=!0)}const U=y.properties[O],X=y.properties[L];P?y=Cn(e.helper(Rc),[y]):(U&&!hi(U.value)&&(U.value=Cn(e.helper(Hf),[U.value])),X&&(E||X.value.type===4&&X.value.content.trim()[0]==="["||X.value.type===17)&&(X.value=Cn(e.helper(Xf),[X.value])));break;case 14:break;default:y=Cn(e.helper(Rc),[Cn(e.helper(el),[y])]);break}return{props:y,directives:d,patchFlag:p,dynamicPropNames:T,shouldUseBlock:f}}function _1(t){const e=new Map,n=[];for(let i=0;i<t.length;i++){const s=t[i];if(s.key.type===8||!s.key.isStatic){n.push(s);continue}const r=s.key.content,o=e.get(r);o?(r==="style"||r==="class"||ko(r))&&nF(o,s):(e.set(r,s),n.push(s))}return n}function nF(t,e){t.value.type===17?t.value.elements.push(e.value):t.value=bo([t.value,e.value],t.loc)}function EN(t,e){const n=[],i=pN.get(t);i?n.push(e.helperString(i)):(e.helper(Ff),e.directives.add(t.name),n.push(Fc(t.name,"directive")));const{loc:s}=t;if(t.exp&&n.push(t.exp),t.arg&&(t.exp||n.push("void 0"),n.push(t.arg)),Object.keys(t.modifiers).length){t.arg||(t.exp||n.push("void 0"),n.push("void 0"));const r=Ke("true",!1,s);n.push(Li(t.modifiers.map(o=>an(o,r)),s))}return bo(n,t.loc)}function iF(t){let e="[";for(let n=0,i=t.length;n<i;n++)e+=JSON.stringify(t[n]),n<i-1&&(e+=", ");return e+"]"}function Ig(t){return t==="component"||t==="Component"}const sF=(t,e)=>{if(du(t)){const{children:n,loc:i}=t,{slotName:s,slotProps:r}=vN(t,e),o=[e.prefixIdentifiers?"_ctx.$slots":"$slots",s,"{}","undefined","true"];let a=2;r&&(o[2]=r,a=3),n.length&&(o[3]=ba([],n,!1,!1,i),a=4),e.scopeId&&!e.slotted&&(a=5),o.splice(a),t.codegenNode=Cn(e.helper(GE),o,i)}};function vN(t,e){let n='"default"',i;const s=[];for(let r=0;r<t.props.length;r++){const o=t.props[r];if(o.type===6)o.value&&(o.name==="name"?n=JSON.stringify(o.value.content):(o.name=Qt(o.name),s.push(o)));else if(o.name==="bind"&&mo(o.arg,"name")){if(o.exp)n=o.exp;else if(o.arg&&o.arg.type===4){const a=Qt(o.arg.content);n=o.exp=Ke(a,!1,o.arg.loc)}}else o.name==="bind"&&o.arg&&hi(o.arg)&&(o.arg.content=Qt(o.arg.content)),s.push(o)}if(s.length>0){const{props:r,directives:o}=l0(t,e,s,!1,!1);i=r,o.length&&e.onError($t(36,o[0].loc))}return{slotName:n,slotProps:i}}const u0=(t,e,n,i)=>{const{loc:s,modifiers:r,arg:o}=t;!t.exp&&!r.length&&n.onError($t(35,s));let a;if(o.type===4)if(o.isStatic){let d=o.content;d.startsWith("vue:")&&(d=`vnode-${d.slice(4)}`);const h=e.tagType!==0||d.startsWith("vnode")||!/[A-Z]/.test(d)?aa(Qt(d)):`on:${d}`;a=Ke(h,!0,o.loc)}else a=is([`${n.helperString(wh)}(`,o,")"]);else a=o,a.children.unshift(`${n.helperString(wh)}(`),a.children.push(")");let c=t.exp;c&&!c.content.trim()&&(c=void 0);let l=n.cacheHandlers&&!c&&!n.inVOnce;if(c){const d=n0(c),h=!(d||WA(c)),f=c.content.includes(";");(h||l&&d)&&(c=is([`${h?"$event":"(...args)"} => ${f?"{":"("}`,c,f?"}":")"]))}let u={props:[an(a,c||Ke("() => {}",!1,s))]};return i&&(u=i(u)),l&&(u.props[0].value=n.cache(u.props[0].value)),u.props.forEach(d=>d.key.isHandlerKey=!0),u},rF=(t,e)=>{if(t.type===0||t.type===1||t.type===11||t.type===10)return()=>{const n=t.children;let i,s=!1;for(let r=0;r<n.length;r++){const o=n[r];if(Gd(o)){s=!0;for(let a=r+1;a<n.length;a++){const c=n[a];if(Gd(c))i||(i=n[r]=is([o],o.loc)),i.children.push(" + ",c),n.splice(a,1),a--;else{i=void 0;break}}}}if(!(!s||n.length===1&&(t.type===0||t.type===1&&t.tagType===0&&!t.props.find(r=>r.type===7&&!e.directiveTransforms[r.name])&&t.tag!=="template")))for(let r=0;r<n.length;r++){const o=n[r];if(Gd(o)||o.type===8){const a=[];(o.type!==2||o.content!==" ")&&a.push(o),!e.ssr&&Ai(o,e)===0&&a.push("1"),n[r]={type:12,content:o,loc:o.loc,codegenNode:Cn(e.helper(Lf),a)}}}}},$1=new WeakSet,oF=(t,e)=>{if(t.type===1&&li(t,"once",!0))return $1.has(t)||e.inVOnce||e.inSSR?void 0:($1.add(t),e.inVOnce=!0,e.helper(uu),()=>{e.inVOnce=!1;const n=e.currentNode;n.codegenNode&&(n.codegenNode=e.cache(n.codegenNode,!0,!0))})},d0=(t,e,n)=>{const{exp:i,arg:s}=t;if(!i)return n.onError($t(41,t.loc)),Ld();const r=i.loc.source.trim(),o=i.type===4?i.content:r,a=n.bindingMetadata[r];if(a==="props"||a==="props-aliased")return n.onError($t(44,i.loc)),Ld();if(!o.trim()||!n0(i))return n.onError($t(42,i.loc)),Ld();const c=s||Ke("modelValue",!0),l=s?hi(s)?`onUpdate:${Qt(s.content)}`:is(['"onUpdate:" + ',s]):"onUpdate:modelValue";let u;const d=n.isTS?"($event: any)":"$event";u=is([`${d} => ((`,i,") = $event)"]);const h=[an(c,t.exp),an(l,u)];if(t.modifiers.length&&e.tagType===1){const f=t.modifiers.map(m=>m.content).map(m=>(Ru(m)?m:JSON.stringify(m))+": true").join(", "),p=s?hi(s)?`${s.content}Modifiers`:is([s,' + "Modifiers"']):"modelModifiers";h.push(an(p,Ke(`{ ${f} }`,!1,t.loc,2)))}return Ld(h)};function Ld(t=[]){return{props:t}}const aF=/[\w).+\-_$\]]/,cF=(t,e)=>{pa("COMPILER_FILTERS",e)&&(t.type===5?kh(t.content,e):t.type===1&&t.props.forEach(n=>{n.type===7&&n.name!=="for"&&n.exp&&kh(n.exp,e)}))};function kh(t,e){if(t.type===4)ex(t,e);else for(let n=0;n<t.children.length;n++){const i=t.children[n];typeof i=="object"&&(i.type===4?ex(i,e):i.type===8?kh(t,e):i.type===5&&kh(i.content,e))}}function ex(t,e){const n=t.content;let i=!1,s=!1,r=!1,o=!1,a=0,c=0,l=0,u=0,d,h,f,p,m=[];for(f=0;f<n.length;f++)if(h=d,d=n.charCodeAt(f),i)d===39&&h!==92&&(i=!1);else if(s)d===34&&h!==92&&(s=!1);else if(r)d===96&&h!==92&&(r=!1);else if(o)d===47&&h!==92&&(o=!1);else if(d===124&&n.charCodeAt(f+1)!==124&&n.charCodeAt(f-1)!==124&&!a&&!c&&!l)p===void 0?(u=f+1,p=n.slice(0,f).trim()):b();else{switch(d){case 34:s=!0;break;case 39:i=!0;break;case 96:r=!0;break;case 40:l++;break;case 41:l--;break;case 91:c++;break;case 93:c--;break;case 123:a++;break;case 125:a--;break}if(d===47){let E=f-1,x;for(;E>=0&&(x=n.charAt(E),x===" ");E--);(!x||!aF.test(x))&&(o=!0)}}p===void 0?p=n.slice(0,f).trim():u!==0&&b();function b(){m.push(n.slice(u,f).trim()),u=f+1}if(m.length){for(f=0;f<m.length;f++)p=lF(p,m[f],e);t.content=p,t.ast=void 0}}function lF(t,e,n){n.helper(Uf);const i=e.indexOf("(");if(i<0)return n.filters.add(e),`${Fc(e,"filter")}(${t})`;{const s=e.slice(0,i),r=e.slice(i+1);return n.filters.add(s),`${Fc(s,"filter")}(${t}${r!==")"?","+r:r}`}}const tx=new WeakSet,uF=(t,e)=>{if(t.type===1){const n=li(t,"memo");return!n||tx.has(t)?void 0:(tx.add(t),()=>{const i=t.codegenNode||e.currentNode.codegenNode;i&&i.type===13&&(t.tagType!==1&&Yf(i,e),t.codegenNode=Cn(e.helper(zf),[n.exp,ba(void 0,i),"_cache",String(e.cached.length)]),e.cached.push(null))})}};function bN(t){return[[oF,Q6,uF,_6,cF,sF,mN,dN,rF],{on:u0,bind:cN,model:d0}]}function SN(t,e={}){const n=e.onError||e0,i=e.mode==="module";e.prefixIdentifiers===!0?n($t(47)):i&&n($t(48));const s=!1;e.cacheHandlers&&n($t(49)),e.scopeId&&!i&&n($t(50));const r=St({},e,{prefixIdentifiers:s}),o=ze(t)?r0(t,r):t,[a,c]=bN();return tN(o,St({},r,{nodeTransforms:[...a,...e.nodeTransforms||[]],directiveTransforms:St({},c,e.directiveTransforms||{})})),iN(o,r)}const dF={DATA:"data",PROPS:"props",PROPS_ALIASED:"props-aliased",SETUP_LET:"setup-let",SETUP_CONST:"setup-const",SETUP_REACTIVE_CONST:"setup-reactive-const",SETUP_MAYBE_REF:"setup-maybe-ref",SETUP_REF:"setup-ref",OPTIONS:"options",LITERAL_CONST:"literal-const"},xN=()=>({props:[]});/**
* @vue/compiler-dom v3.5.16
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const h0=Symbol(""),f0=Symbol(""),p0=Symbol(""),m0=Symbol(""),Dh=Symbol(""),g0=Symbol(""),E0=Symbol(""),v0=Symbol(""),b0=Symbol(""),S0=Symbol("");DA({[h0]:"vModelRadio",[f0]:"vModelCheckbox",[p0]:"vModelText",[m0]:"vModelSelect",[Dh]:"vModelDynamic",[g0]:"withModifiers",[E0]:"withKeys",[v0]:"vShow",[b0]:"Transition",[S0]:"TransitionGroup"});let Qa;function hF(t,e=!1){return Qa||(Qa=document.createElement("div")),e?(Qa.innerHTML=`<div foo="${t.replace(/"/g,"&quot;")}">`,Qa.children[0].getAttribute("foo")):(Qa.innerHTML=t,Qa.textContent)}const x0={parseMode:"html",isVoidTag:aT,isNativeTag:t=>sT(t)||rT(t)||oT(t),isPreTag:t=>t==="pre",isIgnoreNewlineTag:t=>t==="pre"||t==="textarea",decodeEntities:hF,isBuiltInComponent:t=>{if(t==="Transition"||t==="transition")return b0;if(t==="TransitionGroup"||t==="transition-group")return S0},getNamespace(t,e,n){let i=e?e.ns:n;if(e&&i===2)if(e.tag==="annotation-xml"){if(t==="svg")return 1;e.props.some(s=>s.type===6&&s.name==="encoding"&&s.value!=null&&(s.value.content==="text/html"||s.value.content==="application/xhtml+xml"))&&(i=0)}else/^m(?:[ions]|text)$/.test(e.tag)&&t!=="mglyph"&&t!=="malignmark"&&(i=0);else e&&i===1&&(e.tag==="foreignObject"||e.tag==="desc"||e.tag==="title")&&(i=0);if(i===0){if(t==="svg")return 1;if(t==="math")return 2}return i}},TN=t=>{t.type===1&&t.props.forEach((e,n)=>{e.type===6&&e.name==="style"&&e.value&&(t.props[n]={type:7,name:"bind",arg:Ke("style",!0,e.loc),exp:fF(e.value.content,e.loc),modifiers:[],loc:e.loc})})},fF=(t,e)=>{const n=Qg(t);return Ke(JSON.stringify(n),!1,e,3)};function Pr(t,e){return $t(t,e)}const pF={X_V_HTML_NO_EXPRESSION:53,53:"X_V_HTML_NO_EXPRESSION",X_V_HTML_WITH_CHILDREN:54,54:"X_V_HTML_WITH_CHILDREN",X_V_TEXT_NO_EXPRESSION:55,55:"X_V_TEXT_NO_EXPRESSION",X_V_TEXT_WITH_CHILDREN:56,56:"X_V_TEXT_WITH_CHILDREN",X_V_MODEL_ON_INVALID_ELEMENT:57,57:"X_V_MODEL_ON_INVALID_ELEMENT",X_V_MODEL_ARG_ON_ELEMENT:58,58:"X_V_MODEL_ARG_ON_ELEMENT",X_V_MODEL_ON_FILE_INPUT_ELEMENT:59,59:"X_V_MODEL_ON_FILE_INPUT_ELEMENT",X_V_MODEL_UNNECESSARY_VALUE:60,60:"X_V_MODEL_UNNECESSARY_VALUE",X_V_SHOW_NO_EXPRESSION:61,61:"X_V_SHOW_NO_EXPRESSION",X_TRANSITION_INVALID_CHILDREN:62,62:"X_TRANSITION_INVALID_CHILDREN",X_IGNORED_SIDE_EFFECT_TAG:63,63:"X_IGNORED_SIDE_EFFECT_TAG",__EXTEND_POINT__:64,64:"__EXTEND_POINT__"},mF={53:"v-html is missing expression.",54:"v-html will override element children.",55:"v-text is missing expression.",56:"v-text will override element children.",57:"v-model can only be used on <input>, <textarea> and <select> elements.",58:"v-model argument is not supported on plain elements.",59:"v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.",60:"Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.",61:"v-show is missing expression.",62:"<Transition> expects exactly one child element or component.",63:"Tags with side effect (<script> and <style>) are ignored in client component templates."},gF=(t,e,n)=>{const{exp:i,loc:s}=t;return i||n.onError(Pr(53,s)),e.children.length&&(n.onError(Pr(54,s)),e.children.length=0),{props:[an(Ke("innerHTML",!0,s),i||Ke("",!0))]}},EF=(t,e,n)=>{const{exp:i,loc:s}=t;return i||n.onError(Pr(55,s)),e.children.length&&(n.onError(Pr(56,s)),e.children.length=0),{props:[an(Ke("textContent",!0),i?Ai(i,n)>0?i:Cn(n.helperString(Iu),[i],s):Ke("",!0))]}},vF=(t,e,n)=>{const i=d0(t,e,n);if(!i.props.length||e.tagType===1)return i;t.arg&&n.onError(Pr(58,t.arg.loc));const{tag:s}=e,r=n.isCustomElement(s);if(s==="input"||s==="textarea"||s==="select"||r){let o=p0,a=!1;if(s==="input"||r){const c=Lu(e,"type");if(c){if(c.type===7)o=Dh;else if(c.value)switch(c.value.content){case"radio":o=h0;break;case"checkbox":o=f0;break;case"file":a=!0,n.onError(Pr(59,t.loc));break}}else XA(e)&&(o=Dh)}else s==="select"&&(o=m0);a||(i.needRuntime=n.helper(o))}else n.onError(Pr(57,t.loc));return i.props=i.props.filter(o=>!(o.key.type===4&&o.key.content==="modelValue")),i},bF=Un("passive,once,capture"),SF=Un("stop,prevent,self,ctrl,shift,alt,meta,exact,middle"),xF=Un("left,right"),CN=Un("onkeyup,onkeydown,onkeypress"),TF=(t,e,n,i)=>{const s=[],r=[],o=[];for(let a=0;a<e.length;a++){const c=e[a].content;c==="native"&&Mc("COMPILER_V_ON_NATIVE",n)||bF(c)?o.push(c):xF(c)?hi(t)?CN(t.content.toLowerCase())?s.push(c):r.push(c):(s.push(c),r.push(c)):SF(c)?r.push(c):s.push(c)}return{keyModifiers:s,nonKeyModifiers:r,eventOptionModifiers:o}},nx=(t,e)=>hi(t)&&t.content.toLowerCase()==="onclick"?Ke(e,!0):t.type!==4?is(["(",t,`) === "onClick" ? "${e}" : (`,t,")"]):t,CF=(t,e,n)=>u0(t,e,n,i=>{const{modifiers:s}=t;if(!s.length)return i;let{key:r,value:o}=i.props[0];const{keyModifiers:a,nonKeyModifiers:c,eventOptionModifiers:l}=TF(r,s,n,t.loc);if(c.includes("right")&&(r=nx(r,"onContextmenu")),c.includes("middle")&&(r=nx(r,"onMouseup")),c.length&&(o=Cn(n.helper(g0),[o,JSON.stringify(c)])),a.length&&(!hi(r)||CN(r.content.toLowerCase()))&&(o=Cn(n.helper(E0),[o,JSON.stringify(a)])),l.length){const u=l.map(Oo).join("");r=hi(r)?Ke(`${r.content}${u}`,!0):is(["(",r,`) + "${u}"`])}return{props:[an(r,o)]}}),wF=(t,e,n)=>{const{exp:i,loc:s}=t;return i||n.onError(Pr(61,s)),{props:[],needRuntime:n.helper(v0)}},AF=(t,e)=>{t.type===1&&t.tagType===0&&(t.tag==="script"||t.tag==="style")&&e.removeNode()},wN=[TN],AN={cloak:xN,html:gF,text:EF,model:vF,on:CF,show:wF};function NF(t,e={}){return SN(t,St({},x0,e,{nodeTransforms:[AF,...wN,...e.nodeTransforms||[]],directiveTransforms:St({},AN,e.directiveTransforms||{}),transformHoist:null}))}function yF(t,e={}){return r0(t,St({},x0,e))}const kF=Object.freeze(Object.defineProperty({__proto__:null,BASE_TRANSITION:JE,BindingTypes:dF,CAMELIZE:Ch,CAPITALIZE:wA,CREATE_BLOCK:ZE,CREATE_COMMENT:$c,CREATE_ELEMENT_BLOCK:KE,CREATE_ELEMENT_VNODE:Rf,CREATE_SLOTS:_E,CREATE_STATIC:QE,CREATE_TEXT:Lf,CREATE_VNODE:If,CompilerDeprecationTypes:J5,ConstantTypes:V5,DOMDirectiveTransforms:AN,DOMErrorCodes:pF,DOMErrorMessages:mF,DOMNodeTransforms:wN,ElementTypes:U5,ErrorCodes:Q5,FRAGMENT:Ic,GUARD_REACTIVE_PROPS:el,IS_MEMO_SAME:$E,IS_REF:kA,KEEP_ALIVE:cu,MERGE_PROPS:lu,NORMALIZE_CLASS:Hf,NORMALIZE_PROPS:Rc,NORMALIZE_STYLE:Xf,Namespaces:B5,NodeTypes:F5,OPEN_BLOCK:Ao,POP_SCOPE_ID:NA,PUSH_SCOPE_ID:AA,RENDER_LIST:Wf,RENDER_SLOT:GE,RESOLVE_COMPONENT:Mf,RESOLVE_DIRECTIVE:Ff,RESOLVE_DYNAMIC_COMPONENT:Bf,RESOLVE_FILTER:Uf,SET_BLOCK_TRACKING:uu,SUSPENSE:Pf,TELEPORT:gc,TO_DISPLAY_STRING:Iu,TO_HANDLERS:jf,TO_HANDLER_KEY:wh,TRANSITION:b0,TRANSITION_GROUP:S0,TS_NODE_TYPES:MA,UNREF:yA,V_MODEL_CHECKBOX:f0,V_MODEL_DYNAMIC:Dh,V_MODEL_RADIO:h0,V_MODEL_SELECT:m0,V_MODEL_TEXT:p0,V_ON_WITH_KEYS:E0,V_ON_WITH_MODIFIERS:g0,V_SHOW:v0,WITH_CTX:qf,WITH_DIRECTIVES:Vf,WITH_MEMO:zf,advancePositionWithClone:m6,advancePositionWithMutation:HA,assert:g6,baseCompile:SN,baseParse:r0,buildDirectiveArgs:EN,buildProps:l0,buildSlots:hN,checkCompatEnabled:Mc,compile:NF,convertToBlock:Yf,createArrayExpression:bo,createAssignmentExpression:j5,createBlockStatement:IA,createCacheExpression:PA,createCallExpression:Cn,createCompilerError:$t,createCompoundExpression:is,createConditionalExpression:Ah,createDOMCompilerError:Pr,createForLoopParams:yh,createFunctionExpression:ba,createIfStatement:X5,createInterpolation:W5,createObjectExpression:Li,createObjectProperty:an,createReturnStatement:z5,createRoot:OA,createSequenceExpression:q5,createSimpleExpression:Ke,createStructuralDirectiveTransform:o0,createTemplateLiteral:H5,createTransformContext:eN,createVNodeCall:Lc,errorMessages:G5,extractIdentifiers:Ar,findDir:li,findProp:Lu,forAliasRE:zA,generate:iN,generateCodeFrame:nT,getBaseTransformPreset:bN,getConstantType:Ai,getMemoedVNodeCall:qA,getVNodeBlockHelper:xa,getVNodeHelper:Sa,hasDynamicKeyVBind:XA,hasScopeRef:ms,helperNameMap:va,injectProp:hu,isCoreComponent:t0,isFnExpression:WA,isFnExpressionBrowser:VA,isFnExpressionNode:p6,isFunctionType:o6,isInDestructureAssignment:e6,isInNewExpression:t6,isMemberExpression:n0,isMemberExpressionBrowser:UA,isMemberExpressionNode:h6,isReferencedIdentifier:$5,isSimpleIdentifier:Ru,isSlotOutlet:du,isStaticArgOf:mo,isStaticExp:hi,isStaticProperty:LA,isStaticPropertyKey:a6,isTemplateNode:Bc,isText:Gd,isVSlot:i0,locStub:Rn,noopDirectiveTransform:xN,parse:yF,parserOptions:x0,processExpression:th,processFor:uN,processIf:aN,processSlotOutlet:vN,registerRuntimeHelpers:DA,resolveComponentType:gN,stringifyExpression:oN,toValidAssetId:Fc,trackSlotScopes:dN,trackVForSlotScopes:eF,transform:tN,transformBind:cN,transformElement:mN,transformExpression:K6,transformModel:d0,transformOn:u0,transformStyle:TN,traverseNode:Mu,unwrapTSNode:BA,walkBlockDeclarations:i6,walkFunctionParams:n6,walkIdentifiers:_5,warnDeprecation:K5},Symbol.toStringTag,{value:"Module"})),DF=Ef(kF),OF=Ef(YI),PF=Ef(OD);/**
* vue v3.5.16
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/var ix;function IF(){return ix||(ix=1,function(t){Object.defineProperty(t,"__esModule",{value:!0});var e=DF,n=OF,i=PF;function s(c){var l=Object.create(null);if(c)for(var u in c)l[u]=c[u];return l.default=c,Object.freeze(l)}var r=s(n);const o=Object.create(null);function a(c,l){if(!i.isString(c))if(c.nodeType)c=c.innerHTML;else return i.NOOP;const u=i.genCacheKey(c,l),d=o[u];if(d)return d;if(c[0]==="#"){const m=document.querySelector(c);c=m?m.innerHTML:""}const h=i.extend({hoistStatic:!0,onError:void 0,onWarn:i.NOOP},l);!h.isCustomElement&&typeof customElements<"u"&&(h.isCustomElement=m=>!!customElements.get(m));const{code:f}=e.compile(c,h),p=new Function("Vue",f)(r);return p._rc=!0,o[u]=p}n.registerRuntimeCompiler(a),t.compile=a,Object.keys(n).forEach(function(c){c!=="default"&&!Object.prototype.hasOwnProperty.call(t,c)&&(t[c]=n[c])})}(Hm)),Hm}var sx;function RF(){return sx||(sx=1,Wm.exports=IF()),Wm.exports}var LF=Qd.exports,rx;function MF(){return rx||(rx=1,function(t,e){(function(i,s){t.exports=s(RF())})(typeof self<"u"?self:LF,function(n){return function(i){var s={};function r(o){if(s[o])return s[o].exports;var a=s[o]={i:o,l:!1,exports:{}};return i[o].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=i,r.c=s,r.d=function(o,a,c){r.o(o,a)||Object.defineProperty(o,a,{enumerable:!0,get:c})},r.r=function(o){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})},r.t=function(o,a){if(a&1&&(o=r(o)),a&8||a&4&&typeof o=="object"&&o&&o.__esModule)return o;var c=Object.create(null);if(r.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:o}),a&2&&typeof o!="string")for(var l in o)r.d(c,l,(function(u){return o[u]}).bind(null,l));return c},r.n=function(o){var a=o&&o.__esModule?function(){return o.default}:function(){return o};return r.d(a,"a",a),a},r.o=function(o,a){return Object.prototype.hasOwnProperty.call(o,a)},r.p="",r(r.s="fb15")}({"00ee":function(i,s,r){var o=r("b622"),a=o("toStringTag"),c={};c[a]="z",i.exports=String(c)==="[object z]"},"0366":function(i,s,r){var o=r("1c0b");i.exports=function(a,c,l){if(o(a),c===void 0)return a;switch(l){case 0:return function(){return a.call(c)};case 1:return function(u){return a.call(c,u)};case 2:return function(u,d){return a.call(c,u,d)};case 3:return function(u,d,h){return a.call(c,u,d,h)}}return function(){return a.apply(c,arguments)}}},"06cf":function(i,s,r){var o=r("83ab"),a=r("d1e7"),c=r("5c6c"),l=r("fc6a"),u=r("c04e"),d=r("5135"),h=r("0cfb"),f=Object.getOwnPropertyDescriptor;s.f=o?f:function(m,b){if(m=l(m),b=u(b,!0),h)try{return f(m,b)}catch{}if(d(m,b))return c(!a.f.call(m,b),m[b])}},"0cfb":function(i,s,r){var o=r("83ab"),a=r("d039"),c=r("cc12");i.exports=!o&&!a(function(){return Object.defineProperty(c("div"),"a",{get:function(){return 7}}).a!=7})},"159b":function(i,s,r){var o=r("da84"),a=r("fdbc"),c=r("17c2"),l=r("9112");for(var u in a){var d=o[u],h=d&&d.prototype;if(h&&h.forEach!==c)try{l(h,"forEach",c)}catch{h.forEach=c}}},"17c2":function(i,s,r){var o=r("b727").forEach,a=r("a640"),c=r("ae40"),l=a("forEach"),u=c("forEach");i.exports=!l||!u?function(h){return o(this,h,arguments.length>1?arguments[1]:void 0)}:[].forEach},"19aa":function(i,s){i.exports=function(r,o,a){if(!(r instanceof o))throw TypeError("Incorrect "+(a?a+" ":"")+"invocation");return r}},"1be4":function(i,s,r){var o=r("d066");i.exports=o("document","documentElement")},"1c0b":function(i,s){i.exports=function(r){if(typeof r!="function")throw TypeError(String(r)+" is not a function");return r}},"1c7e":function(i,s,r){var o=r("b622"),a=o("iterator"),c=!1;try{var l=0,u={next:function(){return{done:!!l++}},return:function(){c=!0}};u[a]=function(){return this},Array.from(u,function(){throw 2})}catch{}i.exports=function(d,h){if(!h&&!c)return!1;var f=!1;try{var p={};p[a]=function(){return{next:function(){return{done:f=!0}}}},d(p)}catch{}return f}},"1cdc":function(i,s,r){var o=r("342f");i.exports=/(iphone|ipod|ipad).*applewebkit/i.test(o)},"1d80":function(i,s){i.exports=function(r){if(r==null)throw TypeError("Can't call method on "+r);return r}},2266:function(i,s,r){var o=r("825a"),a=r("e95a"),c=r("50c4"),l=r("0366"),u=r("35a1"),d=r("9bdd"),h=function(p,m){this.stopped=p,this.result=m},f=i.exports=function(p,m,b,E,x){var S=l(m,b,E?2:1),v,T,w,D,A,y,O;if(x)v=p;else{if(T=u(p),typeof T!="function")throw TypeError("Target is not iterable");if(a(T)){for(w=0,D=c(p.length);D>w;w++)if(A=E?S(o(O=p[w])[0],O[1]):S(p[w]),A&&A instanceof h)return A;return new h(!1)}v=T.call(p)}for(y=v.next;!(O=y.call(v)).done;)if(A=d(v,S,O.value,E),typeof A=="object"&&A&&A instanceof h)return A;return new h(!1)};f.stop=function(p){return new h(!0,p)}},"23cb":function(i,s,r){var o=r("a691"),a=Math.max,c=Math.min;i.exports=function(l,u){var d=o(l);return d<0?a(d+u,0):c(d,u)}},"23e7":function(i,s,r){var o=r("da84"),a=r("06cf").f,c=r("9112"),l=r("6eeb"),u=r("ce4e"),d=r("e893"),h=r("94ca");i.exports=function(f,p){var m=f.target,b=f.global,E=f.stat,x,S,v,T,w,D;if(b?S=o:E?S=o[m]||u(m,{}):S=(o[m]||{}).prototype,S)for(v in p){if(w=p[v],f.noTargetGet?(D=a(S,v),T=D&&D.value):T=S[v],x=h(b?v:m+(E?".":"#")+v,f.forced),!x&&T!==void 0){if(typeof w==typeof T)continue;d(w,T)}(f.sham||T&&T.sham)&&c(w,"sham",!0),l(S,v,w,f)}}},"241c":function(i,s,r){var o=r("ca84"),a=r("7839"),c=a.concat("length","prototype");s.f=Object.getOwnPropertyNames||function(u){return o(u,c)}},2626:function(i,s,r){var o=r("d066"),a=r("9bf2"),c=r("b622"),l=r("83ab"),u=c("species");i.exports=function(d){var h=o(d),f=a.f;l&&h&&!h[u]&&f(h,u,{configurable:!0,get:function(){return this}})}},"2cf4":function(i,s,r){var o=r("da84"),a=r("d039"),c=r("c6b6"),l=r("0366"),u=r("1be4"),d=r("cc12"),h=r("1cdc"),f=o.location,p=o.setImmediate,m=o.clearImmediate,b=o.process,E=o.MessageChannel,x=o.Dispatch,S=0,v={},T="onreadystatechange",w,D,A,y=function(U){if(v.hasOwnProperty(U)){var X=v[U];delete v[U],X()}},O=function(U){return function(){y(U)}},L=function(U){y(U.data)},P=function(U){o.postMessage(U+"",f.protocol+"//"+f.host)};(!p||!m)&&(p=function(X){for(var K=[],Y=1;arguments.length>Y;)K.push(arguments[Y++]);return v[++S]=function(){(typeof X=="function"?X:Function(X)).apply(void 0,K)},w(S),S},m=function(X){delete v[X]},c(b)=="process"?w=function(U){b.nextTick(O(U))}:x&&x.now?w=function(U){x.now(O(U))}:E&&!h?(D=new E,A=D.port2,D.port1.onmessage=L,w=l(A.postMessage,A,1)):o.addEventListener&&typeof postMessage=="function"&&!o.importScripts&&!a(P)&&f.protocol!=="file:"?(w=P,o.addEventListener("message",L,!1)):T in d("script")?w=function(U){u.appendChild(d("script"))[T]=function(){u.removeChild(this),y(U)}}:w=function(U){setTimeout(O(U),0)}),i.exports={set:p,clear:m}},"2d00":function(i,s,r){var o=r("da84"),a=r("342f"),c=o.process,l=c&&c.versions,u=l&&l.v8,d,h;u?(d=u.split("."),h=d[0]+d[1]):a&&(d=a.match(/Edge\/(\d+)/),(!d||d[1]>=74)&&(d=a.match(/Chrome\/(\d+)/),d&&(h=d[1]))),i.exports=h&&+h},"342f":function(i,s,r){var o=r("d066");i.exports=o("navigator","userAgent")||""},"35a1":function(i,s,r){var o=r("f5df"),a=r("3f8c"),c=r("b622"),l=c("iterator");i.exports=function(u){if(u!=null)return u[l]||u["@@iterator"]||a[o(u)]}},"37e8":function(i,s,r){var o=r("83ab"),a=r("9bf2"),c=r("825a"),l=r("df75");i.exports=o?Object.defineProperties:function(d,h){c(d);for(var f=l(h),p=f.length,m=0,b;p>m;)a.f(d,b=f[m++],h[b]);return d}},"3bbe":function(i,s,r){var o=r("861d");i.exports=function(a){if(!o(a)&&a!==null)throw TypeError("Can't set "+String(a)+" as a prototype");return a}},"3f8c":function(i,s){i.exports={}},4160:function(i,s,r){var o=r("23e7"),a=r("17c2");o({target:"Array",proto:!0,forced:[].forEach!=a},{forEach:a})},"428f":function(i,s,r){var o=r("da84");i.exports=o},"44ad":function(i,s,r){var o=r("d039"),a=r("c6b6"),c="".split;i.exports=o(function(){return!Object("z").propertyIsEnumerable(0)})?function(l){return a(l)=="String"?c.call(l,""):Object(l)}:Object},"44de":function(i,s,r){var o=r("da84");i.exports=function(a,c){var l=o.console;l&&l.error&&(arguments.length===1?l.error(a):l.error(a,c))}},4840:function(i,s,r){var o=r("825a"),a=r("1c0b"),c=r("b622"),l=c("species");i.exports=function(u,d){var h=o(u).constructor,f;return h===void 0||(f=o(h)[l])==null?d:a(f)}},4930:function(i,s,r){var o=r("d039");i.exports=!!Object.getOwnPropertySymbols&&!o(function(){return!String(Symbol())})},"4d64":function(i,s,r){var o=r("fc6a"),a=r("50c4"),c=r("23cb"),l=function(u){return function(d,h,f){var p=o(d),m=a(p.length),b=c(f,m),E;if(u&&h!=h){for(;m>b;)if(E=p[b++],E!=E)return!0}else for(;m>b;b++)if((u||b in p)&&p[b]===h)return u||b||0;return!u&&-1}};i.exports={includes:l(!0),indexOf:l(!1)}},"50c4":function(i,s,r){var o=r("a691"),a=Math.min;i.exports=function(c){return c>0?a(o(c),9007199254740991):0}},5135:function(i,s){var r={}.hasOwnProperty;i.exports=function(o,a){return r.call(o,a)}},5692:function(i,s,r){var o=r("c430"),a=r("c6cd");(i.exports=function(c,l){return a[c]||(a[c]=l!==void 0?l:{})})("versions",[]).push({version:"3.6.5",mode:o?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},"56ef":function(i,s,r){var o=r("d066"),a=r("241c"),c=r("7418"),l=r("825a");i.exports=o("Reflect","ownKeys")||function(d){var h=a.f(l(d)),f=c.f;return f?h.concat(f(d)):h}},5899:function(i,s){i.exports=`	
\v\f\r                　\u2028\u2029\uFEFF`},"58a8":function(i,s,r){var o=r("1d80"),a=r("5899"),c="["+a+"]",l=RegExp("^"+c+c+"*"),u=RegExp(c+c+"*$"),d=function(h){return function(f){var p=String(o(f));return h&1&&(p=p.replace(l,"")),h&2&&(p=p.replace(u,"")),p}};i.exports={start:d(1),end:d(2),trim:d(3)}},"5c6c":function(i,s){i.exports=function(r,o){return{enumerable:!(r&1),configurable:!(r&2),writable:!(r&4),value:o}}},"65f0":function(i,s,r){var o=r("861d"),a=r("e8b5"),c=r("b622"),l=c("species");i.exports=function(u,d){var h;return a(u)&&(h=u.constructor,typeof h=="function"&&(h===Array||a(h.prototype))?h=void 0:o(h)&&(h=h[l],h===null&&(h=void 0))),new(h===void 0?Array:h)(d===0?0:d)}},"69f3":function(i,s,r){var o=r("7f9a"),a=r("da84"),c=r("861d"),l=r("9112"),u=r("5135"),d=r("f772"),h=r("d012"),f=a.WeakMap,p,m,b,E=function(A){return b(A)?m(A):p(A,{})},x=function(A){return function(y){var O;if(!c(y)||(O=m(y)).type!==A)throw TypeError("Incompatible receiver, "+A+" required");return O}};if(o){var S=new f,v=S.get,T=S.has,w=S.set;p=function(A,y){return w.call(S,A,y),y},m=function(A){return v.call(S,A)||{}},b=function(A){return T.call(S,A)}}else{var D=d("state");h[D]=!0,p=function(A,y){return l(A,D,y),y},m=function(A){return u(A,D)?A[D]:{}},b=function(A){return u(A,D)}}i.exports={set:p,get:m,has:b,enforce:E,getterFor:x}},"6eeb":function(i,s,r){var o=r("da84"),a=r("9112"),c=r("5135"),l=r("ce4e"),u=r("8925"),d=r("69f3"),h=d.get,f=d.enforce,p=String(String).split("String");(i.exports=function(m,b,E,x){var S=x?!!x.unsafe:!1,v=x?!!x.enumerable:!1,T=x?!!x.noTargetGet:!1;if(typeof E=="function"&&(typeof b=="string"&&!c(E,"name")&&a(E,"name",b),f(E).source=p.join(typeof b=="string"?b:"")),m===o){v?m[b]=E:l(b,E);return}else S?!T&&m[b]&&(v=!0):delete m[b];v?m[b]=E:a(m,b,E)})(Function.prototype,"toString",function(){return typeof this=="function"&&h(this).source||u(this)})},7156:function(i,s,r){var o=r("861d"),a=r("d2bb");i.exports=function(c,l,u){var d,h;return a&&typeof(d=l.constructor)=="function"&&d!==u&&o(h=d.prototype)&&h!==u.prototype&&a(c,h),c}},7418:function(i,s){s.f=Object.getOwnPropertySymbols},7839:function(i,s){i.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},"7b0b":function(i,s,r){var o=r("1d80");i.exports=function(a){return Object(o(a))}},"7c73":function(i,s,r){var o=r("825a"),a=r("37e8"),c=r("7839"),l=r("d012"),u=r("1be4"),d=r("cc12"),h=r("f772"),f=">",p="<",m="prototype",b="script",E=h("IE_PROTO"),x=function(){},S=function(A){return p+b+f+A+p+"/"+b+f},v=function(A){A.write(S("")),A.close();var y=A.parentWindow.Object;return A=null,y},T=function(){var A=d("iframe"),y="java"+b+":",O;return A.style.display="none",u.appendChild(A),A.src=String(y),O=A.contentWindow.document,O.open(),O.write(S("document.F=Object")),O.close(),O.F},w,D=function(){try{w=document.domain&&new ActiveXObject("htmlfile")}catch{}D=w?v(w):T();for(var A=c.length;A--;)delete D[m][c[A]];return D()};l[E]=!0,i.exports=Object.create||function(y,O){var L;return y!==null?(x[m]=o(y),L=new x,x[m]=null,L[E]=y):L=D(),O===void 0?L:a(L,O)}},"7f9a":function(i,s,r){var o=r("da84"),a=r("8925"),c=o.WeakMap;i.exports=typeof c=="function"&&/native code/.test(a(c))},"825a":function(i,s,r){var o=r("861d");i.exports=function(a){if(!o(a))throw TypeError(String(a)+" is not an object");return a}},"83ab":function(i,s,r){var o=r("d039");i.exports=!o(function(){return Object.defineProperty({},1,{get:function(){return 7}})[1]!=7})},"861d":function(i,s){i.exports=function(r){return typeof r=="object"?r!==null:typeof r=="function"}},8875:function(i,s,r){var o,a,c;(function(l,u){a=[],o=u,c=typeof o=="function"?o.apply(s,a):o,c!==void 0&&(i.exports=c)})(typeof self<"u"?self:this,function(){function l(){var u=Object.getOwnPropertyDescriptor(document,"currentScript");if(!u&&"currentScript"in document&&document.currentScript||u&&u.get!==l&&document.currentScript)return document.currentScript;try{throw new Error}catch(w){var d=/.*at [^(]*\((.*):(.+):(.+)\)$/ig,h=/@([^@]*):(\d+):(\d+)\s*$/ig,f=d.exec(w.stack)||h.exec(w.stack),p=f&&f[1]||!1,m=f&&f[2]||!1,b=document.location.href.replace(document.location.hash,""),E,x,S,v=document.getElementsByTagName("script");p===b&&(E=document.documentElement.outerHTML,x=new RegExp("(?:[^\\n]+?\\n){0,"+(m-2)+"}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*","i"),S=E.replace(x,"$1").trim());for(var T=0;T<v.length;T++)if(v[T].readyState==="interactive"||v[T].src===p||p===b&&v[T].innerHTML&&v[T].innerHTML.trim()===S)return v[T];return null}}return l})},8925:function(i,s,r){var o=r("c6cd"),a=Function.toString;typeof o.inspectSource!="function"&&(o.inspectSource=function(c){return a.call(c)}),i.exports=o.inspectSource},"8bbf":function(i,s){i.exports=n},"90e3":function(i,s){var r=0,o=Math.random();i.exports=function(a){return"Symbol("+String(a===void 0?"":a)+")_"+(++r+o).toString(36)}},9112:function(i,s,r){var o=r("83ab"),a=r("9bf2"),c=r("5c6c");i.exports=o?function(l,u,d){return a.f(l,u,c(1,d))}:function(l,u,d){return l[u]=d,l}},"94ca":function(i,s,r){var o=r("d039"),a=/#|\.prototype\./,c=function(f,p){var m=u[l(f)];return m==h?!0:m==d?!1:typeof p=="function"?o(p):!!p},l=c.normalize=function(f){return String(f).replace(a,".").toLowerCase()},u=c.data={},d=c.NATIVE="N",h=c.POLYFILL="P";i.exports=c},"9bdd":function(i,s,r){var o=r("825a");i.exports=function(a,c,l,u){try{return u?c(o(l)[0],l[1]):c(l)}catch(h){var d=a.return;throw d!==void 0&&o(d.call(a)),h}}},"9bf2":function(i,s,r){var o=r("83ab"),a=r("0cfb"),c=r("825a"),l=r("c04e"),u=Object.defineProperty;s.f=o?u:function(h,f,p){if(c(h),f=l(f,!0),c(p),a)try{return u(h,f,p)}catch{}if("get"in p||"set"in p)throw TypeError("Accessors not supported");return"value"in p&&(h[f]=p.value),h}},"9fab":function(i,s,r){(function(o,a){i.exports=a()})(this,function(o){return function(a,c){if(c==null&&(c={fuzzy:!0}),/youtu\.?be/.test(a)){var l,u=[/youtu\.be\/([^#\&\?]{11})/,/\?v=([^#\&\?]{11})/,/\&v=([^#\&\?]{11})/,/embed\/([^#\&\?]{11})/,/\/v\/([^#\&\?]{11})/];for(l=0;l<u.length;++l)if(u[l].test(a))return u[l].exec(a)[1];if(c.fuzzy){var d=a.split(/[\/\&\?=#\.\s]/g);for(l=0;l<d.length;++l)if(/^[^#\&\?]{11}$/.test(d[l]))return d[l]}}return null}})},a640:function(i,s,r){var o=r("d039");i.exports=function(a,c){var l=[][a];return!!l&&o(function(){l.call(null,c||function(){throw 1},1)})}},a691:function(i,s){var r=Math.ceil,o=Math.floor;i.exports=function(a){return isNaN(a=+a)?0:(a>0?o:r)(a)}},a9e3:function(i,s,r){var o=r("83ab"),a=r("da84"),c=r("94ca"),l=r("6eeb"),u=r("5135"),d=r("c6b6"),h=r("7156"),f=r("c04e"),p=r("d039"),m=r("7c73"),b=r("241c").f,E=r("06cf").f,x=r("9bf2").f,S=r("58a8").trim,v="Number",T=a[v],w=T.prototype,D=d(m(w))==v,A=function(U){var X=f(U,!1),K,Y,_,q,ee,j,he,le;if(typeof X=="string"&&X.length>2){if(X=S(X),K=X.charCodeAt(0),K===43||K===45){if(Y=X.charCodeAt(2),Y===88||Y===120)return NaN}else if(K===48){switch(X.charCodeAt(1)){case 66:case 98:_=2,q=49;break;case 79:case 111:_=8,q=55;break;default:return+X}for(ee=X.slice(2),j=ee.length,he=0;he<j;he++)if(le=ee.charCodeAt(he),le<48||le>q)return NaN;return parseInt(ee,_)}}return+X};if(c(v,!T(" 0o1")||!T("0b1")||T("+0x1"))){for(var y=function(X){var K=arguments.length<1?0:X,Y=this;return Y instanceof y&&(D?p(function(){w.valueOf.call(Y)}):d(Y)!=v)?h(new T(A(K)),Y,y):A(K)},O=o?b(T):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),L=0,P;O.length>L;L++)u(T,P=O[L])&&!u(y,P)&&x(y,P,E(T,P));y.prototype=w,w.constructor=y,l(a,v,y)}},ae40:function(i,s,r){var o=r("83ab"),a=r("d039"),c=r("5135"),l=Object.defineProperty,u={},d=function(h){throw h};i.exports=function(h,f){if(c(u,h))return u[h];f||(f={});var p=[][h],m=c(f,"ACCESSORS")?f.ACCESSORS:!1,b=c(f,0)?f[0]:d,E=c(f,1)?f[1]:void 0;return u[h]=!!p&&!a(function(){if(m&&!o)return!0;var x={length:-1};m?l(x,1,{enumerable:!0,get:d}):x[1]=1,p.call(x,b,E)})}},b041:function(i,s,r){var o=r("00ee"),a=r("f5df");i.exports=o?{}.toString:function(){return"[object "+a(this)+"]"}},b575:function(i,s,r){var o=r("da84"),a=r("06cf").f,c=r("c6b6"),l=r("2cf4").set,u=r("1cdc"),d=o.MutationObserver||o.WebKitMutationObserver,h=o.process,f=o.Promise,p=c(h)=="process",m=a(o,"queueMicrotask"),b=m&&m.value,E,x,S,v,T,w,D,A;b||(E=function(){var y,O;for(p&&(y=h.domain)&&y.exit();x;){O=x.fn,x=x.next;try{O()}catch(L){throw x?v():S=void 0,L}}S=void 0,y&&y.enter()},p?v=function(){h.nextTick(E)}:d&&!u?(T=!0,w=document.createTextNode(""),new d(E).observe(w,{characterData:!0}),v=function(){w.data=T=!T}):f&&f.resolve?(D=f.resolve(void 0),A=D.then,v=function(){A.call(D,E)}):v=function(){l.call(o,E)}),i.exports=b||function(y){var O={fn:y,next:void 0};S&&(S.next=O),x||(x=O,v()),S=O}},b622:function(i,s,r){var o=r("da84"),a=r("5692"),c=r("5135"),l=r("90e3"),u=r("4930"),d=r("fdbf"),h=a("wks"),f=o.Symbol,p=d?f:f&&f.withoutSetter||l;i.exports=function(m){return c(h,m)||(u&&c(f,m)?h[m]=f[m]:h[m]=p("Symbol."+m)),h[m]}},b727:function(i,s,r){var o=r("0366"),a=r("44ad"),c=r("7b0b"),l=r("50c4"),u=r("65f0"),d=[].push,h=function(f){var p=f==1,m=f==2,b=f==3,E=f==4,x=f==6,S=f==5||x;return function(v,T,w,D){for(var A=c(v),y=a(A),O=o(T,w,3),L=l(y.length),P=0,U=D||u,X=p?U(v,L):m?U(v,0):void 0,K,Y;L>P;P++)if((S||P in y)&&(K=y[P],Y=O(K,P,A),f)){if(p)X[P]=Y;else if(Y)switch(f){case 3:return!0;case 5:return K;case 6:return P;case 2:d.call(X,K)}else if(E)return!1}return x?-1:b||E?E:X}};i.exports={forEach:h(0),map:h(1),filter:h(2),some:h(3),every:h(4),find:h(5),findIndex:h(6)}},c04e:function(i,s,r){var o=r("861d");i.exports=function(a,c){if(!o(a))return a;var l,u;if(c&&typeof(l=a.toString)=="function"&&!o(u=l.call(a))||typeof(l=a.valueOf)=="function"&&!o(u=l.call(a))||!c&&typeof(l=a.toString)=="function"&&!o(u=l.call(a)))return u;throw TypeError("Can't convert object to primitive value")}},c430:function(i,s){i.exports=!1},c6b6:function(i,s){var r={}.toString;i.exports=function(o){return r.call(o).slice(8,-1)}},c6cd:function(i,s,r){var o=r("da84"),a=r("ce4e"),c="__core-js_shared__",l=o[c]||a(c,{});i.exports=l},c8ba:function(i,s){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch{typeof window=="object"&&(r=window)}i.exports=r},ca84:function(i,s,r){var o=r("5135"),a=r("fc6a"),c=r("4d64").indexOf,l=r("d012");i.exports=function(u,d){var h=a(u),f=0,p=[],m;for(m in h)!o(l,m)&&o(h,m)&&p.push(m);for(;d.length>f;)o(h,m=d[f++])&&(~c(p,m)||p.push(m));return p}},cc12:function(i,s,r){var o=r("da84"),a=r("861d"),c=o.document,l=a(c)&&a(c.createElement);i.exports=function(u){return l?c.createElement(u):{}}},cdf9:function(i,s,r){var o=r("825a"),a=r("861d"),c=r("f069");i.exports=function(l,u){if(o(l),a(u)&&u.constructor===l)return u;var d=c.f(l),h=d.resolve;return h(u),d.promise}},ce4e:function(i,s,r){var o=r("da84"),a=r("9112");i.exports=function(c,l){try{a(o,c,l)}catch{o[c]=l}return l}},d012:function(i,s){i.exports={}},d039:function(i,s){i.exports=function(r){try{return!!r()}catch{return!0}}},d066:function(i,s,r){var o=r("428f"),a=r("da84"),c=function(l){return typeof l=="function"?l:void 0};i.exports=function(l,u){return arguments.length<2?c(o[l])||c(a[l]):o[l]&&o[l][u]||a[l]&&a[l][u]}},d1e7:function(i,s,r){var o={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,c=a&&!o.call({1:2},1);s.f=c?function(u){var d=a(this,u);return!!d&&d.enumerable}:o},d2bb:function(i,s,r){var o=r("825a"),a=r("3bbe");i.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var c=!1,l={},u;try{u=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set,u.call(l,[]),c=l instanceof Array}catch{}return function(h,f){return o(h),a(f),c?u.call(h,f):h.__proto__=f,h}}():void 0)},d3b7:function(i,s,r){var o=r("00ee"),a=r("6eeb"),c=r("b041");o||a(Object.prototype,"toString",c,{unsafe:!0})},d44e:function(i,s,r){var o=r("9bf2").f,a=r("5135"),c=r("b622"),l=c("toStringTag");i.exports=function(u,d,h){u&&!a(u=h?u:u.prototype,l)&&o(u,l,{configurable:!0,value:d})}},da84:function(i,s,r){(function(o){var a=function(c){return c&&c.Math==Math&&c};i.exports=a(typeof globalThis=="object"&&globalThis)||a(typeof window=="object"&&window)||a(typeof self=="object"&&self)||a(typeof o=="object"&&o)||Function("return this")()}).call(this,r("c8ba"))},df75:function(i,s,r){var o=r("ca84"),a=r("7839");i.exports=Object.keys||function(l){return o(l,a)}},e2cc:function(i,s,r){var o=r("6eeb");i.exports=function(a,c,l){for(var u in c)o(a,u,c[u],l);return a}},e667:function(i,s){i.exports=function(r){try{return{error:!1,value:r()}}catch(o){return{error:!0,value:o}}}},e6cf:function(i,s,r){var o=r("23e7"),a=r("c430"),c=r("da84"),l=r("d066"),u=r("fea9"),d=r("6eeb"),h=r("e2cc"),f=r("d44e"),p=r("2626"),m=r("861d"),b=r("1c0b"),E=r("19aa"),x=r("c6b6"),S=r("8925"),v=r("2266"),T=r("1c7e"),w=r("4840"),D=r("2cf4").set,A=r("b575"),y=r("cdf9"),O=r("44de"),L=r("f069"),P=r("e667"),U=r("69f3"),X=r("94ca"),K=r("b622"),Y=r("2d00"),_=K("species"),q="Promise",ee=U.get,j=U.set,he=U.getterFor(q),le=u,Le=c.TypeError,Ae=c.document,De=c.process,Me=l("fetch"),te=L.f,z=te,me=x(De)=="process",xe=!!(Ae&&Ae.createEvent&&c.dispatchEvent),qe="unhandledrejection",ut="rejectionhandled",F=0,V=1,H=2,$=1,ne=2,ae,ue,pe,Ee,de=X(q,function(){var Oe=S(le)!==String(le);if(!Oe&&(Y===66||!me&&typeof PromiseRejectionEvent!="function")||a&&!le.prototype.finally)return!0;if(Y>=51&&/native code/.test(le))return!1;var we=le.resolve(1),Ze=function(Ge){Ge(function(){},function(){})},Fe=we.constructor={};return Fe[_]=Ze,!(we.then(function(){})instanceof Ze)}),Be=de||!T(function(Oe){le.all(Oe).catch(function(){})}),Se=function(Oe){var we;return m(Oe)&&typeof(we=Oe.then)=="function"?we:!1},ye=function(Oe,we,Ze){if(!we.notified){we.notified=!0;var Fe=we.reactions;A(function(){for(var Ge=we.value,mn=we.state==V,cs=0;Fe.length>cs;){var Hi=Fe[cs++],ls=mn?Hi.ok:Hi.fail,lr=Hi.resolve,us=Hi.reject,ds=Hi.domain,Fs,Uo,Ia;try{ls?(mn||(we.rejection===ne&&Et(Oe,we),we.rejection=$),ls===!0?Fs=Ge:(ds&&ds.enter(),Fs=ls(Ge),ds&&(ds.exit(),Ia=!0)),Fs===Hi.promise?us(Le("Promise-chain cycle")):(Uo=Se(Fs))?Uo.call(Fs,lr,us):lr(Fs)):us(Ge)}catch(pp){ds&&!Ia&&ds.exit(),us(pp)}}we.reactions=[],we.notified=!1,Ze&&!we.rejection&&ft(Oe,we)})}},Ve=function(Oe,we,Ze){var Fe,Ge;xe?(Fe=Ae.createEvent("Event"),Fe.promise=we,Fe.reason=Ze,Fe.initEvent(Oe,!1,!0),c.dispatchEvent(Fe)):Fe={promise:we,reason:Ze},(Ge=c["on"+Oe])?Ge(Fe):Oe===qe&&O("Unhandled promise rejection",Ze)},ft=function(Oe,we){D.call(c,function(){var Ze=we.value,Fe=Ot(we),Ge;if(Fe&&(Ge=P(function(){me?De.emit("unhandledRejection",Ze,Oe):Ve(qe,Oe,Ze)}),we.rejection=me||Ot(we)?ne:$,Ge.error))throw Ge.value})},Ot=function(Oe){return Oe.rejection!==$&&!Oe.parent},Et=function(Oe,we){D.call(c,function(){me?De.emit("rejectionHandled",Oe):Ve(ut,Oe,we.value)})},zt=function(Oe,we,Ze,Fe){return function(Ge){Oe(we,Ze,Ge,Fe)}},Lt=function(Oe,we,Ze,Fe){we.done||(we.done=!0,Fe&&(we=Fe),we.value=Ze,we.state=H,ye(Oe,we,!0))},xn=function(Oe,we,Ze,Fe){if(!we.done){we.done=!0,Fe&&(we=Fe);try{if(Oe===Ze)throw Le("Promise can't be resolved itself");var Ge=Se(Ze);Ge?A(function(){var mn={done:!1};try{Ge.call(Ze,zt(xn,Oe,mn,we),zt(Lt,Oe,mn,we))}catch(cs){Lt(Oe,mn,cs,we)}}):(we.value=Ze,we.state=V,ye(Oe,we,!1))}catch(mn){Lt(Oe,{done:!1},mn,we)}}};de&&(le=function(we){E(this,le,q),b(we),ae.call(this);var Ze=ee(this);try{we(zt(xn,this,Ze),zt(Lt,this,Ze))}catch(Fe){Lt(this,Ze,Fe)}},ae=function(we){j(this,{type:q,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:F,value:void 0})},ae.prototype=h(le.prototype,{then:function(we,Ze){var Fe=he(this),Ge=te(w(this,le));return Ge.ok=typeof we=="function"?we:!0,Ge.fail=typeof Ze=="function"&&Ze,Ge.domain=me?De.domain:void 0,Fe.parent=!0,Fe.reactions.push(Ge),Fe.state!=F&&ye(this,Fe,!1),Ge.promise},catch:function(Oe){return this.then(void 0,Oe)}}),ue=function(){var Oe=new ae,we=ee(Oe);this.promise=Oe,this.resolve=zt(xn,Oe,we),this.reject=zt(Lt,Oe,we)},L.f=te=function(Oe){return Oe===le||Oe===pe?new ue(Oe):z(Oe)},!a&&typeof u=="function"&&(Ee=u.prototype.then,d(u.prototype,"then",function(we,Ze){var Fe=this;return new le(function(Ge,mn){Ee.call(Fe,Ge,mn)}).then(we,Ze)},{unsafe:!0}),typeof Me=="function"&&o({global:!0,enumerable:!0,forced:!0},{fetch:function(we){return y(le,Me.apply(c,arguments))}}))),o({global:!0,wrap:!0,forced:de},{Promise:le}),f(le,q,!1,!0),p(q),pe=l(q),o({target:q,stat:!0,forced:de},{reject:function(we){var Ze=te(this);return Ze.reject.call(void 0,we),Ze.promise}}),o({target:q,stat:!0,forced:a||de},{resolve:function(we){return y(a&&this===pe?le:this,we)}}),o({target:q,stat:!0,forced:Be},{all:function(we){var Ze=this,Fe=te(Ze),Ge=Fe.resolve,mn=Fe.reject,cs=P(function(){var Hi=b(Ze.resolve),ls=[],lr=0,us=1;v(we,function(ds){var Fs=lr++,Uo=!1;ls.push(void 0),us++,Hi.call(Ze,ds).then(function(Ia){Uo||(Uo=!0,ls[Fs]=Ia,--us||Ge(ls))},mn)}),--us||Ge(ls)});return cs.error&&mn(cs.value),Fe.promise},race:function(we){var Ze=this,Fe=te(Ze),Ge=Fe.reject,mn=P(function(){var cs=b(Ze.resolve);v(we,function(Hi){cs.call(Ze,Hi).then(Fe.resolve,Ge)})});return mn.error&&Ge(mn.value),Fe.promise}})},e893:function(i,s,r){var o=r("5135"),a=r("56ef"),c=r("06cf"),l=r("9bf2");i.exports=function(u,d){for(var h=a(d),f=l.f,p=c.f,m=0;m<h.length;m++){var b=h[m];o(u,b)||f(u,b,p(d,b))}}},e8b5:function(i,s,r){var o=r("c6b6");i.exports=Array.isArray||function(c){return o(c)=="Array"}},e95a:function(i,s,r){var o=r("b622"),a=r("3f8c"),c=o("iterator"),l=Array.prototype;i.exports=function(u){return u!==void 0&&(a.Array===u||l[c]===u)}},f069:function(i,s,r){var o=r("1c0b"),a=function(c){var l,u;this.promise=new c(function(d,h){if(l!==void 0||u!==void 0)throw TypeError("Bad Promise constructor");l=d,u=h}),this.resolve=o(l),this.reject=o(u)};i.exports.f=function(c){return new a(c)}},f5df:function(i,s,r){var o=r("00ee"),a=r("c6b6"),c=r("b622"),l=c("toStringTag"),u=a(function(){return arguments}())=="Arguments",d=function(h,f){try{return h[f]}catch{}};i.exports=o?a:function(h){var f,p,m;return h===void 0?"Undefined":h===null?"Null":typeof(p=d(f=Object(h),l))=="string"?p:u?a(f):(m=a(f))=="Object"&&typeof f.callee=="function"?"Arguments":m}},f772:function(i,s,r){var o=r("5692"),a=r("90e3"),c=o("keys");i.exports=function(l){return c[l]||(c[l]=a(l))}},fb15:function(i,s,r){if(r.r(s),r.d(s,"PlayerState",function(){return f}),typeof window<"u"){var o=window.document.currentScript;{var a=r("8875");o=a(),"currentScript"in document||Object.defineProperty(document,"currentScript",{get:a})}var c=o&&o.src.match(/(.+\/)[^/]+\.js(\?.*)?$/);c&&(r.p=c[1])}var l=r("8bbf");function u(E,x,S,v,T,w){return Object(l.openBlock)(),Object(l.createBlock)("div",{style:E.wrapperStyle},[Object(l.createVNode)("div",{ref:"youtube",style:E.wrapperStyle},null,4)],4)}r("4160"),r("a9e3"),r("d3b7"),r("e6cf"),r("159b");var d=r("9fab"),h=r.n(d),f={UNSTARTED:-1,ENDED:0,PLAYING:1,PAUSED:2,BUFFERING:3,CUED:5},p=Object(l.defineComponent)({name:"YouTube",props:{src:{type:String,required:!0},height:{type:[Number,String],default:360},width:{type:[Number,String],default:640},host:{type:String,default:"https://www.youtube.com"},vars:Object},computed:{id:function(){return h()(this.src)||this.src},wrapperStyle:function(){return{width:"".concat(this.width,"px"),height:"".concat(this.height,"px"),position:"relative"}}},data:function(){var x=function(){},S=new Promise(function(T){x=T}),v={promise:S,resolver:x,player:null,initiated:!1,ready:!1,iframeStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"}};return v},mounted:function(){var x=this;window.onYouTubeIframeAPIReadyResolvers||(window.onYouTubeIframeAPIReadyResolvers=[]),window.onYouTubeIframeAPIReady||(window.onYouTubeIframeAPIReady=function(){var D;(D=window.onYouTubeIframeAPIReadyResolvers)===null||D===void 0||D.forEach(function(A){A()})}),this.promise.then(function(){return x.initPlayer()});var S="youtube-iframe-js-api-script",v=document.getElementById(S);if(v)this.resolver();else{var T;(T=window.onYouTubeIframeAPIReadyResolvers)===null||T===void 0||T.push(this.resolver),v=document.createElement("script"),v.id=S,v.src="https://www.youtube.com/iframe_api";var w=document.getElementsByTagName("script")[0];w&&w.parentNode&&w.parentNode.insertBefore(v,w)}},methods:{initPlayer:function(){var x=this;this.initiated=!0,this.player=new YT.Player(this.$refs.youtube,{height:this.height,width:this.width,videoId:this.id,host:this.host,playerVars:this.vars,events:{onReady:function(v){x.ready=!0,setTimeout(function(){return x.$emit("ready",v)})},onStateChange:function(v){return x.$emit("state-change",v)},onPlaybackQualityChange:function(v){return x.$emit("playback-quality-change",v)},onPlaybackRateChange:function(v){return x.$emit("playback-rate-change",v)},onError:function(v){return x.$emit("error",v)},onApiChange:function(v){return x.$emit("api-change",v)}}})},cueVideoById:function(x,S,v){var T;(T=this.player)===null||T===void 0||T.cueVideoById(x,S,v)},loadVideoById:function(x,S,v){var T;(T=this.player)===null||T===void 0||T.loadVideoById(x,S,v)},cueVideoByUrl:function(x,S,v){var T;(T=this.player)===null||T===void 0||T.cueVideoByUrl(x,S,v)},loadVideoByUrl:function(x,S,v){var T;(T=this.player)===null||T===void 0||T.loadVideoByUrl(x,S,v)},cuePlaylist:function(x,S,v,T){var w;(w=this.player)===null||w===void 0||w.cuePlaylist(x,S,v,T)},loadPlaylist:function(x,S,v,T){var w;(w=this.player)===null||w===void 0||w.loadPlaylist(x,S,v,T)},playVideo:function(){var x;(x=this.player)===null||x===void 0||x.playVideo()},pauseVideo:function(){var x;(x=this.player)===null||x===void 0||x.pauseVideo()},stopVideo:function(){var x;(x=this.player)===null||x===void 0||x.stopVideo()},seekTo:function(x,S){var v;(v=this.player)===null||v===void 0||v.seekTo(x,S)},nextVideo:function(){var x;(x=this.player)===null||x===void 0||x.nextVideo()},previousVideo:function(){var x;(x=this.player)===null||x===void 0||x.previousVideo()},playVideoAt:function(x){var S;(S=this.player)===null||S===void 0||S.playVideoAt(x)},mute:function(){var x;(x=this.player)===null||x===void 0||x.mute()},unMute:function(){var x;(x=this.player)===null||x===void 0||x.unMute()},isMuted:function(){return this.player?this.player.isMuted():!1},setVolume:function(x){var S;(S=this.player)===null||S===void 0||S.setVolume(x)},getVolume:function(){return this.player?this.player.getVolume():0},getPlaybackRate:function(){return this.player?this.player.getPlaybackRate():0},setPlaybackRate:function(x){var S;(S=this.player)===null||S===void 0||S.setPlaybackRate(x)},getAvailablePlaybackRates:function(){return this.player?this.player.getAvailablePlaybackRates():[]},setLoop:function(x){var S;(S=this.player)===null||S===void 0||S.setLoop(x)},setShuffle:function(x){var S;(S=this.player)===null||S===void 0||S.setShuffle(x)},getVideoLoadedFraction:function(){return this.player?this.player.getVideoLoadedFraction():0},getPlayerState:function(){return this.player?this.player.getPlayerState():f.UNSTARTED},getCurrentTime:function(){return this.player?this.player.getCurrentTime():0},getPlaybackQuality:function(){return this.player?this.player.getPlaybackQuality():"default"},setPlaybackQuality:function(x){var S;(S=this.player)===null||S===void 0||S.setPlaybackQuality(x)},getAvailableQualityLevels:function(){return this.player?this.player.getAvailableQualityLevels():[]},getDuration:function(){return this.player?this.player.getDuration():0},getVideoUrl:function(){return this.player?this.player.getVideoUrl():""},getVideoEmbedCode:function(){return this.player?this.player.getVideoEmbedCode():""},getPlaylist:function(){return this.player?this.player.getPlaylist():[]},getPlaylistIndex:function(){return this.player?this.player.getPlaylistIndex():0}},watch:{width:function(){var x;(x=this.player)===null||x===void 0||x.setSize(+this.width,+this.height)},height:function(){var x;(x=this.player)===null||x===void 0||x.setSize(+this.width,+this.height)},src:function(){this.initiated&&this.player&&this.player.loadVideoById(this.id)}},beforeUnmount:function(){var x;(x=this.player)===null||x===void 0||x.destroy()}}),m=p;m.render=u;var b=m;s.default=b},fc6a:function(i,s,r){var o=r("44ad"),a=r("1d80");i.exports=function(c){return o(a(c))}},fdbc:function(i,s){i.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},fdbf:function(i,s,r){var o=r("4930");i.exports=o&&!Symbol.sham&&typeof Symbol.iterator=="symbol"},fea9:function(i,s,r){var o=r("da84");i.exports=o.Promise}}).default})}(Qd)),Qd.exports}var BF=MF();const FF=Rw(BF);class NN{constructor(){W(this,"GetTiempoDesdeInicio");W(this,"Iniciar");W(this,"Pausar");W(this,"media",null)}setGetTiempoDesdeInicio(e){this.GetTiempoDesdeInicio=e}setIniciar(e){this.Iniciar=e}setPausar(e){this.Pausar=e}setMedia(e){this.media=e}}const UF={key:0},VF=Ue({__name:"Tocar_Youtube",props:{compas:{},cancion:{}},emits:["cambioEstado"],setup(t,{emit:e}){const n=t,i=e,s=J(""),r=J(""),o=J(0),a=J(!1);gt(()=>n.cancion,h=>{if(h&&h.medias){for(const f of h.medias)if(f.tipo==="Youtube"){r.value=f.id,o.value=f.delay||0,s.value="https://www.youtube.com/watch?v="+r.value,a.value=!0;break}}});const c=new NN;c.setGetTiempoDesdeInicio(()=>{var f;const h=(f=l.value)==null?void 0:f.getCurrentTime();return h?h*1e3-o.value:0}),c.setIniciar(()=>{var h;(h=l.value)==null||h.playVideo()}),c.setPausar(()=>{var h;(h=l.value)==null||h.pauseVideo()}),Io(()=>{He().aplicacion.quitarMediaVista()}),bn(()=>{He().aplicacion.setMediaVista(c);for(var f=0;f<n.cancion.medias.length;f++)if(console.log(n.cancion.medias[f]),n.cancion.medias[f].tipo==="Youtube"){r.value=n.cancion.medias[f].id,s.value="https://www.youtube.com/watch?v="+r.value;break}});const l=J(null);function u(){}function d(h){console.log("Estado del reproductor:",h.data),i("cambioEstado",h.data)}return(h,f)=>(R(),B(be,null,[s.value==""?(R(),B("div",UF,"No hay media cargada para esta canción")):G("",!0),a.value?(R(),dt(ie(FF),{key:1,src:s.value,ref_key:"playerRef",ref:l,onReady:u,onStateChange:d},null,8,["src"])):G("",!0)],64))}}),yN="15.1.22",ox=(t,e,n)=>({endTime:e,insertTime:n,type:"exponentialRampToValue",value:t}),ax=(t,e,n)=>({endTime:e,insertTime:n,type:"linearRampToValue",value:t}),Rg=(t,e)=>({startTime:e,type:"setValue",value:t}),kN=(t,e,n)=>({duration:n,startTime:e,type:"setValueCurve",values:t}),DN=(t,e,{startTime:n,target:i,timeConstant:s})=>i+(e-i)*Math.exp((n-t)/s),ac=t=>t.type==="exponentialRampToValue",Oh=t=>t.type==="linearRampToValue",uo=t=>ac(t)||Oh(t),T0=t=>t.type==="setValue",br=t=>t.type==="setValueCurve",Ph=(t,e,n,i)=>{const s=t[e];return s===void 0?i:uo(s)||T0(s)?s.value:br(s)?s.values[s.values.length-1]:DN(n,Ph(t,e-1,s.startTime,i),s)},cx=(t,e,n,i,s)=>n===void 0?[i.insertTime,s]:uo(n)?[n.endTime,n.value]:T0(n)?[n.startTime,n.value]:br(n)?[n.startTime+n.duration,n.values[n.values.length-1]]:[n.startTime,Ph(t,e-1,n.startTime,s)],Lg=t=>t.type==="cancelAndHold",Mg=t=>t.type==="cancelScheduledValues",$r=t=>Lg(t)||Mg(t)?t.cancelTime:ac(t)||Oh(t)?t.endTime:t.startTime,lx=(t,e,n,{endTime:i,value:s})=>n===s?s:0<n&&0<s||n<0&&s<0?n*(s/n)**((t-e)/(i-e)):0,ux=(t,e,n,{endTime:i,value:s})=>n+(t-e)/(i-e)*(s-n),WF=(t,e)=>{const n=Math.floor(e),i=Math.ceil(e);return n===i?t[n]:(1-(e-n))*t[n]+(1-(i-e))*t[i]},HF=(t,{duration:e,startTime:n,values:i})=>{const s=(t-n)/e*(i.length-1);return WF(i,s)},Md=t=>t.type==="setTarget";class XF{constructor(e){this._automationEvents=[],this._currenTime=0,this._defaultValue=e}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(e){const n=$r(e);if(Lg(e)||Mg(e)){const i=this._automationEvents.findIndex(r=>Mg(e)&&br(r)?r.startTime+r.duration>=n:$r(r)>=n),s=this._automationEvents[i];if(i!==-1&&(this._automationEvents=this._automationEvents.slice(0,i)),Lg(e)){const r=this._automationEvents[this._automationEvents.length-1];if(s!==void 0&&uo(s)){if(r!==void 0&&Md(r))throw new Error("The internal list is malformed.");const o=r===void 0?s.insertTime:br(r)?r.startTime+r.duration:$r(r),a=r===void 0?this._defaultValue:br(r)?r.values[r.values.length-1]:r.value,c=ac(s)?lx(n,o,a,s):ux(n,o,a,s),l=ac(s)?ox(c,n,this._currenTime):ax(c,n,this._currenTime);this._automationEvents.push(l)}if(r!==void 0&&Md(r)&&this._automationEvents.push(Rg(this.getValue(n),n)),r!==void 0&&br(r)&&r.startTime+r.duration>n){const o=n-r.startTime,a=(r.values.length-1)/r.duration,c=Math.max(2,1+Math.ceil(o*a)),l=o/(c-1)*a,u=r.values.slice(0,c);if(l<1)for(let d=1;d<c;d+=1){const h=l*d%1;u[d]=r.values[d-1]*(1-h)+r.values[d]*h}this._automationEvents[this._automationEvents.length-1]=kN(u,r.startTime,o)}}}else{const i=this._automationEvents.findIndex(o=>$r(o)>n),s=i===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[i-1];if(s!==void 0&&br(s)&&$r(s)+s.duration>n)return!1;const r=ac(e)?ox(e.value,e.endTime,this._currenTime):Oh(e)?ax(e.value,n,this._currenTime):e;if(i===-1)this._automationEvents.push(r);else{if(br(e)&&n+e.duration>$r(this._automationEvents[i]))return!1;this._automationEvents.splice(i,0,r)}}return!0}flush(e){const n=this._automationEvents.findIndex(i=>$r(i)>e);if(n>1){const i=this._automationEvents.slice(n-1),s=i[0];Md(s)&&i.unshift(Rg(Ph(this._automationEvents,n-2,s.startTime,this._defaultValue),s.startTime)),this._automationEvents=i}}getValue(e){if(this._automationEvents.length===0)return this._defaultValue;const n=this._automationEvents.findIndex(o=>$r(o)>e),i=this._automationEvents[n],s=(n===-1?this._automationEvents.length:n)-1,r=this._automationEvents[s];if(r!==void 0&&Md(r)&&(i===void 0||!uo(i)||i.insertTime>e))return DN(e,Ph(this._automationEvents,s-1,r.startTime,this._defaultValue),r);if(r!==void 0&&T0(r)&&(i===void 0||!uo(i)))return r.value;if(r!==void 0&&br(r)&&(i===void 0||!uo(i)||r.startTime+r.duration>e))return e<r.startTime+r.duration?HF(e,r):r.values[r.values.length-1];if(r!==void 0&&uo(r)&&(i===void 0||!uo(i)))return r.value;if(i!==void 0&&ac(i)){const[o,a]=cx(this._automationEvents,s,r,i,this._defaultValue);return lx(e,o,a,i)}if(i!==void 0&&Oh(i)){const[o,a]=cx(this._automationEvents,s,r,i,this._defaultValue);return ux(e,o,a,i)}return this._defaultValue}}const jF=t=>({cancelTime:t,type:"cancelAndHold"}),qF=t=>({cancelTime:t,type:"cancelScheduledValues"}),zF=(t,e)=>({endTime:e,type:"exponentialRampToValue",value:t}),YF=(t,e)=>({endTime:e,type:"linearRampToValue",value:t}),JF=(t,e,n)=>({startTime:e,target:t,timeConstant:n,type:"setTarget"}),ZF=()=>new DOMException("","AbortError"),KF=t=>(e,n,[i,s,r],o)=>{t(e[s],[n,i,r],a=>a[0]===n&&a[1]===i,o)},QF=t=>(e,n,i)=>{const s=[];for(let r=0;r<i.numberOfInputs;r+=1)s.push(new Set);t.set(e,{activeInputs:s,outputs:new Set,passiveInputs:new WeakMap,renderer:n})},GF=t=>(e,n)=>{t.set(e,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:n})},Uc=new WeakSet,ON=new WeakMap,C0=new WeakMap,PN=new WeakMap,w0=new WeakMap,Zf=new WeakMap,IN=new WeakMap,Bg=new WeakMap,Fg=new WeakMap,Ug=new WeakMap,RN={construct(){return RN}},_F=t=>{try{const e=new Proxy(t,RN);new e}catch{return!1}return!0},dx=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,hx=(t,e)=>{const n=[];let i=t.replace(/^[\s]+/,""),s=i.match(dx);for(;s!==null;){const r=s[1].slice(1,-1),o=s[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,e).toString());n.push(o),i=i.slice(s[0].length).replace(/^[\s]+/,""),s=i.match(dx)}return[n.join(";"),i]},fx=t=>{if(t!==void 0&&!Array.isArray(t))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},px=t=>{if(!_F(t))throw new TypeError("The given value for processorCtor should be a constructor.");if(t.prototype===null||typeof t.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},$F=(t,e,n,i,s,r,o,a,c,l,u,d,h)=>{let f=0;return(p,m,b={credentials:"omit"})=>{const E=u.get(p);if(E!==void 0&&E.has(m))return Promise.resolve();const x=l.get(p);if(x!==void 0){const T=x.get(m);if(T!==void 0)return T}const S=r(p),v=S.audioWorklet===void 0?s(m).then(([T,w])=>{const[D,A]=hx(T,w),y=`${D};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${A}
})})(window,'_AWGS')`;return n(y)}).then(()=>{const T=h._AWGS.pop();if(T===void 0)throw new SyntaxError;i(S.currentTime,S.sampleRate,()=>T(class{},void 0,(w,D)=>{if(w.trim()==="")throw e();const A=Fg.get(S);if(A!==void 0){if(A.has(w))throw e();px(D),fx(D.parameterDescriptors),A.set(w,D)}else px(D),fx(D.parameterDescriptors),Fg.set(S,new Map([[w,D]]))},S.sampleRate,void 0,void 0))}):Promise.all([s(m),Promise.resolve(t(d,d))]).then(([[T,w],D])=>{const A=f+1;f=A;const[y,O]=hx(T,w),X=`${y};((AudioWorkletProcessor,registerProcessor)=>{${O}
})(${D?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${D?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${D?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${A}',class extends AudioWorkletProcessor{process(){return !1}})`,K=new Blob([X],{type:"application/javascript; charset=utf-8"}),Y=URL.createObjectURL(K);return S.audioWorklet.addModule(Y,b).then(()=>{if(a(S))return S;const _=o(S);return _.audioWorklet.addModule(Y,b).then(()=>_)}).then(_=>{if(c===null)throw new SyntaxError;try{new c(_,`__sac${A}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(Y))});return x===void 0?l.set(p,new Map([[m,v]])):x.set(m,v),v.then(()=>{const T=u.get(p);T===void 0?u.set(p,new Set([m])):T.add(m)}).finally(()=>{const T=l.get(p);T!==void 0&&T.delete(m)}),v}},Is=(t,e)=>{const n=t.get(e);if(n===void 0)throw new Error("A value with the given key could not be found.");return n},Kf=(t,e)=>{const n=Array.from(t).filter(e);if(n.length>1)throw Error("More than one element was found.");if(n.length===0)throw Error("No element was found.");const[i]=n;return t.delete(i),i},LN=(t,e,n,i)=>{const s=Is(t,e),r=Kf(s,o=>o[0]===n&&o[1]===i);return s.size===0&&t.delete(e),r},Fu=t=>Is(IN,t),Vc=t=>{if(Uc.has(t))throw new Error("The AudioNode is already stored.");Uc.add(t),Fu(t).forEach(e=>e(!0))},MN=t=>"port"in t,Uu=t=>{if(!Uc.has(t))throw new Error("The AudioNode is not stored.");Uc.delete(t),Fu(t).forEach(e=>e(!1))},Vg=(t,e)=>{!MN(t)&&e.every(n=>n.size===0)&&Uu(t)},e4=(t,e,n,i,s,r,o,a,c,l,u,d,h)=>{const f=new WeakMap;return(p,m,b,E,x)=>{const{activeInputs:S,passiveInputs:v}=r(m),{outputs:T}=r(p),w=a(p),D=A=>{const y=c(m),O=c(p);if(A){const L=LN(v,p,b,E);t(S,p,L,!1),!x&&!d(p)&&n(O,y,b,E),h(m)&&Vc(m)}else{const L=i(S,p,b,E);e(v,E,L,!1),!x&&!d(p)&&s(O,y,b,E);const P=o(m);if(P===0)u(m)&&Vg(m,S);else{const U=f.get(m);U!==void 0&&clearTimeout(U),f.set(m,setTimeout(()=>{u(m)&&Vg(m,S)},P*1e3))}}};return l(T,[m,b,E],A=>A[0]===m&&A[1]===b&&A[2]===E,!0)?(w.add(D),u(p)?t(S,p,[b,E,D],!0):e(v,E,[p,b,D],!0),!0):!1}},t4=t=>(e,n,[i,s,r],o)=>{const a=e.get(i);a===void 0?e.set(i,new Set([[s,n,r]])):t(a,[s,n,r],c=>c[0]===s&&c[1]===n,o)},n4=t=>(e,n)=>{const i=t(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});n.connect(i).connect(e.destination);const s=()=>{n.removeEventListener("ended",s),n.disconnect(i),i.disconnect()};n.addEventListener("ended",s)},i4=t=>(e,n)=>{t(e).add(n)},s4={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},r4=(t,e,n,i,s,r)=>class extends t{constructor(a,c){const l=s(a),u={...s4,...c},d=i(l,u),h=r(l)?e():null;super(a,!1,d,h),this._nativeAnalyserNode=d}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(a){this._nativeAnalyserNode.fftSize=a}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(a){const c=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=a,!(a>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=c,n()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(a){const c=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=a,!(this._nativeAnalyserNode.maxDecibels>a))throw this._nativeAnalyserNode.minDecibels=c,n()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(a){this._nativeAnalyserNode.smoothingTimeConstant=a}getByteFrequencyData(a){this._nativeAnalyserNode.getByteFrequencyData(a)}getByteTimeDomainData(a){this._nativeAnalyserNode.getByteTimeDomainData(a)}getFloatFrequencyData(a){this._nativeAnalyserNode.getFloatFrequencyData(a)}getFloatTimeDomainData(a){this._nativeAnalyserNode.getFloatTimeDomainData(a)}},$n=(t,e)=>t.context===e,o4=(t,e,n)=>()=>{const i=new WeakMap,s=async(r,o)=>{let a=e(r);if(!$n(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,fftSize:a.fftSize,maxDecibels:a.maxDecibels,minDecibels:a.minDecibels,smoothingTimeConstant:a.smoothingTimeConstant};a=t(o,l)}return i.set(o,a),await n(r,o,a),a};return{render(r,o){const a=i.get(o);return a!==void 0?Promise.resolve(a):s(r,o)}}},Ih=t=>{try{t.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},or=()=>new DOMException("","IndexSizeError"),A0=t=>{t.getChannelData=(e=>n=>{try{return e.call(t,n)}catch(i){throw i.code===12?or():i}})(t.getChannelData)},a4={numberOfChannels:1},c4=(t,e,n,i,s,r,o,a)=>{let c=null;return class BN{constructor(u){if(s===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:d,numberOfChannels:h,sampleRate:f}={...a4,...u};c===null&&(c=new s(1,1,44100));const p=i!==null&&e(r,r)?new i({length:d,numberOfChannels:h,sampleRate:f}):c.createBuffer(h,d,f);if(p.numberOfChannels===0)throw n();return typeof p.copyFromChannel!="function"?(o(p),A0(p)):e(Ih,()=>Ih(p))||a(p),t.add(p),p}static[Symbol.hasInstance](u){return u!==null&&typeof u=="object"&&Object.getPrototypeOf(u)===BN.prototype||t.has(u)}}},Ti=-34028234663852886e22,ui=-Ti,Ir=t=>Uc.has(t),l4={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},u4=(t,e,n,i,s,r,o,a)=>class extends t{constructor(l,u){const d=r(l),h={...l4,...u},f=s(d,h),p=o(d),m=p?e():null;super(l,!1,f,m),this._audioBufferSourceNodeRenderer=m,this._isBufferNullified=!1,this._isBufferSet=h.buffer!==null,this._nativeAudioBufferSourceNode=f,this._onended=null,this._playbackRate=n(this,p,f.playbackRate,ui,Ti)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(l){if(this._nativeAudioBufferSourceNode.buffer=l,l!==null){if(this._isBufferSet)throw i();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(l){this._nativeAudioBufferSourceNode.loop=l}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(l){this._nativeAudioBufferSourceNode.loopEnd=l}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(l){this._nativeAudioBufferSourceNode.loopStart=l}get onended(){return this._onended}set onended(l){const u=typeof l=="function"?a(this,l):null;this._nativeAudioBufferSourceNode.onended=u;const d=this._nativeAudioBufferSourceNode.onended;this._onended=d!==null&&d===u?l:d}get playbackRate(){return this._playbackRate}start(l=0,u=0,d){if(this._nativeAudioBufferSourceNode.start(l,u,d),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=d===void 0?[l,u]:[l,u,d]),this.context.state!=="closed"){Vc(this);const h=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",h),Ir(this)&&Uu(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",h)}}stop(l=0){this._nativeAudioBufferSourceNode.stop(l),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=l)}},d4=(t,e,n,i,s)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(l,u)=>{let d=n(l);const h=$n(d,u);if(!h){const f={buffer:d.buffer,channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,loop:d.loop,loopEnd:d.loopEnd,loopStart:d.loopStart,playbackRate:d.playbackRate.value};d=e(u,f),o!==null&&d.start(...o),a!==null&&d.stop(a)}return r.set(u,d),h?await t(u,l.playbackRate,d.playbackRate):await i(u,l.playbackRate,d.playbackRate),await s(l,u,d),d};return{set start(l){o=l},set stop(l){a=l},render(l,u){const d=r.get(u);return d!==void 0?Promise.resolve(d):c(l,u)}}},h4=t=>"playbackRate"in t,f4=t=>"frequency"in t&&"gain"in t,p4=t=>"offset"in t,m4=t=>!("frequency"in t)&&"gain"in t,g4=t=>"detune"in t&&"frequency"in t&&!("gain"in t),E4=t=>"pan"in t,fi=t=>Is(ON,t),Vu=t=>Is(PN,t),Wg=(t,e)=>{const{activeInputs:n}=fi(t);n.forEach(s=>s.forEach(([r])=>{e.includes(t)||Wg(r,[...e,t])}));const i=h4(t)?[t.playbackRate]:MN(t)?Array.from(t.parameters.values()):f4(t)?[t.Q,t.detune,t.frequency,t.gain]:p4(t)?[t.offset]:m4(t)?[t.gain]:g4(t)?[t.detune,t.frequency]:E4(t)?[t.pan]:[];for(const s of i){const r=Vu(s);r!==void 0&&r.activeInputs.forEach(([o])=>Wg(o,e))}Ir(t)&&Uu(t)},FN=t=>{Wg(t.destination,[])},v4=t=>t===void 0||typeof t=="number"||typeof t=="string"&&(t==="balanced"||t==="interactive"||t==="playback"),b4=(t,e,n,i,s,r,o,a,c)=>class extends t{constructor(u={}){if(c===null)throw new Error("Missing the native AudioContext constructor.");let d;try{d=new c(u)}catch(p){throw p.code===12&&p.message==="sampleRate is not in range"?n():p}if(d===null)throw i();if(!v4(u.latencyHint))throw new TypeError(`The provided value '${u.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(u.sampleRate!==void 0&&d.sampleRate!==u.sampleRate)throw n();super(d,2);const{latencyHint:h}=u,{sampleRate:f}=d;if(this._baseLatency=typeof d.baseLatency=="number"?d.baseLatency:h==="balanced"?512/f:h==="interactive"||h===void 0?256/f:h==="playback"?1024/f:Math.max(2,Math.min(128,Math.round(h*f/128)))*128/f,this._nativeAudioContext=d,c.name==="webkitAudioContext"?(this._nativeGainNode=d.createGain(),this._nativeOscillatorNode=d.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(d.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,d.state==="running"){this._state="suspended";const p=()=>{this._state==="suspended"&&(this._state=null),d.removeEventListener("statechange",p)};d.addEventListener("statechange",p)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw e()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),FN(this)}))}createMediaElementSource(u){return new s(this,{mediaElement:u})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(u){return new o(this,{mediaStream:u})}createMediaStreamTrackSource(u){return new a(this,{mediaStreamTrack:u})}resume(){return this._state==="suspended"?new Promise((u,d)=>{const h=()=>{this._nativeAudioContext.removeEventListener("statechange",h),this._nativeAudioContext.state==="running"?u():this.resume().then(u,d)};this._nativeAudioContext.addEventListener("statechange",h)}):this._nativeAudioContext.resume().catch(u=>{throw u===void 0||u.code===15?e():u})}suspend(){return this._nativeAudioContext.suspend().catch(u=>{throw u===void 0?e():u})}},S4=(t,e,n,i,s,r,o,a)=>class extends t{constructor(l,u){const d=r(l),h=o(d),f=s(d,u,h),p=h?e(a):null;super(l,!1,f,p),this._isNodeOfNativeOfflineAudioContext=h,this._nativeAudioDestinationNode=f}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(l){if(this._isNodeOfNativeOfflineAudioContext)throw i();if(l>this._nativeAudioDestinationNode.maxChannelCount)throw n();this._nativeAudioDestinationNode.channelCount=l}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(l){if(this._isNodeOfNativeOfflineAudioContext)throw i();this._nativeAudioDestinationNode.channelCountMode=l}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},x4=t=>{const e=new WeakMap,n=async(i,s)=>{const r=s.destination;return e.set(s,r),await t(i,s,r),r};return{render(i,s){const r=e.get(s);return r!==void 0?Promise.resolve(r):n(i,s)}}},T4=(t,e,n,i,s,r,o,a)=>(c,l)=>{const u=l.listener,d=()=>{const T=new Float32Array(1),w=e(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),D=o(l);let A=!1,y=[0,0,-1,0,1,0],O=[0,0,0];const L=()=>{if(A)return;A=!0;const K=i(l,256,9,0);K.onaudioprocess=({inputBuffer:Y})=>{const _=[r(Y,T,0),r(Y,T,1),r(Y,T,2),r(Y,T,3),r(Y,T,4),r(Y,T,5)];_.some((ee,j)=>ee!==y[j])&&(u.setOrientation(..._),y=_);const q=[r(Y,T,6),r(Y,T,7),r(Y,T,8)];q.some((ee,j)=>ee!==O[j])&&(u.setPosition(...q),O=q)},w.connect(K)},P=K=>Y=>{Y!==y[K]&&(y[K]=Y,u.setOrientation(...y))},U=K=>Y=>{Y!==O[K]&&(O[K]=Y,u.setPosition(...O))},X=(K,Y,_)=>{const q=n(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:Y});q.connect(w,0,K),q.start(),Object.defineProperty(q.offset,"defaultValue",{get(){return Y}});const ee=t({context:c},D,q.offset,ui,Ti);return a(ee,"value",j=>()=>j.call(ee),j=>he=>{try{j.call(ee,he)}catch(le){if(le.code!==9)throw le}L(),D&&_(he)}),ee.cancelAndHoldAtTime=(j=>D?()=>{throw s()}:(...he)=>{const le=j.apply(ee,he);return L(),le})(ee.cancelAndHoldAtTime),ee.cancelScheduledValues=(j=>D?()=>{throw s()}:(...he)=>{const le=j.apply(ee,he);return L(),le})(ee.cancelScheduledValues),ee.exponentialRampToValueAtTime=(j=>D?()=>{throw s()}:(...he)=>{const le=j.apply(ee,he);return L(),le})(ee.exponentialRampToValueAtTime),ee.linearRampToValueAtTime=(j=>D?()=>{throw s()}:(...he)=>{const le=j.apply(ee,he);return L(),le})(ee.linearRampToValueAtTime),ee.setTargetAtTime=(j=>D?()=>{throw s()}:(...he)=>{const le=j.apply(ee,he);return L(),le})(ee.setTargetAtTime),ee.setValueAtTime=(j=>D?()=>{throw s()}:(...he)=>{const le=j.apply(ee,he);return L(),le})(ee.setValueAtTime),ee.setValueCurveAtTime=(j=>D?()=>{throw s()}:(...he)=>{const le=j.apply(ee,he);return L(),le})(ee.setValueCurveAtTime),ee};return{forwardX:X(0,0,P(0)),forwardY:X(1,0,P(1)),forwardZ:X(2,-1,P(2)),positionX:X(6,0,U(0)),positionY:X(7,0,U(1)),positionZ:X(8,0,U(2)),upX:X(3,0,P(3)),upY:X(4,1,P(4)),upZ:X(5,0,P(5))}},{forwardX:h,forwardY:f,forwardZ:p,positionX:m,positionY:b,positionZ:E,upX:x,upY:S,upZ:v}=u.forwardX===void 0?d():u;return{get forwardX(){return h},get forwardY(){return f},get forwardZ(){return p},get positionX(){return m},get positionY(){return b},get positionZ(){return E},get upX(){return x},get upY(){return S},get upZ(){return v}}},Rh=t=>"context"in t,Wu=t=>Rh(t[0]),Da=(t,e,n,i)=>{for(const s of t)if(n(s)){if(i)return!1;throw Error("The set contains at least one similar element.")}return t.add(e),!0},mx=(t,e,[n,i],s)=>{Da(t,[e,n,i],r=>r[0]===e&&r[1]===n,s)},gx=(t,[e,n,i],s)=>{const r=t.get(e);r===void 0?t.set(e,new Set([[n,i]])):Da(r,[n,i],o=>o[0]===n,s)},tl=t=>"inputs"in t,Lh=(t,e,n,i)=>{if(tl(e)){const s=e.inputs[i];return t.connect(s,n,0),[s,n,0]}return t.connect(e,n,i),[e,n,i]},UN=(t,e,n)=>{for(const i of t)if(i[0]===e&&i[1]===n)return t.delete(i),i;return null},C4=(t,e,n)=>Kf(t,i=>i[0]===e&&i[1]===n),VN=(t,e)=>{if(!Fu(t).delete(e))throw new Error("Missing the expected event listener.")},WN=(t,e,n)=>{const i=Is(t,e),s=Kf(i,r=>r[0]===n);return i.size===0&&t.delete(e),s},Mh=(t,e,n,i)=>{tl(e)?t.disconnect(e.inputs[i],n,0):t.disconnect(e,n,i)},en=t=>Is(C0,t),pu=t=>Is(w0,t),Ta=t=>Bg.has(t),ih=t=>!Uc.has(t),Ex=(t,e)=>new Promise(n=>{if(e!==null)n(!0);else{const i=t.createScriptProcessor(256,1,1),s=t.createGain(),r=t.createBuffer(1,2,44100),o=r.getChannelData(0);o[0]=1,o[1]=1;const a=t.createBufferSource();a.buffer=r,a.loop=!0,a.connect(i).connect(t.destination),a.connect(s),a.disconnect(s),i.onaudioprocess=c=>{const l=c.inputBuffer.getChannelData(0);Array.prototype.some.call(l,u=>u===1)?n(!0):n(!1),a.stop(),i.onaudioprocess=null,a.disconnect(i),i.disconnect(t.destination)},a.start()}}),jm=(t,e)=>{const n=new Map;for(const i of t)for(const s of i){const r=n.get(s);n.set(s,r===void 0?1:r+1)}n.forEach((i,s)=>e(s,i))},Bh=t=>"context"in t,w4=t=>{const e=new Map;t.connect=(n=>(i,s=0,r=0)=>{const o=Bh(i)?n(i,s,r):n(i,s),a=e.get(i);return a===void 0?e.set(i,[{input:r,output:s}]):a.every(c=>c.input!==r||c.output!==s)&&a.push({input:r,output:s}),o})(t.connect.bind(t)),t.disconnect=(n=>(i,s,r)=>{if(n.apply(t),i===void 0)e.clear();else if(typeof i=="number")for(const[o,a]of e){const c=a.filter(l=>l.output!==i);c.length===0?e.delete(o):e.set(o,c)}else if(e.has(i))if(s===void 0)e.delete(i);else{const o=e.get(i);if(o!==void 0){const a=o.filter(c=>c.output!==s&&(c.input!==r||r===void 0));a.length===0?e.delete(i):e.set(i,a)}}for(const[o,a]of e)a.forEach(c=>{Bh(o)?t.connect(o,c.output,c.input):t.connect(o,c.output)})})(t.disconnect)},A4=(t,e,n,i)=>{const{activeInputs:s,passiveInputs:r}=Vu(e),{outputs:o}=fi(t),a=Fu(t),c=l=>{const u=en(t),d=pu(e);if(l){const h=WN(r,t,n);mx(s,t,h,!1),!i&&!Ta(t)&&u.connect(d,n)}else{const h=C4(s,t,n);gx(r,h,!1),!i&&!Ta(t)&&u.disconnect(d,n)}};return Da(o,[e,n],l=>l[0]===e&&l[1]===n,!0)?(a.add(c),Ir(t)?mx(s,t,[n,c],!0):gx(r,[t,n,c],!0),!0):!1},N4=(t,e,n,i)=>{const{activeInputs:s,passiveInputs:r}=fi(e),o=UN(s[i],t,n);return o===null?[LN(r,t,n,i)[2],!1]:[o[2],!0]},y4=(t,e,n)=>{const{activeInputs:i,passiveInputs:s}=Vu(e),r=UN(i,t,n);return r===null?[WN(s,t,n)[1],!1]:[r[2],!0]},N0=(t,e,n,i,s)=>{const[r,o]=N4(t,n,i,s);if(r!==null&&(VN(t,r),o&&!e&&!Ta(t)&&Mh(en(t),en(n),i,s)),Ir(n)){const{activeInputs:a}=fi(n);Vg(n,a)}},y0=(t,e,n,i)=>{const[s,r]=y4(t,n,i);s!==null&&(VN(t,s),r&&!e&&!Ta(t)&&en(t).disconnect(pu(n),i))},k4=(t,e)=>{const n=fi(t),i=[];for(const s of n.outputs)Wu(s)?N0(t,e,...s):y0(t,e,...s),i.push(s[0]);return n.outputs.clear(),i},D4=(t,e,n)=>{const i=fi(t),s=[];for(const r of i.outputs)r[1]===n&&(Wu(r)?N0(t,e,...r):y0(t,e,...r),s.push(r[0]),i.outputs.delete(r));return s},O4=(t,e,n,i,s)=>{const r=fi(t);return Array.from(r.outputs).filter(o=>o[0]===n&&(i===void 0||o[1]===i)&&(s===void 0||o[2]===s)).map(o=>(Wu(o)?N0(t,e,...o):y0(t,e,...o),r.outputs.delete(o),o[0]))},P4=(t,e,n,i,s,r,o,a,c,l,u,d,h,f,p,m)=>class extends l{constructor(E,x,S,v){super(S),this._context=E,this._nativeAudioNode=S;const T=u(E);d(T)&&n(Ex,()=>Ex(T,m))!==!0&&w4(S),C0.set(this,S),IN.set(this,new Set),E.state!=="closed"&&x&&Vc(this),t(this,v,S)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(E){this._nativeAudioNode.channelCount=E}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(E){this._nativeAudioNode.channelCountMode=E}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(E){this._nativeAudioNode.channelInterpretation=E}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(E,x=0,S=0){if(x<0||x>=this._nativeAudioNode.numberOfOutputs)throw s();const v=u(this._context),T=p(v);if(h(E)||f(E))throw r();if(Rh(E)){const A=en(E);try{const O=Lh(this._nativeAudioNode,A,x,S),L=ih(this);(T||L)&&this._nativeAudioNode.disconnect(...O),this.context.state!=="closed"&&!L&&ih(E)&&Vc(E)}catch(O){throw O.code===12?r():O}if(e(this,E,x,S,T)){const O=c([this],E);jm(O,i(T))}return E}const w=pu(E);if(w.name==="playbackRate"&&w.maxValue===1024)throw o();try{this._nativeAudioNode.connect(w,x),(T||ih(this))&&this._nativeAudioNode.disconnect(w,x)}catch(A){throw A.code===12?r():A}if(A4(this,E,x,T)){const A=c([this],E);jm(A,i(T))}}disconnect(E,x,S){let v;const T=u(this._context),w=p(T);if(E===void 0)v=k4(this,w);else if(typeof E=="number"){if(E<0||E>=this.numberOfOutputs)throw s();v=D4(this,w,E)}else{if(x!==void 0&&(x<0||x>=this.numberOfOutputs)||Rh(E)&&S!==void 0&&(S<0||S>=E.numberOfInputs))throw s();if(v=O4(this,w,E,x,S),v.length===0)throw r()}for(const D of v){const A=c([this],D);jm(A,a)}}},I4=(t,e,n,i,s,r,o,a,c,l,u,d,h)=>(f,p,m,b=null,E=null)=>{const x=m.value,S=new XF(x),v=p?i(S):null,T={get defaultValue(){return x},get maxValue(){return b===null?m.maxValue:b},get minValue(){return E===null?m.minValue:E},get value(){return m.value},set value(w){m.value=w,T.setValueAtTime(w,f.context.currentTime)},cancelAndHoldAtTime(w){if(typeof m.cancelAndHoldAtTime=="function")v===null&&S.flush(f.context.currentTime),S.add(s(w)),m.cancelAndHoldAtTime(w);else{const D=Array.from(S).pop();v===null&&S.flush(f.context.currentTime),S.add(s(w));const A=Array.from(S).pop();m.cancelScheduledValues(w),D!==A&&A!==void 0&&(A.type==="exponentialRampToValue"?m.exponentialRampToValueAtTime(A.value,A.endTime):A.type==="linearRampToValue"?m.linearRampToValueAtTime(A.value,A.endTime):A.type==="setValue"?m.setValueAtTime(A.value,A.startTime):A.type==="setValueCurve"&&m.setValueCurveAtTime(A.values,A.startTime,A.duration))}return T},cancelScheduledValues(w){return v===null&&S.flush(f.context.currentTime),S.add(r(w)),m.cancelScheduledValues(w),T},exponentialRampToValueAtTime(w,D){if(w===0)throw new RangeError;if(!Number.isFinite(D)||D<0)throw new RangeError;const A=f.context.currentTime;return v===null&&S.flush(A),Array.from(S).length===0&&(S.add(l(x,A)),m.setValueAtTime(x,A)),S.add(o(w,D)),m.exponentialRampToValueAtTime(w,D),T},linearRampToValueAtTime(w,D){const A=f.context.currentTime;return v===null&&S.flush(A),Array.from(S).length===0&&(S.add(l(x,A)),m.setValueAtTime(x,A)),S.add(a(w,D)),m.linearRampToValueAtTime(w,D),T},setTargetAtTime(w,D,A){return v===null&&S.flush(f.context.currentTime),S.add(c(w,D,A)),m.setTargetAtTime(w,D,A),T},setValueAtTime(w,D){return v===null&&S.flush(f.context.currentTime),S.add(l(w,D)),m.setValueAtTime(w,D),T},setValueCurveAtTime(w,D,A){const y=w instanceof Float32Array?w:new Float32Array(w);if(d!==null&&d.name==="webkitAudioContext"){const O=D+A,L=f.context.sampleRate,P=Math.ceil(D*L),U=Math.floor(O*L),X=U-P,K=new Float32Array(X);for(let _=0;_<X;_+=1){const q=(y.length-1)/A*((P+_)/L-D),ee=Math.floor(q),j=Math.ceil(q);K[_]=ee===j?y[ee]:(1-(q-ee))*y[ee]+(1-(j-q))*y[j]}v===null&&S.flush(f.context.currentTime),S.add(u(K,D,A)),m.setValueCurveAtTime(K,D,A);const Y=U/L;Y<O&&h(T,K[K.length-1],Y),h(T,y[y.length-1],O)}else v===null&&S.flush(f.context.currentTime),S.add(u(y,D,A)),m.setValueCurveAtTime(y,D,A);return T}};return n.set(T,m),e.set(T,f),t(T,v),T},R4=t=>({replay(e){for(const n of t)if(n.type==="exponentialRampToValue"){const{endTime:i,value:s}=n;e.exponentialRampToValueAtTime(s,i)}else if(n.type==="linearRampToValue"){const{endTime:i,value:s}=n;e.linearRampToValueAtTime(s,i)}else if(n.type==="setTarget"){const{startTime:i,target:s,timeConstant:r}=n;e.setTargetAtTime(s,i,r)}else if(n.type==="setValue"){const{startTime:i,value:s}=n;e.setValueAtTime(s,i)}else if(n.type==="setValueCurve"){const{duration:i,startTime:s,values:r}=n;e.setValueCurveAtTime(r,s,i)}else throw new Error("Can't apply an unknown automation.")}});class HN{constructor(e){this._map=new Map(e)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(e,n=null){return this._map.forEach((i,s)=>e.call(n,i,s,this))}get(e){return this._map.get(e)}has(e){return this._map.has(e)}keys(){return this._map.keys()}values(){return this._map.values()}}const L4={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},M4=(t,e,n,i,s,r,o,a,c,l,u,d,h,f)=>class extends e{constructor(m,b,E){var x;const S=a(m),v=c(S),T=u({...L4,...E});h(T);const w=Fg.get(S),D=w==null?void 0:w.get(b),A=v||S.state!=="closed"?S:(x=o(S))!==null&&x!==void 0?x:S,y=s(A,v?null:m.baseLatency,l,b,D,T),O=v?i(b,T,D):null;super(m,!0,y,O);const L=[];y.parameters.forEach((U,X)=>{const K=n(this,v,U);L.push([X,K])}),this._nativeAudioWorkletNode=y,this._onprocessorerror=null,this._parameters=new HN(L),v&&t(S,this);const{activeInputs:P}=r(this);d(y,P)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(m){const b=typeof m=="function"?f(this,m):null;this._nativeAudioWorkletNode.onprocessorerror=b;const E=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=E!==null&&E===b?m:E}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function Fh(t,e,n,i,s){if(typeof t.copyFromChannel=="function")e[n].byteLength===0&&(e[n]=new Float32Array(128)),t.copyFromChannel(e[n],i,s);else{const r=t.getChannelData(i);if(e[n].byteLength===0)e[n]=r.slice(s,s+128);else{const o=new Float32Array(r.buffer,s*Float32Array.BYTES_PER_ELEMENT,128);e[n].set(o)}}}const XN=(t,e,n,i,s)=>{typeof t.copyToChannel=="function"?e[n].byteLength!==0&&t.copyToChannel(e[n],i,s):e[n].byteLength!==0&&t.getChannelData(i).set(e[n],s)},Uh=(t,e)=>{const n=[];for(let i=0;i<t;i+=1){const s=[],r=typeof e=="number"?e:e[i];for(let o=0;o<r;o+=1)s.push(new Float32Array(128));n.push(s)}return n},B4=(t,e)=>{const n=Is(Ug,t),i=en(e);return Is(n,i)},F4=async(t,e,n,i,s,r,o)=>{const a=e===null?Math.ceil(t.context.length/128)*128:e.length,c=i.channelCount*i.numberOfInputs,l=s.reduce((b,E)=>b+E,0),u=l===0?null:n.createBuffer(l,a,n.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const d=fi(t),h=await B4(n,t),f=Uh(i.numberOfInputs,i.channelCount),p=Uh(i.numberOfOutputs,s),m=Array.from(t.parameters.keys()).reduce((b,E)=>({...b,[E]:new Float32Array(128)}),{});for(let b=0;b<a;b+=128){if(i.numberOfInputs>0&&e!==null)for(let E=0;E<i.numberOfInputs;E+=1)for(let x=0;x<i.channelCount;x+=1)Fh(e,f[E],x,x,b);r.parameterDescriptors!==void 0&&e!==null&&r.parameterDescriptors.forEach(({name:E},x)=>{Fh(e,m,E,c+x,b)});for(let E=0;E<i.numberOfInputs;E+=1)for(let x=0;x<s[E];x+=1)p[E][x].byteLength===0&&(p[E][x]=new Float32Array(128));try{const E=f.map((S,v)=>d.activeInputs[v].size===0?[]:S),x=o(b/n.sampleRate,n.sampleRate,()=>h.process(E,p,m));if(u!==null)for(let S=0,v=0;S<i.numberOfOutputs;S+=1){for(let T=0;T<s[S];T+=1)XN(u,p[S],T,v+T,b);v+=s[S]}if(!x)break}catch(E){t.dispatchEvent(new ErrorEvent("processorerror",{colno:E.colno,filename:E.filename,lineno:E.lineno,message:E.message}));break}}return u},U4=(t,e,n,i,s,r,o,a,c,l,u,d,h,f,p,m)=>(b,E,x)=>{const S=new WeakMap;let v=null;const T=async(w,D)=>{let A=u(w),y=null;const O=$n(A,D),L=Array.isArray(E.outputChannelCount)?E.outputChannelCount:Array.from(E.outputChannelCount);if(d===null){const P=L.reduce((Y,_)=>Y+_,0),U=s(D,{channelCount:Math.max(1,P),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,P)}),X=[];for(let Y=0;Y<w.numberOfOutputs;Y+=1)X.push(i(D,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:L[Y]}));const K=o(D,{channelCount:E.channelCount,channelCountMode:E.channelCountMode,channelInterpretation:E.channelInterpretation,gain:1});K.connect=e.bind(null,X),K.disconnect=c.bind(null,X),y=[U,X,K]}else O||(A=new d(D,b));if(S.set(D,y===null?A:y[2]),y!==null){if(v===null){if(x===void 0)throw new Error("Missing the processor constructor.");if(h===null)throw new Error("Missing the native OfflineAudioContext constructor.");const _=w.channelCount*w.numberOfInputs,q=x.parameterDescriptors===void 0?0:x.parameterDescriptors.length,ee=_+q;v=F4(w,ee===0?null:await(async()=>{const he=new h(ee,Math.ceil(w.context.length/128)*128,D.sampleRate),le=[],Le=[];for(let Me=0;Me<E.numberOfInputs;Me+=1)le.push(o(he,{channelCount:E.channelCount,channelCountMode:E.channelCountMode,channelInterpretation:E.channelInterpretation,gain:1})),Le.push(s(he,{channelCount:E.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:E.channelCount}));const Ae=await Promise.all(Array.from(w.parameters.values()).map(async Me=>{const te=r(he,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:Me.value});return await f(he,Me,te.offset),te})),De=i(he,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,_+q)});for(let Me=0;Me<E.numberOfInputs;Me+=1){le[Me].connect(Le[Me]);for(let te=0;te<E.channelCount;te+=1)Le[Me].connect(De,te,Me*E.channelCount+te)}for(const[Me,te]of Ae.entries())te.connect(De,0,_+Me),te.start(0);return De.connect(he.destination),await Promise.all(le.map(Me=>p(w,he,Me))),m(he)})(),D,E,L,x,l)}const P=await v,U=n(D,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[X,K,Y]=y;P!==null&&(U.buffer=P,U.start(0)),U.connect(X);for(let _=0,q=0;_<w.numberOfOutputs;_+=1){const ee=K[_];for(let j=0;j<L[_];j+=1)X.connect(ee,q+j,j);q+=L[_]}return Y}if(O)for(const[P,U]of w.parameters.entries())await t(D,U,A.parameters.get(P));else for(const[P,U]of w.parameters.entries())await f(D,U,A.parameters.get(P));return await p(w,D,A),A};return{render(w,D){a(D,w);const A=S.get(D);return A!==void 0?Promise.resolve(A):T(w,D)}}},V4=(t,e,n,i,s,r,o,a,c,l,u,d,h,f,p,m,b,E,x,S)=>class extends p{constructor(T,w){super(T,w),this._nativeContext=T,this._audioWorklet=t===void 0?void 0:{addModule:(D,A)=>t(this,D,A)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new e(this)}createBiquadFilter(){return new s(this)}createBuffer(T,w,D){return new n({length:w,numberOfChannels:T,sampleRate:D})}createBufferSource(){return new i(this)}createChannelMerger(T=6){return new r(this,{numberOfInputs:T})}createChannelSplitter(T=6){return new o(this,{numberOfOutputs:T})}createConstantSource(){return new a(this)}createConvolver(){return new c(this)}createDelay(T=1){return new u(this,{maxDelayTime:T})}createDynamicsCompressor(){return new d(this)}createGain(){return new h(this)}createIIRFilter(T,w){return new f(this,{feedback:w,feedforward:T})}createOscillator(){return new m(this)}createPanner(){return new b(this)}createPeriodicWave(T,w,D={disableNormalization:!1}){return new E(this,{...D,imag:w,real:T})}createStereoPanner(){return new x(this)}createWaveShaper(){return new S(this)}decodeAudioData(T,w,D){return l(this._nativeContext,T).then(A=>(typeof w=="function"&&w(A),A),A=>{throw typeof D=="function"&&D(A),A})}},W4={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},H4=(t,e,n,i,s,r,o,a)=>class extends t{constructor(l,u){const d=r(l),h={...W4,...u},f=s(d,h),p=o(d),m=p?n():null;super(l,!1,f,m),this._Q=e(this,p,f.Q,ui,Ti),this._detune=e(this,p,f.detune,1200*Math.log2(ui),-1200*Math.log2(ui)),this._frequency=e(this,p,f.frequency,l.sampleRate/2,0),this._gain=e(this,p,f.gain,40*Math.log10(ui),Ti),this._nativeBiquadFilterNode=f,a(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(l){this._nativeBiquadFilterNode.type=l}getFrequencyResponse(l,u,d){try{this._nativeBiquadFilterNode.getFrequencyResponse(l,u,d)}catch(h){throw h.code===11?i():h}if(l.length!==u.length||u.length!==d.length)throw i()}},X4=(t,e,n,i,s)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=n(a);const u=$n(l,c);if(!u){const d={Q:l.Q.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,detune:l.detune.value,frequency:l.frequency.value,gain:l.gain.value,type:l.type};l=e(c,d)}return r.set(c,l),u?(await t(c,a.Q,l.Q),await t(c,a.detune,l.detune),await t(c,a.frequency,l.frequency),await t(c,a.gain,l.gain)):(await i(c,a.Q,l.Q),await i(c,a.detune,l.detune),await i(c,a.frequency,l.frequency),await i(c,a.gain,l.gain)),await s(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},j4=(t,e)=>(n,i)=>{const s=e.get(n);if(s!==void 0)return s;const r=t.get(n);if(r!==void 0)return r;try{const o=i();return o instanceof Promise?(t.set(n,o),o.catch(()=>!1).then(a=>(t.delete(n),e.set(n,a),a))):(e.set(n,o),o)}catch{return e.set(n,!1),!1}},q4={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},z4=(t,e,n,i,s)=>class extends t{constructor(o,a){const c=i(o),l={...q4,...a},u=n(c,l),d=s(c)?e():null;super(o,!1,u,d)}},Y4=(t,e,n)=>()=>{const i=new WeakMap,s=async(r,o)=>{let a=e(r);if(!$n(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfInputs:a.numberOfInputs};a=t(o,l)}return i.set(o,a),await n(r,o,a),a};return{render(r,o){const a=i.get(o);return a!==void 0?Promise.resolve(a):s(r,o)}}},J4={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},Z4=(t,e,n,i,s,r)=>class extends t{constructor(a,c){const l=i(a),u=r({...J4,...c}),d=n(l,u),h=s(l)?e():null;super(a,!1,d,h)}},K4=(t,e,n)=>()=>{const i=new WeakMap,s=async(r,o)=>{let a=e(r);if(!$n(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfOutputs:a.numberOfOutputs};a=t(o,l)}return i.set(o,a),await n(r,o,a),a};return{render(r,o){const a=i.get(o);return a!==void 0?Promise.resolve(a):s(r,o)}}},Q4=t=>(e,n,i)=>t(n,e,i),G4=t=>(e,n,i=0,s=0)=>{const r=e[i];if(r===void 0)throw t();return Bh(n)?r.connect(n,0,s):r.connect(n,0)},_4=t=>(e,n)=>{const i=t(e,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),s=e.createBuffer(1,2,44100);return i.buffer=s,i.loop=!0,i.connect(n),i.start(),()=>{i.stop(),i.disconnect(n)}},$4={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},e8=(t,e,n,i,s,r,o)=>class extends t{constructor(c,l){const u=s(c),d={...$4,...l},h=i(u,d),f=r(u),p=f?n():null;super(c,!1,h,p),this._constantSourceNodeRenderer=p,this._nativeConstantSourceNode=h,this._offset=e(this,f,h.offset,ui,Ti),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?o(this,c):null;this._nativeConstantSourceNode.onended=l;const u=this._nativeConstantSourceNode.onended;this._onended=u!==null&&u===l?c:u}start(c=0){if(this._nativeConstantSourceNode.start(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=c),this.context.state!=="closed"){Vc(this);const l=()=>{this._nativeConstantSourceNode.removeEventListener("ended",l),Ir(this)&&Uu(this)};this._nativeConstantSourceNode.addEventListener("ended",l)}}stop(c=0){this._nativeConstantSourceNode.stop(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=c)}},t8=(t,e,n,i,s)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(l,u)=>{let d=n(l);const h=$n(d,u);if(!h){const f={channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,offset:d.offset.value};d=e(u,f),o!==null&&d.start(o),a!==null&&d.stop(a)}return r.set(u,d),h?await t(u,l.offset,d.offset):await i(u,l.offset,d.offset),await s(l,u,d),d};return{set start(l){o=l},set stop(l){a=l},render(l,u){const d=r.get(u);return d!==void 0?Promise.resolve(d):c(l,u)}}},n8=t=>e=>(t[0]=e,t[0]),i8={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},s8=(t,e,n,i,s,r)=>class extends t{constructor(a,c){const l=i(a),u={...i8,...c},d=n(l,u),f=s(l)?e():null;super(a,!1,d,f),this._isBufferNullified=!1,this._nativeConvolverNode=d,u.buffer!==null&&r(this,u.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(a){if(this._nativeConvolverNode.buffer=a,a===null&&this._nativeConvolverNode.buffer!==null){const c=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=c.createBuffer(1,1,c.sampleRate),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(a){this._nativeConvolverNode.normalize=a}},r8=(t,e,n)=>()=>{const i=new WeakMap,s=async(r,o)=>{let a=e(r);if(!$n(a,o)){const l={buffer:a.buffer,channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,disableNormalization:!a.normalize};a=t(o,l)}return i.set(o,a),tl(a)?await n(r,o,a.inputs[0]):await n(r,o,a),a};return{render(r,o){const a=i.get(o);return a!==void 0?Promise.resolve(a):s(r,o)}}},o8=(t,e)=>(n,i,s)=>{if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new e(n,i,s)}catch(r){throw r.name==="SyntaxError"?t():r}},a8=()=>new DOMException("","DataCloneError"),vx=t=>{const{port1:e,port2:n}=new MessageChannel;return new Promise(i=>{const s=()=>{n.onmessage=null,e.close(),n.close(),i()};n.onmessage=()=>s();try{e.postMessage(t,[t])}catch{}finally{s()}})},c8=(t,e,n,i,s,r,o,a,c,l,u)=>(d,h)=>{const f=o(d)?d:r(d);if(s.has(h)){const p=n();return Promise.reject(p)}try{s.add(h)}catch{}return e(c,()=>c(f))?f.decodeAudioData(h).then(p=>(vx(h).catch(()=>{}),e(a,()=>a(p))||u(p),t.add(p),p)):new Promise((p,m)=>{const b=async()=>{try{await vx(h)}catch{}},E=x=>{m(x),b()};try{f.decodeAudioData(h,x=>{typeof x.copyFromChannel!="function"&&(l(x),A0(x)),t.add(x),b().then(()=>p(x))},x=>{E(x===null?i():x)})}catch(x){E(x)}})},l8=(t,e,n,i,s,r,o,a)=>(c,l)=>{const u=e.get(c);if(u===void 0)throw new Error("Missing the expected cycle count.");const d=r(c.context),h=a(d);if(u===l){if(e.delete(c),!h&&o(c)){const f=i(c),{outputs:p}=n(c);for(const m of p)if(Wu(m)){const b=i(m[0]);t(f,b,m[1],m[2])}else{const b=s(m[0]);f.connect(b,m[1])}}}else e.set(c,u-l)},u8={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},d8=(t,e,n,i,s,r,o)=>class extends t{constructor(c,l){const u=s(c),d={...u8,...l},h=i(u,d),f=r(u),p=f?n(d.maxDelayTime):null;super(c,!1,h,p),this._delayTime=e(this,f,h.delayTime),o(this,d.maxDelayTime)}get delayTime(){return this._delayTime}},h8=(t,e,n,i,s)=>r=>{const o=new WeakMap,a=async(c,l)=>{let u=n(c);const d=$n(u,l);if(!d){const h={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,delayTime:u.delayTime.value,maxDelayTime:r};u=e(l,h)}return o.set(l,u),d?await t(l,c.delayTime,u.delayTime):await i(l,c.delayTime,u.delayTime),await s(c,l,u),u};return{render(c,l){const u=o.get(l);return u!==void 0?Promise.resolve(u):a(c,l)}}},f8=t=>(e,n,i,s)=>t(e[s],r=>r[0]===n&&r[1]===i),p8=t=>(e,n)=>{t(e).delete(n)},m8=t=>"delayTime"in t,g8=(t,e,n)=>function i(s,r){const o=Rh(r)?r:n(t,r);if(m8(o))return[];if(s[0]===o)return[s];if(s.includes(o))return[];const{outputs:a}=e(o);return Array.from(a).map(c=>i([...s,o],c[0])).reduce((c,l)=>c.concat(l),[])},Bd=(t,e,n)=>{const i=e[n];if(i===void 0)throw t();return i},E8=t=>(e,n=void 0,i=void 0,s=0)=>n===void 0?e.forEach(r=>r.disconnect()):typeof n=="number"?Bd(t,e,n).disconnect():Bh(n)?i===void 0?e.forEach(r=>r.disconnect(n)):s===void 0?Bd(t,e,i).disconnect(n,0):Bd(t,e,i).disconnect(n,0,s):i===void 0?e.forEach(r=>r.disconnect(n)):Bd(t,e,i).disconnect(n,0),v8={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},b8=(t,e,n,i,s,r,o,a)=>class extends t{constructor(l,u){const d=r(l),h={...v8,...u},f=i(d,h),p=o(d),m=p?n():null;super(l,!1,f,m),this._attack=e(this,p,f.attack),this._knee=e(this,p,f.knee),this._nativeDynamicsCompressorNode=f,this._ratio=e(this,p,f.ratio),this._release=e(this,p,f.release),this._threshold=e(this,p,f.threshold),a(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(l){const u=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=l,l>2)throw this._nativeDynamicsCompressorNode.channelCount=u,s()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(l){const u=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=l,l==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=u,s()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},S8=(t,e,n,i,s)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=n(a);const u=$n(l,c);if(!u){const d={attack:l.attack.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,knee:l.knee.value,ratio:l.ratio.value,release:l.release.value,threshold:l.threshold.value};l=e(c,d)}return r.set(c,l),u?(await t(c,a.attack,l.attack),await t(c,a.knee,l.knee),await t(c,a.ratio,l.ratio),await t(c,a.release,l.release),await t(c,a.threshold,l.threshold)):(await i(c,a.attack,l.attack),await i(c,a.knee,l.knee),await i(c,a.ratio,l.ratio),await i(c,a.release,l.release),await i(c,a.threshold,l.threshold)),await s(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},x8=()=>new DOMException("","EncodingError"),T8=t=>e=>new Promise((n,i)=>{if(t===null){i(new SyntaxError);return}const s=t.document.head;if(s===null)i(new SyntaxError);else{const r=t.document.createElement("script"),o=new Blob([e],{type:"application/javascript"}),a=URL.createObjectURL(o),c=t.onerror,l=()=>{t.onerror=c,URL.revokeObjectURL(a)};t.onerror=(u,d,h,f,p)=>{if(d===a||d===t.location.href&&h===1&&f===1)return l(),i(p),!1;if(c!==null)return c(u,d,h,f,p)},r.onerror=()=>{l(),i(new SyntaxError)},r.onload=()=>{l(),n()},r.src=a,r.type="module",s.appendChild(r)}}),C8=t=>class{constructor(n){this._nativeEventTarget=n,this._listeners=new WeakMap}addEventListener(n,i,s){if(i!==null){let r=this._listeners.get(i);r===void 0&&(r=t(this,i),typeof i=="function"&&this._listeners.set(i,r)),this._nativeEventTarget.addEventListener(n,r,s)}}dispatchEvent(n){return this._nativeEventTarget.dispatchEvent(n)}removeEventListener(n,i,s){const r=i===null?void 0:this._listeners.get(i);this._nativeEventTarget.removeEventListener(n,r===void 0?null:r,s)}},w8=t=>(e,n,i)=>{Object.defineProperties(t,{currentFrame:{configurable:!0,get(){return Math.round(e*n)}},currentTime:{configurable:!0,get(){return e}}});try{return i()}finally{t!==null&&(delete t.currentFrame,delete t.currentTime)}},A8=t=>async e=>{try{const n=await fetch(e);if(n.ok)return[await n.text(),n.url]}catch{}throw t()},N8={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},y8=(t,e,n,i,s,r)=>class extends t{constructor(a,c){const l=s(a),u={...N8,...c},d=i(l,u),h=r(l),f=h?n():null;super(a,!1,d,f),this._gain=e(this,h,d.gain,ui,Ti)}get gain(){return this._gain}},k8=(t,e,n,i,s)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=n(a);const u=$n(l,c);if(!u){const d={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,gain:l.gain.value};l=e(c,d)}return r.set(c,l),u?await t(c,a.gain,l.gain):await i(c,a.gain,l.gain),await s(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},D8=(t,e)=>n=>e(t,n),O8=t=>e=>{const n=t(e);if(n.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return n.renderer},P8=t=>e=>{var n;return(n=t.get(e))!==null&&n!==void 0?n:0},I8=t=>e=>{const n=t(e);if(n.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return n.renderer},R8=t=>e=>t.get(e),Bn=()=>new DOMException("","InvalidStateError"),L8=t=>e=>{const n=t.get(e);if(n===void 0)throw Bn();return n},M8=(t,e)=>n=>{let i=t.get(n);if(i!==void 0)return i;if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");return i=new e(1,1,44100),t.set(n,i),i},B8=t=>e=>{const n=t.get(e);if(n===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return n},Qf=()=>new DOMException("","InvalidAccessError"),F8=t=>{t.getFrequencyResponse=(e=>(n,i,s)=>{if(n.length!==i.length||i.length!==s.length)throw Qf();return e.call(t,n,i,s)})(t.getFrequencyResponse)},U8={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},V8=(t,e,n,i,s,r)=>class extends t{constructor(a,c){const l=i(a),u=s(l),d={...U8,...c},h=e(l,u?null:a.baseLatency,d),f=u?n(d.feedback,d.feedforward):null;super(a,!1,h,f),F8(h),this._nativeIIRFilterNode=h,r(this,1)}getFrequencyResponse(a,c,l){return this._nativeIIRFilterNode.getFrequencyResponse(a,c,l)}},jN=(t,e,n,i,s,r,o,a,c,l,u)=>{const d=l.length;let h=a;for(let f=0;f<d;f+=1){let p=n[0]*l[f];for(let m=1;m<s;m+=1){const b=h-m&c-1;p+=n[m]*r[b],p-=t[m]*o[b]}for(let m=s;m<i;m+=1)p+=n[m]*r[h-m&c-1];for(let m=s;m<e;m+=1)p-=t[m]*o[h-m&c-1];r[h]=l[f],o[h]=p,h=h+1&c-1,u[f]=p}return h},W8=(t,e,n,i)=>{const s=n instanceof Float64Array?n:new Float64Array(n),r=i instanceof Float64Array?i:new Float64Array(i),o=s.length,a=r.length,c=Math.min(o,a);if(s[0]!==1){for(let p=0;p<o;p+=1)r[p]/=s[0];for(let p=1;p<a;p+=1)s[p]/=s[0]}const l=32,u=new Float32Array(l),d=new Float32Array(l),h=e.createBuffer(t.numberOfChannels,t.length,t.sampleRate),f=t.numberOfChannels;for(let p=0;p<f;p+=1){const m=t.getChannelData(p),b=h.getChannelData(p);u.fill(0),d.fill(0),jN(s,o,r,a,c,u,d,0,l,m,b)}return h},H8=(t,e,n,i,s)=>(r,o)=>{const a=new WeakMap;let c=null;const l=async(u,d)=>{let h=null,f=e(u);const p=$n(f,d);if(d.createIIRFilter===void 0?h=t(d,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):p||(f=d.createIIRFilter(o,r)),a.set(d,h===null?f:h),h!==null){if(c===null){if(n===null)throw new Error("Missing the native OfflineAudioContext constructor.");const b=new n(u.context.destination.channelCount,u.context.length,d.sampleRate);c=(async()=>{await i(u,b,b.destination);const E=await s(b);return W8(E,d,r,o)})()}const m=await c;return h.buffer=m,h.start(0),h}return await i(u,d,f),f};return{render(u,d){const h=a.get(d);return h!==void 0?Promise.resolve(h):l(u,d)}}},X8=(t,e,n,i,s,r)=>o=>(a,c)=>{const l=t.get(a);if(l===void 0){if(!o&&r(a)){const u=i(a),{outputs:d}=n(a);for(const h of d)if(Wu(h)){const f=i(h[0]);e(u,f,h[1],h[2])}else{const f=s(h[0]);u.disconnect(f,h[1])}}t.set(a,c)}else t.set(a,l+c)},j8=(t,e)=>n=>{const i=t.get(n);return e(i)||e(n)},q8=(t,e)=>n=>t.has(n)||e(n),z8=(t,e)=>n=>t.has(n)||e(n),Y8=(t,e)=>n=>{const i=t.get(n);return e(i)||e(n)},J8=t=>e=>t!==null&&e instanceof t,Z8=t=>e=>t!==null&&typeof t.AudioNode=="function"&&e instanceof t.AudioNode,K8=t=>e=>t!==null&&typeof t.AudioParam=="function"&&e instanceof t.AudioParam,Q8=(t,e)=>n=>t(n)||e(n),G8=t=>e=>t!==null&&e instanceof t,_8=t=>t!==null&&t.isSecureContext,$8=(t,e,n,i)=>class extends t{constructor(r,o){const a=n(r),c=e(a,o);if(i(a))throw TypeError();super(r,!0,c,null),this._nativeMediaElementAudioSourceNode=c}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},e7={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},t7=(t,e,n,i)=>class extends t{constructor(r,o){const a=n(r);if(i(a))throw new TypeError;const c={...e7,...o},l=e(a,c);super(r,!1,l,null),this._nativeMediaStreamAudioDestinationNode=l}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},n7=(t,e,n,i)=>class extends t{constructor(r,o){const a=n(r),c=e(a,o);if(i(a))throw new TypeError;super(r,!0,c,null),this._nativeMediaStreamAudioSourceNode=c}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},i7=(t,e,n)=>class extends t{constructor(s,r){const o=n(s),a=e(o,r);super(s,!0,a,null)}},s7=(t,e,n,i,s,r)=>class extends n{constructor(a,c){super(a),this._nativeContext=a,Zf.set(this,a),i(a)&&s.set(a,new Set),this._destination=new t(this,c),this._listener=e(this,a),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(a){const c=typeof a=="function"?r(this,a):null;this._nativeContext.onstatechange=c;const l=this._nativeContext.onstatechange;this._onstatechange=l!==null&&l===c?a:l}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},mu=t=>{const e=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const n=t.decodeAudioData(e.buffer,()=>{});return n===void 0?!1:(n.catch(()=>{}),!0)}catch{}return!1},r7=(t,e)=>(n,i,s)=>{const r=new Set;return n.connect=(o=>(a,c=0,l=0)=>{const u=r.size===0;if(e(a))return o.call(n,a,c,l),t(r,[a,c,l],d=>d[0]===a&&d[1]===c&&d[2]===l,!0),u&&i(),a;o.call(n,a,c),t(r,[a,c],d=>d[0]===a&&d[1]===c,!0),u&&i()})(n.connect),n.disconnect=(o=>(a,c,l)=>{const u=r.size>0;if(a===void 0)o.apply(n),r.clear();else if(typeof a=="number"){o.call(n,a);for(const h of r)h[1]===a&&r.delete(h)}else{e(a)?o.call(n,a,c,l):o.call(n,a,c);for(const h of r)h[0]===a&&(c===void 0||h[1]===c)&&(l===void 0||h[2]===l)&&r.delete(h)}const d=r.size===0;u&&d&&s()})(n.disconnect),n},sn=(t,e,n)=>{const i=e[n];i!==void 0&&i!==t[n]&&(t[n]=i)},In=(t,e)=>{sn(t,e,"channelCount"),sn(t,e,"channelCountMode"),sn(t,e,"channelInterpretation")},bx=t=>typeof t.getFloatTimeDomainData=="function",o7=t=>{t.getFloatTimeDomainData=e=>{const n=new Uint8Array(e.length);t.getByteTimeDomainData(n);const i=Math.max(n.length,t.fftSize);for(let s=0;s<i;s+=1)e[s]=(n[s]-128)*.0078125;return e}},a7=(t,e)=>(n,i)=>{const s=n.createAnalyser();if(In(s,i),!(i.maxDecibels>i.minDecibels))throw e();return sn(s,i,"fftSize"),sn(s,i,"maxDecibels"),sn(s,i,"minDecibels"),sn(s,i,"smoothingTimeConstant"),t(bx,()=>bx(s))||o7(s),s},c7=t=>t===null?null:t.hasOwnProperty("AudioBuffer")?t.AudioBuffer:null,hn=(t,e,n)=>{const i=e[n];i!==void 0&&i!==t[n].value&&(t[n].value=i)},l7=t=>{t.start=(e=>{let n=!1;return(i=0,s=0,r)=>{if(n)throw Bn();e.call(t,i,s,r),n=!0}})(t.start)},k0=t=>{t.start=(e=>(n=0,i=0,s)=>{if(typeof s=="number"&&s<0||i<0||n<0)throw new RangeError("The parameters can't be negative.");e.call(t,n,i,s)})(t.start)},D0=t=>{t.stop=(e=>(n=0)=>{if(n<0)throw new RangeError("The parameter can't be negative.");e.call(t,n)})(t.stop)},u7=(t,e,n,i,s,r,o,a,c,l,u)=>(d,h)=>{const f=d.createBufferSource();return In(f,h),hn(f,h,"playbackRate"),sn(f,h,"buffer"),sn(f,h,"loop"),sn(f,h,"loopEnd"),sn(f,h,"loopStart"),e(n,()=>n(d))||l7(f),e(i,()=>i(d))||c(f),e(s,()=>s(d))||l(f,d),e(r,()=>r(d))||k0(f),e(o,()=>o(d))||u(f,d),e(a,()=>a(d))||D0(f),t(d,f),f},d7=t=>t===null?null:t.hasOwnProperty("AudioContext")?t.AudioContext:t.hasOwnProperty("webkitAudioContext")?t.webkitAudioContext:null,h7=(t,e)=>(n,i,s)=>{const r=n.destination;if(r.channelCount!==i)try{r.channelCount=i}catch{}s&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:i});const o=t(n,{channelCount:i,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return e(o,"channelCount",a=>()=>a.call(o),a=>c=>{a.call(o,c);try{r.channelCount=c}catch(l){if(c>r.maxChannelCount)throw l}}),e(o,"channelCountMode",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelCountMode=c}),e(o,"channelInterpretation",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelInterpretation=c}),Object.defineProperty(o,"maxChannelCount",{get:()=>r.maxChannelCount}),o.connect(r),o},f7=t=>t===null?null:t.hasOwnProperty("AudioWorkletNode")?t.AudioWorkletNode:null,p7=t=>{const{port1:e}=new MessageChannel;try{e.postMessage(t)}finally{e.close()}},m7=(t,e,n,i,s)=>(r,o,a,c,l,u)=>{if(a!==null)try{const d=new a(r,c,u),h=new Map;let f=null;if(Object.defineProperties(d,{channelCount:{get:()=>u.channelCount,set:()=>{throw t()}},channelCountMode:{get:()=>"explicit",set:()=>{throw t()}},onprocessorerror:{get:()=>f,set:p=>{typeof f=="function"&&d.removeEventListener("processorerror",f),f=typeof p=="function"?p:null,typeof f=="function"&&d.addEventListener("processorerror",f)}}}),d.addEventListener=(p=>(...m)=>{if(m[0]==="processorerror"){const b=typeof m[1]=="function"?m[1]:typeof m[1]=="object"&&m[1]!==null&&typeof m[1].handleEvent=="function"?m[1].handleEvent:null;if(b!==null){const E=h.get(m[1]);E!==void 0?m[1]=E:(m[1]=x=>{x.type==="error"?(Object.defineProperties(x,{type:{value:"processorerror"}}),b(x)):b(new ErrorEvent(m[0],{...x}))},h.set(b,m[1]))}}return p.call(d,"error",m[1],m[2]),p.call(d,...m)})(d.addEventListener),d.removeEventListener=(p=>(...m)=>{if(m[0]==="processorerror"){const b=h.get(m[1]);b!==void 0&&(h.delete(m[1]),m[1]=b)}return p.call(d,"error",m[1],m[2]),p.call(d,m[0],m[1],m[2])})(d.removeEventListener),u.numberOfOutputs!==0){const p=n(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return d.connect(p).connect(r.destination),s(d,()=>p.disconnect(),()=>p.connect(r.destination))}return d}catch(d){throw d.code===11?i():d}if(l===void 0)throw i();return p7(u),e(r,o,l,u)},qN=(t,e)=>t===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(t*e))))),g7=t=>new Promise((e,n)=>{const{port1:i,port2:s}=new MessageChannel;i.onmessage=({data:r})=>{i.close(),s.close(),e(r)},i.onmessageerror=({data:r})=>{i.close(),s.close(),n(r)},s.postMessage(t)}),E7=async(t,e)=>{const n=await g7(e);return new t(n)},v7=(t,e,n,i)=>{let s=Ug.get(t);s===void 0&&(s=new WeakMap,Ug.set(t,s));const r=E7(n,i);return s.set(e,r),r},b7=(t,e,n,i,s,r,o,a,c,l,u,d,h)=>(f,p,m,b)=>{if(b.numberOfInputs===0&&b.numberOfOutputs===0)throw c();const E=Array.isArray(b.outputChannelCount)?b.outputChannelCount:Array.from(b.outputChannelCount);if(E.some(H=>H<1))throw c();if(E.length!==b.numberOfOutputs)throw e();if(b.channelCountMode!=="explicit")throw c();const x=b.channelCount*b.numberOfInputs,S=E.reduce((H,$)=>H+$,0),v=m.parameterDescriptors===void 0?0:m.parameterDescriptors.length;if(x+v>6||S>6)throw c();const T=new MessageChannel,w=[],D=[];for(let H=0;H<b.numberOfInputs;H+=1)w.push(o(f,{channelCount:b.channelCount,channelCountMode:b.channelCountMode,channelInterpretation:b.channelInterpretation,gain:1})),D.push(s(f,{channelCount:b.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:b.channelCount}));const A=[];if(m.parameterDescriptors!==void 0)for(const{defaultValue:H,maxValue:$,minValue:ne,name:ae}of m.parameterDescriptors){const ue=r(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:b.parameterData[ae]!==void 0?b.parameterData[ae]:H===void 0?0:H});Object.defineProperties(ue.offset,{defaultValue:{get:()=>H===void 0?0:H},maxValue:{get:()=>$===void 0?ui:$},minValue:{get:()=>ne===void 0?Ti:ne}}),A.push(ue)}const y=i(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,x+v)}),O=qN(p,f.sampleRate),L=a(f,O,x+v,Math.max(1,S)),P=s(f,{channelCount:Math.max(1,S),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,S)}),U=[];for(let H=0;H<b.numberOfOutputs;H+=1)U.push(i(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:E[H]}));for(let H=0;H<b.numberOfInputs;H+=1){w[H].connect(D[H]);for(let $=0;$<b.channelCount;$+=1)D[H].connect(y,$,H*b.channelCount+$)}const X=new HN(m.parameterDescriptors===void 0?[]:m.parameterDescriptors.map(({name:H},$)=>{const ne=A[$];return ne.connect(y,0,x+$),ne.start(0),[H,ne.offset]}));y.connect(L);let K=b.channelInterpretation,Y=null;const _=b.numberOfOutputs===0?[L]:U,q={get bufferSize(){return O},get channelCount(){return b.channelCount},set channelCount(H){throw n()},get channelCountMode(){return b.channelCountMode},set channelCountMode(H){throw n()},get channelInterpretation(){return K},set channelInterpretation(H){for(const $ of w)$.channelInterpretation=H;K=H},get context(){return L.context},get inputs(){return w},get numberOfInputs(){return b.numberOfInputs},get numberOfOutputs(){return b.numberOfOutputs},get onprocessorerror(){return Y},set onprocessorerror(H){typeof Y=="function"&&q.removeEventListener("processorerror",Y),Y=typeof H=="function"?H:null,typeof Y=="function"&&q.addEventListener("processorerror",Y)},get parameters(){return X},get port(){return T.port2},addEventListener(...H){return L.addEventListener(H[0],H[1],H[2])},connect:t.bind(null,_),disconnect:l.bind(null,_),dispatchEvent(...H){return L.dispatchEvent(H[0])},removeEventListener(...H){return L.removeEventListener(H[0],H[1],H[2])}},ee=new Map;T.port1.addEventListener=(H=>(...$)=>{if($[0]==="message"){const ne=typeof $[1]=="function"?$[1]:typeof $[1]=="object"&&$[1]!==null&&typeof $[1].handleEvent=="function"?$[1].handleEvent:null;if(ne!==null){const ae=ee.get($[1]);ae!==void 0?$[1]=ae:($[1]=ue=>{u(f.currentTime,f.sampleRate,()=>ne(ue))},ee.set(ne,$[1]))}}return H.call(T.port1,$[0],$[1],$[2])})(T.port1.addEventListener),T.port1.removeEventListener=(H=>(...$)=>{if($[0]==="message"){const ne=ee.get($[1]);ne!==void 0&&(ee.delete($[1]),$[1]=ne)}return H.call(T.port1,$[0],$[1],$[2])})(T.port1.removeEventListener);let j=null;Object.defineProperty(T.port1,"onmessage",{get:()=>j,set:H=>{typeof j=="function"&&T.port1.removeEventListener("message",j),j=typeof H=="function"?H:null,typeof j=="function"&&(T.port1.addEventListener("message",j),T.port1.start())}}),m.prototype.port=T.port1;let he=null;v7(f,q,m,b).then(H=>he=H);const Le=Uh(b.numberOfInputs,b.channelCount),Ae=Uh(b.numberOfOutputs,E),De=m.parameterDescriptors===void 0?[]:m.parameterDescriptors.reduce((H,{name:$})=>({...H,[$]:new Float32Array(128)}),{});let Me=!0;const te=()=>{b.numberOfOutputs>0&&L.disconnect(P);for(let H=0,$=0;H<b.numberOfOutputs;H+=1){const ne=U[H];for(let ae=0;ae<E[H];ae+=1)P.disconnect(ne,$+ae,ae);$+=E[H]}},z=new Map;L.onaudioprocess=({inputBuffer:H,outputBuffer:$})=>{if(he!==null){const ne=d(q);for(let ae=0;ae<O;ae+=128){for(let ue=0;ue<b.numberOfInputs;ue+=1)for(let pe=0;pe<b.channelCount;pe+=1)Fh(H,Le[ue],pe,pe,ae);m.parameterDescriptors!==void 0&&m.parameterDescriptors.forEach(({name:ue},pe)=>{Fh(H,De,ue,x+pe,ae)});for(let ue=0;ue<b.numberOfInputs;ue+=1)for(let pe=0;pe<E[ue];pe+=1)Ae[ue][pe].byteLength===0&&(Ae[ue][pe]=new Float32Array(128));try{const ue=Le.map((Ee,de)=>{if(ne[de].size>0)return z.set(de,O/128),Ee;const Se=z.get(de);return Se===void 0?[]:(Ee.every(ye=>ye.every(Ve=>Ve===0))&&(Se===1?z.delete(de):z.set(de,Se-1)),Ee)});Me=u(f.currentTime+ae/f.sampleRate,f.sampleRate,()=>he.process(ue,Ae,De));for(let Ee=0,de=0;Ee<b.numberOfOutputs;Ee+=1){for(let Be=0;Be<E[Ee];Be+=1)XN($,Ae[Ee],Be,de+Be,ae);de+=E[Ee]}}catch(ue){Me=!1,q.dispatchEvent(new ErrorEvent("processorerror",{colno:ue.colno,filename:ue.filename,lineno:ue.lineno,message:ue.message}))}if(!Me){for(let ue=0;ue<b.numberOfInputs;ue+=1){w[ue].disconnect(D[ue]);for(let pe=0;pe<b.channelCount;pe+=1)D[ae].disconnect(y,pe,ue*b.channelCount+pe)}if(m.parameterDescriptors!==void 0){const ue=m.parameterDescriptors.length;for(let pe=0;pe<ue;pe+=1){const Ee=A[pe];Ee.disconnect(y,0,x+pe),Ee.stop()}}y.disconnect(L),L.onaudioprocess=null,me?te():ut();break}}}};let me=!1;const xe=o(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),qe=()=>L.connect(xe).connect(f.destination),ut=()=>{L.disconnect(xe),xe.disconnect()},F=()=>{if(Me){ut(),b.numberOfOutputs>0&&L.connect(P);for(let H=0,$=0;H<b.numberOfOutputs;H+=1){const ne=U[H];for(let ae=0;ae<E[H];ae+=1)P.connect(ne,$+ae,ae);$+=E[H]}}me=!0},V=()=>{Me&&(qe(),te()),me=!1};return qe(),h(q,F,V)},zN=(t,e)=>{const n=t.createBiquadFilter();return In(n,e),hn(n,e,"Q"),hn(n,e,"detune"),hn(n,e,"frequency"),hn(n,e,"gain"),sn(n,e,"type"),n},S7=(t,e)=>(n,i)=>{const s=n.createChannelMerger(i.numberOfInputs);return t!==null&&t.name==="webkitAudioContext"&&e(n,s),In(s,i),s},x7=t=>{const e=t.numberOfOutputs;Object.defineProperty(t,"channelCount",{get:()=>e,set:n=>{if(n!==e)throw Bn()}}),Object.defineProperty(t,"channelCountMode",{get:()=>"explicit",set:n=>{if(n!=="explicit")throw Bn()}}),Object.defineProperty(t,"channelInterpretation",{get:()=>"discrete",set:n=>{if(n!=="discrete")throw Bn()}})},Hu=(t,e)=>{const n=t.createChannelSplitter(e.numberOfOutputs);return In(n,e),x7(n),n},T7=(t,e,n,i,s)=>(r,o)=>{if(r.createConstantSource===void 0)return n(r,o);const a=r.createConstantSource();return In(a,o),hn(a,o,"offset"),e(i,()=>i(r))||k0(a),e(s,()=>s(r))||D0(a),t(r,a),a},nl=(t,e)=>(t.connect=e.connect.bind(e),t.disconnect=e.disconnect.bind(e),t),C7=(t,e,n,i)=>(s,{offset:r,...o})=>{const a=s.createBuffer(1,2,44100),c=e(s,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),l=n(s,{...o,gain:r}),u=a.getChannelData(0);u[0]=1,u[1]=1,c.buffer=a,c.loop=!0;const d={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(p){l.channelCount=p},get channelCountMode(){return l.channelCountMode},set channelCountMode(p){l.channelCountMode=p},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(p){l.channelInterpretation=p},get context(){return l.context},get inputs(){return[]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get offset(){return l.gain},get onended(){return c.onended},set onended(p){c.onended=p},addEventListener(...p){return c.addEventListener(p[0],p[1],p[2])},dispatchEvent(...p){return c.dispatchEvent(p[0])},removeEventListener(...p){return c.removeEventListener(p[0],p[1],p[2])},start(p=0){c.start.call(c,p)},stop(p=0){c.stop.call(c,p)}},h=()=>c.connect(l),f=()=>c.disconnect(l);return t(s,c),i(nl(d,l),h,f)},w7=(t,e)=>(n,i)=>{const s=n.createConvolver();if(In(s,i),i.disableNormalization===s.normalize&&(s.normalize=!i.disableNormalization),sn(s,i,"buffer"),i.channelCount>2||(e(s,"channelCount",r=>()=>r.call(s),r=>o=>{if(o>2)throw t();return r.call(s,o)}),i.channelCountMode==="max"))throw t();return e(s,"channelCountMode",r=>()=>r.call(s),r=>o=>{if(o==="max")throw t();return r.call(s,o)}),s},YN=(t,e)=>{const n=t.createDelay(e.maxDelayTime);return In(n,e),hn(n,e,"delayTime"),n},A7=t=>(e,n)=>{const i=e.createDynamicsCompressor();if(In(i,n),n.channelCount>2||n.channelCountMode==="max")throw t();return hn(i,n,"attack"),hn(i,n,"knee"),hn(i,n,"ratio"),hn(i,n,"release"),hn(i,n,"threshold"),i},Ni=(t,e)=>{const n=t.createGain();return In(n,e),hn(n,e,"gain"),n},N7=t=>(e,n,i)=>{if(e.createIIRFilter===void 0)return t(e,n,i);const s=e.createIIRFilter(i.feedforward,i.feedback);return In(s,i),s};function y7(t,e){const n=e[0]*e[0]+e[1]*e[1];return[(t[0]*e[0]+t[1]*e[1])/n,(t[1]*e[0]-t[0]*e[1])/n]}function k7(t,e){return[t[0]*e[0]-t[1]*e[1],t[0]*e[1]+t[1]*e[0]]}function Sx(t,e){let n=[0,0];for(let i=t.length-1;i>=0;i-=1)n=k7(n,e),n[0]+=t[i];return n}const D7=(t,e,n,i)=>(s,r,{channelCount:o,channelCountMode:a,channelInterpretation:c,feedback:l,feedforward:u})=>{const d=qN(r,s.sampleRate),h=l instanceof Float64Array?l:new Float64Array(l),f=u instanceof Float64Array?u:new Float64Array(u),p=h.length,m=f.length,b=Math.min(p,m);if(p===0||p>20)throw i();if(h[0]===0)throw e();if(m===0||m>20)throw i();if(f[0]===0)throw e();if(h[0]!==1){for(let A=0;A<m;A+=1)f[A]/=h[0];for(let A=1;A<p;A+=1)h[A]/=h[0]}const E=n(s,d,o,o);E.channelCount=o,E.channelCountMode=a,E.channelInterpretation=c;const x=32,S=[],v=[],T=[];for(let A=0;A<o;A+=1){S.push(0);const y=new Float32Array(x),O=new Float32Array(x);y.fill(0),O.fill(0),v.push(y),T.push(O)}E.onaudioprocess=A=>{const y=A.inputBuffer,O=A.outputBuffer,L=y.numberOfChannels;for(let P=0;P<L;P+=1){const U=y.getChannelData(P),X=O.getChannelData(P);S[P]=jN(h,p,f,m,b,v[P],T[P],S[P],x,U,X)}};const w=s.sampleRate/2;return nl({get bufferSize(){return d},get channelCount(){return E.channelCount},set channelCount(A){E.channelCount=A},get channelCountMode(){return E.channelCountMode},set channelCountMode(A){E.channelCountMode=A},get channelInterpretation(){return E.channelInterpretation},set channelInterpretation(A){E.channelInterpretation=A},get context(){return E.context},get inputs(){return[E]},get numberOfInputs(){return E.numberOfInputs},get numberOfOutputs(){return E.numberOfOutputs},addEventListener(...A){return E.addEventListener(A[0],A[1],A[2])},dispatchEvent(...A){return E.dispatchEvent(A[0])},getFrequencyResponse(A,y,O){if(A.length!==y.length||y.length!==O.length)throw t();const L=A.length;for(let P=0;P<L;P+=1){const U=-Math.PI*(A[P]/w),X=[Math.cos(U),Math.sin(U)],K=Sx(f,X),Y=Sx(h,X),_=y7(K,Y);y[P]=Math.sqrt(_[0]*_[0]+_[1]*_[1]),O[P]=Math.atan2(_[1],_[0])}},removeEventListener(...A){return E.removeEventListener(A[0],A[1],A[2])}},E)},O7=(t,e)=>t.createMediaElementSource(e.mediaElement),P7=(t,e)=>{const n=t.createMediaStreamDestination();return In(n,e),n.numberOfOutputs===1&&Object.defineProperty(n,"numberOfOutputs",{get:()=>0}),n},I7=(t,{mediaStream:e})=>{const n=e.getAudioTracks();n.sort((r,o)=>r.id<o.id?-1:r.id>o.id?1:0);const i=n.slice(0,1),s=t.createMediaStreamSource(new MediaStream(i));return Object.defineProperty(s,"mediaStream",{value:e}),s},R7=(t,e)=>(n,{mediaStreamTrack:i})=>{if(typeof n.createMediaStreamTrackSource=="function")return n.createMediaStreamTrackSource(i);const s=new MediaStream([i]),r=n.createMediaStreamSource(s);if(i.kind!=="audio")throw t();if(e(n))throw new TypeError;return r},L7=t=>t===null?null:t.hasOwnProperty("OfflineAudioContext")?t.OfflineAudioContext:t.hasOwnProperty("webkitOfflineAudioContext")?t.webkitOfflineAudioContext:null,M7=(t,e,n,i,s,r)=>(o,a)=>{const c=o.createOscillator();return In(c,a),hn(c,a,"detune"),hn(c,a,"frequency"),a.periodicWave!==void 0?c.setPeriodicWave(a.periodicWave):sn(c,a,"type"),e(n,()=>n(o))||k0(c),e(i,()=>i(o))||r(c,o),e(s,()=>s(o))||D0(c),t(o,c),c},B7=t=>(e,n)=>{const i=e.createPanner();return i.orientationX===void 0?t(e,n):(In(i,n),hn(i,n,"orientationX"),hn(i,n,"orientationY"),hn(i,n,"orientationZ"),hn(i,n,"positionX"),hn(i,n,"positionY"),hn(i,n,"positionZ"),sn(i,n,"coneInnerAngle"),sn(i,n,"coneOuterAngle"),sn(i,n,"coneOuterGain"),sn(i,n,"distanceModel"),sn(i,n,"maxDistance"),sn(i,n,"panningModel"),sn(i,n,"refDistance"),sn(i,n,"rolloffFactor"),i)},F7=(t,e,n,i,s,r,o,a,c,l)=>(u,{coneInnerAngle:d,coneOuterAngle:h,coneOuterGain:f,distanceModel:p,maxDistance:m,orientationX:b,orientationY:E,orientationZ:x,panningModel:S,positionX:v,positionY:T,positionZ:w,refDistance:D,rolloffFactor:A,...y})=>{const O=u.createPanner();if(y.channelCount>2||y.channelCountMode==="max")throw o();In(O,y);const L={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},P=n(u,{...L,channelInterpretation:"speakers",numberOfInputs:6}),U=i(u,{...y,gain:1}),X=i(u,{...L,gain:1}),K=i(u,{...L,gain:0}),Y=i(u,{...L,gain:0}),_=i(u,{...L,gain:0}),q=i(u,{...L,gain:0}),ee=i(u,{...L,gain:0}),j=s(u,256,6,1),he=r(u,{...L,curve:new Float32Array([1,1]),oversample:"none"});let le=[b,E,x],Le=[v,T,w];const Ae=new Float32Array(1);j.onaudioprocess=({inputBuffer:z})=>{const me=[c(z,Ae,0),c(z,Ae,1),c(z,Ae,2)];me.some((qe,ut)=>qe!==le[ut])&&(O.setOrientation(...me),le=me);const xe=[c(z,Ae,3),c(z,Ae,4),c(z,Ae,5)];xe.some((qe,ut)=>qe!==Le[ut])&&(O.setPosition(...xe),Le=xe)},Object.defineProperty(K.gain,"defaultValue",{get:()=>0}),Object.defineProperty(Y.gain,"defaultValue",{get:()=>0}),Object.defineProperty(_.gain,"defaultValue",{get:()=>0}),Object.defineProperty(q.gain,"defaultValue",{get:()=>0}),Object.defineProperty(ee.gain,"defaultValue",{get:()=>0});const De={get bufferSize(){},get channelCount(){return O.channelCount},set channelCount(z){if(z>2)throw o();U.channelCount=z,O.channelCount=z},get channelCountMode(){return O.channelCountMode},set channelCountMode(z){if(z==="max")throw o();U.channelCountMode=z,O.channelCountMode=z},get channelInterpretation(){return O.channelInterpretation},set channelInterpretation(z){U.channelInterpretation=z,O.channelInterpretation=z},get coneInnerAngle(){return O.coneInnerAngle},set coneInnerAngle(z){O.coneInnerAngle=z},get coneOuterAngle(){return O.coneOuterAngle},set coneOuterAngle(z){O.coneOuterAngle=z},get coneOuterGain(){return O.coneOuterGain},set coneOuterGain(z){if(z<0||z>1)throw e();O.coneOuterGain=z},get context(){return O.context},get distanceModel(){return O.distanceModel},set distanceModel(z){O.distanceModel=z},get inputs(){return[U]},get maxDistance(){return O.maxDistance},set maxDistance(z){if(z<0)throw new RangeError;O.maxDistance=z},get numberOfInputs(){return O.numberOfInputs},get numberOfOutputs(){return O.numberOfOutputs},get orientationX(){return X.gain},get orientationY(){return K.gain},get orientationZ(){return Y.gain},get panningModel(){return O.panningModel},set panningModel(z){O.panningModel=z},get positionX(){return _.gain},get positionY(){return q.gain},get positionZ(){return ee.gain},get refDistance(){return O.refDistance},set refDistance(z){if(z<0)throw new RangeError;O.refDistance=z},get rolloffFactor(){return O.rolloffFactor},set rolloffFactor(z){if(z<0)throw new RangeError;O.rolloffFactor=z},addEventListener(...z){return U.addEventListener(z[0],z[1],z[2])},dispatchEvent(...z){return U.dispatchEvent(z[0])},removeEventListener(...z){return U.removeEventListener(z[0],z[1],z[2])}};d!==De.coneInnerAngle&&(De.coneInnerAngle=d),h!==De.coneOuterAngle&&(De.coneOuterAngle=h),f!==De.coneOuterGain&&(De.coneOuterGain=f),p!==De.distanceModel&&(De.distanceModel=p),m!==De.maxDistance&&(De.maxDistance=m),b!==De.orientationX.value&&(De.orientationX.value=b),E!==De.orientationY.value&&(De.orientationY.value=E),x!==De.orientationZ.value&&(De.orientationZ.value=x),S!==De.panningModel&&(De.panningModel=S),v!==De.positionX.value&&(De.positionX.value=v),T!==De.positionY.value&&(De.positionY.value=T),w!==De.positionZ.value&&(De.positionZ.value=w),D!==De.refDistance&&(De.refDistance=D),A!==De.rolloffFactor&&(De.rolloffFactor=A),(le[0]!==1||le[1]!==0||le[2]!==0)&&O.setOrientation(...le),(Le[0]!==0||Le[1]!==0||Le[2]!==0)&&O.setPosition(...Le);const Me=()=>{U.connect(O),t(U,he,0,0),he.connect(X).connect(P,0,0),he.connect(K).connect(P,0,1),he.connect(Y).connect(P,0,2),he.connect(_).connect(P,0,3),he.connect(q).connect(P,0,4),he.connect(ee).connect(P,0,5),P.connect(j).connect(u.destination)},te=()=>{U.disconnect(O),a(U,he,0,0),he.disconnect(X),X.disconnect(P),he.disconnect(K),K.disconnect(P),he.disconnect(Y),Y.disconnect(P),he.disconnect(_),_.disconnect(P),he.disconnect(q),q.disconnect(P),he.disconnect(ee),ee.disconnect(P),P.disconnect(j),j.disconnect(u.destination)};return l(nl(De,O),Me,te)},U7=t=>(e,{disableNormalization:n,imag:i,real:s})=>{const r=i instanceof Float32Array?i:new Float32Array(i),o=s instanceof Float32Array?s:new Float32Array(s),a=e.createPeriodicWave(o,r,{disableNormalization:n});if(Array.from(i).length<2)throw t();return a},Xu=(t,e,n,i)=>t.createScriptProcessor(e,n,i),V7=(t,e)=>(n,i)=>{const s=i.channelCountMode;if(s==="clamped-max")throw e();if(n.createStereoPanner===void 0)return t(n,i);const r=n.createStereoPanner();return In(r,i),hn(r,i,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>s,set:o=>{if(o!==s)throw e()}}),r},W7=(t,e,n,i,s,r)=>{const a=new Float32Array([1,1]),c=Math.PI/2,l={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},u={...l,oversample:"none"},d=(p,m,b,E)=>{const x=new Float32Array(16385),S=new Float32Array(16385);for(let y=0;y<16385;y+=1){const O=y/16384*c;x[y]=Math.cos(O),S[y]=Math.sin(O)}const v=n(p,{...l,gain:0}),T=i(p,{...u,curve:x}),w=i(p,{...u,curve:a}),D=n(p,{...l,gain:0}),A=i(p,{...u,curve:S});return{connectGraph(){m.connect(v),m.connect(w.inputs===void 0?w:w.inputs[0]),m.connect(D),w.connect(b),b.connect(T.inputs===void 0?T:T.inputs[0]),b.connect(A.inputs===void 0?A:A.inputs[0]),T.connect(v.gain),A.connect(D.gain),v.connect(E,0,0),D.connect(E,0,1)},disconnectGraph(){m.disconnect(v),m.disconnect(w.inputs===void 0?w:w.inputs[0]),m.disconnect(D),w.disconnect(b),b.disconnect(T.inputs===void 0?T:T.inputs[0]),b.disconnect(A.inputs===void 0?A:A.inputs[0]),T.disconnect(v.gain),A.disconnect(D.gain),v.disconnect(E,0,0),D.disconnect(E,0,1)}}},h=(p,m,b,E)=>{const x=new Float32Array(16385),S=new Float32Array(16385),v=new Float32Array(16385),T=new Float32Array(16385),w=Math.floor(16385/2);for(let _=0;_<16385;_+=1)if(_>w){const q=(_-w)/(16384-w)*c;x[_]=Math.cos(q),S[_]=Math.sin(q),v[_]=0,T[_]=1}else{const q=_/(16384-w)*c;x[_]=1,S[_]=0,v[_]=Math.cos(q),T[_]=Math.sin(q)}const D=e(p,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),A=n(p,{...l,gain:0}),y=i(p,{...u,curve:x}),O=n(p,{...l,gain:0}),L=i(p,{...u,curve:S}),P=i(p,{...u,curve:a}),U=n(p,{...l,gain:0}),X=i(p,{...u,curve:v}),K=n(p,{...l,gain:0}),Y=i(p,{...u,curve:T});return{connectGraph(){m.connect(D),m.connect(P.inputs===void 0?P:P.inputs[0]),D.connect(A,0),D.connect(O,0),D.connect(U,1),D.connect(K,1),P.connect(b),b.connect(y.inputs===void 0?y:y.inputs[0]),b.connect(L.inputs===void 0?L:L.inputs[0]),b.connect(X.inputs===void 0?X:X.inputs[0]),b.connect(Y.inputs===void 0?Y:Y.inputs[0]),y.connect(A.gain),L.connect(O.gain),X.connect(U.gain),Y.connect(K.gain),A.connect(E,0,0),U.connect(E,0,0),O.connect(E,0,1),K.connect(E,0,1)},disconnectGraph(){m.disconnect(D),m.disconnect(P.inputs===void 0?P:P.inputs[0]),D.disconnect(A,0),D.disconnect(O,0),D.disconnect(U,1),D.disconnect(K,1),P.disconnect(b),b.disconnect(y.inputs===void 0?y:y.inputs[0]),b.disconnect(L.inputs===void 0?L:L.inputs[0]),b.disconnect(X.inputs===void 0?X:X.inputs[0]),b.disconnect(Y.inputs===void 0?Y:Y.inputs[0]),y.disconnect(A.gain),L.disconnect(O.gain),X.disconnect(U.gain),Y.disconnect(K.gain),A.disconnect(E,0,0),U.disconnect(E,0,0),O.disconnect(E,0,1),K.disconnect(E,0,1)}}},f=(p,m,b,E,x)=>{if(m===1)return d(p,b,E,x);if(m===2)return h(p,b,E,x);throw s()};return(p,{channelCount:m,channelCountMode:b,pan:E,...x})=>{if(b==="max")throw s();const S=t(p,{...x,channelCount:1,channelCountMode:b,numberOfInputs:2}),v=n(p,{...x,channelCount:m,channelCountMode:b,gain:1}),T=n(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:E});let{connectGraph:w,disconnectGraph:D}=f(p,m,v,T,S);Object.defineProperty(T.gain,"defaultValue",{get:()=>0}),Object.defineProperty(T.gain,"maxValue",{get:()=>1}),Object.defineProperty(T.gain,"minValue",{get:()=>-1});const A={get bufferSize(){},get channelCount(){return v.channelCount},set channelCount(P){v.channelCount!==P&&(y&&D(),{connectGraph:w,disconnectGraph:D}=f(p,P,v,T,S),y&&w()),v.channelCount=P},get channelCountMode(){return v.channelCountMode},set channelCountMode(P){if(P==="clamped-max"||P==="max")throw s();v.channelCountMode=P},get channelInterpretation(){return v.channelInterpretation},set channelInterpretation(P){v.channelInterpretation=P},get context(){return v.context},get inputs(){return[v]},get numberOfInputs(){return v.numberOfInputs},get numberOfOutputs(){return v.numberOfOutputs},get pan(){return T.gain},addEventListener(...P){return v.addEventListener(P[0],P[1],P[2])},dispatchEvent(...P){return v.dispatchEvent(P[0])},removeEventListener(...P){return v.removeEventListener(P[0],P[1],P[2])}};let y=!1;const O=()=>{w(),y=!0},L=()=>{D(),y=!1};return r(nl(A,S),O,L)}},H7=(t,e,n,i,s,r,o)=>(a,c)=>{const l=a.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&a.createGain().gain.automationRate===void 0)return n(a,c);In(l,c);const u=c.curve===null||c.curve instanceof Float32Array?c.curve:new Float32Array(c.curve);if(u!==null&&u.length<2)throw e();sn(l,{curve:u},"curve"),sn(l,c,"oversample");let d=null,h=!1;return o(l,"curve",m=>()=>m.call(l),m=>b=>(m.call(l,b),h&&(i(b)&&d===null?d=t(a,l):!i(b)&&d!==null&&(d(),d=null)),b)),s(l,()=>{h=!0,i(l.curve)&&(d=t(a,l))},()=>{h=!1,d!==null&&(d(),d=null)})},X7=(t,e,n,i,s)=>(r,{curve:o,oversample:a,...c})=>{const l=r.createWaveShaper(),u=r.createWaveShaper();In(l,c),In(u,c);const d=n(r,{...c,gain:1}),h=n(r,{...c,gain:-1}),f=n(r,{...c,gain:1}),p=n(r,{...c,gain:-1});let m=null,b=!1,E=null;const x={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(T){d.channelCount=T,h.channelCount=T,l.channelCount=T,f.channelCount=T,u.channelCount=T,p.channelCount=T},get channelCountMode(){return l.channelCountMode},set channelCountMode(T){d.channelCountMode=T,h.channelCountMode=T,l.channelCountMode=T,f.channelCountMode=T,u.channelCountMode=T,p.channelCountMode=T},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(T){d.channelInterpretation=T,h.channelInterpretation=T,l.channelInterpretation=T,f.channelInterpretation=T,u.channelInterpretation=T,p.channelInterpretation=T},get context(){return l.context},get curve(){return E},set curve(T){if(T!==null&&T.length<2)throw e();if(T===null)l.curve=T,u.curve=T;else{const w=T.length,D=new Float32Array(w+2-w%2),A=new Float32Array(w+2-w%2);D[0]=T[0],A[0]=-T[w-1];const y=Math.ceil((w+1)/2),O=(w+1)/2-1;for(let L=1;L<y;L+=1){const P=L/y*O,U=Math.floor(P),X=Math.ceil(P);D[L]=U===X?T[U]:(1-(P-U))*T[U]+(1-(X-P))*T[X],A[L]=U===X?-T[w-1-U]:-((1-(P-U))*T[w-1-U])-(1-(X-P))*T[w-1-X]}D[y]=w%2===1?T[y-1]:(T[y-2]+T[y-1])/2,l.curve=D,u.curve=A}E=T,b&&(i(E)&&m===null?m=t(r,d):m!==null&&(m(),m=null))},get inputs(){return[d]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get oversample(){return l.oversample},set oversample(T){l.oversample=T,u.oversample=T},addEventListener(...T){return d.addEventListener(T[0],T[1],T[2])},dispatchEvent(...T){return d.dispatchEvent(T[0])},removeEventListener(...T){return d.removeEventListener(T[0],T[1],T[2])}};o!==null&&(x.curve=o instanceof Float32Array?o:new Float32Array(o)),a!==x.oversample&&(x.oversample=a);const S=()=>{d.connect(l).connect(f),d.connect(h).connect(u).connect(p).connect(f),b=!0,i(E)&&(m=t(r,d))},v=()=>{d.disconnect(l),l.disconnect(f),d.disconnect(h),h.disconnect(u),u.disconnect(p),p.disconnect(f),b=!1,m!==null&&(m(),m=null)};return s(nl(x,f),S,v)},gi=()=>new DOMException("","NotSupportedError"),j7={numberOfChannels:1},q7=(t,e,n,i,s)=>class extends t{constructor(o,a,c){let l;if(typeof o=="number"&&a!==void 0&&c!==void 0)l={length:a,numberOfChannels:o,sampleRate:c};else if(typeof o=="object")l=o;else throw new Error("The given parameters are not valid.");const{length:u,numberOfChannels:d,sampleRate:h}={...j7,...l},f=i(d,u,h);e(mu,()=>mu(f))||f.addEventListener("statechange",(()=>{let p=0;const m=b=>{this._state==="running"&&(p>0?(f.removeEventListener("statechange",m),b.stopImmediatePropagation(),this._waitForThePromiseToSettle(b)):p+=1)};return m})()),super(f,d),this._length=u,this._nativeOfflineAudioContext=f,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(n()):(this._state="running",s(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,FN(this)}))}_waitForThePromiseToSettle(o){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(o):setTimeout(()=>this._waitForThePromiseToSettle(o))}},z7={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},Y7=(t,e,n,i,s,r,o)=>class extends t{constructor(c,l){const u=s(c),d={...z7,...l},h=n(u,d),f=r(u),p=f?i():null,m=c.sampleRate/2;super(c,!1,h,p),this._detune=e(this,f,h.detune,153600,-153600),this._frequency=e(this,f,h.frequency,m,-m),this._nativeOscillatorNode=h,this._onended=null,this._oscillatorNodeRenderer=p,this._oscillatorNodeRenderer!==null&&d.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=d.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?o(this,c):null;this._nativeOscillatorNode.onended=l;const u=this._nativeOscillatorNode.onended;this._onended=u!==null&&u===l?c:u}get type(){return this._nativeOscillatorNode.type}set type(c){this._nativeOscillatorNode.type=c,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(c){this._nativeOscillatorNode.setPeriodicWave(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=c)}start(c=0){if(this._nativeOscillatorNode.start(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=c),this.context.state!=="closed"){Vc(this);const l=()=>{this._nativeOscillatorNode.removeEventListener("ended",l),Ir(this)&&Uu(this)};this._nativeOscillatorNode.addEventListener("ended",l)}}stop(c=0){this._nativeOscillatorNode.stop(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=c)}},J7=(t,e,n,i,s)=>()=>{const r=new WeakMap;let o=null,a=null,c=null;const l=async(u,d)=>{let h=n(u);const f=$n(h,d);if(!f){const p={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,detune:h.detune.value,frequency:h.frequency.value,periodicWave:o===null?void 0:o,type:h.type};h=e(d,p),a!==null&&h.start(a),c!==null&&h.stop(c)}return r.set(d,h),f?(await t(d,u.detune,h.detune),await t(d,u.frequency,h.frequency)):(await i(d,u.detune,h.detune),await i(d,u.frequency,h.frequency)),await s(u,d,h),h};return{set periodicWave(u){o=u},set start(u){a=u},set stop(u){c=u},render(u,d){const h=r.get(d);return h!==void 0?Promise.resolve(h):l(u,d)}}},Z7={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},K7=(t,e,n,i,s,r,o)=>class extends t{constructor(c,l){const u=s(c),d={...Z7,...l},h=n(u,d),f=r(u),p=f?i():null;super(c,!1,h,p),this._nativePannerNode=h,this._orientationX=e(this,f,h.orientationX,ui,Ti),this._orientationY=e(this,f,h.orientationY,ui,Ti),this._orientationZ=e(this,f,h.orientationZ,ui,Ti),this._positionX=e(this,f,h.positionX,ui,Ti),this._positionY=e(this,f,h.positionY,ui,Ti),this._positionZ=e(this,f,h.positionZ,ui,Ti),o(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(c){this._nativePannerNode.coneInnerAngle=c}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(c){this._nativePannerNode.coneOuterAngle=c}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(c){this._nativePannerNode.coneOuterGain=c}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(c){this._nativePannerNode.distanceModel=c}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(c){this._nativePannerNode.maxDistance=c}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(c){this._nativePannerNode.panningModel=c}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(c){this._nativePannerNode.refDistance=c}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(c){this._nativePannerNode.rolloffFactor=c}},Q7=(t,e,n,i,s,r,o,a,c,l)=>()=>{const u=new WeakMap;let d=null;const h=async(f,p)=>{let m=null,b=r(f);const E={channelCount:b.channelCount,channelCountMode:b.channelCountMode,channelInterpretation:b.channelInterpretation},x={...E,coneInnerAngle:b.coneInnerAngle,coneOuterAngle:b.coneOuterAngle,coneOuterGain:b.coneOuterGain,distanceModel:b.distanceModel,maxDistance:b.maxDistance,panningModel:b.panningModel,refDistance:b.refDistance,rolloffFactor:b.rolloffFactor},S=$n(b,p);if("bufferSize"in b)m=i(p,{...E,gain:1});else if(!S){const v={...x,orientationX:b.orientationX.value,orientationY:b.orientationY.value,orientationZ:b.orientationZ.value,positionX:b.positionX.value,positionY:b.positionY.value,positionZ:b.positionZ.value};b=s(p,v)}if(u.set(p,m===null?b:m),m!==null){if(d===null){if(o===null)throw new Error("Missing the native OfflineAudioContext constructor.");const L=new o(6,f.context.length,p.sampleRate),P=e(L,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});P.connect(L.destination),d=(async()=>{const U=await Promise.all([f.orientationX,f.orientationY,f.orientationZ,f.positionX,f.positionY,f.positionZ].map(async(X,K)=>{const Y=n(L,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:K===0?1:0});return await a(L,X,Y.offset),Y}));for(let X=0;X<6;X+=1)U[X].connect(P,0,X),U[X].start(0);return l(L)})()}const v=await d,T=i(p,{...E,gain:1});await c(f,p,T);const w=[];for(let L=0;L<v.numberOfChannels;L+=1)w.push(v.getChannelData(L));let D=[w[0][0],w[1][0],w[2][0]],A=[w[3][0],w[4][0],w[5][0]],y=i(p,{...E,gain:1}),O=s(p,{...x,orientationX:D[0],orientationY:D[1],orientationZ:D[2],positionX:A[0],positionY:A[1],positionZ:A[2]});T.connect(y).connect(O.inputs[0]),O.connect(m);for(let L=128;L<v.length;L+=128){const P=[w[0][L],w[1][L],w[2][L]],U=[w[3][L],w[4][L],w[5][L]];if(P.some((X,K)=>X!==D[K])||U.some((X,K)=>X!==A[K])){D=P,A=U;const X=L/p.sampleRate;y.gain.setValueAtTime(0,X),y=i(p,{...E,gain:0}),O=s(p,{...x,orientationX:D[0],orientationY:D[1],orientationZ:D[2],positionX:A[0],positionY:A[1],positionZ:A[2]}),y.gain.setValueAtTime(1,X),T.connect(y).connect(O.inputs[0]),O.connect(m)}}return m}return S?(await t(p,f.orientationX,b.orientationX),await t(p,f.orientationY,b.orientationY),await t(p,f.orientationZ,b.orientationZ),await t(p,f.positionX,b.positionX),await t(p,f.positionY,b.positionY),await t(p,f.positionZ,b.positionZ)):(await a(p,f.orientationX,b.orientationX),await a(p,f.orientationY,b.orientationY),await a(p,f.orientationZ,b.orientationZ),await a(p,f.positionX,b.positionX),await a(p,f.positionY,b.positionY),await a(p,f.positionZ,b.positionZ)),tl(b)?await c(f,p,b.inputs[0]):await c(f,p,b),b};return{render(f,p){const m=u.get(p);return m!==void 0?Promise.resolve(m):h(f,p)}}},G7={disableNormalization:!1},_7=(t,e,n,i)=>class JN{constructor(r,o){const a=e(r),c=i({...G7,...o}),l=t(a,c);return n.add(l),l}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===JN.prototype||n.has(r)}},$7=(t,e)=>(n,i,s)=>(t(i).replay(s),e(i,n,s)),e9=(t,e,n)=>async(i,s,r)=>{const o=t(i);await Promise.all(o.activeInputs.map((a,c)=>Array.from(a).map(async([l,u])=>{const h=await e(l).render(l,s),f=i.context.destination;!n(l)&&(i!==f||!n(i))&&h.connect(r,u,c)})).reduce((a,c)=>[...a,...c],[]))},t9=(t,e,n)=>async(i,s,r)=>{const o=e(i);await Promise.all(Array.from(o.activeInputs).map(async([a,c])=>{const u=await t(a).render(a,s);n(a)||u.connect(r,c)}))},n9=(t,e,n,i)=>s=>t(mu,()=>mu(s))?Promise.resolve(t(i,i)).then(r=>{if(!r){const o=n(s,512,0,1);s.oncomplete=()=>{o.onaudioprocess=null,o.disconnect()},o.onaudioprocess=()=>s.currentTime,o.connect(s.destination)}return s.startRendering()}):new Promise(r=>{const o=e(s,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});s.oncomplete=a=>{o.disconnect(),r(a.renderedBuffer)},o.connect(s.destination),s.startRendering()}),i9=t=>(e,n)=>{t.set(e,n)},s9=t=>(e,n)=>t.set(e,n),r9=(t,e,n,i,s,r,o,a)=>(c,l)=>n(c).render(c,l).then(()=>Promise.all(Array.from(i(l)).map(u=>n(u).render(u,l)))).then(()=>s(l)).then(u=>(typeof u.copyFromChannel!="function"?(o(u),A0(u)):e(r,()=>r(u))||a(u),t.add(u),u)),o9={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},a9=(t,e,n,i,s,r)=>class extends t{constructor(a,c){const l=s(a),u={...o9,...c},d=n(l,u),h=r(l),f=h?i():null;super(a,!1,d,f),this._pan=e(this,h,d.pan)}get pan(){return this._pan}},c9=(t,e,n,i,s)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=n(a);const u=$n(l,c);if(!u){const d={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,pan:l.pan.value};l=e(c,d)}return r.set(c,l),u?await t(c,a.pan,l.pan):await i(c,a.pan,l.pan),tl(l)?await s(a,c,l.inputs[0]):await s(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},l9=t=>()=>{if(t===null)return!1;try{new t({length:1,sampleRate:44100})}catch{return!1}return!0},u9=(t,e)=>async()=>{if(t===null)return!0;if(e===null)return!1;const n=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),i=new e(1,128,44100),s=URL.createObjectURL(n);let r=!1,o=!1;try{await i.audioWorklet.addModule(s);const a=new t(i,"a",{numberOfOutputs:0}),c=i.createOscillator();a.port.onmessage=()=>r=!0,a.onprocessorerror=()=>o=!0,c.connect(a),c.start(0),await i.startRendering(),await new Promise(l=>setTimeout(l))}catch{}finally{URL.revokeObjectURL(s)}return r&&!o},d9=(t,e)=>()=>{if(e===null)return Promise.resolve(!1);const n=new e(1,1,44100),i=t(n,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(s=>{n.oncomplete=()=>{i.disconnect(),s(n.currentTime!==0)},n.startRendering()})},h9=()=>new DOMException("","UnknownError"),f9={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},p9=(t,e,n,i,s,r,o)=>class extends t{constructor(c,l){const u=s(c),d={...f9,...l},h=n(u,d),p=r(u)?i():null;super(c,!0,h,p),this._isCurveNullified=!1,this._nativeWaveShaperNode=h,o(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(c){if(c===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(c.length<2)throw e();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=c}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(c){this._nativeWaveShaperNode.oversample=c}},m9=(t,e,n)=>()=>{const i=new WeakMap,s=async(r,o)=>{let a=e(r);if(!$n(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,curve:a.curve,oversample:a.oversample};a=t(o,l)}return i.set(o,a),tl(a)?await n(r,o,a.inputs[0]):await n(r,o,a),a};return{render(r,o){const a=i.get(o);return a!==void 0?Promise.resolve(a):s(r,o)}}},g9=()=>typeof window>"u"?null:window,E9=(t,e)=>n=>{n.copyFromChannel=(i,s,r=0)=>{const o=t(r),a=t(s);if(a>=n.numberOfChannels)throw e();const c=n.length,l=n.getChannelData(a),u=i.length;for(let d=o<0?-o:0;d+o<c&&d<u;d+=1)i[d]=l[d+o]},n.copyToChannel=(i,s,r=0)=>{const o=t(r),a=t(s);if(a>=n.numberOfChannels)throw e();const c=n.length,l=n.getChannelData(a),u=i.length;for(let d=o<0?-o:0;d+o<c&&d<u;d+=1)l[d+o]=i[d]}},v9=t=>e=>{e.copyFromChannel=(n=>(i,s,r=0)=>{const o=t(r),a=t(s);if(o<e.length)return n.call(e,i,a,o)})(e.copyFromChannel),e.copyToChannel=(n=>(i,s,r=0)=>{const o=t(r),a=t(s);if(o<e.length)return n.call(e,i,a,o)})(e.copyToChannel)},b9=t=>(e,n)=>{const i=n.createBuffer(1,1,44100);e.buffer===null&&(e.buffer=i),t(e,"buffer",s=>()=>{const r=s.call(e);return r===i?null:r},s=>r=>s.call(e,r===null?i:r))},S9=(t,e)=>(n,i)=>{i.channelCount=1,i.channelCountMode="explicit",Object.defineProperty(i,"channelCount",{get:()=>1,set:()=>{throw t()}}),Object.defineProperty(i,"channelCountMode",{get:()=>"explicit",set:()=>{throw t()}});const s=n.createBufferSource();e(i,()=>{const a=i.numberOfInputs;for(let c=0;c<a;c+=1)s.connect(i,0,c)},()=>s.disconnect(i))},ZN=(t,e,n)=>t.copyFromChannel===void 0?t.getChannelData(n)[0]:(t.copyFromChannel(e,n),e[0]),KN=t=>{if(t===null)return!1;const e=t.length;return e%2!==0?t[Math.floor(e/2)]!==0:t[e/2-1]+t[e/2]!==0},ju=(t,e,n,i)=>{let s=t;for(;!s.hasOwnProperty(e);)s=Object.getPrototypeOf(s);const{get:r,set:o}=Object.getOwnPropertyDescriptor(s,e);Object.defineProperty(t,e,{get:n(r),set:i(o)})},x9=t=>({...t,outputChannelCount:t.outputChannelCount!==void 0?t.outputChannelCount:t.numberOfInputs===1&&t.numberOfOutputs===1?[t.channelCount]:Array.from({length:t.numberOfOutputs},()=>1)}),T9=t=>({...t,channelCount:t.numberOfOutputs}),C9=t=>{const{imag:e,real:n}=t;return e===void 0?n===void 0?{...t,imag:[0,0],real:[0,0]}:{...t,imag:Array.from(n,()=>0),real:n}:n===void 0?{...t,imag:e,real:Array.from(e,()=>0)}:{...t,imag:e,real:n}},QN=(t,e,n)=>{try{t.setValueAtTime(e,n)}catch(i){if(i.code!==9)throw i;QN(t,e,n+1e-7)}},w9=t=>{const e=t.createBufferSource();e.start();try{e.start()}catch{return!0}return!1},A9=t=>{const e=t.createBufferSource(),n=t.createBuffer(1,1,44100);e.buffer=n;try{e.start(0,1)}catch{return!1}return!0},N9=t=>{const e=t.createBufferSource();e.start();try{e.stop()}catch{return!1}return!0},O0=t=>{const e=t.createOscillator();try{e.start(-1)}catch(n){return n instanceof RangeError}return!1},GN=t=>{const e=t.createBuffer(1,1,44100),n=t.createBufferSource();n.buffer=e,n.start(),n.stop();try{return n.stop(),!0}catch{return!1}},P0=t=>{const e=t.createOscillator();try{e.stop(-1)}catch(n){return n instanceof RangeError}return!1},y9=t=>{const{port1:e,port2:n}=new MessageChannel;try{e.postMessage(t)}finally{e.close(),n.close()}},k9=t=>{t.start=(e=>(n=0,i=0,s)=>{const r=t.buffer,o=r===null?i:Math.min(r.duration,i);r!==null&&o>r.duration-.5/t.context.sampleRate?e.call(t,n,0,0):e.call(t,n,o,s)})(t.start)},_N=(t,e)=>{const n=e.createGain();t.connect(n);const i=(s=>()=>{s.call(t,n),t.removeEventListener("ended",i)})(t.disconnect);t.addEventListener("ended",i),nl(t,n),t.stop=(s=>{let r=!1;return(o=0)=>{if(r)try{s.call(t,o)}catch{n.gain.setValueAtTime(0,o)}else s.call(t,o),r=!0}})(t.stop)},il=(t,e)=>n=>{const i={value:t};return Object.defineProperties(n,{currentTarget:i,target:i}),typeof e=="function"?e.call(t,n):e.handleEvent.call(t,n)},D9=KF(Da),O9=t4(Da),P9=f8(Kf),$N=new WeakMap,I9=P8($N),Ls=j4(new Map,new WeakMap),sr=g9(),ey=a7(Ls,or),I0=O8(fi),Hn=e9(fi,I0,Ta),R9=o4(ey,en,Hn),Gt=L8(Zf),jr=L7(sr),qt=G8(jr),ty=new WeakMap,ny=C8(il),qu=d7(sr),R0=J8(qu),L0=Z8(sr),iy=K8(sr),gu=f7(sr),Sn=P4(QF(ON),e4(D9,O9,Lh,P9,Mh,fi,I9,Fu,en,Da,Ir,Ta,ih),Ls,X8(Bg,Mh,fi,en,pu,Ir),or,Qf,gi,l8(Lh,Bg,fi,en,pu,Gt,Ir,qt),g8(ty,fi,Is),ny,Gt,R0,L0,iy,qt,gu),L9=r4(Sn,R9,or,ey,Gt,qt),M0=new WeakSet,xx=c7(sr),sy=n8(new Uint32Array(1)),B0=E9(sy,or),F0=v9(sy),ry=c4(M0,Ls,gi,xx,jr,l9(xx),B0,F0),Gf=n4(Ni),oy=t9(I0,Vu,Ta),ar=Q4(oy),sl=u7(Gf,Ls,w9,A9,N9,O0,GN,P0,k9,b9(ju),_N),cr=$7(I8(Vu),oy),M9=d4(ar,sl,en,cr,Hn),Ms=I4(GF(PN),ty,w0,R4,jF,qF,zF,YF,JF,Rg,kN,qu,QN),B9=u4(Sn,M9,Ms,Bn,sl,Gt,qt,il),F9=S4(Sn,x4,or,Bn,h7(Ni,ju),Gt,qt,Hn),U9=X4(ar,zN,en,cr,Hn),Oa=s9($N),V9=H4(Sn,Ms,U9,Qf,zN,Gt,qt,Oa),Mo=r7(Da,L0),W9=S9(Bn,Mo),Bo=S7(qu,W9),H9=Y4(Bo,en,Hn),X9=z4(Sn,H9,Bo,Gt,qt),j9=K4(Hu,en,Hn),q9=Z4(Sn,j9,Hu,Gt,qt,T9),z9=C7(Gf,sl,Ni,Mo),rl=T7(Gf,Ls,z9,O0,P0),Y9=t8(ar,rl,en,cr,Hn),J9=e8(Sn,Ms,Y9,rl,Gt,qt,il),ay=w7(gi,ju),Z9=r8(ay,en,Hn),K9=s8(Sn,Z9,ay,Gt,qt,Oa),Q9=h8(ar,YN,en,cr,Hn),G9=d8(Sn,Ms,Q9,YN,Gt,qt,Oa),cy=A7(gi),_9=S8(ar,cy,en,cr,Hn),$9=b8(Sn,Ms,_9,cy,gi,Gt,qt,Oa),eU=k8(ar,Ni,en,cr,Hn),tU=y8(Sn,Ms,eU,Ni,Gt,qt),nU=D7(Qf,Bn,Xu,gi),_f=n9(Ls,Ni,Xu,d9(Ni,jr)),iU=H8(sl,en,jr,Hn,_f),sU=N7(nU),rU=V8(Sn,sU,iU,Gt,qt,Oa),oU=T4(Ms,Bo,rl,Xu,gi,ZN,qt,ju),ly=new WeakMap,aU=s7(F9,oU,ny,qt,ly,il),uy=M7(Gf,Ls,O0,GN,P0,_N),cU=J7(ar,uy,en,cr,Hn),lU=Y7(Sn,Ms,uy,cU,Gt,qt,il),dy=_4(sl),uU=X7(dy,Bn,Ni,KN,Mo),$f=H7(dy,Bn,uU,KN,Mo,qu,ju),dU=F7(Lh,Bn,Bo,Ni,Xu,$f,gi,Mh,ZN,Mo),hy=B7(dU),hU=Q7(ar,Bo,rl,Ni,hy,en,jr,cr,Hn,_f),fU=K7(Sn,Ms,hy,hU,Gt,qt,Oa),pU=U7(or),mU=_7(pU,Gt,new WeakSet,C9),gU=W7(Bo,Hu,Ni,$f,gi,Mo),fy=V7(gU,gi),EU=c9(ar,fy,en,cr,Hn),vU=a9(Sn,Ms,fy,EU,Gt,qt),bU=m9($f,en,Hn),SU=p9(Sn,Bn,$f,bU,Gt,qt,Oa),py=_8(sr),U0=w8(sr),my=new WeakMap,xU=M8(my,jr),TU=py?$F(Ls,gi,T8(sr),U0,A8(ZF),Gt,xU,qt,gu,new WeakMap,new WeakMap,u9(gu,jr),sr):void 0,CU=Q8(R0,qt),wU=c8(M0,Ls,a8,x8,new WeakSet,Gt,CU,Ih,mu,B0,F0),gy=V4(TU,L9,ry,B9,V9,X9,q9,J9,K9,wU,G9,$9,tU,rU,aU,lU,fU,mU,vU,SU),AU=$8(Sn,O7,Gt,qt),NU=t7(Sn,P7,Gt,qt),yU=n7(Sn,I7,Gt,qt),kU=R7(Bn,qt),DU=i7(Sn,kU,Gt),OU=b4(gy,Bn,gi,h9,AU,NU,yU,DU,qu),V0=B8(ly),PU=i4(V0),Ey=G4(or),IU=p8(V0),vy=E8(or),by=new WeakMap,RU=D8(by,Is),LU=b7(Ey,or,Bn,Bo,Hu,rl,Ni,Xu,gi,vy,U0,RU,Mo),MU=m7(Bn,LU,Ni,gi,Mo),BU=U4(ar,Ey,sl,Bo,Hu,rl,Ni,IU,vy,U0,en,gu,jr,cr,Hn,_f),FU=R8(my),UU=i9(by),Tx=py?M4(PU,Sn,Ms,BU,MU,fi,FU,Gt,qt,gu,x9,UU,y9,il):void 0,VU=o8(gi,jr),WU=r9(M0,Ls,I0,V0,_f,Ih,B0,F0),HU=q7(gy,Ls,Bn,VU,WU),XU=j8(Zf,R0),jU=q8(C0,L0),qU=z8(w0,iy),zU=Y8(Zf,qt);function Fi(t){return t===void 0}function ht(t){return t!==void 0}function YU(t){return typeof t=="function"}function Wr(t){return typeof t=="number"}function So(t){return Object.prototype.toString.call(t)==="[object Object]"&&t.constructor===Object}function Sy(t){return typeof t=="boolean"}function ss(t){return Array.isArray(t)}function Hr(t){return typeof t=="string"}function Fd(t){return Hr(t)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(t)}function ct(t,e){if(!t)throw new Error(e)}function No(t,e,n=1/0){if(!(e<=t&&t<=n))throw new RangeError(`Value must be within [${e}, ${n}], got: ${t}`)}function xy(t){!t.isOffline&&t.state!=="running"&&W0('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let Ty=!1,Cx=!1;function wx(t){Ty=t}function JU(t){Fi(t)&&Ty&&!Cx&&(Cx=!0,W0("Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing"))}let Cy=console;function ZU(...t){Cy.log(...t)}function W0(...t){Cy.warn(...t)}function KU(t){return new OU(t)}function QU(t,e,n){return new HU(t,e,n)}const Ri=typeof self=="object"?self:null,GU=Ri&&(Ri.hasOwnProperty("AudioContext")||Ri.hasOwnProperty("webkitAudioContext"));function _U(t,e,n){return ct(ht(Tx),"AudioWorkletNode only works in a secure context (https or localhost)"),new(t instanceof(Ri==null?void 0:Ri.BaseAudioContext)?Ri==null?void 0:Ri.AudioWorkletNode:Tx)(t,e,n)}function Bs(t,e,n,i){var s=arguments.length,r=s<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,n):i,o;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(t,e,n,i);else for(var a=t.length-1;a>=0;a--)(o=t[a])&&(r=(s<3?o(r):s>3?o(e,n,r):o(e,n))||r);return s>3&&r&&Object.defineProperty(e,n,r),r}function Nn(t,e,n,i){function s(r){return r instanceof n?r:new n(function(o){o(r)})}return new(n||(n=Promise))(function(r,o){function a(u){try{l(i.next(u))}catch(d){o(d)}}function c(u){try{l(i.throw(u))}catch(d){o(d)}}function l(u){u.done?r(u.value):s(u.value).then(a,c)}l((i=i.apply(t,e||[])).next())})}class $U{constructor(e,n,i,s){this._callback=e,this._type=n,this._minimumUpdateInterval=Math.max(128/(s||44100),.001),this.updateInterval=i,this._createClock()}_createWorker(){const e=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),n=URL.createObjectURL(e),i=new Worker(n);i.onmessage=this._callback.bind(this),this._worker=i}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&clearTimeout(this._timeout),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(e){var n;this._updateInterval=Math.max(e,this._minimumUpdateInterval),this._type==="worker"&&((n=this._worker)===null||n===void 0||n.postMessage(this._updateInterval*1e3))}get type(){return this._type}set type(e){this._disposeClock(),this._type=e,this._createClock()}dispose(){this._disposeClock()}}function Ca(t){return qU(t)}function xo(t){return jU(t)}function sh(t){return zU(t)}function ic(t){return XU(t)}function eV(t){return t instanceof ry}function tV(t,e){return t==="value"||Ca(e)||xo(e)||eV(e)}function Ec(t,...e){if(!e.length)return t;const n=e.shift();if(So(t)&&So(n))for(const i in n)tV(i,n[i])?t[i]=n[i]:So(n[i])?(t[i]||Object.assign(t,{[i]:{}}),Ec(t[i],n[i])):Object.assign(t,{[i]:n[i]});return Ec(t,...e)}function nV(t,e){return t.length===e.length&&t.every((n,i)=>e[i]===n)}function tt(t,e,n=[],i){const s={},r=Array.from(e);if(So(r[0])&&i&&!Reflect.has(r[0],i)&&(Object.keys(r[0]).some(a=>Reflect.has(t,a))||(Ec(s,{[i]:r[0]}),n.splice(n.indexOf(i),1),r.shift())),r.length===1&&So(r[0]))Ec(s,r[0]);else for(let o=0;o<n.length;o++)ht(r[o])&&(s[n[o]]=r[o]);return Ec(t,s)}function iV(t){return t.constructor.getDefaults()}function Gs(t,e){return Fi(t)?e:t}function Ax(t,e){return e.forEach(n=>{Reflect.has(t,n)&&delete t[n]}),t}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2024 Yotam Mann
 */class qr{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...e){(this.debug||Ri&&this.toString()===Ri.TONE_DEBUG_CLASS)&&ZU(this,...e)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}qr.version=yN;const H0=1e-6;function Wc(t,e){return t>e+H0}function Hg(t,e){return Wc(t,e)||Cs(t,e)}function Vh(t,e){return t+H0<e}function Cs(t,e){return Math.abs(t-e)<H0}function sV(t,e,n){return Math.max(Math.min(t,n),e)}class rs extends qr{constructor(){super(),this.name="Timeline",this._timeline=[];const e=tt(rs.getDefaults(),arguments,["memory"]);this.memory=e.memory,this.increasing=e.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(e){if(ct(Reflect.has(e,"time"),"Timeline: events must have a time attribute"),e.time=e.time.valueOf(),this.increasing&&this.length){const n=this._timeline[this.length-1];ct(Hg(e.time,n.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(e)}else{const n=this._search(e.time);this._timeline.splice(n+1,0,e)}if(this.length>this.memory){const n=this.length-this.memory;this._timeline.splice(0,n)}return this}remove(e){const n=this._timeline.indexOf(e);return n!==-1&&this._timeline.splice(n,1),this}get(e,n="time"){const i=this._search(e,n);return i!==-1?this._timeline[i]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(e,n="time"){const i=this._search(e,n);return i+1<this._timeline.length?this._timeline[i+1]:null}getBefore(e){const n=this._timeline.length;if(n>0&&this._timeline[n-1].time<e)return this._timeline[n-1];const i=this._search(e);return i-1>=0?this._timeline[i-1]:null}cancel(e){if(this._timeline.length>1){let n=this._search(e);if(n>=0)if(Cs(this._timeline[n].time,e)){for(let i=n;i>=0&&Cs(this._timeline[i].time,e);i--)n=i;this._timeline=this._timeline.slice(0,n)}else this._timeline=this._timeline.slice(0,n+1);else this._timeline=[]}else this._timeline.length===1&&Hg(this._timeline[0].time,e)&&(this._timeline=[]);return this}cancelBefore(e){const n=this._search(e);return n>=0&&(this._timeline=this._timeline.slice(n+1)),this}previousEvent(e){const n=this._timeline.indexOf(e);return n>0?this._timeline[n-1]:null}_search(e,n="time"){if(this._timeline.length===0)return-1;let i=0;const s=this._timeline.length;let r=s;if(s>0&&this._timeline[s-1][n]<=e)return s-1;for(;i<r;){let o=Math.floor(i+(r-i)/2);const a=this._timeline[o],c=this._timeline[o+1];if(Cs(a[n],e)){for(let l=o;l<this._timeline.length;l++){const u=this._timeline[l];if(Cs(u[n],e))o=l;else break}return o}else{if(Vh(a[n],e)&&Wc(c[n],e))return o;Wc(a[n],e)?r=o:i=o+1}}return-1}_iterate(e,n=0,i=this._timeline.length-1){this._timeline.slice(n,i+1).forEach(e)}forEach(e){return this._iterate(e),this}forEachBefore(e,n){const i=this._search(e);return i!==-1&&this._iterate(n,0,i),this}forEachAfter(e,n){const i=this._search(e);return this._iterate(n,i+1),this}forEachBetween(e,n,i){let s=this._search(e),r=this._search(n);return s!==-1&&r!==-1?(this._timeline[s].time!==e&&(s+=1),this._timeline[r].time===n&&(r-=1),this._iterate(i,s,r)):s===-1&&this._iterate(i,0,r),this}forEachFrom(e,n){let i=this._search(e);for(;i>=0&&this._timeline[i].time>=e;)i--;return this._iterate(n,i+1),this}forEachAtTime(e,n){const i=this._search(e);if(i!==-1&&Cs(this._timeline[i].time,e)){let s=i;for(let r=i;r>=0&&Cs(this._timeline[r].time,e);r--)s=r;this._iterate(r=>{n(r)},s,i)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const wy=[];function ep(t){wy.push(t)}function rV(t){wy.forEach(e=>e(t))}const Ay=[];function tp(t){Ay.push(t)}function oV(t){Ay.forEach(e=>e(t))}class zu extends qr{constructor(){super(...arguments),this.name="Emitter"}on(e,n){return e.split(/\W+/).forEach(s=>{Fi(this._events)&&(this._events={}),this._events.hasOwnProperty(s)||(this._events[s]=[]),this._events[s].push(n)}),this}once(e,n){const i=(...s)=>{n(...s),this.off(e,i)};return this.on(e,i),this}off(e,n){return e.split(/\W+/).forEach(s=>{if(Fi(this._events)&&(this._events={}),this._events.hasOwnProperty(s))if(Fi(n))this._events[s]=[];else{const r=this._events[s];for(let o=r.length-1;o>=0;o--)r[o]===n&&r.splice(o,1)}}),this}emit(e,...n){if(this._events&&this._events.hasOwnProperty(e)){const i=this._events[e].slice(0);for(let s=0,r=i.length;s<r;s++)i[s].apply(this,n)}return this}static mixin(e){["on","once","off","emit"].forEach(n=>{const i=Object.getOwnPropertyDescriptor(zu.prototype,n);Object.defineProperty(e.prototype,n,i)})}dispose(){return super.dispose(),this._events=void 0,this}}class Ny extends zu{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Yu extends Ny{constructor(){var e,n;super(),this.name="Context",this._constants=new Map,this._timeouts=new rs,this._timeoutIds=0,this._initialized=!1,this._closeStarted=!1,this.isOffline=!1,this._workletPromise=null;const i=tt(Yu.getDefaults(),arguments,["context"]);i.context?(this._context=i.context,this._latencyHint=((e=arguments[0])===null||e===void 0?void 0:e.latencyHint)||""):(this._context=KU({latencyHint:i.latencyHint}),this._latencyHint=i.latencyHint),this._ticker=new $U(this.emit.bind(this,"tick"),i.clockSource,i.updateInterval,this._context.sampleRate),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this[!((n=arguments[0])===null||n===void 0)&&n.hasOwnProperty("updateInterval")?"_lookAhead":"lookAhead"]=i.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(rV(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(e,n,i){return this._context.createBuffer(e,n,i)}createChannelMerger(e){return this._context.createChannelMerger(e)}createChannelSplitter(e){return this._context.createChannelSplitter(e)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(e){return this._context.createDelay(e)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(e,n){return this._context.createIIRFilter(e,n)}createPanner(){return this._context.createPanner()}createPeriodicWave(e,n,i){return this._context.createPeriodicWave(e,n,i)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(e){return ct(ic(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(e)}createMediaElementSource(e){return ct(ic(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(e)}createMediaStreamDestination(){return ct(ic(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(e){return this._context.decodeAudioData(e)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(e){ct(!this._initialized,"The listener cannot be set after initialization."),this._listener=e}get transport(){return this.initialize(),this._transport}set transport(e){ct(!this._initialized,"The transport cannot be set after initialization."),this._transport=e}get draw(){return this.initialize(),this._draw}set draw(e){ct(!this._initialized,"Draw cannot be set after initialization."),this._draw=e}get destination(){return this.initialize(),this._destination}set destination(e){ct(!this._initialized,"The destination cannot be set after initialization."),this._destination=e}createAudioWorkletNode(e,n){return _U(this.rawContext,e,n)}addAudioWorkletModule(e){return Nn(this,void 0,void 0,function*(){ct(ht(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletPromise||(this._workletPromise=this.rawContext.audioWorklet.addModule(e)),yield this._workletPromise})}workletsAreReady(){return Nn(this,void 0,void 0,function*(){(yield this._workletPromise)?this._workletPromise:Promise.resolve()})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(e){this._ticker.updateInterval=e}get clockSource(){return this._ticker.type}set clockSource(e){this._ticker.type=e}get lookAhead(){return this._lookAhead}set lookAhead(e){this._lookAhead=e,this.updateInterval=e?e/2:.01}get latencyHint(){return this._latencyHint}get rawContext(){return this._context}now(){return this._context.currentTime+this._lookAhead}immediate(){return this._context.currentTime}resume(){return ic(this._context)?this._context.resume():Promise.resolve()}close(){return Nn(this,void 0,void 0,function*(){ic(this._context)&&this.state!=="closed"&&!this._closeStarted&&(this._closeStarted=!0,yield this._context.close()),this._initialized&&oV(this)})}getConstant(e){if(this._constants.has(e))return this._constants.get(e);{const n=this._context.createBuffer(1,128,this._context.sampleRate),i=n.getChannelData(0);for(let r=0;r<i.length;r++)i[r]=e;const s=this._context.createBufferSource();return s.channelCount=1,s.channelCountMode="explicit",s.buffer=n,s.loop=!0,s.start(0),this._constants.set(e,s),s}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(e=>this._constants[e].disconnect()),this.close(),this}_timeoutLoop(){const e=this.now();this._timeouts.forEachBefore(e,n=>{n.callback(),this._timeouts.remove(n)})}setTimeout(e,n){this._timeoutIds++;const i=this.now();return this._timeouts.add({callback:e,id:this._timeoutIds,time:i+n}),this._timeoutIds}clearTimeout(e){return this._timeouts.forEach(n=>{n.id===e&&this._timeouts.remove(n)}),this}clearInterval(e){return this.clearTimeout(e)}setInterval(e,n){const i=++this._timeoutIds,s=()=>{const r=this.now();this._timeouts.add({callback:()=>{e(),s()},id:i,time:r+n})};return s(),i}}class aV extends Ny{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(e,n,i){return{}}createChannelMerger(e){return{}}createChannelSplitter(e){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(e){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(e,n){return{}}createPanner(){return{}}createPeriodicWave(e,n,i){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(e){return{}}createMediaElementSource(e){return{}}createMediaStreamDestination(){return{}}decodeAudioData(e){return Promise.resolve({})}createAudioWorkletNode(e,n){return{}}get rawContext(){return{}}addAudioWorkletModule(e){return Nn(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(e,n){return 0}clearTimeout(e){return this}setInterval(e,n){return 0}clearInterval(e){return this}getConstant(e){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(e){}get destination(){return{}}set destination(e){}now(){return 0}immediate(){return 0}}function fn(t,e){ss(e)?e.forEach(n=>fn(t,n)):Object.defineProperty(t,e,{enumerable:!0,writable:!1})}function yy(t,e){ss(e)?e.forEach(n=>yy(t,n)):Object.defineProperty(t,e,{writable:!0})}const Wt=()=>{};class nn extends qr{constructor(){super(),this.name="ToneAudioBuffer",this.onload=Wt;const e=tt(nn.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=e.reverse,this.onload=e.onload,Hr(e.url)?this.load(e.url).catch(e.onerror):e.url&&this.set(e.url)}static getDefaults(){return{onerror:Wt,onload:Wt,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:Mi().sampleRate}set(e){return e instanceof nn?e.loaded?this._buffer=e.get():e.onload=()=>{this.set(e),this.onload(this)}:this._buffer=e,this._reversed&&this._reverse(),this}get(){return this._buffer}load(e){return Nn(this,void 0,void 0,function*(){const n=nn.load(e).then(i=>{this.set(i),this.onload(this)});nn.downloads.push(n);try{yield n}finally{const i=nn.downloads.indexOf(n);nn.downloads.splice(i,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(e){const n=ss(e)&&e[0].length>0,i=n?e.length:1,s=n?e[0].length:e.length,r=Mi(),o=r.createBuffer(i,s,r.sampleRate),a=!n&&i===1?[e]:e;for(let c=0;c<i;c++)o.copyToChannel(a[c],c);return this._buffer=o,this}toMono(e){if(Wr(e))this.fromArray(this.toArray(e));else{let n=new Float32Array(this.length);const i=this.numberOfChannels;for(let s=0;s<i;s++){const r=this.toArray(s);for(let o=0;o<r.length;o++)n[o]+=r[o]}n=n.map(s=>s/i),this.fromArray(n)}return this}toArray(e){if(Wr(e))return this.getChannelData(e);if(this.numberOfChannels===1)return this.toArray(0);{const n=[];for(let i=0;i<this.numberOfChannels;i++)n[i]=this.getChannelData(i);return n}}getChannelData(e){return this._buffer?this._buffer.getChannelData(e):new Float32Array(0)}slice(e,n=this.duration){ct(this.loaded,"Buffer is not loaded");const i=Math.floor(e*this.sampleRate),s=Math.floor(n*this.sampleRate);ct(i<s,"The start time must be less than the end time");const r=s-i,o=Mi().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let a=0;a<this.numberOfChannels;a++)o.copyToChannel(this.getChannelData(a).subarray(i,s),a);return new nn(o)}_reverse(){if(this.loaded)for(let e=0;e<this.numberOfChannels;e++)this.getChannelData(e).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(e){this._reversed!==e&&(this._reversed=e,this._reverse())}static fromArray(e){return new nn().fromArray(e)}static fromUrl(e){return Nn(this,void 0,void 0,function*(){return yield new nn().load(e)})}static load(e){return Nn(this,void 0,void 0,function*(){const n=nn.baseUrl===""||nn.baseUrl.endsWith("/")?nn.baseUrl:nn.baseUrl+"/",i=yield fetch(n+e);if(!i.ok)throw new Error(`could not load url: ${e}`);const s=yield i.arrayBuffer();return yield Mi().decodeAudioData(s)})}static supportsType(e){const n=e.split("."),i=n[n.length-1];return document.createElement("audio").canPlayType("audio/"+i)!==""}static loaded(){return Nn(this,void 0,void 0,function*(){for(yield Promise.resolve();nn.downloads.length;)yield nn.downloads[0]})}}nn.baseUrl="";nn.downloads=[];class X0 extends Yu{constructor(){super({clockSource:"offline",context:sh(arguments[0])?arguments[0]:QU(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:sh(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=sh(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(e){return Nn(this,void 0,void 0,function*(){let n=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,n++;const i=Math.floor(this.sampleRate/128);e&&n%i===0&&(yield new Promise(s=>setTimeout(s,1)))}})}render(){return Nn(this,arguments,void 0,function*(e=!0){yield this.workletsAreReady(),yield this._renderClock(e);const n=yield this._context.startRendering();return new nn(n)})}close(){return Promise.resolve()}}const ky=new aV;let sa=ky;function Mi(){return sa===ky&&GU&&cV(new Yu),sa}function cV(t,e=!1){e&&sa.dispose(),ic(t)?sa=new Yu(t):sh(t)?sa=new X0(t):sa=t}function lV(){return sa.resume()}if(Ri&&!Ri.TONE_SILENCE_LOGGING){const e=` * Tone.js v${yN} * `;console.log(`%c${e}`,"background: #000; color: #fff")}function uV(t){return Math.pow(10,t/20)}function dV(t){return 20*(Math.log(t)/Math.LN10)}function Dy(t){return Math.pow(2,t/12)}let np=440;function hV(){return np}function fV(t){np=t}function Xg(t){return Math.round(Oy(t))}function Oy(t){return 69+12*Math.log2(t/np)}function pV(t){return np*Math.pow(2,(t-69)/12)}class j0 extends qr{constructor(e,n,i){super(),this.defaultUnits="s",this._val=n,this._units=i,this.context=e,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:e=>this._frequencyToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:e=>this._ticksToUnits(parseInt(e,10)),regexp:/^(\d+)i$/i},m:{method:e=>this._beatsToUnits(parseInt(e,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(e,n)=>{const i=parseInt(e,10),s=n==="."?1.5:1;return i===1?this._beatsToUnits(this._getTimeSignature())*s:this._beatsToUnits(4/i)*s},regexp:/^(\d+)n(\.?)$/i},number:{method:e=>this._expressions[this.defaultUnits].method.call(this,e),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:e=>this._secondsToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:e=>parseInt(e,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:e=>{const n=parseInt(e,10);return this._beatsToUnits(8/(Math.floor(n)*3))},regexp:/^(\d+)t$/i},tr:{method:(e,n,i)=>{let s=0;return e&&e!=="0"&&(s+=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),n&&n!=="0"&&(s+=this._beatsToUnits(parseFloat(n))),i&&i!=="0"&&(s+=this._beatsToUnits(parseFloat(i)/4)),s},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof j0&&this.fromType(this._val),Fi(this._val))return this._noArg();if(Hr(this._val)&&Fi(this._units)){for(const e in this._expressions)if(this._expressions[e].regexp.test(this._val.trim())){this._units=e;break}}else if(So(this._val)){let e=0;for(const n in this._val)if(ht(this._val[n])){const i=this._val[n],s=new this.constructor(this.context,n).valueOf()*i;e+=s}return e}if(ht(this._units)){const e=this._expressions[this._units],n=this._val.toString().trim().match(e.regexp);return n?e.method.apply(this,n.slice(1)):e.method.call(this,this._val)}else return Hr(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(e){return 1/e}_beatsToUnits(e){return 60/this._getBpm()*e}_secondsToUnits(e){return e}_ticksToUnits(e){return e*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(e){switch(this._units=void 0,this.defaultUnits){case"s":this._val=e.toSeconds();break;case"i":this._val=e.toTicks();break;case"hz":this._val=e.toFrequency();break;case"midi":this._val=e.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class ys extends j0{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:e=>this._now()+new this.constructor(this.context,e).valueOf(),regexp:/^\+(.+)/},quantize:{method:e=>{const n=new ys(this.context,e).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(n))},regexp:/^@(.+)/}})}quantize(e,n=1){const i=new this.constructor(this.context,e).valueOf(),s=this.valueOf(),a=Math.round(s/i)*i-s;return s+a*n}toNotation(){const e=this.toSeconds(),n=["1m"];for(let r=1;r<9;r++){const o=Math.pow(2,r);n.push(o+"n."),n.push(o+"n"),n.push(o+"t")}n.push("0");let i=n[0],s=new ys(this.context,n[0]).toSeconds();return n.forEach(r=>{const o=new ys(this.context,r).toSeconds();Math.abs(o-e)<Math.abs(s-e)&&(i=r,s=o)}),i}toBarsBeatsSixteenths(){const e=this._beatsToUnits(1);let n=this.valueOf()/e;n=parseFloat(n.toFixed(4));const i=Math.floor(n/this._getTimeSignature());let s=n%1*4;n=Math.floor(n)%this._getTimeSignature();const r=s.toString();return r.length>3&&(s=parseFloat(parseFloat(r).toFixed(3))),[i,n,s].join(":")}toTicks(){const e=this._beatsToUnits(1);return this.valueOf()/e*this._getPPQ()}toSeconds(){return this.valueOf()}toMidi(){return Xg(this.toFrequency())}_now(){return this.context.now()}}class $i extends ys{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return hV()}static set A4(e){fV(e)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(e){return this.defaultUnits==="midi"?e:$i.mtof(e)}},note:{regexp:/^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,method(e,n){const s=mV[e.toLowerCase()]+(parseInt(n,10)+1)*12;return this.defaultUnits==="midi"?s:$i.mtof(s)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(e,n,i){let s=1;return e&&e!=="0"&&(s*=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),n&&n!=="0"&&(s*=this._beatsToUnits(parseFloat(n))),i&&i!=="0"&&(s*=this._beatsToUnits(parseFloat(i)/4)),s}}})}transpose(e){return new $i(this.context,this.valueOf()*Dy(e))}harmonize(e){return e.map(n=>this.transpose(n))}toMidi(){return Xg(this.valueOf())}toNote(){const e=this.toFrequency(),n=Math.log2(e/$i.A4);let i=Math.round(12*n)+57;const s=Math.floor(i/12);return s<0&&(i+=-12*s),gV[i%12]+s.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const e=this._beatsToUnits(1),n=this.valueOf()/e;return Math.floor(n*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(e){return e}_ticksToUnits(e){return 1/(e*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(e){return 1/super._beatsToUnits(e)}_secondsToUnits(e){return 1/e}static mtof(e){return pV(e)}static ftom(e){return Xg(e)}}const mV={cbbb:-3,cbb:-2,cb:-1,c:0,"c#":1,cx:2,"c##":2,"c###":3,"cx#":3,"c#x":3,dbbb:-1,dbb:0,db:1,d:2,"d#":3,dx:4,"d##":4,"d###":5,"dx#":5,"d#x":5,ebbb:1,ebb:2,eb:3,e:4,"e#":5,ex:6,"e##":6,"e###":7,"ex#":7,"e#x":7,fbbb:2,fbb:3,fb:4,f:5,"f#":6,fx:7,"f##":7,"f###":8,"fx#":8,"f#x":8,gbbb:4,gbb:5,gb:6,g:7,"g#":8,gx:9,"g##":9,"g###":10,"gx#":10,"g#x":10,abbb:6,abb:7,ab:8,a:9,"a#":10,ax:11,"a##":11,"a###":12,"ax#":12,"a#x":12,bbbb:8,bbb:9,bb:10,b:11,"b#":12,bx:13,"b##":13,"b###":14,"bx#":14,"b#x":14},gV=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];class vc extends ys{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class Gn extends qr{constructor(){super();const e=tt(Gn.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=e.context}static getDefaults(){return{context:Mi()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(e){return JU(e),new ys(this.context,e).toSeconds()}toFrequency(e){return new $i(this.context,e).toFrequency()}toTicks(e){return new vc(this.context,e).toTicks()}_getPartialProperties(e){const n=this.get();return Object.keys(n).forEach(i=>{Fi(e[i])&&delete n[i]}),n}get(){const e=iV(this);return Object.keys(e).forEach(n=>{if(Reflect.has(this,n)){const i=this[n];ht(i)&&ht(i.value)&&ht(i.setValueAtTime)?e[n]=i.value:i instanceof Gn?e[n]=i._getPartialProperties(e[n]):ss(i)||Wr(i)||Hr(i)||Sy(i)?e[n]=i:delete e[n]}}),e}set(e){return Object.keys(e).forEach(n=>{Reflect.has(this,n)&&ht(this[n])&&(this[n]&&ht(this[n].value)&&ht(this[n].setValueAtTime)?this[n].value!==e[n]&&(this[n].value=e[n]):this[n]instanceof Gn?this[n].set(e[n]):this[n]=e[n])}),this}}class Ju extends rs{constructor(e="stopped"){super(),this.name="StateTimeline",this._initial=e,this.setStateAtTime(this._initial,0)}getValueAtTime(e){const n=this.get(e);return n!==null?n.state:this._initial}setStateAtTime(e,n,i){return No(n,0),this.add(Object.assign({},i,{state:e,time:n})),this}getLastState(e,n){const i=this._search(n);for(let s=i;s>=0;s--){const r=this._timeline[s];if(r.state===e)return r}}getNextState(e,n){const i=this._search(n);if(i!==-1)for(let s=i;s<this._timeline.length;s++){const r=this._timeline[s];if(r.state===e)return r}}}class on extends Gn{constructor(){const e=tt(on.getDefaults(),arguments,["param","units","convert"]);for(super(e),this.name="Param",this.overridden=!1,this._minOutput=1e-7,ct(ht(e.param)&&(Ca(e.param)||e.param instanceof on),"param must be an AudioParam");!Ca(e.param);)e.param=e.param._param;this._swappable=ht(e.swappable)?e.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=e.param,this.input.connect(this._param)):this._param=this.input=e.param,this._events=new rs(1e3),this._initialValue=this._param.defaultValue,this.units=e.units,this.convert=e.convert,this._minValue=e.minValue,this._maxValue=e.maxValue,ht(e.value)&&e.value!==this._toType(this._initialValue)&&this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(Gn.getDefaults(),{convert:!0,units:"number"})}get value(){const e=this.now();return this.getValueAtTime(e)}set value(e){this.cancelScheduledValues(this.now()),this.setValueAtTime(e,this.now())}get minValue(){return ht(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return ht(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(e,n){return this.units===n}_assertRange(e){return ht(this.maxValue)&&ht(this.minValue)&&No(e,this._fromType(this.minValue),this._fromType(this.maxValue)),e}_fromType(e){return this.convert&&!this.overridden?this._is(e,"time")?this.toSeconds(e):this._is(e,"decibels")?uV(e):this._is(e,"frequency")?this.toFrequency(e):e:this.overridden?0:e}_toType(e){return this.convert&&this.units==="decibels"?dV(e):e}setValueAtTime(e,n){const i=this.toSeconds(n),s=this._fromType(e);return ct(isFinite(s)&&isFinite(i),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(n)}`),this._assertRange(s),this.log(this.units,"setValueAtTime",e,i),this._events.add({time:i,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,i),this}getValueAtTime(e){const n=Math.max(this.toSeconds(e),0),i=this._events.getAfter(n),s=this._events.get(n);let r=this._initialValue;if(s===null)r=this._initialValue;else if(s.type==="setTargetAtTime"&&(i===null||i.type==="setValueAtTime")){const o=this._events.getBefore(s.time);let a;o===null?a=this._initialValue:a=o.value,s.type==="setTargetAtTime"&&(r=this._exponentialApproach(s.time,a,s.value,s.constant,n))}else if(i===null)r=s.value;else if(i.type==="linearRampToValueAtTime"||i.type==="exponentialRampToValueAtTime"){let o=s.value;if(s.type==="setTargetAtTime"){const a=this._events.getBefore(s.time);a===null?o=this._initialValue:o=a.value}i.type==="linearRampToValueAtTime"?r=this._linearInterpolate(s.time,o,i.time,i.value,n):r=this._exponentialInterpolate(s.time,o,i.time,i.value,n)}else r=s.value;return this._toType(r)}setRampPoint(e){e=this.toSeconds(e);let n=this.getValueAtTime(e);return this.cancelAndHoldAtTime(e),this._fromType(n)===0&&(n=this._toType(this._minOutput)),this.setValueAtTime(n,e),this}linearRampToValueAtTime(e,n){const i=this._fromType(e),s=this.toSeconds(n);return ct(isFinite(i)&&isFinite(s),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(n)}`),this._assertRange(i),this._events.add({time:s,type:"linearRampToValueAtTime",value:i}),this.log(this.units,"linearRampToValueAtTime",e,s),this._param.linearRampToValueAtTime(i,s),this}exponentialRampToValueAtTime(e,n){let i=this._fromType(e);i=Cs(i,0)?this._minOutput:i,this._assertRange(i);const s=this.toSeconds(n);return ct(isFinite(i)&&isFinite(s),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(n)}`),this._events.add({time:s,type:"exponentialRampToValueAtTime",value:i}),this.log(this.units,"exponentialRampToValueAtTime",e,s),this._param.exponentialRampToValueAtTime(i,s),this}exponentialRampTo(e,n,i){return i=this.toSeconds(i),this.setRampPoint(i),this.exponentialRampToValueAtTime(e,i+this.toSeconds(n)),this}linearRampTo(e,n,i){return i=this.toSeconds(i),this.setRampPoint(i),this.linearRampToValueAtTime(e,i+this.toSeconds(n)),this}targetRampTo(e,n,i){return i=this.toSeconds(i),this.setRampPoint(i),this.exponentialApproachValueAtTime(e,i,n),this}exponentialApproachValueAtTime(e,n,i){n=this.toSeconds(n),i=this.toSeconds(i);const s=Math.log(i+1)/Math.log(200);return this.setTargetAtTime(e,n,s),this.cancelAndHoldAtTime(n+i*.9),this.linearRampToValueAtTime(e,n+i),this}setTargetAtTime(e,n,i){const s=this._fromType(e);ct(isFinite(i)&&i>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(n);return this._assertRange(s),ct(isFinite(s)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(e)}, ${JSON.stringify(n)}`),this._events.add({constant:i,time:r,type:"setTargetAtTime",value:s}),this.log(this.units,"setTargetAtTime",e,r,i),this._param.setTargetAtTime(s,r,i),this}setValueCurveAtTime(e,n,i,s=1){i=this.toSeconds(i),n=this.toSeconds(n);const r=this._fromType(e[0])*s;this.setValueAtTime(this._toType(r),n);const o=i/(e.length-1);for(let a=1;a<e.length;a++){const c=this._fromType(e[a])*s;this.linearRampToValueAtTime(this._toType(c),n+a*o)}return this}cancelScheduledValues(e){const n=this.toSeconds(e);return ct(isFinite(n),`Invalid argument to cancelScheduledValues: ${JSON.stringify(e)}`),this._events.cancel(n),this._param.cancelScheduledValues(n),this.log(this.units,"cancelScheduledValues",n),this}cancelAndHoldAtTime(e){const n=this.toSeconds(e),i=this._fromType(this.getValueAtTime(n));ct(isFinite(n),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(e)}`),this.log(this.units,"cancelAndHoldAtTime",n,"value="+i);const s=this._events.get(n),r=this._events.getAfter(n);return s&&Cs(s.time,n)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(n),this._events.cancel(n+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(i),n):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(i),n)),this._events.add({time:n,type:"setValueAtTime",value:i}),this._param.setValueAtTime(i,n),this}rampTo(e,n=.1,i){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(e,n,i):this.linearRampTo(e,n,i),this}apply(e){const n=this.context.currentTime;e.setValueAtTime(this.getValueAtTime(n),n);const i=this._events.get(n);if(i&&i.type==="setTargetAtTime"){const s=this._events.getAfter(i.time),r=s?s.time:n+2,o=(r-n)/10;for(let a=n;a<r;a+=o)e.linearRampToValueAtTime(this.getValueAtTime(a),a)}return this._events.forEachAfter(this.context.currentTime,s=>{s.type==="cancelScheduledValues"?e.cancelScheduledValues(s.time):s.type==="setTargetAtTime"?e.setTargetAtTime(s.value,s.time,s.constant):e[s.type](s.value,s.time)}),this}setParam(e){ct(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const n=this.input;return n.disconnect(this._param),this.apply(e),this._param=e,n.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(e,n,i,s,r){return i+(n-i)*Math.exp(-(r-e)/s)}_linearInterpolate(e,n,i,s,r){return n+(s-n)*((r-e)/(i-e))}_exponentialInterpolate(e,n,i,s,r){return n*Math.pow(s/n,(r-e)/(i-e))}}class xt extends Gn{constructor(){super(...arguments),this._internalChannels=[]}get numberOfInputs(){return ht(this.input)?Ca(this.input)||this.input instanceof on?1:this.input.numberOfInputs:0}get numberOfOutputs(){return ht(this.output)?this.output.numberOfOutputs:0}_isAudioNode(e){return ht(e)&&(e instanceof xt||xo(e))}_getInternalNodes(){const e=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&e.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&e.push(this.output),e}_setChannelProperties(e){this._getInternalNodes().forEach(i=>{i.channelCount=e.channelCount,i.channelCountMode=e.channelCountMode,i.channelInterpretation=e.channelInterpretation})}_getChannelProperties(){const e=this._getInternalNodes();ct(e.length>0,"ToneAudioNode does not have any internal nodes");const n=e[0];return{channelCount:n.channelCount,channelCountMode:n.channelCountMode,channelInterpretation:n.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(e){const n=this._getChannelProperties();this._setChannelProperties(Object.assign(n,{channelCount:e}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(e){const n=this._getChannelProperties();this._setChannelProperties(Object.assign(n,{channelCountMode:e}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(e){const n=this._getChannelProperties();this._setChannelProperties(Object.assign(n,{channelInterpretation:e}))}connect(e,n=0,i=0){return ol(this,e,n,i),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return W0("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(e,n=0,i=0){return EV(this,e,n,i),this}chain(...e){return jg(this,...e),this}fan(...e){return e.forEach(n=>this.connect(n)),this}dispose(){return super.dispose(),ht(this.input)&&(this.input instanceof xt?this.input.dispose():xo(this.input)&&this.input.disconnect()),ht(this.output)&&(this.output instanceof xt?this.output.dispose():xo(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function jg(...t){const e=t.shift();t.reduce((n,i)=>(n instanceof xt?n.connect(i):xo(n)&&ol(n,i),i),e)}function ol(t,e,n=0,i=0){for(ct(ht(t),"Cannot connect from undefined node"),ct(ht(e),"Cannot connect to undefined node"),(e instanceof xt||xo(e))&&ct(e.numberOfInputs>0,"Cannot connect to node with no inputs"),ct(t.numberOfOutputs>0,"Cannot connect from node with no outputs");e instanceof xt||e instanceof on;)ht(e.input)&&(e=e.input);for(;t instanceof xt;)ht(t.output)&&(t=t.output);Ca(e)?t.connect(e,n):t.connect(e,n,i)}function EV(t,e,n=0,i=0){if(ht(e))for(;e instanceof xt;)e=e.input;for(;!xo(t);)ht(t.output)&&(t=t.output);Ca(e)?t.disconnect(e,n):xo(e)?t.disconnect(e,n,i):t.disconnect()}class _n extends xt{constructor(){const e=tt(_n.getDefaults(),arguments,["gain","units"]);super(e),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode,this.gain=new on({context:this.context,convert:e.convert,param:this._gainNode.gain,units:e.units,value:e.gain,minValue:e.minValue,maxValue:e.maxValue}),fn(this,"gain")}static getDefaults(){return Object.assign(xt.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class Hc extends xt{constructor(e){super(e),this.onended=Wt,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new _n({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(n){const i=this.toSeconds(n);return this._startTime!==-1&&i>=this._startTime&&(this._stopTime===-1||i<=this._stopTime)?"started":"stopped"},this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut,this._curve=e.curve,this.onended=e.onended}static getDefaults(){return Object.assign(xt.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:Wt})}_startGain(e,n=1){ct(this._startTime===-1,"Source cannot be started more than once");const i=this.toSeconds(this._fadeIn);return this._startTime=e+i,this._startTime=Math.max(this._startTime,this.context.currentTime),i>0?(this._gainNode.gain.setValueAtTime(0,e),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(n,e+i):this._gainNode.gain.exponentialApproachValueAtTime(n,e,i)):this._gainNode.gain.setValueAtTime(n,e),this}stop(e){return this.log("stop",e),this._stopGain(this.toSeconds(e)),this}_stopGain(e){ct(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const n=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(e)+n,this._stopTime=Math.max(this._stopTime,this.now()),n>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,n,e):this._gainNode.gain.targetRampTo(0,n,e):(this._gainNode.gain.cancelAndHoldAtTime(e),this._gainNode.gain.setValueAtTime(0,e)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const i=this._curve==="exponential"?n*2:0;this._stopSource(this.now()+i),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==Wt&&(this.onended(this),this.onended=Wt,!this.context.isOffline)){const e=()=>this.dispose();typeof requestIdleCallback<"u"?requestIdleCallback(e):setTimeout(e,10)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),ct(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.dispose(),this.onended=Wt,this}}class q0 extends Hc{constructor(){const e=tt(q0.getDefaults(),arguments,["offset"]);super(e),this.name="ToneConstantSource",this._source=this.context.createConstantSource(),ol(this._source,this._gainNode),this.offset=new on({context:this.context,convert:e.convert,param:this._source.offset,units:e.units,value:e.offset,minValue:e.minValue,maxValue:e.maxValue})}static getDefaults(){return Object.assign(Hc.getDefaults(),{convert:!0,offset:1,units:"number"})}start(e){const n=this.toSeconds(e);return this.log("start",n),this._startGain(n),this._source.start(n),this}_stopSource(e){this._source.stop(e)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class Fn extends xt{constructor(){const e=tt(Fn.getDefaults(),arguments,["value","units"]);super(e),this.name="Signal",this.override=!0,this.output=this._constantSource=new q0({context:this.context,convert:e.convert,offset:e.value,units:e.units,minValue:e.minValue,maxValue:e.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(xt.getDefaults(),{convert:!0,units:"number",value:0})}connect(e,n=0,i=0){return z0(this,e,n,i),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(e,n){return this._param.setValueAtTime(e,n),this}getValueAtTime(e){return this._param.getValueAtTime(e)}setRampPoint(e){return this._param.setRampPoint(e),this}linearRampToValueAtTime(e,n){return this._param.linearRampToValueAtTime(e,n),this}exponentialRampToValueAtTime(e,n){return this._param.exponentialRampToValueAtTime(e,n),this}exponentialRampTo(e,n,i){return this._param.exponentialRampTo(e,n,i),this}linearRampTo(e,n,i){return this._param.linearRampTo(e,n,i),this}targetRampTo(e,n,i){return this._param.targetRampTo(e,n,i),this}exponentialApproachValueAtTime(e,n,i){return this._param.exponentialApproachValueAtTime(e,n,i),this}setTargetAtTime(e,n,i){return this._param.setTargetAtTime(e,n,i),this}setValueCurveAtTime(e,n,i,s){return this._param.setValueCurveAtTime(e,n,i,s),this}cancelScheduledValues(e){return this._param.cancelScheduledValues(e),this}cancelAndHoldAtTime(e){return this._param.cancelAndHoldAtTime(e),this}rampTo(e,n,i){return this._param.rampTo(e,n,i),this}get value(){return this._param.value}set value(e){this._param.value=e}get convert(){return this._param.convert}set convert(e){this._param.convert=e}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(e){this._param.overridden=e}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(e){return this._param.apply(e),this}}function z0(t,e,n,i){(e instanceof on||Ca(e)||e instanceof Fn&&e.override)&&(e.cancelScheduledValues(0),e.setValueAtTime(0,0),e instanceof Fn&&(e.overridden=!0)),ol(t,e,n,i)}class Y0 extends on{constructor(){const e=tt(Y0.getDefaults(),arguments,["value"]);super(e),this.name="TickParam",this._events=new rs(1/0),this._multiplier=1,this._multiplier=e.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(e.value)}),this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(on.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(e,n,i){n=this.toSeconds(n),this.setRampPoint(n);const s=this._fromType(e),r=this._events.get(n),o=Math.round(Math.max(1/i,1));for(let a=0;a<=o;a++){const c=i*a+n,l=this._exponentialApproach(r.time,r.value,s,i,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}setValueAtTime(e,n){const i=this.toSeconds(n);super.setValueAtTime(e,n);const s=this._events.get(i),r=this._events.previousEvent(s),o=this._getTicksUntilEvent(r,i);return s.ticks=Math.max(o,0),this}linearRampToValueAtTime(e,n){const i=this.toSeconds(n);super.linearRampToValueAtTime(e,n);const s=this._events.get(i),r=this._events.previousEvent(s),o=this._getTicksUntilEvent(r,i);return s.ticks=Math.max(o,0),this}exponentialRampToValueAtTime(e,n){n=this.toSeconds(n);const i=this._fromType(e),s=this._events.get(n),r=Math.round(Math.max((n-s.time)*10,1)),o=(n-s.time)/r;for(let a=0;a<=r;a++){const c=o*a+s.time,l=this._exponentialInterpolate(s.time,s.value,n,i,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}_getTicksUntilEvent(e,n){if(e===null)e={ticks:0,time:0,type:"setValueAtTime",value:0};else if(Fi(e.ticks)){const o=this._events.previousEvent(e);e.ticks=this._getTicksUntilEvent(o,e.time)}const i=this._fromType(this.getValueAtTime(e.time));let s=this._fromType(this.getValueAtTime(n));const r=this._events.get(n);return r&&r.time===n&&r.type==="setValueAtTime"&&(s=this._fromType(this.getValueAtTime(n-this.sampleTime))),.5*(n-e.time)*(i+s)+e.ticks}getTicksAtTime(e){const n=this.toSeconds(e),i=this._events.get(n);return Math.max(this._getTicksUntilEvent(i,n),0)}getDurationOfTicks(e,n){const i=this.toSeconds(n),s=this.getTicksAtTime(n);return this.getTimeOfTick(s+e)-i}getTimeOfTick(e){const n=this._events.get(e,"ticks"),i=this._events.getAfter(e,"ticks");if(n&&n.ticks===e)return n.time;if(n&&i&&i.type==="linearRampToValueAtTime"&&n.value!==i.value){const s=this._fromType(this.getValueAtTime(n.time)),o=(this._fromType(this.getValueAtTime(i.time))-s)/(i.time-n.time),a=Math.sqrt(Math.pow(s,2)-2*o*(n.ticks-e)),c=(-s+a)/o,l=(-s-a)/o;return(c>0?c:l)+n.time}else return n?n.value===0?1/0:n.time+(e-n.ticks)/n.value:e/this._initialValue}ticksToTime(e,n){return this.getDurationOfTicks(e,n)}timeToTicks(e,n){const i=this.toSeconds(n),s=this.toSeconds(e),r=this.getTicksAtTime(i);return this.getTicksAtTime(i+s)-r}_fromType(e){return this.units==="bpm"&&this.multiplier?1/(60/e/this.multiplier):super._fromType(e)}_toType(e){return this.units==="bpm"&&this.multiplier?e/this.multiplier*60:super._toType(e)}get multiplier(){return this._multiplier}set multiplier(e){const n=this.value;this._multiplier=e,this.cancelScheduledValues(0),this.setValueAtTime(n,0)}}class J0 extends Fn{constructor(){const e=tt(J0.getDefaults(),arguments,["value"]);super(e),this.name="TickSignal",this.input=this._param=new Y0({context:this.context,convert:e.convert,multiplier:e.multiplier,param:this._constantSource.offset,units:e.units,value:e.value})}static getDefaults(){return Object.assign(Fn.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(e,n){return this._param.ticksToTime(e,n)}timeToTicks(e,n){return this._param.timeToTicks(e,n)}getTimeOfTick(e){return this._param.getTimeOfTick(e)}getDurationOfTicks(e,n){return this._param.getDurationOfTicks(e,n)}getTicksAtTime(e){return this._param.getTicksAtTime(e)}get multiplier(){return this._param.multiplier}set multiplier(e){this._param.multiplier=e}dispose(){return super.dispose(),this._param.dispose(),this}}class Z0 extends Gn{constructor(){const e=tt(Z0.getDefaults(),arguments,["frequency"]);super(e),this.name="TickSource",this._state=new Ju,this._tickOffset=new rs,this._ticksAtTime=new rs,this._secondsAtTime=new rs,this.frequency=new J0({context:this.context,units:e.units,value:e.frequency}),fn(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},Gn.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(e,n){const i=this.toSeconds(e);return this._state.getValueAtTime(i)!=="started"&&(this._state.setStateAtTime("started",i),ht(n)&&this.setTicksAtTime(n,i),this._ticksAtTime.cancel(i),this._secondsAtTime.cancel(i)),this}stop(e){const n=this.toSeconds(e);if(this._state.getValueAtTime(n)==="stopped"){const i=this._state.get(n);i&&i.time>0&&(this._tickOffset.cancel(i.time),this._state.cancel(i.time))}return this._state.cancel(n),this._state.setStateAtTime("stopped",n),this.setTicksAtTime(0,n),this._ticksAtTime.cancel(n),this._secondsAtTime.cancel(n),this}pause(e){const n=this.toSeconds(e);return this._state.getValueAtTime(n)==="started"&&(this._state.setStateAtTime("paused",n),this._ticksAtTime.cancel(n),this._secondsAtTime.cancel(n)),this}cancel(e){return e=this.toSeconds(e),this._state.cancel(e),this._tickOffset.cancel(e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}getTicksAtTime(e){const n=this.toSeconds(e),i=this._state.getLastState("stopped",n),s=this._ticksAtTime.get(n),r={state:"paused",time:n};this._state.add(r);let o=s||i,a=s?s.ticks:0,c=null;return this._state.forEachBetween(o.time,n+this.sampleTime,l=>{let u=o.time;const d=this._tickOffset.get(l.time);d&&d.time>=o.time&&(a=d.ticks,u=d.time),o.state==="started"&&l.state!=="started"&&(a+=this.frequency.getTicksAtTime(l.time)-this.frequency.getTicksAtTime(u),l.time!==r.time&&(c={state:l.state,time:l.time,ticks:a})),o=l}),this._state.remove(r),c&&this._ticksAtTime.add(c),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(e){this.setTicksAtTime(e,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(e){const n=this.now(),i=this.frequency.timeToTicks(e,n);this.setTicksAtTime(i,n)}getSecondsAtTime(e){e=this.toSeconds(e);const n=this._state.getLastState("stopped",e),i={state:"paused",time:e};this._state.add(i);const s=this._secondsAtTime.get(e);let r=s||n,o=s?s.seconds:0,a=null;return this._state.forEachBetween(r.time,e+this.sampleTime,c=>{let l=r.time;const u=this._tickOffset.get(c.time);u&&u.time>=r.time&&(o=u.seconds,l=u.time),r.state==="started"&&c.state!=="started"&&(o+=c.time-l,c.time!==i.time&&(a={state:c.state,time:c.time,seconds:o})),r=c}),this._state.remove(i),a&&this._secondsAtTime.add(a),o}setTicksAtTime(e,n){return n=this.toSeconds(n),this._tickOffset.cancel(n),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(e,n),ticks:e,time:n}),this._ticksAtTime.cancel(n),this._secondsAtTime.cancel(n),this}getStateAtTime(e){return e=this.toSeconds(e),this._state.getValueAtTime(e)}getTimeOfTick(e,n=this.now()){const i=this._tickOffset.get(n),s=this._state.get(n),r=Math.max(i.time,s.time),o=this.frequency.getTicksAtTime(r)+e-i.ticks;return this.frequency.getTimeOfTick(o)}forEachTickBetween(e,n,i){let s=this._state.get(e);this._state.forEachBetween(e,n,o=>{s&&s.state==="started"&&o.state!=="started"&&this.forEachTickBetween(Math.max(s.time,e),o.time-this.sampleTime,i),s=o});let r=null;if(s&&s.state==="started"){const o=Math.max(s.time,e),a=this.frequency.getTicksAtTime(o),c=this.frequency.getTicksAtTime(s.time),l=a-c;let u=Math.ceil(l)-l;u=Cs(u,1)?0:u;let d=this.frequency.getTimeOfTick(a+u);for(;d<n;){try{i(d,Math.round(this.getTicksAtTime(d)))}catch(h){r=h;break}d+=this.frequency.getDurationOfTicks(1,d)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this._ticksAtTime.dispose(),this._secondsAtTime.dispose(),this.frequency.dispose(),this}}class ip extends Gn{constructor(){const e=tt(ip.getDefaults(),arguments,["callback","frequency"]);super(e),this.name="Clock",this.callback=Wt,this._lastUpdate=0,this._state=new Ju("stopped"),this._boundLoop=this._loop.bind(this),this.callback=e.callback,this._tickSource=new Z0({context:this.context,frequency:e.frequency,units:e.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,fn(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(Gn.getDefaults(),{callback:Wt,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(e,n){xy(this.context);const i=this.toSeconds(e);return this.log("start",i),this._state.getValueAtTime(i)!=="started"&&(this._state.setStateAtTime("started",i),this._tickSource.start(i,n),i<this._lastUpdate&&this.emit("start",i,n)),this}stop(e){const n=this.toSeconds(e);return this.log("stop",n),this._state.cancel(n),this._state.setStateAtTime("stopped",n),this._tickSource.stop(n),n<this._lastUpdate&&this.emit("stop",n),this}pause(e){const n=this.toSeconds(e);return this._state.getValueAtTime(n)==="started"&&(this._state.setStateAtTime("paused",n),this._tickSource.pause(n),n<this._lastUpdate&&this.emit("pause",n)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(e){this._tickSource.ticks=e}get seconds(){return this._tickSource.seconds}set seconds(e){this._tickSource.seconds=e}getSecondsAtTime(e){return this._tickSource.getSecondsAtTime(e)}setTicksAtTime(e,n){return this._tickSource.setTicksAtTime(e,n),this}getTimeOfTick(e,n=this.now()){return this._tickSource.getTimeOfTick(e,n)}getTicksAtTime(e){return this._tickSource.getTicksAtTime(e)}nextTickTime(e,n){const i=this.toSeconds(n),s=this.getTicksAtTime(i);return this._tickSource.getTimeOfTick(s+e,i)}_loop(){const e=this._lastUpdate,n=this.now();this._lastUpdate=n,this.log("loop",e,n),e!==n&&(this._state.forEachBetween(e,n,i=>{switch(i.state){case"started":const s=this._tickSource.getTicksAtTime(i.time);this.emit("start",i.time,s);break;case"stopped":i.time!==0&&this.emit("stop",i.time);break;case"paused":this.emit("pause",i.time);break}}),this._tickSource.forEachTickBetween(e,n,(i,s)=>{this.callback(i,s)}))}getStateAtTime(e){const n=this.toSeconds(e);return this._state.getValueAtTime(n)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}zu.mixin(ip);class al extends xt{constructor(){const e=tt(al.getDefaults(),arguments,["volume"]);super(e),this.name="Volume",this.input=this.output=new _n({context:this.context,gain:e.volume,units:"decibels"}),this.volume=this.output.gain,fn(this,"volume"),this._unmutedVolume=e.volume,this.mute=e.mute}static getDefaults(){return Object.assign(xt.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(e){!this.mute&&e?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!e&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class K0 extends xt{constructor(){const e=tt(K0.getDefaults(),arguments);super(e),this.name="Destination",this.input=new al({context:this.context}),this.output=new _n({context:this.context}),this.volume=this.input.volume,jg(this.input,this.output,this.context.rawContext.destination),this.mute=e.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(xt.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(e){this.input.mute=e}chain(...e){return this.input.disconnect(),e.unshift(this.input),e.push(this.output),jg(...e),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}ep(t=>{t.destination=new K0({context:t})});tp(t=>{t.destination.dispose()});class vV extends xt{constructor(){super(...arguments),this.name="Listener",this.positionX=new on({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new on({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new on({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new on({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new on({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new on({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new on({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new on({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new on({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(xt.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}ep(t=>{t.listener=new vV({context:t})});tp(t=>{t.listener.dispose()});class Q0 extends qr{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const e=tt(Q0.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=e.baseUrl,Object.keys(e.urls).forEach(n=>{this._loadingCount++;const i=e.urls[n];this.add(n,i,this._bufferLoaded.bind(this,e.onload),e.onerror)})}static getDefaults(){return{baseUrl:"",onerror:Wt,onload:Wt,urls:{}}}has(e){return this._buffers.has(e.toString())}get(e){return ct(this.has(e),`ToneAudioBuffers has no buffer named: ${e}`),this._buffers.get(e.toString())}_bufferLoaded(e){this._loadingCount--,this._loadingCount===0&&e&&e()}get loaded(){return Array.from(this._buffers).every(([e,n])=>n.loaded)}add(e,n,i=Wt,s=Wt){return Hr(n)?(this.baseUrl&&n.trim().substring(0,11).toLowerCase()==="data:audio/"&&(this.baseUrl=""),this._buffers.set(e.toString(),new nn(this.baseUrl+n,i,s))):this._buffers.set(e.toString(),new nn(n,i,s)),this}dispose(){return super.dispose(),this._buffers.forEach(e=>e.dispose()),this._buffers.clear(),this}}class Dn extends vc{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(e){return this._getPPQ()*e}_secondsToUnits(e){return Math.floor(e/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(e){return e}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class bV extends Gn{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new rs,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(e,n){return this._events.add({callback:e,time:this.toSeconds(n)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(e){return this._events.cancel(this.toSeconds(e)),this}_drawLoop(){const e=this.context.currentTime;this._events.forEachBefore(e+this.anticipation,n=>{e-n.time<=this.expiration&&n.callback(),this._events.remove(n)}),this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}ep(t=>{t.draw=new bV({context:t})});tp(t=>{t.draw.dispose()});class SV extends qr{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(e){ct(ht(e.time),"Events must have a time property"),ct(ht(e.duration),"Events must have a duration parameter"),e.time=e.time.valueOf();let n=new xV(e.time,e.time+e.duration,e);for(this._root===null?this._root=n:this._root.insert(n),this._length++;n!==null;)n.updateHeight(),n.updateMax(),this._rebalance(n),n=n.parent;return this}remove(e){if(this._root!==null){const n=[];this._root.search(e.time,n);for(const i of n)if(i.event===e){this._removeNode(i),this._length--;break}}return this}get length(){return this._length}cancel(e){return this.forEachFrom(e,n=>this.remove(n)),this}_setRoot(e){this._root=e,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(e,n){e.parent!==null?(e.isLeftChild()?e.parent.left=n:e.parent.right=n,this._rebalance(e.parent)):this._setRoot(n)}_removeNode(e){if(e.left===null&&e.right===null)this._replaceNodeInParent(e,null);else if(e.right===null)this._replaceNodeInParent(e,e.left);else if(e.left===null)this._replaceNodeInParent(e,e.right);else{const n=e.getBalance();let i,s=null;if(n>0)if(e.left.right===null)i=e.left,i.right=e.right,s=i;else{for(i=e.left.right;i.right!==null;)i=i.right;i.parent&&(i.parent.right=i.left,s=i.parent,i.left=e.left,i.right=e.right)}else if(e.right.left===null)i=e.right,i.left=e.left,s=i;else{for(i=e.right.left;i.left!==null;)i=i.left;i.parent&&(i.parent.left=i.right,s=i.parent,i.left=e.left,i.right=e.right)}e.parent!==null?e.isLeftChild()?e.parent.left=i:e.parent.right=i:this._setRoot(i),s&&this._rebalance(s)}e.dispose()}_rotateLeft(e){const n=e.parent,i=e.isLeftChild(),s=e.right;s&&(e.right=s.left,s.left=e),n!==null?i?n.left=s:n.right=s:this._setRoot(s)}_rotateRight(e){const n=e.parent,i=e.isLeftChild(),s=e.left;s&&(e.left=s.right,s.right=e),n!==null?i?n.left=s:n.right=s:this._setRoot(s)}_rebalance(e){const n=e.getBalance();n>1&&e.left?e.left.getBalance()<0?this._rotateLeft(e.left):this._rotateRight(e):n<-1&&e.right&&(e.right.getBalance()>0?this._rotateRight(e.right):this._rotateLeft(e))}get(e){if(this._root!==null){const n=[];if(this._root.search(e,n),n.length>0){let i=n[0];for(let s=1;s<n.length;s++)n[s].low>i.low&&(i=n[s]);return i.event}}return null}forEach(e){if(this._root!==null){const n=[];this._root.traverse(i=>n.push(i)),n.forEach(i=>{i.event&&e(i.event)})}return this}forEachAtTime(e,n){if(this._root!==null){const i=[];this._root.search(e,i),i.forEach(s=>{s.event&&n(s.event)})}return this}forEachFrom(e,n){if(this._root!==null){const i=[];this._root.searchAfter(e,i),i.forEach(s=>{s.event&&n(s.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(e=>e.dispose()),this._root=null,this}}class xV{constructor(e,n,i){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=i,this.low=e,this.high=n,this.max=this.high}insert(e){e.low<=this.low?this.left===null?this.left=e:this.left.insert(e):this.right===null?this.right=e:this.right.insert(e)}search(e,n){e>this.max||(this.left!==null&&this.left.search(e,n),this.low<=e&&this.high>e&&n.push(this),!(this.low>e)&&this.right!==null&&this.right.search(e,n))}searchAfter(e,n){this.low>=e&&(n.push(this),this.left!==null&&this.left.searchAfter(e,n)),this.right!==null&&this.right.searchAfter(e,n)}traverse(e){e(this),this.left!==null&&this.left.traverse(e),this.right!==null&&this.right.traverse(e)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let e=0;return this.left!==null&&this.right!==null?e=this.left.height-this.right.height:this.left!==null?e=this.left.height+1:this.right!==null&&(e=-(this.right.height+1)),e}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(e){this._left=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(e){this._right=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class TV extends qr{constructor(e){super(),this.name="TimelineValue",this._timeline=new rs({memory:10}),this._initialValue=e}set(e,n){return this._timeline.add({value:e,time:n}),this}get(e){const n=this._timeline.get(e);return n?n.value:this._initialValue}}class Xc extends xt{constructor(){super(tt(Xc.getDefaults(),arguments,["context"]))}connect(e,n=0,i=0){return z0(this,e,n,i),this}}class Zu extends Xc{constructor(){const e=tt(Zu.getDefaults(),arguments,["mapping","length"]);super(e),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper,ss(e.mapping)||e.mapping instanceof Float32Array?this.curve=Float32Array.from(e.mapping):YU(e.mapping)&&this.setMap(e.mapping,e.length)}static getDefaults(){return Object.assign(Fn.getDefaults(),{length:1024})}setMap(e,n=1024){const i=new Float32Array(n);for(let s=0,r=n;s<r;s++){const o=s/(r-1)*2-1;i[s]=e(o,s)}return this.curve=i,this}get curve(){return this._shaper.curve}set curve(e){this._shaper.curve=e}get oversample(){return this._shaper.oversample}set oversample(e){const n=["none","2x","4x"].some(i=>i.includes(e));ct(n,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class G0 extends Xc{constructor(){const e=tt(G0.getDefaults(),arguments,["value"]);super(e),this.name="Pow",this._exponentScaler=this.input=this.output=new Zu({context:this.context,mapping:this._expFunc(e.value),length:8192}),this._exponent=e.value}static getDefaults(){return Object.assign(Xc.getDefaults(),{value:1})}_expFunc(e){return n=>Math.pow(Math.abs(n),e)}get value(){return this._exponent}set value(e){this._exponent=e,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class yo{constructor(e,n){this.id=yo._eventId++,this._remainderTime=0;const i=Object.assign(yo.getDefaults(),n);this.transport=e,this.callback=i.callback,this._once=i.once,this.time=Math.floor(i.time),this._remainderTime=i.time-this.time}static getDefaults(){return{callback:Wt,once:!1,time:0}}get floatTime(){return this.time+this._remainderTime}invoke(e){if(this.callback){const n=this.transport.bpm.getDurationOfTicks(1,e);this.callback(e+this._remainderTime*n),this._once&&this.transport.clear(this.id)}}dispose(){return this.callback=void 0,this}}yo._eventId=0;class _0 extends yo{constructor(e,n){super(e,n),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const i=Object.assign(_0.getDefaults(),n);this.duration=i.duration,this._interval=i.interval,this._nextTick=i.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.transport.on("ticks",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},yo.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(e){this._createEvents(e),super.invoke(e)}_createEvent(){return Vh(this._nextTick,this.floatTime+this.duration)?this.transport.scheduleOnce(this.invoke.bind(this),new Dn(this.context,this._nextTick).toSeconds()):-1}_createEvents(e){Vh(this._nextTick+this._interval,this.floatTime+this.duration)&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new Dn(this.context,this._nextTick).toSeconds()))}_restart(e){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.floatTime;const n=this.transport.getTicksAtTime(e);Wc(n,this.time)&&(this._nextTick=this.floatTime+Math.ceil((n-this.floatTime)/this._interval)*this._interval),this._currentId=this._createEvent(),this._nextTick+=this._interval,this._nextId=this._createEvent()}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this.transport.off("ticks",this._boundRestart),this}}class sp extends Gn{constructor(){const e=tt(sp.getDefaults(),arguments);super(e),this.name="Transport",this._loop=new TV(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new rs,this._repeatedEvents=new SV,this._syncedSignals=[],this._swingAmount=0,this._ppq=e.ppq,this._clock=new ip({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=e.ppq,this.bpm.setValueAtTime(e.bpm,0),fn(this,"bpm"),this._timeSignature=e.timeSignature,this._swingTicks=e.ppq/2}static getDefaults(){return Object.assign(Gn.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(e,n){if(this._loop.get(e)&&n>=this._loopEnd&&(this.emit("loopEnd",e),this._clock.setTicksAtTime(this._loopStart,e),n=this._loopStart,this.emit("loopStart",e,this._clock.getSecondsAtTime(e)),this.emit("loop",e)),this._swingAmount>0&&n%this._ppq!==0&&n%(this._swingTicks*2)!==0){const i=n%(this._swingTicks*2)/(this._swingTicks*2),s=Math.sin(i*Math.PI)*this._swingAmount;e+=new Dn(this.context,this._swingTicks*2/3).toSeconds()*s}wx(!0),this._timeline.forEachAtTime(n,i=>i.invoke(e)),wx(!1)}schedule(e,n){const i=new yo(this,{callback:e,time:new vc(this.context,n).toTicks()});return this._addEvent(i,this._timeline)}scheduleRepeat(e,n,i,s=1/0){const r=new _0(this,{callback:e,duration:new ys(this.context,s).toTicks(),interval:new ys(this.context,n).toTicks(),time:new vc(this.context,i).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(e,n){const i=new yo(this,{callback:e,once:!0,time:new vc(this.context,n).toTicks()});return this._addEvent(i,this._timeline)}clear(e){if(this._scheduledEvents.hasOwnProperty(e)){const n=this._scheduledEvents[e.toString()];n.timeline.remove(n.event),n.event.dispose(),delete this._scheduledEvents[e.toString()]}return this}_addEvent(e,n){return this._scheduledEvents[e.id.toString()]={event:e,timeline:n},n.add(e),e.id}cancel(e=0){const n=this.toTicks(e);return this._timeline.forEachFrom(n,i=>this.clear(i.id)),this._repeatedEvents.forEachFrom(n,i=>this.clear(i.id)),this}_bindClockEvents(){this._clock.on("start",(e,n)=>{n=new Dn(this.context,n).toSeconds(),this.emit("start",e,n)}),this._clock.on("stop",e=>{this.emit("stop",e)}),this._clock.on("pause",e=>{this.emit("pause",e)})}get state(){return this._clock.getStateAtTime(this.now())}start(e,n){this.context.resume();let i;return ht(n)&&(i=this.toTicks(n)),this._clock.start(e,i),this}stop(e){return this._clock.stop(e),this}pause(e){return this._clock.pause(e),this}toggle(e){return e=this.toSeconds(e),this._clock.getStateAtTime(e)!=="started"?this.start(e):this.stop(e),this}get timeSignature(){return this._timeSignature}set timeSignature(e){ss(e)&&(e=e[0]/e[1]*4),this._timeSignature=e}get loopStart(){return new ys(this.context,this._loopStart,"i").toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e)}get loopEnd(){return new ys(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e)}get loop(){return this._loop.get(this.now())}set loop(e){this._loop.set(e,this.now())}setLoopPoints(e,n){return this.loopStart=e,this.loopEnd=n,this}get swing(){return this._swingAmount}set swing(e){this._swingAmount=e}get swingSubdivision(){return new Dn(this.context,this._swingTicks).toNotation()}set swingSubdivision(e){this._swingTicks=this.toTicks(e)}get position(){const e=this.now(),n=this._clock.getTicksAtTime(e);return new Dn(this.context,n).toBarsBeatsSixteenths()}set position(e){const n=this.toTicks(e);this.ticks=n}get seconds(){return this._clock.seconds}set seconds(e){const n=this.now(),i=this._clock.frequency.timeToTicks(e,n);this.ticks=i}get progress(){if(this.loop){const e=this.now();return(this._clock.getTicksAtTime(e)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(e){if(this._clock.ticks!==e){const n=this.now();if(this.state==="started"){const i=this._clock.getTicksAtTime(n),s=this._clock.frequency.getDurationOfTicks(Math.ceil(i)-i,n),r=n+s;this.emit("stop",r),this._clock.setTicksAtTime(e,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this.emit("ticks",n),this._clock.setTicksAtTime(e,n)}}getTicksAtTime(e){return this._clock.getTicksAtTime(e)}getSecondsAtTime(e){return this._clock.getSecondsAtTime(e)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(e){this._clock.frequency.multiplier=e}nextSubdivision(e){if(e=this.toTicks(e),this.state!=="started")return 0;{const n=this.now(),i=this.getTicksAtTime(n),s=e-i%e;return this._clock.nextTickTime(s,n)}}syncSignal(e,n){const i=this.now();let s=this.bpm,r=1/(60/s.getValueAtTime(i)/this.PPQ),o=[];if(e.units==="time"){const c=.015625/r,l=new _n(c),u=new G0(-1),d=new _n(c);s.chain(l,u,d),s=d,r=1/r,o=[l,u,d]}n||(e.getValueAtTime(i)!==0?n=e.getValueAtTime(i)/r:n=0);const a=new _n(n);return s.connect(a),a.connect(e._param),o.push(a),this._syncedSignals.push({initial:e.value,nodes:o,signal:e}),e.value=0,this}unsyncSignal(e){for(let n=this._syncedSignals.length-1;n>=0;n--){const i=this._syncedSignals[n];i.signal===e&&(i.nodes.forEach(s=>s.dispose()),i.signal.value=i.initial,this._syncedSignals.splice(n,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),yy(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}zu.mixin(sp);ep(t=>{t.transport=new sp({context:t})});tp(t=>{t.transport.dispose()});class Wi extends xt{constructor(e){super(e),this.input=void 0,this._state=new Ju("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=Wt,this._syncedStop=Wt,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new al({context:this.context,mute:e.mute,volume:e.volume}),this.volume=this._volume.volume,fn(this,"volume"),this.onstop=e.onstop}static getDefaults(){return Object.assign(xt.getDefaults(),{mute:!1,onstop:Wt,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}_clampToCurrentTime(e){return this._synced?e:Math.max(e,this.context.currentTime)}start(e,n,i){let s=Fi(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(s=this._clampToCurrentTime(s),!this._synced&&this._state.getValueAtTime(s)==="started")ct(Wc(s,this._state.get(s).time),"Start time must be strictly greater than previous start time"),this._state.cancel(s),this._state.setStateAtTime("started",s),this.log("restart",s),this.restart(s,n,i);else if(this.log("start",s),this._state.setStateAtTime("started",s),this._synced){const r=this._state.get(s);r&&(r.offset=this.toSeconds(Gs(n,0)),r.duration=i?this.toSeconds(i):void 0);const o=this.context.transport.schedule(a=>{this._start(a,n,i)},s);this._scheduled.push(o),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>s&&this._syncedStart(this.now(),this.context.transport.seconds)}else xy(this.context),this._start(s,n,i);return this}stop(e){let n=Fi(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(n=this._clampToCurrentTime(n),this._state.getValueAtTime(n)==="started"||ht(this._state.getNextState("started",n))){if(this.log("stop",n),!this._synced)this._stop(n);else{const i=this.context.transport.schedule(this._stop.bind(this),n);this._scheduled.push(i)}this._state.cancel(n),this._state.setStateAtTime("stopped",n)}return this}restart(e,n,i){return e=this.toSeconds(e),this._state.getValueAtTime(e)==="started"&&(this._state.cancel(e),this._restart(e,n,i)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(e,n)=>{if(Wc(n,0)){const i=this._state.get(n);if(i&&i.state==="started"&&i.time!==n){const s=n-this.toSeconds(i.time);let r;i.duration&&(r=this.toSeconds(i.duration)-s),this._start(e,this.toSeconds(i.offset)+s,r)}}},this._syncedStop=e=>{const n=this.context.transport.getSecondsAtTime(Math.max(e-this.sampleTime,0));this._state.getValueAtTime(n)==="started"&&this._stop(e)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(e=>this.context.transport.clear(e)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=Wt,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class rp extends Hc{constructor(){const e=tt(rp.getDefaults(),arguments,["url","onload"]);super(e),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1,ol(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new on({context:this.context,param:this._source.playbackRate,units:"positive",value:e.playbackRate}),this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this._buffer=new nn(e.url,e.onload,e.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(Hc.getDefaults(),{url:new nn,loop:!1,loopEnd:0,loopStart:0,onload:Wt,onerror:Wt,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e}get curve(){return this._curve}set curve(e){this._curve=e}start(e,n,i,s=1){ct(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(e);this._startGain(r,s),this.loop?n=Gs(n,this.loopStart):n=Gs(n,0);let o=Math.max(this.toSeconds(n),0);if(this.loop){const a=this.toSeconds(this.loopEnd)||this.buffer.duration,c=this.toSeconds(this.loopStart),l=a-c;Hg(o,a)&&(o=(o-c)%l+c),Cs(o,this.buffer.duration)&&(o=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,Vh(o,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,o)),ht(i)){let a=this.toSeconds(i);a=Math.max(a,0),this.stop(r+a)}return this}_stopSource(e){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(e)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(e){this._source.loopStart=this.toSeconds(e)}get loopEnd(){return this._source.loopEnd}set loopEnd(e){this._source.loopEnd=this.toSeconds(e)}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._source.loop}set loop(e){this._source.loop=e,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}function Pa(t,e){return Nn(this,void 0,void 0,function*(){const n=e/t.context.sampleRate,i=new X0(1,n,t.context.sampleRate);return new t.constructor(Object.assign(t.get(),{frequency:2/n,detune:0,context:i})).toDestination().start(0),(yield i.render()).getChannelData(0)})}class $0 extends Hc{constructor(){const e=tt($0.getDefaults(),arguments,["frequency","type"]);super(e),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator],ol(this._oscillator,this._gainNode),this.type=e.type,this.frequency=new on({context:this.context,param:this._oscillator.frequency,units:"frequency",value:e.frequency}),this.detune=new on({context:this.context,param:this._oscillator.detune,units:"cents",value:e.detune}),fn(this,["frequency","detune"])}static getDefaults(){return Object.assign(Hc.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(e){const n=this.toSeconds(e);return this.log("start",n),this._startGain(n),this._oscillator.start(n),this}_stopSource(e){this._oscillator.stop(e)}setPeriodicWave(e){return this._oscillator.setPeriodicWave(e),this}get type(){return this._oscillator.type}set type(e){this._oscillator.type=e}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class wn extends Wi{constructor(){const e=tt(wn.getDefaults(),arguments,["frequency","type"]);super(e),this.name="Oscillator",this._oscillator=null,this.frequency=new Fn({context:this.context,units:"frequency",value:e.frequency}),fn(this,"frequency"),this.detune=new Fn({context:this.context,units:"cents",value:e.detune}),fn(this,"detune"),this._partials=e.partials,this._partialCount=e.partialCount,this._type=e.type,e.partialCount&&e.type!=="custom"&&(this._type=this.baseType+e.partialCount.toString()),this.phase=e.phase}static getDefaults(){return Object.assign(Wi.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(e){const n=this.toSeconds(e),i=new $0({context:this.context,onended:()=>this.onstop(this)});this._oscillator=i,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(n)}_stop(e){const n=this.toSeconds(e);this._oscillator&&this._oscillator.stop(n)}_restart(e){const n=this.toSeconds(e);return this.log("restart",n),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(n),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return wn._periodicWaveCache.find(n=>n.phase===this._phase&&nV(n.partials,this._partials));{const e=wn._periodicWaveCache.find(n=>n.type===this._type&&n.phase===this._phase);return this._partialCount=e?e.partialCount:this._partialCount,e}}get type(){return this._type}set type(e){this._type=e;const n=["sine","square","sawtooth","triangle"].indexOf(e)!==-1;if(this._phase===0&&n)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=e);else{const i=this._getCachedPeriodicWave();if(ht(i)){const{partials:s,wave:r}=i;this._wave=r,this._partials=s,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[s,r]=this._getRealImaginary(e,this._phase),o=this.context.createPeriodicWave(s,r);this._wave=o,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),wn._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:s,type:this._type,wave:this._wave}),wn._periodicWaveCache.length>100&&wn._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(e){this.partialCount&&this._type!=="custom"&&e!=="custom"?this.type=e+this.partialCount:this.type=e}get partialCount(){return this._partialCount}set partialCount(e){No(e,0);let n=this._type;const i=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(i&&(n=i[1]),this._type!=="custom")e===0?this.type=n:this.type=n+e.toString();else{const s=new Float32Array(e);this._partials.forEach((r,o)=>s[o]=r),this._partials=Array.from(s),this.type=this._type}}_getRealImaginary(e,n){let s=2048;const r=new Float32Array(s),o=new Float32Array(s);let a=1;if(e==="custom"){if(a=this._partials.length+1,this._partialCount=this._partials.length,s=a,this._partials.length===0)return[r,o]}else{const c=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(e);c?(a=parseInt(c[2],10)+1,this._partialCount=parseInt(c[2],10),e=c[1],a=Math.max(a,2),s=a):this._partialCount=0,this._partials=[]}for(let c=1;c<s;++c){const l=2/(c*Math.PI);let u;switch(e){case"sine":u=c<=a?1:0,this._partials[c-1]=u;break;case"square":u=c&1?2*l:0,this._partials[c-1]=u;break;case"sawtooth":u=l*(c&1?1:-1),this._partials[c-1]=u;break;case"triangle":c&1?u=2*(l*l)*(c-1>>1&1?-1:1):u=0,this._partials[c-1]=u;break;case"custom":u=this._partials[c-1];break;default:throw new TypeError("Oscillator: invalid type: "+e)}u!==0?(r[c]=-u*Math.sin(n*c),o[c]=u*Math.cos(n*c)):(r[c]=0,o[c]=0)}return[r,o]}_inverseFFT(e,n,i){let s=0;const r=e.length;for(let o=0;o<r;o++)s+=e[o]*Math.cos(o*i)+n[o]*Math.sin(o*i);return s}getInitialValue(){const[e,n]=this._getRealImaginary(this._type,0);let i=0;const s=Math.PI*2,r=32;for(let o=0;o<r;o++)i=Math.max(this._inverseFFT(e,n,o/r*s),i);return sV(-this._inverseFFT(e,n,this._phase)/i,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(e){this._phase=e*Math.PI/180,this.type=this._type}asArray(){return Nn(this,arguments,void 0,function*(e=1024){return Pa(this,e)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}wn._periodicWaveCache=[];class CV extends Xc{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new Zu({context:this.context,mapping:e=>(e+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class jc extends Fn{constructor(){const e=tt(jc.getDefaults(),arguments,["value"]);super(e),this.name="Multiply",this.override=!1,this._mult=this.input=this.output=new _n({context:this.context,minValue:e.minValue,maxValue:e.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(Fn.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class op extends Wi{constructor(){const e=tt(op.getDefaults(),arguments,["frequency","type","modulationType"]);super(e),this.name="AMOscillator",this._modulationScale=new CV({context:this.context}),this._modulationNode=new _n({context:this.context}),this._carrier=new wn({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new wn({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new jc({context:this.context,units:"positive",value:e.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),fn(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(wn.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){this._modulator.restart(e),this._carrier.restart(e)}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(){return Nn(this,arguments,void 0,function*(e=1024){return Pa(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class ap extends Wi{constructor(){const e=tt(ap.getDefaults(),arguments,["frequency","type","modulationType"]);super(e),this.name="FMOscillator",this._modulationNode=new _n({context:this.context,gain:0}),this._carrier=new wn({context:this.context,detune:e.detune,frequency:0,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.detune=this._carrier.detune,this.frequency=new Fn({context:this.context,units:"frequency",value:e.frequency}),this._modulator=new wn({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new jc({context:this.context,units:"positive",value:e.harmonicity}),this.modulationIndex=new jc({context:this.context,units:"positive",value:e.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),fn(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(wn.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){return this._modulator.restart(e),this._carrier.restart(e),this}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(){return Nn(this,arguments,void 0,function*(e=1024){return Pa(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class Ku extends Wi{constructor(){const e=tt(Ku.getDefaults(),arguments,["frequency","width"]);super(e),this.name="PulseOscillator",this._widthGate=new _n({context:this.context,gain:0}),this._thresh=new Zu({context:this.context,mapping:n=>n<=0?-1:1}),this.width=new Fn({context:this.context,units:"audioRange",value:e.width}),this._triangle=new wn({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),fn(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(Wi.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(e){e=this.toSeconds(e),this._triangle.start(e),this._widthGate.gain.setValueAtTime(1,e)}_stop(e){e=this.toSeconds(e),this._triangle.stop(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(0,e)}_restart(e){this._triangle.restart(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(1,e)}get phase(){return this._triangle.phase}set phase(e){this._triangle.phase=e}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(e){this._triangle.type=e}asArray(){return Nn(this,arguments,void 0,function*(e=1024){return Pa(this,e)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class cp extends Wi{constructor(){const e=tt(cp.getDefaults(),arguments,["frequency","type","spread"]);super(e),this.name="FatOscillator",this._oscillators=[],this.frequency=new Fn({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Fn({context:this.context,units:"cents",value:e.detune}),this._spread=e.spread,this._type=e.type,this._phase=e.phase,this._partials=e.partials,this._partialCount=e.partialCount,this.count=e.count,fn(this,["frequency","detune"])}static getDefaults(){return Object.assign(wn.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(e){e=this.toSeconds(e),this._forEach(n=>n.start(e))}_stop(e){e=this.toSeconds(e),this._forEach(n=>n.stop(e))}_restart(e){this._forEach(n=>n.restart(e))}_forEach(e){for(let n=0;n<this._oscillators.length;n++)e(this._oscillators[n],n)}get type(){return this._type}set type(e){this._type=e,this._forEach(n=>n.type=e)}get spread(){return this._spread}set spread(e){if(this._spread=e,this._oscillators.length>1){const n=-e/2,i=e/(this._oscillators.length-1);this._forEach((s,r)=>s.detune.value=n+i*r)}}get count(){return this._oscillators.length}set count(e){if(No(e,1),this._oscillators.length!==e){this._forEach(n=>n.dispose()),this._oscillators=[];for(let n=0;n<e;n++){const i=new wn({context:this.context,volume:-6-e*1.1,type:this._type,phase:this._phase+n/e*360,partialCount:this._partialCount,onstop:n===0?()=>this.onstop(this):Wt});this.type==="custom"&&(i.partials=this._partials),this.frequency.connect(i.frequency),this.detune.connect(i.detune),i.detune.overridden=!1,i.connect(this.output),this._oscillators[n]=i}this.spread=this._spread,this.state==="started"&&this._forEach(n=>n.start())}}get phase(){return this._phase}set phase(e){this._phase=e,this._forEach((n,i)=>n.phase=this._phase+i/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(e){this._forEach(n=>n.baseType=e),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this._type="custom",this._forEach(n=>n.partials=e))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(e){this._partialCount=e,this._forEach(n=>n.partialCount=e),this._type=this._oscillators[0].type}asArray(){return Nn(this,arguments,void 0,function*(e=1024){return Pa(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(e=>e.dispose()),this}}class lp extends Wi{constructor(){const e=tt(lp.getDefaults(),arguments,["frequency","modulationFrequency"]);super(e),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new jc({context:this.context,value:2}),this._pulse=new Ku({context:this.context,frequency:e.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new wn({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),fn(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(Wi.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(e){e=this.toSeconds(e),this._modulator.start(e),this._pulse.start(e)}_stop(e){e=this.toSeconds(e),this._modulator.stop(e),this._pulse.stop(e)}_restart(e){this._modulator.restart(e),this._pulse.restart(e)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(e){this._modulator.phase=e}asArray(){return Nn(this,arguments,void 0,function*(e=1024){return Pa(this,e)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const Nx={am:op,fat:cp,fm:ap,oscillator:wn,pulse:Ku,pwm:lp};class Wh extends Wi{constructor(){const e=tt(Wh.getDefaults(),arguments,["frequency","type"]);super(e),this.name="OmniOscillator",this.frequency=new Fn({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Fn({context:this.context,units:"cents",value:e.detune}),fn(this,["frequency","detune"]),this.set(e)}static getDefaults(){return Object.assign(wn.getDefaults(),ap.getDefaults(),op.getDefaults(),cp.getDefaults(),Ku.getDefaults(),lp.getDefaults())}_start(e){this._oscillator.start(e)}_stop(e){this._oscillator.stop(e)}_restart(e){return this._oscillator.restart(e),this}get type(){let e="";return["am","fm","fat"].some(n=>this._sourceType===n)&&(e=this._sourceType),e+this._oscillator.type}set type(e){e.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(3)):e==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):e==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=e)}get partials(){return this._oscillator.partials}set partials(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=e)}get partialCount(){return this._oscillator.partialCount}set partialCount(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=e)}set(e){return Reflect.has(e,"type")&&e.type&&(this.type=e.type),super.set(e),this}_createNewOscillator(e){if(e!==this._sourceType){this._sourceType=e;const n=Nx[e],i=this.now();if(this._oscillator){const s=this._oscillator;s.stop(i),this.context.setTimeout(()=>s.dispose(),this.blockTime)}this._oscillator=new n({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(i)}}get phase(){return this._oscillator.phase}set phase(e){this._oscillator.phase=e}get sourceType(){return this._sourceType}set sourceType(e){let n="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(n=this._oscillator.type),e==="fm"?this.type="fm"+n:e==="am"?this.type="am"+n:e==="fat"?this.type="fat"+n:e==="oscillator"?this.type=n:e==="pulse"?this.type="pulse":e==="pwm"&&(this.type="pwm")}_getOscType(e,n){return e instanceof Nx[n]}get baseType(){return this._oscillator.baseType}set baseType(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&e!=="pulse"&&e!=="pwm"&&(this._oscillator.baseType=e)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(e){this._getOscType(this._oscillator,"fat")&&Wr(e)&&(this._oscillator.count=e)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(e){this._getOscType(this._oscillator,"fat")&&Wr(e)&&(this._oscillator.spread=e)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(e){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&Hr(e)&&(this._oscillator.modulationType=e)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(){return Nn(this,arguments,void 0,function*(e=1024){return Pa(this,e)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}function Py(t,e=1/0){const n=new WeakMap;return function(i,s){Reflect.defineProperty(i,s,{configurable:!0,enumerable:!0,get:function(){return n.get(this)},set:function(r){No(r,t,e),n.set(this,r)}})}}function zr(t,e=1/0){const n=new WeakMap;return function(i,s){Reflect.defineProperty(i,s,{configurable:!0,enumerable:!0,get:function(){return n.get(this)},set:function(r){No(this.toSeconds(r),t,e),n.set(this,r)}})}}class up extends Wi{constructor(){const e=tt(up.getDefaults(),arguments,["url","onload"]);super(e),this.name="Player",this._activeSources=new Set,this._buffer=new nn({onload:this._onload.bind(this,e.onload),onerror:e.onerror,reverse:e.reverse,url:e.url}),this.autostart=e.autostart,this._loop=e.loop,this._loopStart=e.loopStart,this._loopEnd=e.loopEnd,this._playbackRate=e.playbackRate,this.fadeIn=e.fadeIn,this.fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Wi.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:Wt,onerror:Wt,playbackRate:1,reverse:!1})}load(e){return Nn(this,void 0,void 0,function*(){return yield this._buffer.load(e),this._onload(),this})}_onload(e=Wt){e(),this.autostart&&this.start()}_onSourceEnd(e){this.onstop(this),this._activeSources.delete(e),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(e,n,i){return super.start(e,n,i),this}_start(e,n,i){this._loop?n=Gs(n,this._loopStart):n=Gs(n,0);const s=this.toSeconds(n),r=i;i=Gs(i,Math.max(this._buffer.duration-s,0));let o=this.toSeconds(i);o=o/this._playbackRate,e=this.toSeconds(e);const a=new rp({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(e+o),this._state.setStateAtTime("stopped",e+o,{implicitEnd:!0})),this._activeSources.add(a),this._loop&&Fi(r)?a.start(e,s):a.start(e,s,o-this.toSeconds(this.fadeOut))}_stop(e){const n=this.toSeconds(e);this._activeSources.forEach(i=>i.stop(n))}restart(e,n,i){return super.restart(e,n,i),this}_restart(e,n,i){var s;(s=[...this._activeSources].pop())===null||s===void 0||s.stop(e),this._start(e,n,i)}seek(e,n){const i=this.toSeconds(n);if(this._state.getValueAtTime(i)==="started"){const s=this.toSeconds(e);this._stop(i),this._start(i,s)}return this}setLoopPoints(e,n){return this.loopStart=e,this.loopEnd=n,this}get loopStart(){return this._loopStart}set loopStart(e){this._loopStart=e,this.buffer.loaded&&No(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(n=>{n.loopStart=e})}get loopEnd(){return this._loopEnd}set loopEnd(e){this._loopEnd=e,this.buffer.loaded&&No(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(n=>{n.loopEnd=e})}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._loop}set loop(e){if(this._loop!==e&&(this._loop=e,this._activeSources.forEach(n=>{n.loop=e}),e)){const n=this._state.getNextState("stopped",this.now());n&&this._state.cancel(n.time)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e;const n=this.now(),i=this._state.getNextState("stopped",n);i&&i.implicitEnd&&(this._state.cancel(i.time),this._activeSources.forEach(s=>s.cancelStop())),this._activeSources.forEach(s=>{s.playbackRate.setValueAtTime(e,n)})}get reverse(){return this._buffer.reverse}set reverse(e){this._buffer.reverse=e}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(e=>e.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}Bs([zr(0)],up.prototype,"fadeIn",void 0);Bs([zr(0)],up.prototype,"fadeOut",void 0);class Fo extends xt{constructor(){const e=tt(Fo.getDefaults(),arguments,["attack","decay","sustain","release"]);super(e),this.name="Envelope",this._sig=new Fn({context:this.context,value:0}),this.output=this._sig,this.input=void 0,this.attack=e.attack,this.decay=e.decay,this.sustain=e.sustain,this.release=e.release,this.attackCurve=e.attackCurve,this.releaseCurve=e.releaseCurve,this.decayCurve=e.decayCurve}static getDefaults(){return Object.assign(xt.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(e,n){if(Hr(e))return e;{let i;for(i in Ud)if(Ud[i][n]===e)return i;return e}}_setCurve(e,n,i){if(Hr(i)&&Reflect.has(Ud,i)){const s=Ud[i];So(s)?e!=="_decayCurve"&&(this[e]=s[n]):this[e]=s}else if(ss(i)&&e!=="_decayCurve")this[e]=i;else throw new Error("Envelope: invalid curve: "+i)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(e){this._setCurve("_attackCurve","In",e)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(e){this._setCurve("_releaseCurve","Out",e)}get decayCurve(){return this._getCurve(this._decayCurve,"Out")}set decayCurve(e){this._setCurve("_decayCurve","Out",e)}triggerAttack(e,n=1){this.log("triggerAttack",e,n),e=this.toSeconds(e);let s=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),o=this.getValueAtTime(e);if(o>0){const a=1/s;s=(1-o)/a}if(s<this.sampleTime)this._sig.cancelScheduledValues(e),this._sig.setValueAtTime(n,e);else if(this._attackCurve==="linear")this._sig.linearRampTo(n,s,e);else if(this._attackCurve==="exponential")this._sig.targetRampTo(n,s,e);else{this._sig.cancelAndHoldAtTime(e);let a=this._attackCurve;for(let c=1;c<a.length;c++)if(a[c-1]<=o&&o<=a[c]){a=this._attackCurve.slice(c),a[0]=o;break}this._sig.setValueCurveAtTime(a,e,s,n)}if(r&&this.sustain<1){const a=n*this.sustain,c=e+s;this.log("decay",c),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(a,r+c):this._sig.exponentialApproachValueAtTime(a,c,r)}return this}triggerRelease(e){this.log("triggerRelease",e),e=this.toSeconds(e);const n=this.getValueAtTime(e);if(n>0){const i=this.toSeconds(this.release);i<this.sampleTime?this._sig.setValueAtTime(0,e):this._releaseCurve==="linear"?this._sig.linearRampTo(0,i,e):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,i,e):(ct(ss(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(e),this._sig.setValueCurveAtTime(this._releaseCurve,e,i,n))}return this}getValueAtTime(e){return this._sig.getValueAtTime(e)}triggerAttackRelease(e,n,i=1){return n=this.toSeconds(n),this.triggerAttack(n,i),this.triggerRelease(n+this.toSeconds(e)),this}cancel(e){return this._sig.cancelScheduledValues(this.toSeconds(e)),this}connect(e,n=0,i=0){return z0(this,e,n,i),this}asArray(){return Nn(this,arguments,void 0,function*(e=1024){const n=e/this.context.sampleRate,i=new X0(1,n,this.context.sampleRate),s=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=s+this.toSeconds(this.release),o=r*.1,a=r+o,c=new this.constructor(Object.assign(this.get(),{attack:n*this.toSeconds(this.attack)/a,decay:n*this.toSeconds(this.decay)/a,release:n*this.toSeconds(this.release)/a,context:i}));return c._sig.toDestination(),c.triggerAttackRelease(n*(s+o)/a,0),(yield i.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}Bs([zr(0)],Fo.prototype,"attack",void 0);Bs([zr(0)],Fo.prototype,"decay",void 0);Bs([Py(0,1)],Fo.prototype,"sustain",void 0);Bs([zr(0)],Fo.prototype,"release",void 0);const Ud=(()=>{let e,n;const i=[];for(e=0;e<128;e++)i[e]=Math.sin(e/127*(Math.PI/2));const s=[],r=6.4;for(e=0;e<127;e++){n=e/127;const h=Math.sin(n*(Math.PI*2)*r-Math.PI/2)+1;s[e]=h/10+n*.83}s[127]=1;const o=[],a=5;for(e=0;e<128;e++)o[e]=Math.ceil(e/127*a)/a;const c=[];for(e=0;e<128;e++)n=e/127,c[e]=.5*(1-Math.cos(Math.PI*n));const l=[];for(e=0;e<128;e++){n=e/127;const h=Math.pow(n,3)*4+.2,f=Math.cos(h*Math.PI*2*n);l[e]=Math.abs(f*(1-n))}function u(h){const f=new Array(h.length);for(let p=0;p<h.length;p++)f[p]=1-h[p];return f}function d(h){return h.slice(0).reverse()}return{bounce:{In:u(l),Out:l},cosine:{In:i,Out:d(i)},exponential:"exponential",linear:"linear",ripple:{In:s,Out:u(s)},sine:{In:c,Out:u(c)},step:{In:o,Out:u(o)}}})();let Hh=class Iy extends xt{constructor(){const e=tt(Iy.getDefaults(),arguments);super(e),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=n=>this._original_triggerRelease(n),this._volume=this.output=new al({context:this.context,volume:e.volume}),this.volume=this._volume.volume,fn(this,"volume")}static getDefaults(){return Object.assign(xt.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}_syncState(){let e=!1;return this._synced||(this._synced=!0,e=!0),e}_syncMethod(e,n){const i=this["_original_"+e]=this[e];this[e]=(...s)=>{const r=s[n],o=this.context.transport.schedule(a=>{s[n]=a,i.apply(this,s)},r);this._scheduledEvents.push(o)}}unsync(){return this._scheduledEvents.forEach(e=>this.context.transport.clear(e)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off("stop",this._syncedRelease),this.context.transport.off("pause",this._syncedRelease),this.context.transport.off("loopEnd",this._syncedRelease)),this}triggerAttackRelease(e,n,i,s){const r=this.toSeconds(i),o=this.toSeconds(n);return this.triggerAttack(e,r,s),this.triggerRelease(r+o),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}};class qc extends Hh{constructor(){const e=tt(qc.getDefaults(),arguments);super(e),this.portamento=e.portamento,this.onsilence=e.onsilence}static getDefaults(){return Object.assign(Hh.getDefaults(),{detune:0,onsilence:Wt,portamento:0})}triggerAttack(e,n,i=1){this.log("triggerAttack",e,n,i);const s=this.toSeconds(n);return this._triggerEnvelopeAttack(s,i),this.setNote(e,s),this}triggerRelease(e){this.log("triggerRelease",e);const n=this.toSeconds(e);return this._triggerEnvelopeRelease(n),this}setNote(e,n){const i=this.toSeconds(n),s=e instanceof $i?e.toFrequency():e;if(this.portamento>0&&this.getLevelAtTime(i)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(s,r,i)}else this.frequency.setValueAtTime(s,i);return this}}Bs([zr(0)],qc.prototype,"portamento",void 0);class ev extends Fo{constructor(){super(tt(ev.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new _n({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class Xh extends qc{constructor(){const e=tt(Xh.getDefaults(),arguments);super(e),this.name="Synth",this.oscillator=new Wh(Object.assign({context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)},e.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new ev(Object.assign({context:this.context},e.envelope)),this.oscillator.chain(this.envelope,this.output),fn(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(qc.getDefaults(),{envelope:Object.assign(Ax(Fo.getDefaults(),Object.keys(xt.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(Ax(Wh.getDefaults(),[...Object.keys(Wi.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(e,n){if(this.envelope.triggerAttack(e,n),this.oscillator.start(e),this.envelope.sustain===0){const i=this.toSeconds(this.envelope.attack),s=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+i+s)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class dp extends Xh{constructor(){const e=tt(dp.getDefaults(),arguments);super(e),this.name="MembraneSynth",this.portamento=0,this.pitchDecay=e.pitchDecay,this.octaves=e.octaves,fn(this,["oscillator","envelope"])}static getDefaults(){return Ec(qc.getDefaults(),Xh.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(e,n){const i=this.toSeconds(n),s=this.toFrequency(e instanceof $i?e.toFrequency():e),r=s*this.octaves;return this.oscillator.frequency.setValueAtTime(r,i),this.oscillator.frequency.exponentialRampToValueAtTime(s,i+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}Bs([Py(0)],dp.prototype,"octaves",void 0);Bs([zr(0)],dp.prototype,"pitchDecay",void 0);const Ry=new Set;function tv(t){Ry.add(t)}function Ly(t,e){const n=`registerProcessor("${t}", ${e})`;Ry.add(n)}const wV=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the {@link ToneAudioWorklet}. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;tv(wV);const AV=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;tv(AV);const NV=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;tv(NV);const yV="feedback-comb-filter",kV=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;Ly(yV,kV);class zc extends Hh{constructor(){const e=tt(zc.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");super(e),this.name="Sampler",this._activeSources=new Map;const n={};Object.keys(e.urls).forEach(i=>{const s=parseInt(i,10);if(ct(Fd(i)||Wr(s)&&isFinite(s),`url key is neither a note or midi pitch: ${i}`),Fd(i)){const r=new $i(this.context,i).toMidi();n[r]=e.urls[i]}else Wr(s)&&isFinite(s)&&(n[s]=e.urls[s])}),this._buffers=new Q0({urls:n,onload:e.onload,baseUrl:e.baseUrl,onerror:e.onerror}),this.attack=e.attack,this.release=e.release,this.curve=e.curve,this._buffers.loaded&&Promise.resolve().then(e.onload)}static getDefaults(){return Object.assign(Hh.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:Wt,onerror:Wt,release:.1,urls:{}})}_findClosest(e){let i=0;for(;i<96;){if(this._buffers.has(e+i))return-i;if(this._buffers.has(e-i))return i;i++}throw new Error(`No available buffers for note: ${e}`)}triggerAttack(e,n,i=1){return this.log("triggerAttack",e,n,i),Array.isArray(e)||(e=[e]),e.forEach(s=>{const r=Oy(new $i(this.context,s).toFrequency()),o=Math.round(r),a=r-o,c=this._findClosest(o),l=o-c,u=this._buffers.get(l),d=Dy(c+a),h=new rp({url:u,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:d}).connect(this.output);h.start(n,0,u.duration/d,i),ss(this._activeSources.get(o))||this._activeSources.set(o,[]),this._activeSources.get(o).push(h),h.onended=()=>{if(this._activeSources&&this._activeSources.has(o)){const f=this._activeSources.get(o),p=f.indexOf(h);p!==-1&&f.splice(p,1)}}}),this}triggerRelease(e,n){return this.log("triggerRelease",e,n),Array.isArray(e)||(e=[e]),e.forEach(i=>{const s=new $i(this.context,i).toMidi();if(this._activeSources.has(s)&&this._activeSources.get(s).length){const r=this._activeSources.get(s);n=this.toSeconds(n),r.forEach(o=>{o.stop(n)}),this._activeSources.set(s,[])}}),this}releaseAll(e){const n=this.toSeconds(e);return this._activeSources.forEach(i=>{for(;i.length;)i.shift().stop(n)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(e,n,i,s=1){const r=this.toSeconds(i);return this.triggerAttack(e,r,s),ss(n)?(ct(ss(e),"notes must be an array when duration is array"),e.forEach((o,a)=>{const c=n[Math.min(a,n.length-1)];this.triggerRelease(o,r+this.toSeconds(c))})):this.triggerRelease(e,r+this.toSeconds(n)),this}add(e,n,i){if(ct(Fd(e)||isFinite(e),`note must be a pitch or midi: ${e}`),Fd(e)){const s=new $i(this.context,e).toMidi();this._buffers.add(s,n,i)}else this._buffers.add(e,n,i);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(e=>{e.forEach(n=>n.dispose())}),this._activeSources.clear(),this}}Bs([zr(0)],zc.prototype,"attack",void 0);Bs([zr(0)],zc.prototype,"release",void 0);class cc extends Gn{constructor(){const e=tt(cc.getDefaults(),arguments,["callback","value"]);super(e),this.name="ToneEvent",this._state=new Ju("stopped"),this._startOffset=0,this._loop=e.loop,this.callback=e.callback,this.value=e.value,this._loopStart=this.toTicks(e.loopStart),this._loopEnd=this.toTicks(e.loopEnd),this._playbackRate=e.playbackRate,this._probability=e.probability,this._humanize=e.humanize,this.mute=e.mute,this._playbackRate=e.playbackRate,this._state.increasing=!0,this._rescheduleEvents()}static getDefaults(){return Object.assign(Gn.getDefaults(),{callback:Wt,humanize:!1,loop:!1,loopEnd:"1m",loopStart:0,mute:!1,playbackRate:1,probability:1,value:null})}_rescheduleEvents(e=-1){this._state.forEachFrom(e,n=>{let i;if(n.state==="started"){n.id!==-1&&this.context.transport.clear(n.id);const s=n.time+Math.round(this.startOffset/this._playbackRate);if(this._loop===!0||Wr(this._loop)&&this._loop>1){i=1/0,Wr(this._loop)&&(i=this._loop*this._getLoopDuration());const r=this._state.getAfter(s);r!==null&&(i=Math.min(i,r.time-s)),i!==1/0&&(i=new Dn(this.context,i));const o=new Dn(this.context,this._getLoopDuration());n.id=this.context.transport.scheduleRepeat(this._tick.bind(this),o,new Dn(this.context,s),i)}else n.id=this.context.transport.schedule(this._tick.bind(this),new Dn(this.context,s))}})}get state(){return this._state.getValueAtTime(this.context.transport.ticks)}get startOffset(){return this._startOffset}set startOffset(e){this._startOffset=e}get probability(){return this._probability}set probability(e){this._probability=e}get humanize(){return this._humanize}set humanize(e){this._humanize=e}start(e){const n=this.toTicks(e);return this._state.getValueAtTime(n)==="stopped"&&(this._state.add({id:-1,state:"started",time:n}),this._rescheduleEvents(n)),this}stop(e){this.cancel(e);const n=this.toTicks(e);if(this._state.getValueAtTime(n)==="started"){this._state.setStateAtTime("stopped",n,{id:-1});const i=this._state.getBefore(n);let s=n;i!==null&&(s=i.time),this._rescheduleEvents(s)}return this}cancel(e){e=Gs(e,-1/0);const n=this.toTicks(e);return this._state.forEachFrom(n,i=>{this.context.transport.clear(i.id)}),this._state.cancel(n),this}_tick(e){const n=this.context.transport.getTicksAtTime(e);if(!this.mute&&this._state.getValueAtTime(n)==="started"){if(this.probability<1&&Math.random()>this.probability)return;if(this.humanize){let i=.02;Sy(this.humanize)||(i=this.toSeconds(this.humanize)),e+=(Math.random()*2-1)*i}this.callback(e,this.value)}}_getLoopDuration(){return(this._loopEnd-this._loopStart)/this._playbackRate}get loop(){return this._loop}set loop(e){this._loop=e,this._rescheduleEvents()}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._rescheduleEvents()}get loopEnd(){return new Dn(this.context,this._loopEnd).toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e),this._loop&&this._rescheduleEvents()}get loopStart(){return new Dn(this.context,this._loopStart).toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e),this._loop&&this._rescheduleEvents()}get progress(){if(this._loop){const e=this.context.transport.ticks,n=this._state.get(e);if(n!==null&&n.state==="started"){const i=this._getLoopDuration();return(e-n.time)%i/i}else return 0}else return 0}dispose(){return super.dispose(),this.cancel(),this._state.dispose(),this}}class jh extends cc{constructor(){const e=tt(jh.getDefaults(),arguments,["callback","events"]);super(e),this.name="Part",this._state=new Ju("stopped"),this._events=new Set,this._state.increasing=!0,e.events.forEach(n=>{ss(n)?this.add(n[0],n[1]):this.add(n)})}static getDefaults(){return Object.assign(cc.getDefaults(),{events:[]})}start(e,n){const i=this.toTicks(e);if(this._state.getValueAtTime(i)!=="started"){n=Gs(n,this._loop?this._loopStart:0),this._loop?n=Gs(n,this._loopStart):n=Gs(n,0);const s=this.toTicks(n);this._state.add({id:-1,offset:s,state:"started",time:i}),this._forEach(r=>{this._startNote(r,i,s)})}return this}_startNote(e,n,i){n-=i,this._loop?e.startOffset>=this._loopStart&&e.startOffset<this._loopEnd?(e.startOffset<i&&(n+=this._getLoopDuration()),e.start(new Dn(this.context,n))):e.startOffset<this._loopStart&&e.startOffset>=i&&(e.loop=!1,e.start(new Dn(this.context,n))):e.startOffset>=i&&e.start(new Dn(this.context,n))}get startOffset(){return this._startOffset}set startOffset(e){this._startOffset=e,this._forEach(n=>{n.startOffset+=this._startOffset})}stop(e){const n=this.toTicks(e);return this._state.cancel(n),this._state.setStateAtTime("stopped",n),this._forEach(i=>{i.stop(e)}),this}at(e,n){const i=new vc(this.context,e).toTicks(),s=new Dn(this.context,1).toSeconds(),r=this._events.values();let o=r.next();for(;!o.done;){const a=o.value;if(Math.abs(i-a.startOffset)<s)return ht(n)&&(a.value=n),a;o=r.next()}return ht(n)?(this.add(e,n),this.at(e)):null}add(e,n){e instanceof Object&&Reflect.has(e,"time")&&(n=e,e=n.time);const i=this.toTicks(e);let s;return n instanceof cc?(s=n,s.callback=this._tick.bind(this)):s=new cc({callback:this._tick.bind(this),context:this.context,value:n}),s.startOffset=i,s.set({humanize:this.humanize,loop:this.loop,loopEnd:this.loopEnd,loopStart:this.loopStart,playbackRate:this.playbackRate,probability:this.probability}),this._events.add(s),this._restartEvent(s),this}_restartEvent(e){this._state.forEach(n=>{n.state==="started"?this._startNote(e,n.time,n.offset):e.stop(new Dn(this.context,n.time))})}remove(e,n){return So(e)&&e.hasOwnProperty("time")&&(n=e,e=n.time),e=this.toTicks(e),this._events.forEach(i=>{i.startOffset===e&&(Fi(n)||ht(n)&&i.value===n)&&(this._events.delete(i),i.dispose())}),this}clear(){return this._forEach(e=>e.dispose()),this._events.clear(),this}cancel(e){return this._forEach(n=>n.cancel(e)),this._state.cancel(this.toTicks(e)),this}_forEach(e){return this._events&&this._events.forEach(n=>{n instanceof jh?n._forEach(e):e(n)}),this}_setAll(e,n){this._forEach(i=>{i[e]=n})}_tick(e,n){this.mute||this.callback(e,n)}_testLoopBoundries(e){this._loop&&(e.startOffset<this._loopStart||e.startOffset>=this._loopEnd)?e.cancel(0):e.state==="stopped"&&this._restartEvent(e)}get probability(){return this._probability}set probability(e){this._probability=e,this._setAll("probability",e)}get humanize(){return this._humanize}set humanize(e){this._humanize=e,this._setAll("humanize",e)}get loop(){return this._loop}set loop(e){this._loop=e,this._forEach(n=>{n.loopStart=this.loopStart,n.loopEnd=this.loopEnd,n.loop=e,this._testLoopBoundries(n)})}get loopEnd(){return new Dn(this.context,this._loopEnd).toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e),this._loop&&this._forEach(n=>{n.loopEnd=e,this._testLoopBoundries(n)})}get loopStart(){return new Dn(this.context,this._loopStart).toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e),this._loop&&this._forEach(n=>{n.loopStart=this.loopStart,this._testLoopBoundries(n)})}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._setAll("playbackRate",e)}get length(){return this._events.size}dispose(){return super.dispose(),this.clear(),this}}class nv extends xt{constructor(){const e=tt(nv.getDefaults(),arguments,["pan"]);super(e),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner,this.pan=new on({context:this.context,param:this._panner.pan,value:e.pan,minValue:-1,maxValue:1}),this._panner.channelCount=e.channelCount,this._panner.channelCountMode="explicit",fn(this,"pan")}static getDefaults(){return Object.assign(xt.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}const DV="bit-crusher",OV=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;Ly(DV,OV);class Tn extends xt{constructor(){const e=tt(Tn.getDefaults(),arguments,["solo"]);super(e),this.name="Solo",this.input=this.output=new _n({context:this.context}),Tn._allSolos.has(this.context)||Tn._allSolos.set(this.context,new Set),Tn._allSolos.get(this.context).add(this),this.solo=e.solo}static getDefaults(){return Object.assign(xt.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(e){e?this._addSolo():this._removeSolo(),Tn._allSolos.get(this.context).forEach(n=>n._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){Tn._soloed.has(this.context)||Tn._soloed.set(this.context,new Set),Tn._soloed.get(this.context).add(this)}_removeSolo(){Tn._soloed.has(this.context)&&Tn._soloed.get(this.context).delete(this)}_isSoloed(){return Tn._soloed.has(this.context)&&Tn._soloed.get(this.context).has(this)}_noSolos(){return!Tn._soloed.has(this.context)||Tn._soloed.has(this.context)&&Tn._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),Tn._allSolos.get(this.context).delete(this),this._removeSolo(),this}}Tn._allSolos=new Map;Tn._soloed=new Map;class iv extends xt{constructor(){const e=tt(iv.getDefaults(),arguments,["pan","volume"]);super(e),this.name="PanVol",this._panner=this.input=new nv({context:this.context,pan:e.pan,channelCount:e.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new al({context:this.context,volume:e.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=e.mute,fn(this,["pan","volume"])}static getDefaults(){return Object.assign(xt.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class lc extends xt{constructor(){const e=tt(lc.getDefaults(),arguments,["volume","pan"]);super(e),this.name="Channel",this._solo=this.input=new Tn({solo:e.solo,context:this.context}),this._panVol=this.output=new iv({context:this.context,pan:e.pan,volume:e.volume,mute:e.mute,channelCount:e.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),fn(this,["pan","volume"])}static getDefaults(){return Object.assign(xt.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(e){this._solo.solo=e}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(e){this._panVol.mute=e}_getBus(e){return lc.buses.has(e)||lc.buses.set(e,new _n({context:this.context})),lc.buses.get(e)}send(e,n=0){const i=this._getBus(e),s=new _n({context:this.context,units:"decibels",gain:n});return this.connect(s),s.connect(i),s}receive(e){return this._getBus(e).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}lc.buses=new Map;function PV(){return Mi().now()}Mi().transport;function Ga(){return Mi().transport}Mi().destination;Mi().destination;Mi().listener;Mi().draw;Mi();class qh{constructor(){W(this,"instrument");W(this,"sequence",[]);W(this,"part",null);this.instrument=new zc().toDestination()}setInstrument(e){this.instrument=new zc(e).toDestination(),console.log("Instrumento MIDI configurado")}initialize(){lV()}loadSequence(e){Ga().bpm.value=e.bpm,this.sequence=e.notas,this.part&&this.part.dispose(),this.part=new jh((n,i)=>{this.instrument.triggerAttackRelease(i.note,i.duration,n)},this.sequence).start(0),this.part.loop=!1,console.log("Secuencia cargada")}start(){Ga().start()}pause(){Ga().pause()}stop(){Ga().stop(),Ga().seconds=0}getCurrentTime(){return Ga().seconds*1e3}tocarysoltar(e,n=1,i){this.instrument.triggerAttackRelease(e,n,PV()+i)}tocarNota(e){this.instrument.triggerAttack(e)}soltarNota(e){this.instrument.triggerRelease(e)}}class IV{constructor(){W(this,"bpm",40);W(this,"notas",[])}}class RV{constructor(e,n,i){W(this,"note");W(this,"duration");W(this,"time");this.note=e,this.duration=n,this.time=i}}class LV{constructor(e,n,i){W(this,"nota");W(this,"cuarto");W(this,"duracionCuartos");this.nota=e,this.cuarto=n,this.duracionCuartos=i}}class My{constructor(){W(this,"ppq",0)}GetSecuencia(e){const n=new IV;n.bpm=e.bpm?e.bpm:40;const i=e.pentagramas;if(i.length===0)return n;const s=i[0];for(let r=0;r<s.compases.length;r++)for(const o of s.compases[r].notas)for(const a in o){const c="1n",l=`${r}:0:0`;console.log(`Nota: ${o[a]}, Duración: ${c}, Tiempo: ${l}`),n.notas.push(new RV(o[a].nota,o[a].duracion.toString(),l))}return n}MidiToPentagramas(e){const n=[];this.ppq=e.header.ppq;for(const i of e.tracks){const s=new YE;s.instrumento=i.instrument.name||"Instrumento Desconocido";const r=[];for(const o of i.notes)r.push(this.GetResumen(o));s.compases=this.GetCompases(r),n.push(s)}return n}GetCompases(e){const n={};let i=0;for(const r of e){const o=Math.floor(r.cuarto/4);o>i&&(i=o),n[o]||(n[o]=[]),n[o].push(r)}const s=[];for(let r=0;r<=i;r++){const o=n[r]||[];s.push(this.GetPentagramaCompas(r,o))}return s}GetPentagramaCompas(e,n){const i=new SA,s=e*4,r={};for(const a of n){const c=a.cuarto-s;r[c]||(r[c]=[]),r[c].push(a)}console.log("Notas por cuarto en compás",e);let o=[];for(const a in r)o=[],console.log(`Cuarto ${a}:`),r[a].forEach((c,l)=>{o.push(new xA(c.nota,this.DuracionCuartosToDuracionNota(c.duracionCuartos))),console.log(`  Nota ${l+1}: ${c.nota} (duración: ${c.duracionCuartos})`)}),i.notas.push(o);return i}DuracionCuartosToDuracionNota(e){const n=[{cuartos:6,nota:"1d"},{cuartos:4,nota:"1"},{cuartos:3,nota:"2d"},{cuartos:2,nota:"2"},{cuartos:1.5,nota:"4d"},{cuartos:1,nota:"4"},{cuartos:.75,nota:"8d"},{cuartos:.5,nota:"8"},{cuartos:.375,nota:"16d"},{cuartos:.25,nota:"16"},{cuartos:.1875,nota:"32d"},{cuartos:.125,nota:"32"},{cuartos:.09375,nota:"64d"},{cuartos:.0625,nota:"64"}];let i=n[0],s=Math.abs(e-i.cuartos);for(const r of n){const o=Math.abs(e-r.cuartos);o<s&&(s=o,i=r)}return i.nota}GetResumen(e){const n=e.ticks/this.ppq,i=e.durationTicks/this.ppq,s=e.name;return new LV(s,n,i)}}const MV=Ue({__name:"Tocar_Midi",props:{compas:{},cancion:{}},setup(t){const e=t;let n=new qh;const i=J(!1);function s(){if(i.value){i.value=!1;return}console.log("Cargar"),n=new qh,fetch("InstrumentosMIDI/piano.json").then(l=>l.json()).then(l=>{n.setInstrument(l),n.initialize(),i.value=!0}).catch(l=>{console.error("Error loading samples:",l)}),console.log("Iniciar")}function r(){if(!i.value)return;const l=new My;n.loadSequence(l.GetSecuencia(e.cancion))}const o=new NN;o.setGetTiempoDesdeInicio(()=>n.getCurrentTime()),o.setIniciar(()=>{a()}),o.setPausar(()=>{c()}),Io(()=>{He().aplicacion.quitarMediaVista()}),bn(()=>{He().aplicacion.setMediaVista(o)});function a(){i.value&&n.start()}function c(){i.value&&n.stop()}return(l,u)=>(R(),B(be,null,[i.value?G("",!0):(R(),B("span",{key:0,onClick:s},"[INICIAR MIDI]")),i.value?(R(),B("span",{key:1,onClick:r},"[CARGAR CANCIÓN]")):G("",!0),i.value?(R(),B("span",{key:2,onClick:a},"[PLAY]")):G("",!0),i.value?(R(),B("span",{key:3,onClick:c},"[PAUSA]")):G("",!0),mt(" Pentagramas : "+ce(e.cancion.pentagramas.length),1)],64))}}),BV={style:{display:"flex","flex-wrap":"wrap"}},FV=Ue({__name:"Tocar_Acordes",props:{compas:{},cancion:{}},setup(t){const e=t,n=J(-1),i=J(-1),s=J(0),r=new Lo;function o(){return{height:r.getAltoPantalla()+"px"}}gt(()=>e.compas,l=>{let u=0;for(let p=0;p<e.cancion.acordes.ordenPartes.length;p++){let m=e.cancion.acordes.partes[e.cancion.acordes.ordenPartes[p]].acordes.length;if(l<u+m){n.value=p,i.value=l-u;break}u+=m}const d=r.getConfiguracionPantalla().tamanioAcordesolo;let h=n.value*d*2.8;h-=d*0;const f=Math.max(h,0);c(f),s.value=l});const a=J(null);function c(l){var u;console.log("moverScroll",l,a.value),(u=a.value)==null||u.scrollTo({top:l,behavior:"smooth"})}return(l,u)=>(R(),B("div",{ref_key:"letraDiv",ref:a,class:"overflow-auto divDeLetra",style:vt(o())},[(R(!0),B(be,null,We(l.cancion.acordes.ordenPartes,(d,h)=>(R(),B("div",{key:h},[N("div",null,ce(l.cancion.acordes.partes[d].nombre),1),N("div",BV,[(R(!0),B(be,null,We(l.cancion.acordes.partes[d].acordes,(f,p)=>(R(),B("div",{key:p,class:Dt(["acorde",{compas_actual:n.value===h&&i.value===p}])},ce(f),3))),128))])]))),128))],4))}}),UV=nt(FV,[["__scopeId","data-v-13115b70"]]);class sv{formatSegundos(e){if(isNaN(e))return"00:00";e=parseInt(e.toString());const n=Math.floor(e/60),i=e%60,s=n.toString().padStart(2,"0"),r=i.toString().padStart(2,"0");return`${s}:${r}`}}const VV={class:"controladortiempo"},WV={class:"controls"},HV={width:"100%",style:{"table-layout":"fixed","margin-left":"12px"},margin:"0"},XV=["colspan"],jV=["max"],qV={class:"spnTiempo"},zV=Ue({__name:"ControladorTiempo",setup(t){const e=He(),n=new sv,i=J(0),s=J("--:--");gt(()=>e.golpeDelCompas,(l,u)=>{l!==u&&(s.value=n.formatSegundos(e.cancion.duracionCompas*e.compas))}),gt(()=>e.compas,l=>{s.value=n.formatSegundos(e.cancion.duracionCompas*e.compas),i.value=l});function r(){e.aplicacion.play()}function o(){e.aplicacion.pause()}function a(){e.aplicacion.stop()}function c(){const l=i.value.toString();e.aplicacion.updateCompas(parseInt(l)+1)}return(l,u)=>{var d,h,f;return R(),B("div",VV,[N("div",WV,[ie(e).estadoReproduccion==="pausado"?(R(),B("button",{key:0,class:"boton_controller boton_controllerplay",onClick:r},u[2]||(u[2]=[N("i",{class:"bi bi-play-fill"},null,-1)]))):G("",!0),ie(e).estadoReproduccion!=="pausado"?(R(),B("button",{key:1,class:"boton_controller",onClick:o},u[3]||(u[3]=[N("i",{class:"bi bi-pause-fill"},null,-1)]))):G("",!0),ie(e).estadoReproduccion!=="pausado"?(R(),B("button",{key:2,class:"boton_controller",onClick:a},u[4]||(u[4]=[N("i",{class:"bi bi-stop-fill"},null,-1)]))):G("",!0)]),N("table",HV,[N("tbody",null,[N("tr",null,[N("td",{colspan:(d=ie(e).cancion)==null?void 0:d.totalCompases},[lt(N("input",{type:"range",min:"-1",max:(h=ie(e).cancion)==null?void 0:h.totalCompases,"onUpdate:modelValue":u[0]||(u[0]=p=>i.value=p),onInput:u[1]||(u[1]=p=>c()),class:"rango_compas"},null,40,jV),[[At,i.value]])],8,XV)])])]),N("span",qV,ce(s.value)+" / "+ce(ie(n).formatSegundos((f=ie(e).cancion)==null?void 0:f.duracionCancion)),1)])}}}),YV=nt(zV,[["__scopeId","data-v-9f372dfa"]]),JV={key:0,class:"divPrevia"},ZV={key:1},KV={class:"metronono"},QV={style:{display:"flex"}},GV={key:0},_V={class:"btn btn-secondary dropdown-toggle",type:"button",id:"dropdownMenuButton","data-bs-toggle":"dropdown","aria-expanded":"false"},$V={class:"dropdown-menu","aria-labelledby":"dropdownMenuButton"},eW=["onClick"],tW=Ue({__name:"metronomo",setup(t){let e=new qh;const n=He(),i=J(!1);let s=J([1,1,1,1,1,1,1,1,1]);const r=[{nota:"",nombre:"Silencio",icono:""},{nota:"C1",nombre:"Bombo",icono:"🪘"},{nota:"E4",nombre:"Caja",icono:"🥁"},{nota:"A#3",nombre:"Matraca",icono:"🪇"},{nota:"C#3",nombre:"Platillo cerrado",icono:"🔔>"},{nota:"D#3",nombre:"Platillo abierto",icono:"🔔<"},{nota:"G#4",nombre:"Triangulo",icono:"🎵"},{nota:"C5",nombre:"Silbato",icono:"🪈"},{nota:"F6",nombre:"Crash",icono:"🦶"}];function o(){if(i.value){i.value=!1;return}console.log("Cargar"),e=new qh,fetch("InstrumentosMIDI/bateria.json").then(l=>l.json()).then(l=>{e.setInstrument(l),e.initialize(),i.value=!0}).catch(l=>{console.error("Error loading samples:",l)}),console.log("Iniciar")}function a(){if(!i.value)return;const l=r[s.value[n.golpeDelCompas+1]].nota;l!=""&&e.tocarysoltar(l,.05,0)}gt(()=>n.golpeDelCompas,(l,u)=>{l!==u&&a()});function c(l,u=0){s.value[l]=u}return(l,u)=>(R(),B(be,null,[ie(n).estadoReproduccion=="Iniciando"?(R(),B("div",JV," Empieza en "+ce(ie(n).cancion.compasCantidad-ie(n).golpeDelCompas),1)):G("",!0),ie(n).cancion?(R(),B("div",ZV,[N("div",KV,[N("div",QV,[(R(!0),B(be,null,We(ie(n).cancion.compasCantidad*1,d=>(R(),B("div",{key:d,class:Dt(["beat",{beat_activo:d-1===ie(n).golpeDelCompas&&ie(n).estadoReproduccion==="Reproduciendo"}])},[i.value?G("",!0):(R(),B("span",GV,ce(d),1)),i.value?(R(),B("div",{class:"dropdown",key:d},[N("button",_V,ce(d)+ce(r[ie(s)[d]].icono),1),N("ul",$V,[(R(),B(be,null,We(r,(h,f)=>N("li",{key:f},[N("a",{class:"dropdown-item",onClick:p=>c(d,f)},ce(h.icono)+" "+ce(h.nombre),9,eW)])),64))])])):G("",!0)],2))),128)),N("div",{class:Dt(["beat",{beat_activo:i.value}]),onClick:o}," 🥁 ",2)])])])):G("",!0)],64))}}),nW=nt(tW,[["__scopeId","data-v-7eaa86c0"]]),iW={class:"partediv"},sW=Ue({__name:"Partes",props:{compas:{},cancion:{}},setup(t){const e=t,n=J(-1),i=J(-1),s=J(0),r=J([]),o=J([]);return gt(()=>e.cancion,a=>{let c=[],l=[],u=-1;a.acordes.ordenPartes.forEach(d=>{u!=d?(c.push(d),l.push(1),u=d):l[l.length-1]+=1}),r.value=c,o.value=l}),gt(()=>e.compas,a=>{let c=0;for(let l=0;l<e.cancion.acordes.ordenPartes.length;l++){let u=e.cancion.acordes.partes[e.cancion.acordes.ordenPartes[l]].acordes.length;if(a<c+u){n.value=l,i.value=a-c;break}c+=u}s.value=a}),(a,c)=>(R(),B("div",null,[c[0]||(c[0]=N("span",{style:{"font-size":"large"}},"Partes",-1)),(R(!0),B(be,null,We(a.cancion.acordes.partes,(l,u)=>(R(),B("div",{key:l.nombre,class:"row"},[N("div",null,ce(l.nombre),1),N("div",iW,[(R(!0),B(be,null,We(l.acordes,(d,h)=>(R(),B("div",{class:"acordediv",key:h},[N("span",{class:Dt({compas_actual:i.value===h&&u===a.cancion.acordes.ordenPartes[n.value]})},ce(d),3)]))),128))])]))),128))]))}}),rW=nt(sW,[["__scopeId","data-v-e7380a29"]]),oW={key:1},aW={style:{display:"flex","flex-wrap":"wrap"}},cW={class:"ordendiv"},lW={key:0,class:"repeticion"},uW={key:0},dW={key:1},hW=Ue({__name:"Secuencia",props:{compas:{},cancion:{}},setup(t){const e=t,n=J(-1),i=J(-1),s=J(0),r=J([]),o=J([]),a=J(-1),c=J(-1);gt(()=>e.cancion,h=>{l(h)});function l(h){let f=[],p=[],m=-1;h.acordes.ordenPartes.forEach(b=>{m!=b?(f.push(b),p.push(1),m=b):p[p.length-1]+=1}),r.value=f,o.value=p}gt(()=>e.compas,h=>{let f=0;for(let p=0;p<e.cancion.acordes.ordenPartes.length;p++){let m=e.cancion.acordes.partes[e.cancion.acordes.ordenPartes[p]].acordes.length;if(h<f+m){n.value=p,i.value=h-f;break}f+=m}s.value=h,u()});function u(){if(o.value.length==0)return;let h=o.value[0],f=0;for(;h<=n.value;)f++,h+=o.value[f];a.value=f,c.value=o.value[f]-(h-n.value)}function d(){return o.value.length==0,!1}return l(e.cancion),(h,f)=>(R(),B(be,null,[d()?(R(),B("div",{key:0,onClick:f[0]||(f[0]=p=>l(e.cancion))}," .. No cargada .. ")):G("",!0),o.value.length>0?(R(),B("div",oW,[N("div",aW,[(R(!0),B(be,null,We(r.value,(p,m)=>(R(),B("div",{key:m,class:"secuencia"},[N("div",null,[N("span",{style:{color:"#a9a8f6","font-size":"small"},class:Dt({compas_actual:a.value===m})},ce(h.cancion.acordes.partes[p].nombre),3)]),N("div",cW,[(R(!0),B(be,null,We(h.cancion.acordes.partes[p].acordes,(b,E)=>(R(),B("span",{class:Dt(["acordeSecuencia",{acordeSeleccionado:i.value===E&&a.value===m}]),key:E},ce(b),3))),128))]),o.value[m]>1?(R(),B("div",lW,[a.value!=m?(R(),B("span",uW,"x "+ce(o.value[m]),1)):G("",!0),a.value==m?(R(),B("span",dW,ce(c.value+1)+" / "+ce(o.value[m]),1)):G("",!0)])):G("",!0)]))),128))])])):G("",!0)],64))}}),fW=nt(hW,[["__scopeId","data-v-5a1b2765"]]);class pW{constructor(e,n,i){W(this,"position");W(this,"barres");W(this,"chord");this.chord=e,this.position=n,this.barres=i}}class mW{static getAcorde(e){console.log("getAcorde",e);const n=[[1,0],[2,0],[3,0],[4,0],[5,0],[6,0]],i=0,s=[];return e==="B7"&&(n[0]=[1,3],n[2]=[3,3],n[3]=[4,2],n[4]=[5,3],n[5]=[6,"x"]),e==="G"&&(n[0]=[1,3],n[4]=[5,2],n[5]=[6,3]),e==="C"&&(n[1]=[2,1],n[3]=[4,2],n[4]=[5,3],n[5]=[6,"x"]),e==="E"&&(n[3]=[4,2],n[4]=[5,2]),e==="Em"&&(n[3]=[4,2],n[4]=[5,2]),new pW(n,i,s)}}const gW={class:""},EW=Ue({__name:"Acorde",props:{acorde:{}},setup(t){const e=t,n=J(null);return bn(()=>{var r;const i="ponerAcorde"+Math.floor(Math.random()*1e7),s=document.createElement("div");s.id=i,(r=n.value)==null||r.appendChild(s),mW.getAcorde(e.acorde)}),(i,s)=>(R(),B("div",null,[N("div",{id:"divponerAcorde",ref_key:"controlDiv",ref:n},null,512),N("div",gW,ce(i.acorde),1)]))}}),vW=nt(EW,[["__scopeId","data-v-9a5f24a6"]]),bW={class:"acordesPantalla"},SW=Ue({__name:"ProximosAcordes",props:{compas:{},cancion:{}},setup(t){const e=t,n=J([]),i=J([]);function s(r){n.value=[];const o=r>0?r:0;for(let a=o;a<i.value.length;a++){const c=i.value[a].split(" ");if(n.value.push(...c),n.value=[...new Set(n.value)],n.value.length>4){n.value=n.value.slice(0,4);return}}}return gt(()=>e.cancion,r=>{i.value=r.acordes.GetTodosLosAcordes(),s(e.compas)}),gt(()=>e.compas,r=>{s(r)}),(r,o)=>(R(),B(be,null,[o[0]||(o[0]=N("span",{style:{"font-size":"large"}},"Proximos Acordes",-1)),N("div",bW,[(R(!0),B(be,null,We(n.value,(a,c)=>(R(),dt(vW,{acorde:a,key:c,class:"acordediv"},null,8,["acorde"]))),128))])],64))}}),xW=nt(SW,[["__scopeId","data-v-21cf3728"]]),TW={class:"editSize"},CW={class:"config-row"},wW={class:"config-row"},AW={class:"config-row"},NW={class:"config-row"},yW={class:"config-row"},kW={class:"config-row"},DW={class:"config-row"},OW={class:"config-row"},PW={class:"botonera"},IW=Ue({__name:"editVista",emits:["cerrarEditSize"],setup(t,{emit:e}){const n=J(new Ol),i=e,s=new Lo,r=Os.getInstance(),o=J(s.getConfiguracionPantalla());n.value.altoPantallaDescuento=o.value.altoPantallaDescuento,n.value.anchoPrincipal=o.value.anchoPrincipal,n.value.tamanioAcorde=o.value.tamanioAcorde,n.value.tamanioAcordesolo=o.value.tamanioAcordesolo,n.value.tamanioLetra=o.value.tamanioLetra,n.value.tamanioParte=o.value.tamanioParte,n.value.tamanioAcordeParte=o.value.tamanioAcordeParte,n.value.factorScroll=o.value.factorScroll,n.value.columnas=o.value.columnas;function a(){r.guardarEnLocalStorage(),i("cerrarEditSize")}function c(){o.value.altoPantallaDescuento=n.value.altoPantallaDescuento,o.value.altoPantallaDescuento=n.value.altoPantallaDescuento,o.value.anchoPrincipal=n.value.anchoPrincipal,o.value.tamanioAcorde=n.value.tamanioAcorde,o.value.tamanioAcordesolo=n.value.tamanioAcordesolo,o.value.tamanioLetra=n.value.tamanioLetra,o.value.tamanioParte=n.value.tamanioParte,o.value.tamanioAcordeParte=n.value.tamanioAcordeParte,o.value.factorScroll=n.value.factorScroll,s.setearEstilos(),i("cerrarEditSize")}return gt(o.value,()=>{s.setearEstilos()}),(l,u)=>(R(),B("div",TW,[u[18]||(u[18]=N("div",{class:"tituloeditSize"},"Tamaños",-1)),N("div",CW,[u[10]||(u[10]=N("span",null,"Letra",-1)),lt(N("input",{type:"range",min:"8",max:"40","onUpdate:modelValue":u[0]||(u[0]=d=>o.value.tamanioLetra=d)},null,512),[[At,o.value.tamanioLetra,void 0,{number:!0}]]),N("span",null,ce(o.value.tamanioLetra)+" px",1)]),N("div",wW,[u[11]||(u[11]=N("span",null,"Acorde",-1)),lt(N("input",{type:"range",min:"8",max:"40","onUpdate:modelValue":u[1]||(u[1]=d=>o.value.tamanioAcorde=d)},null,512),[[At,o.value.tamanioAcorde,void 0,{number:!0}]]),N("span",null,ce(o.value.tamanioAcorde)+" px",1)]),N("div",AW,[u[12]||(u[12]=N("span",null,"Acorde Solo",-1)),lt(N("input",{type:"range",min:"8",max:"40","onUpdate:modelValue":u[2]||(u[2]=d=>o.value.tamanioAcordesolo=d)},null,512),[[At,o.value.tamanioAcordesolo,void 0,{number:!0}]]),N("span",null,ce(o.value.tamanioAcordesolo)+" px",1)]),N("div",NW,[u[13]||(u[13]=N("span",null,"Secuencia",-1)),lt(N("input",{type:"range",min:"8",max:"40","onUpdate:modelValue":u[3]||(u[3]=d=>o.value.tamanioParte=d)},null,512),[[At,o.value.tamanioParte,void 0,{number:!0}]]),N("span",null,ce(o.value.tamanioParte)+" px",1)]),N("div",yW,[u[14]||(u[14]=N("span",null,"Acorde Parte",-1)),lt(N("input",{type:"range",min:"8",max:"40","onUpdate:modelValue":u[4]||(u[4]=d=>o.value.tamanioAcordeParte=d)},null,512),[[At,o.value.tamanioAcordeParte,void 0,{number:!0}]]),N("span",null,ce(o.value.tamanioAcordeParte)+" px",1)]),N("div",kW,[u[15]||(u[15]=N("span",null,"Ancho Pantalla Principal",-1)),lt(N("input",{type:"range",min:"3",max:"98","onUpdate:modelValue":u[5]||(u[5]=d=>o.value.anchoPrincipal=d)},null,512),[[At,o.value.anchoPrincipal,void 0,{number:!0}]]),N("span",null,ce(o.value.anchoPrincipal),1)]),N("div",DW,[u[16]||(u[16]=N("span",null,"Columnas",-1)),lt(N("input",{type:"range",min:"10",max:"120","onUpdate:modelValue":u[6]||(u[6]=d=>o.value.columnas=d)},null,512),[[At,o.value.columnas,void 0,{number:!0}]]),N("span",null,ce(o.value.columnas),1)]),N("div",OW,[u[17]||(u[17]=N("span",null,"Factor Scroll",-1)),lt(N("input",{type:"range",min:"0.2",max:"3",step:"0.1","onUpdate:modelValue":u[7]||(u[7]=d=>o.value.factorScroll=d)},null,512),[[At,o.value.factorScroll,void 0,{number:!0}]]),N("span",null,ce(o.value.factorScroll),1)]),N("div",PW,[N("button",{onClick:u[8]||(u[8]=d=>a()),class:"btnGuardar"}," Guardar "),N("button",{onClick:u[9]||(u[9]=d=>c()),class:"btnGuardar"}," Cancelar ")])]))}}),RW={class:"tocar-fluid"},LW={class:"dropdown dropdown-superior-derecha"},MW={class:"dropdown-menu","aria-labelledby":"dropdownMenuButton"},BW={class:"dropdown-item",href:"#"},FW={key:0,class:"bi bi-check-circle"},UW={class:"dropdown-item",href:"#"},VW={key:0,class:"bi bi-check-circle"},WW={class:"dropdown-item",href:"#"},HW={key:0,class:"bi bi-check-circle"},XW={class:"dropdown-item",href:"#"},jW={key:0,class:"bi bi-check-circle"},qW={class:"dropdown-item",href:"#"},zW={key:0,class:"bi bi-check-circle"},YW={class:"controladoresTiempo"},JW=Ue({__name:"tocar",setup(t){const e=new Lo;bn(()=>{e.setearEstilos()});const n=He();class i{constructor(){W(this,"viendo","karaoke");W(this,"media",!1);W(this,"midi",!1);W(this,"secuencia",!0);W(this,"partes",!0);W(this,"proximosAcordes",!1)}}const s=J(new i);s.value.viendo=localStorage.getItem("viendo_vista_tocando")||"karaoke",s.value.secuencia=localStorage.getItem("secuencia")=="true",s.value.partes=localStorage.getItem("partes")=="true",s.value.proximosAcordes=localStorage.getItem("proximosAcordes")=="true",s.value.media=localStorage.getItem("media")=="true",s.value.midi=localStorage.getItem("midi")=="true";function r(){s.value.secuencia=!s.value.secuencia,localStorage.setItem("secuencia",s.value.secuencia?"true":"false")}function o(){s.value.partes=!s.value.partes,localStorage.setItem("partes",s.value.partes?"true":"false")}function a(){s.value.media=!s.value.media,localStorage.setItem("media",s.value.media?"true":"false")}function c(){s.value.midi=!s.value.midi,localStorage.setItem("midi",s.value.midi?"true":"false")}function l(){s.value.proximosAcordes=!s.value.proximosAcordes,localStorage.setItem("proximosAcordes",s.value.proximosAcordes?"true":"false")}function u(){return{width:e.getAnchoPantalla()+"px",height:e.getAltoPantalla()+"px"}}function d(v){s.value.viendo=v,localStorage.setItem("viendo_vista_tocando",v)}function h(){let v=100;return(s.value.secuencia||s.value.proximosAcordes||s.value.partes||s.value.midi||s.value.media)&&(v=e.getConfiguracionPantalla().anchoPrincipal),`width: ${v}%; height: 100%; `}function f(){let v=100;return(s.value.secuencia||s.value.proximosAcordes||s.value.partes||s.value.midi||s.value.media)&&(v=e.getConfiguracionPantalla().anchoPrincipal),`width: ${100-v}%;`}const p=J(!1);function m(){p.value=!0}const b=Sf();function E(){n.editandocancion=n.cancion,n.origenEditando=new Ui(n.origenCancion.origenUrl,n.origenCancion.fileName,n.origenCancion.usuario),n.cancionModificada=!1,b.push("/editar")}function x(){p.value=!1}function S(v){console.log("Cambio de estado en tocar.vue",v),n.aplicacion.CambioEstadoMedio(v)}return(v,T)=>(R(),B("div",RW,[p.value?(R(),dt(IW,{key:0,onCerrarEditSize:x})):G("",!0),ie(n).cancion?(R(),B("div",{key:1,class:"pantallaPlay",style:vt(u())},[N("div",{class:"columnas",style:vt(h())},[s.value.viendo=="acordes"?(R(),dt($w,{key:0,cancion:ie(n).cancion,compas:ie(n).compas},null,8,["cancion","compas"])):G("",!0),s.value.viendo=="karaoke"?(R(),dt(_M,{key:1,cancion:ie(n).cancion,compas:ie(n).compas},null,8,["cancion","compas"])):G("",!0),s.value.viendo=="soloacordes"?(R(),dt(UV,{key:2,cancion:ie(n).cancion,compas:ie(n).compas},null,8,["cancion","compas"])):G("",!0),s.value.viendo=="pentagrama"?(R(),dt(CA,{key:3,cancion:ie(n).cancion,compas:ie(n).compas},null,8,["cancion","compas"])):G("",!0)],4),N("div",{class:"columnas lateral-container",style:vt(f())},[s.value.media?(R(),dt(VF,{key:0,onCambioEstado:S,cancion:ie(n).cancion,compas:ie(n).compas},null,8,["cancion","compas"])):G("",!0),s.value.midi?(R(),dt(MV,{key:1,onCambioEstado:S,cancion:ie(n).cancion,compas:ie(n).compas},null,8,["cancion","compas"])):G("",!0),s.value.secuencia?(R(),dt(fW,{key:2,cancion:ie(n).cancion,compas:ie(n).compas},null,8,["cancion","compas"])):G("",!0),s.value.proximosAcordes?(R(),dt(xW,{key:3,cancion:ie(n).cancion,compas:ie(n).compas},null,8,["cancion","compas"])):G("",!0),s.value.partes?(R(),dt(rW,{key:4,cancion:ie(n).cancion,compas:ie(n).compas,secuencia:s.value.secuencia,partes:s.value.partes},null,8,["cancion","compas","secuencia","partes"])):G("",!0)],4),N("div",LW,[T[25]||(T[25]=N("button",{class:"btn btn-secondary dropdown-toggle",type:"button",id:"dropdownMenuButton","data-bs-toggle":"dropdown","aria-expanded":"false"},[N("i",{class:"bi bi-eye"})],-1)),N("ul",MW,[N("li",{onClick:T[0]||(T[0]=w=>d("karaoke"))},T[11]||(T[11]=[N("a",{class:"dropdown-item",href:"#"},"Karaoke",-1)])),N("li",{onClick:T[1]||(T[1]=w=>d("acordes"))},T[12]||(T[12]=[N("a",{class:"dropdown-item",href:"#"},"Acordes",-1)])),N("li",{onClick:T[2]||(T[2]=w=>d("soloacordes"))},T[13]||(T[13]=[N("a",{class:"dropdown-item",href:"#"},"Solo Acordes",-1)])),N("li",{onClick:T[3]||(T[3]=w=>d("pentagrama"))},T[14]||(T[14]=[N("a",{class:"dropdown-item",href:"#"},"Pentagrama",-1)])),T[22]||(T[22]=N("li",null,[N("hr",{class:"dropdown-divider"})],-1)),N("li",{onClick:T[4]||(T[4]=w=>a())},[N("a",BW,[s.value.media?(R(),B("i",FW)):G("",!0),T[15]||(T[15]=mt(" Media"))])]),N("li",{onClick:T[5]||(T[5]=w=>c())},[N("a",UW,[s.value.midi?(R(),B("i",VW)):G("",!0),T[16]||(T[16]=mt(" Midi"))])]),N("li",{onClick:T[6]||(T[6]=w=>r())},[N("a",WW,[s.value.secuencia?(R(),B("i",HW)):G("",!0),T[17]||(T[17]=mt(" Secuencia"))])]),N("li",{onClick:T[7]||(T[7]=w=>o())},[N("a",XW,[s.value.partes?(R(),B("i",jW)):G("",!0),T[18]||(T[18]=mt(" Partes"))])]),N("li",{onClick:T[8]||(T[8]=w=>l())},[N("a",qW,[s.value.proximosAcordes?(R(),B("i",zW)):G("",!0),T[19]||(T[19]=mt(" Proximos Acordes"))])]),T[23]||(T[23]=N("li",null,[N("hr",{class:"dropdown-divider"})],-1)),N("li",{onClick:T[9]||(T[9]=w=>m())},T[20]||(T[20]=[N("a",{class:"dropdown-item",href:"#"}," Ajustar Tamaños",-1)])),T[24]||(T[24]=N("li",null,[N("hr",{class:"dropdown-divider"})],-1)),N("li",{onClick:T[10]||(T[10]=w=>E())},T[21]||(T[21]=[N("a",{class:"dropdown-item",href:"#"},"Editar",-1)]))])])],4)):G("",!0),N("div",YW,[v.$route.path==="/tocar"?(R(),dt(YV,{key:0})):G("",!0),v.$route.path==="/tocar"?(R(),dt(nW,{key:1,ref:"metronomeRef"},null,512)):G("",!0)])]))}}),ZW=nt(JW,[["__scopeId","data-v-4dfe7fcc"]]),KW={};function QW(t,e){return"Buscar no disponible"}const GW=nt(KW,[["render",QW],["__scopeId","data-v-fcf34558"]]),_W={style:{"border-collapse":"collapse",width:"100%"}},$W=["value"],eH=Ue({__name:"editarescala",props:{cancion:{}},emits:["cerrar"],setup(t,{emit:e}){const n=J(""),i=J(""),s=J(!1),r=He(),o=J([]),a=J([]),c=J([]),l=J(["I","II","III","IV","V","VI","VII"]),u=J([]),d=new zE,h=J(d.GetNotas());function f(){r.editandocancion.escala?(i.value=r.editandocancion.escala,i.value.includes("m")&&(s.value=!0,i.value=i.value.replace("m","")),a.value=d.GetAcordesdeescala(r.editandocancion.escala),o.value=d.GetNotasPosicionadasEscala(r.editandocancion,a.value),n.value=i.value):n.value="C"}f();function p(){let x=n.value;s.value&&(x+="m"),c.value=d.GetAcordesdeescala(x),u.value=d.GetNotasPosicionadasNuevaEscala(o.value,a.value,c.value)}const m=e;function b(){m("cerrar",!1)}function E(){d.ActualizarEscala(r.editandocancion,a.value,c.value),m("cerrar",!0)}return(x,S)=>(R(),B(be,null,[N("div",null,[N("span",{class:"lblCabecera",onClick:b},"[cancelar]"),n.value!=i.value?(R(),B("span",{key:0,class:"lblCabecera",onClick:E},"[confirmar]")):G("",!0)]),N("div",null,[N("table",_W,[N("thead",null,[N("tr",null,[S[1]||(S[1]=N("th",null,null,-1)),(R(!0),B(be,null,We(a.value,(v,T)=>(R(),B("th",{key:T},ce(l.value[T])+" - "+ce(v),1))),128)),S[2]||(S[2]=N("th",null,null,-1))])]),N("tbody",null,[N("tr",null,[S[3]||(S[3]=N("td",null,"Notas",-1)),(R(!0),B(be,null,We(o.value,(v,T)=>(R(),B("td",{key:T},[(R(!0),B(be,null,We(v,(w,D)=>(R(),B("span",{class:"notaPosicionada",key:D},ce(w),1))),128))]))),128))]),N("tr",null,[N("td",null,[lt(N("select",{"onUpdate:modelValue":S[0]||(S[0]=v=>n.value=v),onChange:p},[(R(!0),B(be,null,We(h.value,(v,T)=>(R(),B("option",{key:T,value:v},ce(v),9,$W))),128))],544),[[Ro,n.value]])]),(R(!0),B(be,null,We(c.value,(v,T)=>(R(),B("td",{key:T},ce(l.value[T])+" - "+ce(v),1))),128)),S[4]||(S[4]=N("td",null,null,-1))]),N("tr",null,[S[5]||(S[5]=N("td",null,"Nuevas Notas",-1)),(R(!0),B(be,null,We(u.value,(v,T)=>(R(),B("td",{key:T},[(R(!0),B(be,null,We(v,(w,D)=>(R(),B("span",{class:"notaPosicionada",key:D},ce(w),1))),128))]))),128))])])])])],64))}}),tH=nt(eH,[["__scopeId","data-v-ba7fb0a3"]]),nH={style:{width:"100%"}},iH={key:0},sH={key:0,value:"fogon"},rH={key:1,value:"server"},oH=Ue({__name:"editararchivo",props:{cancion:{},origen:{}},emits:["cerrar"],setup(t,{emit:e}){const n=e,i=t,s=J(""),r=J(""),o=J(""),a=J(""),c=J("");s.value=i.cancion.cancion,r.value=i.cancion.banda,o.value=i.cancion.archivo||"archivo_noload",a.value=i.origen.origenUrl,c.value=i.origen.origenUrl;const l=He();function u(){n("cerrar",!1)}function d(){l.editandocancion=Co.GetDefault("Nueva"),l.cancion=l.editandocancion,n("cerrar",!0)}function h(){console.log("Descargando JSON de la canción actual...");const p=Ea.CancionToJSON(i.cancion);console.log("Descargando JSON:",p);const m=new Blob([p],{type:"application/json"}),b=URL.createObjectURL(m),E=document.createElement("a");E.href=b;const x=`${l.editandocancion.archivo}.json`.toLocaleLowerCase();E.download=x,E.click(),URL.revokeObjectURL(b)}function f(){yr.getInstance().Save(new Ui(c.value,o.value,""),i.cancion).then(()=>{console.log("Cambios guardados exitosamente"),n("cerrar",!0)}).catch(p=>{console.error("Error al guardar los cambios:",p)})}return(p,m)=>(R(),B(be,null,[N("div",null,[N("span",{class:"lblCabecera",onClick:u},"[cancelar]"),["server","local","fogon"].includes(c.value)?(R(),B("span",{key:0,onClick:f}," [guardar] ")):G("",!0),N("span",{class:"lblCabecera",onClick:d},"[nuevo]"),N("span",{class:"lblCabecera",onClick:h},"[descargar]")]),N("div",nH,[N("div",null,[p.origen.origenUrl==="sitio"?(R(),B("label",iH,"🌐")):G("",!0),m[4]||(m[4]=mt(" Cancion: ")),lt(N("input",{type:"text","onUpdate:modelValue":m[0]||(m[0]=b=>s.value=b),style:vt({width:s.value.length+"ch"}),class:"input-editable"},null,4),[[At,s.value]]),m[5]||(m[5]=mt(" - Banda: ")),lt(N("input",{type:"text","onUpdate:modelValue":m[1]||(m[1]=b=>r.value=b),style:vt({width:r.value.length+1+"ch"}),class:"input-editable"},null,4),[[At,r.value]])])]),N("div",null,[m[8]||(m[8]=mt(" Archivo: ")),lt(N("input",{type:"text","onUpdate:modelValue":m[2]||(m[2]=b=>o.value=b),style:vt({width:o.value.length+"ch"}),class:"input-editable"},null,4),[[At,o.value]]),m[9]||(m[9]=mt(" Origen: ")),lt(N("select",{"onUpdate:modelValue":m[3]||(m[3]=b=>c.value=b)},[m[6]||(m[6]=N("option",{value:"sitio"},"🌐Sitio",-1)),m[7]||(m[7]=N("option",{value:"local"},"💾LocalStorage",-1)),ie(l).estadoSesion==="conectado"?(R(),B("option",sH," 🔥Fogón ")):G("",!0),ie(l).estadoLogin==="logueado"?(R(),B("option",rH," 🔌Servidor ")):G("",!0)],512),[[Ro,c.value]])]),m[10]||(m[10]=N("div",null,null,-1))],64))}}),aH=nt(oH,[["__scopeId","data-v-7d984f99"]]),cH={class:"media-controls"},lH=["onUpdate:modelValue"],uH=["value"],dH=["onUpdate:modelValue"],hH=["onUpdate:modelValue"],fH=["onClick"],pH=Ue({__name:"editarmedias",props:{cancion:{},origen:{}},emits:["cerrar"],setup(t,{emit:e}){const n=e,i=t,s=J(i.cancion.medias),r=["Youtube","Spotify","Midi"],o=()=>{s.value.push(new Pw("Youtube","",0))},a=l=>{s.value.splice(l,1)},c=()=>{i.cancion.medias=s.value,n("cerrar")};return(l,u)=>(R(),B(be,null,[N("div",null,[N("span",{onClick:u[0]||(u[0]=d=>n("cerrar"))},"[Cancelar]"),N("span",{onClick:c},"[Guardar]"),N("span",{onClick:o},"[+ Agregar Medio]")]),(R(!0),B(be,null,We(s.value,(d,h)=>(R(),B("div",{key:h},[N("div",cH,[lt(N("select",{"onUpdate:modelValue":f=>d.tipo=f},[(R(),B(be,null,We(r,f=>N("option",{key:f,value:f},ce(f),9,uH)),64))],8,lH),[[Ro,d.tipo]]),lt(N("input",{"onUpdate:modelValue":f=>d.id=f,placeholder:"ID del media"},null,8,dH),[[At,d.id]]),lt(N("input",{"onUpdate:modelValue":f=>d.delay=f,placeholder:"Delay del media",class:"delay-input"},null,8,hH),[[At,d.delay]]),N("button",{onClick:f=>a(h),class:"btn-eliminar"},"❌",8,fH)])]))),128))],64))}}),mH=nt(pH,[["__scopeId","data-v-4f126942"]]),gH={key:0},EH={key:0},vH={key:1},bH={key:2},SH={key:3},xH={key:4},TH={key:5},CH={key:6},wH={key:7},AH={key:8},NH=Ue({__name:"editartiempo",props:{cancion:{}},emits:["cerrar"],setup(t,{emit:e}){const n=new sv,i=t,s=J(0),r=J(1),o=J(2),a=e;bn(()=>{s.value=i.cancion.bpm||120,r.value=i.cancion.compasCantidad,o.value=i.cancion.compasUnidad});function c(){i.cancion.bpm=s.value,i.cancion.compasCantidad=r.value,i.cancion.compasUnidad=o.value,a("cerrar")}function l(){a("cerrar",!1)}return(u,d)=>(R(),B(be,null,[N("span",{onClick:l},"[Cancelar]"),N("span",{onClick:c},"[Guardar]"),u.cancion?(R(),B("div",gH,[d[3]||(d[3]=N("span",{class:"lblCabecera"},"BPM:",-1)),lt(N("input",{type:"range",style:{"background-color":"#a9a8f6",color:"white"},"onUpdate:modelValue":d[0]||(d[0]=h=>s.value=h),min:"30",max:"240"},null,512),[[At,s.value]]),mt(" "+ce(s.value)+" - ",1),s.value>=40&&s.value<=60?(R(),B("span",EH,"Largo")):G("",!0),s.value>60&&s.value<=66?(R(),B("span",vH,"Largo a Adagio")):G("",!0),s.value>66&&s.value<=76?(R(),B("span",bH,"Adagio")):G("",!0),s.value>76&&s.value<=108?(R(),B("span",SH,"Andante")):G("",!0),s.value>108&&s.value<=120?(R(),B("span",xH,"Moderato")):G("",!0),s.value>120&&s.value<=168?(R(),B("span",TH,"Allegro")):G("",!0),s.value>168&&s.value<=176?(R(),B("span",CH,"Vivace")):G("",!0),s.value>176&&s.value<=200?(R(),B("span",wH,"Presto")):G("",!0),s.value>200?(R(),B("span",AH,"Prestissimo")):G("",!0),d[4]||(d[4]=N("span",null," - ",-1)),d[5]||(d[5]=N("span",{class:"lblCabecera"},"Compas:",-1)),lt(N("input",{type:"text","onUpdate:modelValue":d[1]||(d[1]=h=>r.value=h),maxlength:"1",style:{width:"3ch"}},null,512),[[At,r.value]]),d[6]||(d[6]=mt(" / ")),lt(N("input",{type:"text","onUpdate:modelValue":d[2]||(d[2]=h=>o.value=h),maxlength:"1",style:{width:"3ch"}},null,512),[[At,o.value]]),d[7]||(d[7]=mt(" Duracion Cancion: ")),N("span",null,ce(ie(n).formatSegundos(60/s.value*r.value*i.cancion.totalCompases)),1),d[8]||(d[8]=mt(" Duracion Compas: ")),N("span",null,ce((60/s.value*r.value).toFixed(2)),1)])):G("",!0)],64))}}),yH={class:"navbarFogon"},kH={key:0},DH=Ue({__name:"editarcabecera",props:{cancion:{},origen:{}},emits:["editarPentagramas"],setup(t,{emit:e}){const n=new sv,i=J(""),s=e;function r(c){if(c==="pentagramas"){s("editarPentagramas");return}i.value=c}const o=He();function a(c){console.log("clickCerrar",c),i.value="",c&&(o.cancionModificada=!0)}return(c,l)=>(R(),B("div",yH,[Qe(Gw,{origen:c.origen.origenUrl},null,8,["origen"]),N("label",{onClick:l[0]||(l[0]=u=>r("archivo")),onCerrar:a},"🔄",32),N("label",null,ce(c.cancion.cancion)+" - "+ce(c.cancion.banda),1),ie(o).cancionModificada?(R(),B("label",kH,"*")):G("",!0),mt(" Escala: - "+ce(c.cancion.escala)+" ",1),N("label",{onClick:l[1]||(l[1]=u=>r("escala")),onCerrar:a},"🔄",32),N("label",null,"Duracion: "+ce(ie(n).formatSegundos(c.cancion.duracionCancion)),1),N("label",{onClick:l[2]||(l[2]=u=>r("tiempo")),onCerrar:a},"🔄",32),N("label",null,"BPM: "+ce(c.cancion.bpm)+" Compas: "+ce(c.cancion.compasCantidad)+"/ "+ce(c.cancion.compasUnidad),1),l[5]||(l[5]=mt("  ")),N("label",null,"Duracion: "+ce(ie(n).formatSegundos(c.cancion.duracionCancion)),1),N("label",null,"Medios: "+ce(c.cancion.medias.length),1),N("label",{onClick:l[3]||(l[3]=u=>r("medias"))},"🔄"),N("label",null,"Pentagramas: "+ce(c.cancion.pentagramas.length),1),N("label",{onClick:l[4]||(l[4]=u=>r("pentagramas"))},"🔄"),N("div",null,[i.value=="medias"?(R(),dt(mH,{key:0,cancion:c.cancion,origen:c.origen,onCerrar:a},null,8,["cancion","origen"])):G("",!0),i.value=="archivo"?(R(),dt(aH,{key:1,onCerrar:a,cancion:c.cancion,origen:c.origen},null,8,["cancion","origen"])):G("",!0),i.value=="escala"?(R(),dt(tH,{key:2,cancion:c.cancion,onCerrar:a},null,8,["cancion"])):G("",!0),i.value=="tiempo"?(R(),dt(NH,{key:3,cancion:c.cancion,onCerrar:a},null,8,["cancion"])):G("",!0)])]))}}),OH=nt(DH,[["__scopeId","data-v-7cc6c1d9"]]);class yx{static splitearParte(e,n,i){const s=e.acordes.ordenPartes[n],r=e.acordes.partes[s],o=[r.acordes.slice(0,i),r.acordes.slice(i)];if(o[0].length==0)return;const a=new $s(r.nombre,o[0]),c=new $s(r.nombre+"B",o[1]),l=[];e.acordes.partes.forEach((d,h)=>{h===s?(l.push(a),l.push(c)):l.push(d)}),e.acordes.partes=l;const u=[];e.acordes.ordenPartes.forEach(d=>{d===s?(u.push(d),u.push(d+1)):d>=s?u.push(d+1):u.push(d)}),e.acordes.ordenPartes=u,console.log(u)}static mixAcorde(e,n,i){const s=e.letras.renglones.flat();let r=0;const o=e.acordes.ordenPartes[n],a=[];i>=0&&i<e.acordes.partes[o].acordes.length-1&&(e.acordes.partes[o].acordes[i]=e.acordes.partes[o].acordes[i]+" "+e.acordes.partes[o].acordes[i+1],e.acordes.partes[o].acordes.splice(i+1,1));for(let c=0;c<e.acordes.ordenPartes.length;c++){const l=e.acordes.ordenPartes[c];if(l===o){if(n==l)for(let u=0;u<e.acordes.partes[l].acordes.length;u++)u===i?(a.push(s[r]+" "+s[r+1]),r++,r++):(a.push(s[r]),r++)}else for(let u=0;u<e.acordes.partes[l].acordes.length;u++)a.push(s[r]),r++}e.letras.renglones=[a]}}class PH{static mixear(e,n,i){const s=e.partes.copyWithin(0,e.partes.length),r=[];for(let o=0;o<e.ordenPartes.length;o++){const a=e.ordenPartes[o],c=e.partes[a];let l=c.nombre,u=0;a===n&&o<e.ordenPartes.length-1&&i.indexOf(e.ordenPartes[o+1])!==-1&&(l+="+"+e.partes[e.ordenPartes[o+1]].nombre,u=s.findIndex(d=>d.nombre===l),u===-1&&(s.push(new $s(l,c.acordes.concat(e.partes[e.ordenPartes[o+1]].acordes))),u=s.length-1),o++),u=s.findIndex(d=>d.nombre===l),r.push(u)}return this.normalizarAcordes(new Vr(s,r))}static normalizarAcordes(e){const n=[],i=[];for(let s=0;s<e.ordenPartes.length;s++){const r=e.ordenPartes[s],o=e.partes[r],a=n.findIndex(c=>c.nombre===o.nombre);a===-1?(i.push(n.length),n.push(o)):i.push(a)}return new Vr(n,i)}}const IH={class:"componenteMusical"},RH={style:{display:"flex"}},LH=["onDragstart","onDrop"],MH=["onClick"],BH=["onClick"],FH=["onUpdate:modelValue"],UH=["onUpdate:modelValue","onChange"],VH=["value"],WH={key:0,style:{display:"flex","flex-wrap":"wrap"}},HH=["onClick","onPointerover","onPointerleave"],XH=["onClick"],jH=["onClick"],qH={key:4},zH=["onClick"],YH=["onClick"],JH=["onClick"],ZH=Ue({__name:"editAcordes",props:{cancion:{}},emits:["actualizo_cancion"],setup(t,{emit:e}){const n=t,i=J(!1),s=J(!1),r=J(!1),o=J(!1),a=J(!1),c=J(""),l=J(-1),u=e;function d(q){c.value=n.cancion.acordes.partes[n.cancion.acordes.ordenPartes[q]].acordes.join("|").trim(),l.value=q}function h(q){const ee=c.value.toUpperCase().replace(/M/g,"m").replace(/SUS/g,"sus").replace(/MAJ/g,"maj");n.cancion.acordes.partes[n.cancion.acordes.ordenPartes[q]].acordes=ee.split("|"),l.value=-1,u("actualizo_cancion")}function f(q){console.log(q),n.cancion.acordes.ordenPartes=n.cancion.acordes.ordenPartes.filter(ee=>ee!==-1),u("actualizo_cancion")}function p(q,ee){i.value&&(yx.mixAcorde(n.cancion,q,ee),u("actualizo_cancion"),i.value=!1),s.value&&(yx.splitearParte(n.cancion,q,ee),u("actualizo_cancion"),s.value=!1)}const m=J(!1);function b(q,ee){let j=0,he=0;for(;j<q&&n.cancion.acordes.ordenPartes.length>j;)he=he+n.cancion.acordes.partes[n.cancion.acordes.ordenPartes[j]].acordes.length,j++;return he+ee}let E=!1;function x(q,ee){E||(u("actualizo_cancion"),E=!0);const j=document.getElementById("span_acorde-"+b(q,ee).toString());j&&j.classList.add("acorde_resaltado")}function S(q,ee){const j=document.getElementById("span_acorde-"+b(q,ee).toString());j&&(j.style.backgroundColor="",j.classList.remove("acorde_resaltado"))}const v=J(-1);function T(q){v.value=q}function w(q){q.preventDefault()}function D(q){if(v.value!==-1){const ee=n.cancion.acordes.ordenPartes[q];n.cancion.acordes.ordenPartes[q]=n.cancion.acordes.ordenPartes[v.value],n.cancion.acordes.ordenPartes[v.value]=ee,u("actualizo_cancion")}}function A(q){n.cancion.acordes.ordenPartes.splice(q,1),u("actualizo_cancion")}function y(q){if(o.value&&(n.cancion.acordes.partes.push(new $s("Nueva parte",["."])),n.cancion.acordes.ordenPartes.splice(q+1,0,n.cancion.acordes.partes.length-1),u("actualizo_cancion")),a.value){let ee=[];for(let j=0;j<n.cancion.acordes.ordenPartes.length;j++)ee.push(n.cancion.acordes.ordenPartes[j]),j==q&&ee.push(n.cancion.acordes.ordenPartes[j]);n.cancion.acordes.ordenPartes=ee,u("actualizo_cancion")}}const O=J(!1),L=J(-1),P=J([]),U=J([]);function X(q){console.log(q,n.cancion.acordes.ordenPartes[q]);let ee=[];L.value=q;let j=n.cancion.acordes.ordenPartes[L.value];for(let le=0;le<n.cancion.acordes.ordenPartes.length-1;le++)n.cancion.acordes.ordenPartes[le]==j&&ee.push(n.cancion.acordes.ordenPartes[le+1]);ee=[...new Set(ee)];let he=[];for(let le=0;le<ee.length;le++)he.push(ee[le]);U.value=he,O.value=!0}function K(q){O.value=!0,L.value=q}function Y(q){if(P.value.includes(U.value[q])){const ee=P.value.indexOf(U.value[q]);ee!==-1&&P.value.splice(ee,1)}else P.value.push(U.value[q])}function _(){n.cancion.acordes=PH.mixear(n.cancion.acordes,L.value,P.value),L.value=-1,O.value=!1}return(q,ee)=>{const j=wu("ComponenteMusicalAcordes");return R(),B("div",IH,[N("div",null,[Qe(j,{cancion:q.cancion,compas:-2,secuencia:!0,partes:!0,width:300,height:2e3},null,8,["cancion"]),N("div",null,[(R(!0),B(be,null,We(q.cancion.acordes.ordenPartes,(he,le)=>(R(),B("div",{class:"contAcordes",key:le},[N("div",RH,[N("div",{class:"clsIdParte",draggable:"true",onDragstart:Le=>T(le),onDragover:ee[0]||(ee[0]=Le=>w(Le)),onDrop:Le=>D(le)},[N("span",null,ce(le+1),1)],40,LH),le!=l.value&&m.value?(R(),B("div",{key:0,class:"btnEditAcorde",onClick:Le=>d(le)},ee[2]||(ee[2]=[N("span",{class:"bi bi-pencil"},null,-1)]),8,MH)):G("",!0),le==l.value?(R(),B("div",{key:1,class:"btnEditAcorde",onClick:Le=>h(le)},ee[3]||(ee[3]=[N("span",null,"Ok",-1)]),8,BH)):G("",!0),le==l.value?lt((R(),B("input",{key:2,type:"text","onUpdate:modelValue":Le=>q.cancion.acordes.partes[he].nombre=Le,style:vt({width:(1+q.cancion.acordes.partes[he].nombre.length).toString()+"ch"})},null,12,FH)),[[At,q.cancion.acordes.partes[he].nombre]]):G("",!0),le!=l.value?lt((R(),B("select",{key:3,"onUpdate:modelValue":Le=>q.cancion.acordes.ordenPartes[le]=Le,onChange:Le=>f(le),class:"selectParteEnOrden"},[(R(!0),B(be,null,We(q.cancion.acordes.partes,(Le,Ae)=>(R(),B("option",{key:Ae,value:Ae},ce(Le.nombre),9,VH))),128))],40,UH)),[[Ro,q.cancion.acordes.ordenPartes[le]]]):G("",!0)]),le!=l.value&&q.cancion.acordes.partes[he]?(R(),B("div",WH,[(R(!0),B(be,null,We(q.cancion.acordes.partes[he].acordes,(Le,Ae)=>(R(),B("div",{class:Dt(["acorde_edicion",{acorde_mixiando:i.value,acorde_split:s.value}]),onClick:De=>p(le,Ae),onPointerover:De=>x(le,Ae),onPointerleave:De=>S(le,Ae),key:Ae},ce(Le),43,HH))),128))])):G("",!0),le==l.value?lt((R(),B("input",{key:1,type:"text",style:vt({width:(3+c.value.length).toString()+"ch"}),"onUpdate:modelValue":ee[1]||(ee[1]=Le=>c.value=Le)},null,4)),[[At,c.value]]):G("",!0),m.value&&!O.value?(R(),B("div",{key:2,class:"btnEditAcorde",onClick:Le=>X(le)}," Unir ",8,XH)):G("",!0),m.value&&!O.value?(R(),B("div",{key:3,class:"btnEditAcorde",onClick:Le=>K(le)}," QUITAR DE ",8,jH)):G("",!0),m.value&&O.value&&L.value==le?(R(),B("div",qH,[(R(!0),B(be,null,We(U.value,(Le,Ae)=>(R(),B("div",{class:Dt(["btnEditAcorde",{seleccionada:P.value.includes(Le)}]),key:Ae,onClick:De=>Y(Ae)},ce(q.cancion.acordes.partes[Le].nombre),11,zH))),128)),m.value&&O.value?(R(),B("div",{key:0,onClick:_,class:"btnEditAcorde"}," Ok ")):G("",!0)])):G("",!0),r.value?(R(),B("div",{key:5,class:"btnEditAcorde",onClick:Le=>A(le)},ee[4]||(ee[4]=[N("span",{class:"bi bi-trash"},null,-1)]),8,YH)):G("",!0),a.value||o.value?(R(),B("div",{key:6,class:"btnEditAcorde",onClick:Le=>y(le)},ee[5]||(ee[5]=[N("span",{class:"bi bi-plus"},null,-1)]),8,JH)):G("",!0)]))),128))])])])}}}),KH=nt(ZH,[["__scopeId","data-v-c25945aa"]]);class kx{constructor(){W(this,"partes",[]);W(this,"ordenPartes",[]);W(this,"indiceNombres",1)}static acordesToTexto(e){let n="";const i=`
`,s=new Set;let r=0,o=-1;return e.ordenPartes.forEach((a,c)=>{const l=e.partes[a];o!=a?(r>0&&(n+=`*${r+1}`,r=0),c>0&&(n+=i),n+=`'${l.nombre}'`,s.has(a)||(n+=l.acordes.join("|"),s.add(a))):r++,o=a}),r>0&&(n+=`*${r+1}`,r=0),n}parteLinea(e){return`'${e.nombre}'${e.acordes.join("|")}`}asignarNombre(e){return e===""&&(e=`v${this.indiceNombres}`,this.indiceNombres++),e}agregarPartetexto(e){const n=new $s("",[]),i=[];let s=-1,r=1;e.includes("*")&&(r=parseInt(e.split("*")[1]),e=e.split("*")[0].trim()),e=e.trim();let o="";if(e.startsWith("'")){const l=e.indexOf("'",1);l>0&&(o=e.substring(1,l),e=e.substring(l+1).trim())}const a=e.split("|").map(l=>l.trim()).filter(l=>l!==""),c=this.partes.findIndex(l=>l.nombre===o);c===-1?(n.nombre=this.asignarNombre(o),n.acordes=a,this.partes.push(n),s=this.partes.length-1):s=c;for(let l=0;l<r;l++)i.push(s);return i}textoToAcordes(e){return e===""?new Vr([new $s("vacio",[])],[0]):(e.split(`
`).forEach(i=>{const s=this.agregarPartetexto(i);this.ordenPartes.push(...s)}),new Vr(this.partes,this.ordenPartes))}}const QH={class:"divTextArea"},GH=Ue({__name:"consolaAcordes",props:{cancion:{}},emits:["cerrar"],setup(t,{emit:e}){const n=t,i=e,s=J("");function r(){console.log("click_okeditacorde");let a=new kx;n.cancion.acordes=a.textoToAcordes(s.value),i("cerrar")}function o(){console.log("click_cancelareditacorde"),i("cerrar")}return s.value=kx.acordesToTexto(n.cancion.acordes),(a,c)=>(R(),B(be,null,[N("div",null,[N("span",{onClick:o},"[Cancelar]"),N("span",{onClick:r},"[Guardar]")]),N("div",QH,[lt(N("textarea",{"onUpdate:modelValue":c[0]||(c[0]=l=>s.value=l),style:{width:"100%",height:"200px",resize:"none"}},null,512),[[At,s.value]])])],64))}}),_H=nt(GH,[["__scopeId","data-v-f93ef40f"]]),$H=Ue({__name:"editarParte",props:{parte:{}},setup(t){return(e,n)=>(R(),B("div",null,[(R(!0),B(be,null,We(e.parte.acordes,(i,s)=>(R(),B("span",{class:"spnNota",key:s},ce(i),1))),128))]))}}),eX=nt($H,[["__scopeId","data-v-6c5c0c36"]]),tX={key:1},nX={style:{display:"flex","flex-wrap":"wrap"}},iX=["onClick"],sX={class:"ordendiv"},rX={key:0,class:"repeticion"},oX={key:0},aX={key:1},cX={key:2},lX=Ue({__name:"Secuencia",props:{compas:{},cancion:{}},emits:["cambioCompas"],setup(t,{expose:e,emit:n}){const i=t,s=J(0),r=J(0),o=J(0),a=n,c=J(!1),l=J(null);function u(v){a("cambioCompas",v),s.value=v}function d(v){r.value=v,o.value=0,c.value=!0,l.value=i.cancion.acordes.partes[h.value[v]],u(p.value[v])}const h=J([]),f=J([]),p=J([]),m=J(-1),b=J(-1);gt(()=>i.cancion,v=>{E(v)});function E(v){let T=[],w=[],D=[],A=-1,y=0;v.acordes.ordenPartes.forEach(O=>{A!=O?(T.push(O),w.push(1),A=O,D.push(y)):w[w.length-1]+=1,y+=v.acordes.partes[O].acordes.length}),p.value=D,h.value=T,f.value=w}function x(){return f.value.length==0,!1}E(i.cancion);function S(){E(i.cancion)}return e({Actualizar:S}),(v,T)=>(R(),B(be,null,[x()?(R(),B("div",{key:0,onClick:T[0]||(T[0]=w=>E(i.cancion))}," .. No cargada .. ")):G("",!0),f.value.length>0?(R(),B("div",tX,[T[1]||(T[1]=N("span",{style:{"font-size":"large"}},"Secuencia",-1)),N("div",nX,[(R(!0),B(be,null,We(h.value,(w,D)=>(R(),B("div",{key:D,class:"secuencia",onClick:A=>d(D)},[N("div",sX,[N("span",{class:Dt({compas_actual:m.value===D})},ce(v.cancion.acordes.partes[w].nombre),3)]),f.value[D]>1?(R(),B("div",rX,[m.value!=D?(R(),B("span",oX,"x "+ce(f.value[D]),1)):G("",!0),m.value==D?(R(),B("span",aX,ce(b.value+1)+" / "+ce(f.value[D]),1)):G("",!0)])):G("",!0)],8,iX))),128))])])):G("",!0),c.value&&l.value!==null?(R(),B("div",cX,[T[2]||(T[2]=N("span",{style:{"font-size":"large"}},"Partes",-1)),Qe(eX,{parte:l.value},null,8,["parte"])])):G("",!0),T[3]||(T[3]=N("div",null,[N("span",{style:{"font-size":"large"}},"Modificar:")],-1))],64))}}),uX=nt(lX,[["__scopeId","data-v-160f272b"]]);class By{constructor(){W(this,"descripcion","")}aplicarSugerencia(e){console.log(`Sugerencia aplicada a la canción: ${e.cancion}`)}static recomendarSugerencias(e){return console.log("SUGERENCIAS CLASE  ABSTRACTA",e),[]}}class uc extends By{constructor(n,i){super();W(this,"secuencia");W(this,"grados",["I","II","III","IV","V","VI","VII"]);W(this,"musicaHelper",new zE);const s=this.musicaHelper.GetNotasdeescala(n.escala);let r="Agregar: ";for(let o=0;o<i.length;o++)o>0&&(r+=", "),r+=this.grados[i[o]-1]+" "+s[i[o]-1];this.descripcion=r,this.secuencia=i}aplicarSugerencia(n){const i=n.acordes.partes.length,s="Parte "+(i+1),r=this.musicaHelper.GetNotasdeescala(n.escala),o=[];for(let c=0;c<this.secuencia.length;c++)o.push(r[this.secuencia[c]-1]);const a=new $s(s,o);n.acordes.partes.push(a),n.acordes.ordenPartes.push(i)}static recomendarSugerencias(n){const i=[];return n.acordes.ordenPartes.length===0&&(i.push(new uc(n,[1,4,5,1])),i.push(new uc(n,[1,2,5,6])),i.push(new uc(n,[1,2,6,5])),i.push(new uc(n,[1,4,1,5]))),i}}class rv extends By{constructor(){super(),this.descripcion="Agregar una anacrusa"}aplicarSugerencia(e){const n=e.acordes.partes.length,i=new $s("anacrusa",["."]);e.acordes.partes.push(i);const s=[n];s.push(...e.acordes.ordenPartes),e.acordes.ordenPartes=s,e.letras.renglones.length>0?e.letras.renglones[0].unshift("_"):e.letras.renglones.unshift(["_"])}static recomendarSugerencias(e){const n=[];return e.letras.renglones[0]&&e.letras.renglones[0].length>0&&e.letras.renglones[0][0].replace(".","").trim()!==""&&/^[a-z]/.test(e.letras.renglones[0][0][0])&&e.letras.renglones[0][0][0].toLowerCase()===e.letras.renglones[0][0][0]&&n.push(new rv),n}}class Dx{static generarSugerencias(e){const n=[];return n.push(...uc.recomendarSugerencias(e)),n.push(...rv.recomendarSugerencias(e)),n}}const dX=["onClick"],hX=Ue({__name:"sugerencias",props:{cancion:{}},emits:["actualizarCancion"],setup(t,{emit:e}){const n=t,i=e;gt(()=>n.cancion.escala,()=>{s.value=Dx.generarSugerencias(n.cancion)},{deep:!0});const s=J([]);s.value=Dx.generarSugerencias(n.cancion);function r(o){s.value[o].aplicarSugerencia(n.cancion),i("actualizarCancion")}return(o,a)=>(R(),B("div",null,[(R(!0),B(be,null,We(s.value,(c,l)=>(R(),B("div",{key:l,onClick:u=>r(l),class:"sugerencia-item"},ce(c.descripcion),9,dX))),128))]))}}),fX=nt(hX,[["__scopeId","data-v-2d45b54c"]]),pX={style:{display:"flex",overflow:"hidden",height:"400px"}},mX={style:{height:"400px"}},gX=["cols"],EX=Ue({__name:"editarconsola",props:{compas:{},cancion:{},verAcordes:{type:Boolean},verMetricaEs:{type:Boolean}},emits:["cerrar"],setup(t,{emit:e}){const i=new Lo().getConfiguracionPantalla(),s=t,r=new _w,o=J(new PE(i.columnas));function a(b){o.value=r.getDisplay(b,i.columnas)}const c=e,l=J(""),u=Co.GetDefault("EDITCONSOLA");u.acordes=s.cancion.acordes,gt(l,b=>{const E=b.replace(/\r?\n/g,"/n").split("|");u.letras.renglones=[E],a(u)},{immediate:!1});const d=J(),h=J();bn(()=>{l.value=s.cancion.letras.renglones.flat().join("|").replace(/\/n/g,`
`)});function f(){d.value&&h.value&&(h.value.scrollTop=d.value.scrollTop,h.value.scrollLeft=d.value.scrollLeft)}function p(){c("cerrar")}function m(){s.cancion.letras.renglones=[l.value.replace(/\r?\n/g,"/n").split("|")],c("cerrar")}return(b,E)=>(R(),B(be,null,[N("div",null,[N("span",{onClick:p},"[Cancelar]"),N("span",{onClick:m},"[Confirmar]")]),N("div",null,[N("div",pX,[N("div",mX,[lt(N("textarea",{class:"textArea",ref_key:"refTextarea",ref:d,onScroll:f,"onUpdate:modelValue":E[0]||(E[0]=x=>l.value=x),cols:ie(i).columnas},null,40,gX),[[At,l.value]])]),N("div",{class:"preview",ref_key:"refPreview",ref:h},[(R(!0),B(be,null,We(o.value.Versos,(x,S)=>(R(),B(be,{key:S},[(R(!0),B(be,null,We(x.renglonesDisplay,(v,T)=>(R(),B("div",{key:T,style:{display:"flex"}},[(R(!0),B(be,null,We(v.acordes,(w,D)=>(R(),B("div",{key:D,class:"acordeconsola"},ce(w.contenido),1))),128))]))),128))],64))),128))],512)])])],64))}}),vX=nt(EX,[["__scopeId","data-v-a38bbd6c"]]);var _o={},Vd={},qm,Ox;function bX(){if(Ox)return qm;Ox=1;function t(s){var r=new i(s),o=r.readChunk();if(o.id!="MThd")throw"Bad MIDI file.  Expected 'MHdr', got: '"+o.id+"'";for(var a=e(o.data),c=[],l=0;!r.eof()&&l<a.numTracks;l++){var u=r.readChunk();if(u.id!="MTrk")throw"Bad MIDI file.  Expected 'MTrk', got: '"+u.id+"'";var d=n(u.data);c.push(d)}return{header:a,tracks:c}}function e(s){var r=new i(s),o=r.readUInt16(),a=r.readUInt16(),c={format:o,numTracks:a},l=r.readUInt16();return l&32768?(c.framesPerSecond=256-(l>>8),c.ticksPerFrame=l&255):c.ticksPerBeat=l,c}function n(s){for(var r=new i(s),o=[];!r.eof();){var a=l();o.push(a)}return o;var c;function l(){var u={};u.deltaTime=r.readVarInt();var d=r.readUInt8();if((d&240)===240)if(d===255){u.meta=!0;var h=r.readUInt8(),f=r.readVarInt();switch(h){case 0:if(u.type="sequenceNumber",f!==2)throw"Expected length for sequenceNumber event is 2, got "+f;return u.number=r.readUInt16(),u;case 1:return u.type="text",u.text=r.readString(f),u;case 2:return u.type="copyrightNotice",u.text=r.readString(f),u;case 3:return u.type="trackName",u.text=r.readString(f),u;case 4:return u.type="instrumentName",u.text=r.readString(f),u;case 5:return u.type="lyrics",u.text=r.readString(f),u;case 6:return u.type="marker",u.text=r.readString(f),u;case 7:return u.type="cuePoint",u.text=r.readString(f),u;case 32:if(u.type="channelPrefix",f!=1)throw"Expected length for channelPrefix event is 1, got "+f;return u.channel=r.readUInt8(),u;case 33:if(u.type="portPrefix",f!=1)throw"Expected length for portPrefix event is 1, got "+f;return u.port=r.readUInt8(),u;case 47:if(u.type="endOfTrack",f!=0)throw"Expected length for endOfTrack event is 0, got "+f;return u;case 81:if(u.type="setTempo",f!=3)throw"Expected length for setTempo event is 3, got "+f;return u.microsecondsPerBeat=r.readUInt24(),u;case 84:if(u.type="smpteOffset",f!=5)throw"Expected length for smpteOffset event is 5, got "+f;var p=r.readUInt8(),m={0:24,32:25,64:29,96:30};return u.frameRate=m[p&96],u.hour=p&31,u.min=r.readUInt8(),u.sec=r.readUInt8(),u.frame=r.readUInt8(),u.subFrame=r.readUInt8(),u;case 88:if(u.type="timeSignature",f!=2&&f!=4)throw"Expected length for timeSignature event is 4 or 2, got "+f;return u.numerator=r.readUInt8(),u.denominator=1<<r.readUInt8(),f===4?(u.metronome=r.readUInt8(),u.thirtyseconds=r.readUInt8()):(u.metronome=36,u.thirtyseconds=8),u;case 89:if(u.type="keySignature",f!=2)throw"Expected length for keySignature event is 2, got "+f;return u.key=r.readInt8(),u.scale=r.readUInt8(),u;case 127:return u.type="sequencerSpecific",u.data=r.readBytes(f),u;default:return u.type="unknownMeta",u.data=r.readBytes(f),u.metatypeByte=h,u}}else if(d==240){u.type="sysEx";var f=r.readVarInt();return u.data=r.readBytes(f),u}else if(d==247){u.type="endSysEx";var f=r.readVarInt();return u.data=r.readBytes(f),u}else throw"Unrecognised MIDI event type byte: "+d;else{var b;if((d&128)===0){if(c===null)throw"Running status byte encountered before status byte";b=d,d=c,u.running=!0}else b=r.readUInt8(),c=d;var E=d>>4;switch(u.channel=d&15,E){case 8:return u.type="noteOff",u.noteNumber=b,u.velocity=r.readUInt8(),u;case 9:var x=r.readUInt8();return u.type=x===0?"noteOff":"noteOn",u.noteNumber=b,u.velocity=x,x===0&&(u.byte9=!0),u;case 10:return u.type="noteAftertouch",u.noteNumber=b,u.amount=r.readUInt8(),u;case 11:return u.type="controller",u.controllerType=b,u.value=r.readUInt8(),u;case 12:return u.type="programChange",u.programNumber=b,u;case 13:return u.type="channelAftertouch",u.amount=b,u;case 14:return u.type="pitchBend",u.value=b+(r.readUInt8()<<7)-8192,u;default:throw"Unrecognised MIDI event type: "+E}}}}function i(s){this.buffer=s,this.bufferLen=this.buffer.length,this.pos=0}return i.prototype.eof=function(){return this.pos>=this.bufferLen},i.prototype.readUInt8=function(){var s=this.buffer[this.pos];return this.pos+=1,s},i.prototype.readInt8=function(){var s=this.readUInt8();return s&128?s-256:s},i.prototype.readUInt16=function(){var s=this.readUInt8(),r=this.readUInt8();return(s<<8)+r},i.prototype.readInt16=function(){var s=this.readUInt16();return s&32768?s-65536:s},i.prototype.readUInt24=function(){var s=this.readUInt8(),r=this.readUInt8(),o=this.readUInt8();return(s<<16)+(r<<8)+o},i.prototype.readInt24=function(){var s=this.readUInt24();return s&8388608?s-16777216:s},i.prototype.readUInt32=function(){var s=this.readUInt8(),r=this.readUInt8(),o=this.readUInt8(),a=this.readUInt8();return(s<<24)+(r<<16)+(o<<8)+a},i.prototype.readBytes=function(s){var r=this.buffer.slice(this.pos,this.pos+s);return this.pos+=s,r},i.prototype.readString=function(s){var r=this.readBytes(s);return String.fromCharCode.apply(null,r)},i.prototype.readVarInt=function(){for(var s=0;!this.eof();){var r=this.readUInt8();if(r&128)s+=r&127,s<<=7;else return s+r}return s},i.prototype.readChunk=function(){var s=this.readString(4),r=this.readUInt32(),o=this.readBytes(r);return{id:s,length:r,data:o}},qm=t,qm}var zm,Px;function SX(){if(Px)return zm;Px=1;function t(r,o){if(typeof r!="object")throw"Invalid MIDI data";o=o||{};var a=r.header||{},c=r.tracks||[],l,u=c.length,d=new s;for(e(d,a,u),l=0;l<u;l++)n(d,c[l],o);return d.buffer}function e(r,o,a){var c=o.format==null?1:o.format,l=128;o.timeDivision?l=o.timeDivision:o.ticksPerFrame&&o.framesPerSecond?l=-(o.framesPerSecond&255)<<8|o.ticksPerFrame&255:o.ticksPerBeat&&(l=o.ticksPerBeat&32767);var u=new s;u.writeUInt16(c),u.writeUInt16(a),u.writeUInt16(l),r.writeChunk("MThd",u.buffer)}function n(r,o,a){var c=new s,l,u=o.length,d=null;for(l=0;l<u;l++)(a.running===!1||!a.running&&!o[l].running)&&(d=null),d=i(c,o[l],d,a.useByte9ForNoteOff);r.writeChunk("MTrk",c.buffer)}function i(r,o,a,c){var l=o.type,u=o.deltaTime,d=o.text||"",h=o.data||[],f=null;switch(r.writeVarInt(u),l){case"sequenceNumber":r.writeUInt8(255),r.writeUInt8(0),r.writeVarInt(2),r.writeUInt16(o.number);break;case"text":r.writeUInt8(255),r.writeUInt8(1),r.writeVarInt(d.length),r.writeString(d);break;case"copyrightNotice":r.writeUInt8(255),r.writeUInt8(2),r.writeVarInt(d.length),r.writeString(d);break;case"trackName":r.writeUInt8(255),r.writeUInt8(3),r.writeVarInt(d.length),r.writeString(d);break;case"instrumentName":r.writeUInt8(255),r.writeUInt8(4),r.writeVarInt(d.length),r.writeString(d);break;case"lyrics":r.writeUInt8(255),r.writeUInt8(5),r.writeVarInt(d.length),r.writeString(d);break;case"marker":r.writeUInt8(255),r.writeUInt8(6),r.writeVarInt(d.length),r.writeString(d);break;case"cuePoint":r.writeUInt8(255),r.writeUInt8(7),r.writeVarInt(d.length),r.writeString(d);break;case"channelPrefix":r.writeUInt8(255),r.writeUInt8(32),r.writeVarInt(1),r.writeUInt8(o.channel);break;case"portPrefix":r.writeUInt8(255),r.writeUInt8(33),r.writeVarInt(1),r.writeUInt8(o.port);break;case"endOfTrack":r.writeUInt8(255),r.writeUInt8(47),r.writeVarInt(0);break;case"setTempo":r.writeUInt8(255),r.writeUInt8(81),r.writeVarInt(3),r.writeUInt24(o.microsecondsPerBeat);break;case"smpteOffset":r.writeUInt8(255),r.writeUInt8(84),r.writeVarInt(5);var p={24:0,25:32,29:64,30:96},m=o.hour&31|p[o.frameRate];r.writeUInt8(m),r.writeUInt8(o.min),r.writeUInt8(o.sec),r.writeUInt8(o.frame),r.writeUInt8(o.subFrame);break;case"timeSignature":r.writeUInt8(255),r.writeUInt8(88),r.writeVarInt(4),r.writeUInt8(o.numerator);var b=Math.floor(Math.log(o.denominator)/Math.LN2)&255;r.writeUInt8(b),r.writeUInt8(o.metronome),r.writeUInt8(o.thirtyseconds||8);break;case"keySignature":r.writeUInt8(255),r.writeUInt8(89),r.writeVarInt(2),r.writeInt8(o.key),r.writeUInt8(o.scale);break;case"sequencerSpecific":r.writeUInt8(255),r.writeUInt8(127),r.writeVarInt(h.length),r.writeBytes(h);break;case"unknownMeta":o.metatypeByte!=null&&(r.writeUInt8(255),r.writeUInt8(o.metatypeByte),r.writeVarInt(h.length),r.writeBytes(h));break;case"sysEx":r.writeUInt8(240),r.writeVarInt(h.length),r.writeBytes(h);break;case"endSysEx":r.writeUInt8(247),r.writeVarInt(h.length),r.writeBytes(h);break;case"noteOff":var E=c!==!1&&o.byte9||c&&o.velocity==0?144:128;f=E|o.channel,f!==a&&r.writeUInt8(f),r.writeUInt8(o.noteNumber),r.writeUInt8(o.velocity);break;case"noteOn":f=144|o.channel,f!==a&&r.writeUInt8(f),r.writeUInt8(o.noteNumber),r.writeUInt8(o.velocity);break;case"noteAftertouch":f=160|o.channel,f!==a&&r.writeUInt8(f),r.writeUInt8(o.noteNumber),r.writeUInt8(o.amount);break;case"controller":f=176|o.channel,f!==a&&r.writeUInt8(f),r.writeUInt8(o.controllerType),r.writeUInt8(o.value);break;case"programChange":f=192|o.channel,f!==a&&r.writeUInt8(f),r.writeUInt8(o.programNumber);break;case"channelAftertouch":f=208|o.channel,f!==a&&r.writeUInt8(f),r.writeUInt8(o.amount);break;case"pitchBend":f=224|o.channel,f!==a&&r.writeUInt8(f);var x=8192+o.value,S=x&127,v=x>>7&127;r.writeUInt8(S),r.writeUInt8(v);break;default:throw"Unrecognized event type: "+l}return f}function s(){this.buffer=[]}return s.prototype.writeUInt8=function(r){this.buffer.push(r&255)},s.prototype.writeInt8=s.prototype.writeUInt8,s.prototype.writeUInt16=function(r){var o=r>>8&255,a=r&255;this.writeUInt8(o),this.writeUInt8(a)},s.prototype.writeInt16=s.prototype.writeUInt16,s.prototype.writeUInt24=function(r){var o=r>>16&255,a=r>>8&255,c=r&255;this.writeUInt8(o),this.writeUInt8(a),this.writeUInt8(c)},s.prototype.writeInt24=s.prototype.writeUInt24,s.prototype.writeUInt32=function(r){var o=r>>24&255,a=r>>16&255,c=r>>8&255,l=r&255;this.writeUInt8(o),this.writeUInt8(a),this.writeUInt8(c),this.writeUInt8(l)},s.prototype.writeInt32=s.prototype.writeUInt32,s.prototype.writeBytes=function(r){this.buffer=this.buffer.concat(Array.prototype.slice.call(r,0))},s.prototype.writeString=function(r){var o,a=r.length,c=[];for(o=0;o<a;o++)c.push(r.codePointAt(o));this.writeBytes(c)},s.prototype.writeVarInt=function(r){if(r<0)throw"Cannot write negative variable-length integer";if(r<=127)this.writeUInt8(r);else{var o=r,a=[];for(a.push(o&127),o>>=7;o;){var c=o&127|128;a.push(c),o>>=7}this.writeBytes(a.reverse())}},s.prototype.writeChunk=function(r,o){this.writeString(r),this.writeUInt32(o.length),this.writeBytes(o)},zm=t,zm}var Ix;function Fy(){return Ix||(Ix=1,Vd.parseMidi=bX(),Vd.writeMidi=SX()),Vd}var Ym={},$o={},Rx;function Uy(){if(Rx)return $o;Rx=1,Object.defineProperty($o,"__esModule",{value:!0}),$o.insert=$o.search=void 0;function t(n,i,s){s===void 0&&(s="ticks");var r=0,o=n.length,a=o;if(o>0&&n[o-1][s]<=i)return o-1;for(;r<a;){var c=Math.floor(r+(a-r)/2),l=n[c],u=n[c+1];if(l[s]===i){for(var d=c;d<n.length;d++){var h=n[d];h[s]===i&&(c=d)}return c}else{if(l[s]<i&&u[s]>i)return c;l[s]>i?a=c:l[s]<i&&(r=c+1)}}return-1}$o.search=t;function e(n,i,s){if(s===void 0&&(s="ticks"),n.length){var r=t(n,i[s],s);n.splice(r+1,0,i)}else n.push(i)}return $o.insert=e,$o}var Lx;function qg(){return Lx||(Lx=1,function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.Header=t.keySignatureKeys=void 0;var e=Uy(),n=new WeakMap;t.keySignatureKeys=["Cb","Gb","Db","Ab","Eb","Bb","F","C","G","D","A","E","B","F#","C#"];var i=function(){function s(r){var o=this;if(this.tempos=[],this.timeSignatures=[],this.keySignatures=[],this.meta=[],this.name="",n.set(this,480),r){n.set(this,r.header.ticksPerBeat),r.tracks.forEach(function(c){c.forEach(function(l){l.meta&&(l.type==="timeSignature"?o.timeSignatures.push({ticks:l.absoluteTime,timeSignature:[l.numerator,l.denominator]}):l.type==="setTempo"?o.tempos.push({bpm:6e7/l.microsecondsPerBeat,ticks:l.absoluteTime}):l.type==="keySignature"&&o.keySignatures.push({key:t.keySignatureKeys[l.key+7],scale:l.scale===0?"major":"minor",ticks:l.absoluteTime}))})});var a=0;r.tracks[0].forEach(function(c){a+=c.deltaTime,c.meta&&(c.type==="trackName"?o.name=c.text:(c.type==="text"||c.type==="cuePoint"||c.type==="marker"||c.type==="lyrics")&&o.meta.push({text:c.text,ticks:a,type:c.type}))}),this.update()}}return s.prototype.update=function(){var r=this,o=0,a=0;this.tempos.sort(function(c,l){return c.ticks-l.ticks}),this.tempos.forEach(function(c,l){var u=l>0?r.tempos[l-1].bpm:r.tempos[0].bpm,d=c.ticks/r.ppq-a,h=60/u*d;c.time=h+o,o=c.time,a+=d}),this.timeSignatures.sort(function(c,l){return c.ticks-l.ticks}),this.timeSignatures.forEach(function(c,l){var u=l>0?r.timeSignatures[l-1]:r.timeSignatures[0],d=(c.ticks-u.ticks)/r.ppq,h=d/u.timeSignature[0]/(u.timeSignature[1]/4);u.measures=u.measures||0,c.measures=h+u.measures})},s.prototype.ticksToSeconds=function(r){var o=(0,e.search)(this.tempos,r);if(o!==-1){var a=this.tempos[o],c=a.time,l=(r-a.ticks)/this.ppq;return c+60/a.bpm*l}else{var u=r/this.ppq;return 60/120*u}},s.prototype.ticksToMeasures=function(r){var o=(0,e.search)(this.timeSignatures,r);if(o!==-1){var a=this.timeSignatures[o],c=(r-a.ticks)/this.ppq;return a.measures+c/(a.timeSignature[0]/a.timeSignature[1])/4}else return r/this.ppq/4},Object.defineProperty(s.prototype,"ppq",{get:function(){return n.get(this)},enumerable:!1,configurable:!0}),s.prototype.secondsToTicks=function(r){var o=(0,e.search)(this.tempos,r,"time");if(o!==-1){var a=this.tempos[o],c=a.time,l=r-c,u=l/(60/a.bpm);return Math.round(a.ticks+u*this.ppq)}else{var d=r/.5;return Math.round(d*this.ppq)}},s.prototype.toJSON=function(){return{keySignatures:this.keySignatures,meta:this.meta,name:this.name,ppq:this.ppq,tempos:this.tempos.map(function(r){return{bpm:r.bpm,ticks:r.ticks}}),timeSignatures:this.timeSignatures}},s.prototype.fromJSON=function(r){this.name=r.name,this.tempos=r.tempos.map(function(o){return Object.assign({},o)}),this.timeSignatures=r.timeSignatures.map(function(o){return Object.assign({},o)}),this.keySignatures=r.keySignatures.map(function(o){return Object.assign({},o)}),this.meta=r.meta.map(function(o){return Object.assign({},o)}),n.set(this,r.ppq),this.update()},s.prototype.setTempo=function(r){this.tempos=[{bpm:r,ticks:0}],this.update()},s}();t.Header=i}(Ym)),Ym}var xl={},Jm={},Mx;function Vy(){return Mx||(Mx=1,function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.ControlChange=t.controlChangeIds=t.controlChangeNames=void 0,t.controlChangeNames={1:"modulationWheel",2:"breath",4:"footController",5:"portamentoTime",7:"volume",8:"balance",10:"pan",64:"sustain",65:"portamentoTime",66:"sostenuto",67:"softPedal",68:"legatoFootswitch",84:"portamentoControl"},t.controlChangeIds=Object.keys(t.controlChangeNames).reduce(function(s,r){return s[t.controlChangeNames[r]]=r,s},{});var e=new WeakMap,n=new WeakMap,i=function(){function s(r,o){e.set(this,o),n.set(this,r.controllerType),this.ticks=r.absoluteTime,this.value=r.value}return Object.defineProperty(s.prototype,"number",{get:function(){return n.get(this)},enumerable:!1,configurable:!0}),Object.defineProperty(s.prototype,"name",{get:function(){return t.controlChangeNames[this.number]?t.controlChangeNames[this.number]:null},enumerable:!1,configurable:!0}),Object.defineProperty(s.prototype,"time",{get:function(){var r=e.get(this);return r.ticksToSeconds(this.ticks)},set:function(r){var o=e.get(this);this.ticks=o.secondsToTicks(r)},enumerable:!1,configurable:!0}),s.prototype.toJSON=function(){return{number:this.number,ticks:this.ticks,time:this.time,value:this.value}},s}();t.ControlChange=i}(Jm)),Jm}var Tl={},Bx;function xX(){if(Bx)return Tl;Bx=1,Object.defineProperty(Tl,"__esModule",{value:!0}),Tl.createControlChanges=void 0;var t=Vy();function e(){return new Proxy({},{get:function(n,i){if(n[i])return n[i];if(t.controlChangeIds.hasOwnProperty(i))return n[t.controlChangeIds[i]]},set:function(n,i,s){return t.controlChangeIds.hasOwnProperty(i)?n[t.controlChangeIds[i]]=s:n[i]=s,!0}})}return Tl.createControlChanges=e,Tl}var Cl={},Fx;function TX(){if(Fx)return Cl;Fx=1,Object.defineProperty(Cl,"__esModule",{value:!0}),Cl.PitchBend=void 0;var t=new WeakMap,e=function(){function n(i,s){t.set(this,s),this.ticks=i.absoluteTime,this.value=i.value}return Object.defineProperty(n.prototype,"time",{get:function(){var i=t.get(this);return i.ticksToSeconds(this.ticks)},set:function(i){var s=t.get(this);this.ticks=s.secondsToTicks(i)},enumerable:!1,configurable:!0}),n.prototype.toJSON=function(){return{ticks:this.ticks,time:this.time,value:this.value}},n}();return Cl.PitchBend=e,Cl}var wl={},gr={},Ux;function CX(){return Ux||(Ux=1,Object.defineProperty(gr,"__esModule",{value:!0}),gr.DrumKitByPatchID=gr.InstrumentFamilyByID=gr.instrumentByPatchID=void 0,gr.instrumentByPatchID=["acoustic grand piano","bright acoustic piano","electric grand piano","honky-tonk piano","electric piano 1","electric piano 2","harpsichord","clavi","celesta","glockenspiel","music box","vibraphone","marimba","xylophone","tubular bells","dulcimer","drawbar organ","percussive organ","rock organ","church organ","reed organ","accordion","harmonica","tango accordion","acoustic guitar (nylon)","acoustic guitar (steel)","electric guitar (jazz)","electric guitar (clean)","electric guitar (muted)","overdriven guitar","distortion guitar","guitar harmonics","acoustic bass","electric bass (finger)","electric bass (pick)","fretless bass","slap bass 1","slap bass 2","synth bass 1","synth bass 2","violin","viola","cello","contrabass","tremolo strings","pizzicato strings","orchestral harp","timpani","string ensemble 1","string ensemble 2","synthstrings 1","synthstrings 2","choir aahs","voice oohs","synth voice","orchestra hit","trumpet","trombone","tuba","muted trumpet","french horn","brass section","synthbrass 1","synthbrass 2","soprano sax","alto sax","tenor sax","baritone sax","oboe","english horn","bassoon","clarinet","piccolo","flute","recorder","pan flute","blown bottle","shakuhachi","whistle","ocarina","lead 1 (square)","lead 2 (sawtooth)","lead 3 (calliope)","lead 4 (chiff)","lead 5 (charang)","lead 6 (voice)","lead 7 (fifths)","lead 8 (bass + lead)","pad 1 (new age)","pad 2 (warm)","pad 3 (polysynth)","pad 4 (choir)","pad 5 (bowed)","pad 6 (metallic)","pad 7 (halo)","pad 8 (sweep)","fx 1 (rain)","fx 2 (soundtrack)","fx 3 (crystal)","fx 4 (atmosphere)","fx 5 (brightness)","fx 6 (goblins)","fx 7 (echoes)","fx 8 (sci-fi)","sitar","banjo","shamisen","koto","kalimba","bag pipe","fiddle","shanai","tinkle bell","agogo","steel drums","woodblock","taiko drum","melodic tom","synth drum","reverse cymbal","guitar fret noise","breath noise","seashore","bird tweet","telephone ring","helicopter","applause","gunshot"],gr.InstrumentFamilyByID=["piano","chromatic percussion","organ","guitar","bass","strings","ensemble","brass","reed","pipe","synth lead","synth pad","synth effects","world","percussive","sound effects"],gr.DrumKitByPatchID={0:"standard kit",8:"room kit",16:"power kit",24:"electronic kit",25:"tr-808 kit",32:"jazz kit",40:"brush kit",48:"orchestra kit",56:"sound fx kit"}),gr}var Vx;function wX(){if(Vx)return wl;Vx=1,Object.defineProperty(wl,"__esModule",{value:!0}),wl.Instrument=void 0;var t=CX(),e=new WeakMap,n=function(){function i(s,r){if(this.number=0,e.set(this,r),this.number=0,s){var o=s.find(function(a){return a.type==="programChange"});o&&(this.number=o.programNumber)}}return Object.defineProperty(i.prototype,"name",{get:function(){return this.percussion?t.DrumKitByPatchID[this.number]:t.instrumentByPatchID[this.number]},set:function(s){var r=t.instrumentByPatchID.indexOf(s);r!==-1&&(this.number=r)},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"family",{get:function(){return this.percussion?"drums":t.InstrumentFamilyByID[Math.floor(this.number/8)]},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"percussion",{get:function(){var s=e.get(this);return s.channel===9},enumerable:!1,configurable:!0}),i.prototype.toJSON=function(){return{family:this.family,number:this.number,name:this.name}},i.prototype.fromJSON=function(s){this.number=s.number},i}();return wl.Instrument=n,wl}var Al={},Wx;function AX(){if(Wx)return Al;Wx=1,Object.defineProperty(Al,"__esModule",{value:!0}),Al.Note=void 0;function t(o){var a=Math.floor(o/12)-1;return e(o)+a.toString()}function e(o){var a=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],c=o%12;return a[c]}function n(o){var a=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];return a.indexOf(o)}var i=function(){var o=/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,a={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13};return function(c){var l=o.exec(c),u=l[1],d=l[2],h=a[u.toLowerCase()];return h+(parseInt(d,10)+1)*12}}(),s=new WeakMap,r=function(){function o(a,c,l){s.set(this,l),this.midi=a.midi,this.velocity=a.velocity,this.noteOffVelocity=c.velocity,this.ticks=a.ticks,this.durationTicks=c.ticks-a.ticks}return Object.defineProperty(o.prototype,"name",{get:function(){return t(this.midi)},set:function(a){this.midi=i(a)},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,"octave",{get:function(){return Math.floor(this.midi/12)-1},set:function(a){var c=a-this.octave;this.midi+=c*12},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,"pitch",{get:function(){return e(this.midi)},set:function(a){this.midi=12*(this.octave+1)+n(a)},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,"duration",{get:function(){var a=s.get(this);return a.ticksToSeconds(this.ticks+this.durationTicks)-a.ticksToSeconds(this.ticks)},set:function(a){var c=s.get(this),l=c.secondsToTicks(this.time+a);this.durationTicks=l-this.ticks},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,"time",{get:function(){var a=s.get(this);return a.ticksToSeconds(this.ticks)},set:function(a){var c=s.get(this);this.ticks=c.secondsToTicks(a)},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,"bars",{get:function(){var a=s.get(this);return a.ticksToMeasures(this.ticks)},enumerable:!1,configurable:!0}),o.prototype.toJSON=function(){return{duration:this.duration,durationTicks:this.durationTicks,midi:this.midi,name:this.name,ticks:this.ticks,time:this.time,velocity:this.velocity}},o}();return Al.Note=r,Al}var Hx;function Xx(){if(Hx)return xl;Hx=1,Object.defineProperty(xl,"__esModule",{value:!0}),xl.Track=void 0;var t=Uy(),e=Vy(),n=xX(),i=TX(),s=wX(),r=AX(),o=new WeakMap,a=function(){function c(l,u){var d=this;if(this.name="",this.notes=[],this.controlChanges=(0,n.createControlChanges)(),this.pitchBends=[],o.set(this,u),l){var h=l.find(function(v){return v.type==="trackName"});this.name=h?h.text:""}if(this.instrument=new s.Instrument(l,this),this.channel=0,l){for(var f=l.filter(function(v){return v.type==="noteOn"}),p=l.filter(function(v){return v.type==="noteOff"}),m=function(){var v=f.shift();b.channel=v.channel;var T=p.findIndex(function(D){return D.noteNumber===v.noteNumber&&D.absoluteTime>=v.absoluteTime});if(T!==-1){var w=p.splice(T,1)[0];b.addNote({durationTicks:w.absoluteTime-v.absoluteTime,midi:v.noteNumber,noteOffVelocity:w.velocity/127,ticks:v.absoluteTime,velocity:v.velocity/127})}},b=this;f.length;)m();var E=l.filter(function(v){return v.type==="controller"});E.forEach(function(v){d.addCC({number:v.controllerType,ticks:v.absoluteTime,value:v.value/127})});var x=l.filter(function(v){return v.type==="pitchBend"});x.forEach(function(v){d.addPitchBend({ticks:v.absoluteTime,value:v.value/Math.pow(2,13)})});var S=l.find(function(v){return v.type==="endOfTrack"});this.endOfTrackTicks=S!==void 0?S.absoluteTime:void 0}}return c.prototype.addNote=function(l){var u=o.get(this),d=new r.Note({midi:0,ticks:0,velocity:1},{ticks:0,velocity:0},u);return Object.assign(d,l),(0,t.insert)(this.notes,d,"ticks"),this},c.prototype.addCC=function(l){var u=o.get(this),d=new e.ControlChange({controllerType:l.number},u);return delete l.number,Object.assign(d,l),Array.isArray(this.controlChanges[d.number])||(this.controlChanges[d.number]=[]),(0,t.insert)(this.controlChanges[d.number],d,"ticks"),this},c.prototype.addPitchBend=function(l){var u=o.get(this),d=new i.PitchBend({},u);return Object.assign(d,l),(0,t.insert)(this.pitchBends,d,"ticks"),this},Object.defineProperty(c.prototype,"duration",{get:function(){if(!this.notes.length)return 0;for(var l=this.notes[this.notes.length-1].time+this.notes[this.notes.length-1].duration,u=0;u<this.notes.length-1;u++){var d=this.notes[u].time+this.notes[u].duration;l<d&&(l=d)}return l},enumerable:!1,configurable:!0}),Object.defineProperty(c.prototype,"durationTicks",{get:function(){if(!this.notes.length)return 0;for(var l=this.notes[this.notes.length-1].ticks+this.notes[this.notes.length-1].durationTicks,u=0;u<this.notes.length-1;u++){var d=this.notes[u].ticks+this.notes[u].durationTicks;l<d&&(l=d)}return l},enumerable:!1,configurable:!0}),c.prototype.fromJSON=function(l){var u=this;this.name=l.name,this.channel=l.channel,this.instrument=new s.Instrument(void 0,this),this.instrument.fromJSON(l.instrument),l.endOfTrackTicks!==void 0&&(this.endOfTrackTicks=l.endOfTrackTicks);for(var d in l.controlChanges)l.controlChanges[d]&&l.controlChanges[d].forEach(function(h){u.addCC({number:h.number,ticks:h.ticks,value:h.value})});l.notes.forEach(function(h){u.addNote({durationTicks:h.durationTicks,midi:h.midi,ticks:h.ticks,velocity:h.velocity})})},c.prototype.toJSON=function(){for(var l={},u=0;u<127;u++)this.controlChanges.hasOwnProperty(u)&&(l[u]=this.controlChanges[u].map(function(h){return h.toJSON()}));var d={channel:this.channel,controlChanges:l,pitchBends:this.pitchBends.map(function(h){return h.toJSON()}),instrument:this.instrument.toJSON(),name:this.name,notes:this.notes.map(function(h){return h.toJSON()})};return this.endOfTrackTicks!==void 0&&(d.endOfTrackTicks=this.endOfTrackTicks),d},c}();return xl.Track=a,xl}var ea={};function NX(t){var e=[];return Wy(t,e),e}function Wy(t,e){for(var n=0;n<t.length;n++){var i=t[n];Array.isArray(i)?Wy(i,e):e.push(i)}}const yX=Object.freeze(Object.defineProperty({__proto__:null,flatten:NX},Symbol.toStringTag,{value:"Module"})),kX=Ef(yX);var jx;function DX(){if(jx)return ea;jx=1;var t=ea&&ea.__spreadArray||function(E,x,S){if(S||arguments.length===2)for(var v=0,T=x.length,w;v<T;v++)(w||!(v in x))&&(w||(w=Array.prototype.slice.call(x,0,v)),w[v]=x[v]);return E.concat(w||Array.prototype.slice.call(x))};Object.defineProperty(ea,"__esModule",{value:!0}),ea.encode=void 0;var e=Fy(),n=qg(),i=kX;function s(E,x){return[{absoluteTime:E.ticks,channel:x,deltaTime:0,noteNumber:E.midi,type:"noteOn",velocity:Math.floor(E.velocity*127)},{absoluteTime:E.ticks+E.durationTicks,channel:x,deltaTime:0,noteNumber:E.midi,type:"noteOff",velocity:Math.floor(E.noteOffVelocity*127)}]}function r(E){return(0,i.flatten)(E.notes.map(function(x){return s(x,E.channel)}))}function o(E,x){return{absoluteTime:E.ticks,channel:x,controllerType:E.number,deltaTime:0,type:"controller",value:Math.floor(E.value*127)}}function a(E){for(var x=[],S=0;S<127;S++)E.controlChanges.hasOwnProperty(S)&&E.controlChanges[S].forEach(function(v){x.push(o(v,E.channel))});return x}function c(E,x){return{absoluteTime:E.ticks,channel:x,deltaTime:0,type:"pitchBend",value:E.value}}function l(E){var x=[];return E.pitchBends.forEach(function(S){x.push(c(S,E.channel))}),x}function u(E){return{absoluteTime:0,channel:E.channel,deltaTime:0,programNumber:E.instrument.number,type:"programChange"}}function d(E){return{absoluteTime:0,deltaTime:0,meta:!0,text:E,type:"trackName"}}function h(E){return{absoluteTime:E.ticks,deltaTime:0,meta:!0,microsecondsPerBeat:Math.floor(6e7/E.bpm),type:"setTempo"}}function f(E){return{absoluteTime:E.ticks,deltaTime:0,denominator:E.timeSignature[1],meta:!0,metronome:24,numerator:E.timeSignature[0],thirtyseconds:8,type:"timeSignature"}}function p(E){var x=n.keySignatureKeys.indexOf(E.key);return{absoluteTime:E.ticks,deltaTime:0,key:x+7,meta:!0,scale:E.scale==="major"?0:1,type:"keySignature"}}function m(E){return{absoluteTime:E.ticks,deltaTime:0,meta:!0,text:E.text,type:E.type}}function b(E){var x={header:{format:1,numTracks:E.tracks.length+1,ticksPerBeat:E.header.ppq},tracks:t([t(t(t(t([{absoluteTime:0,deltaTime:0,meta:!0,text:E.header.name,type:"trackName"}],E.header.keySignatures.map(function(S){return p(S)}),!0),E.header.meta.map(function(S){return m(S)}),!0),E.header.tempos.map(function(S){return h(S)}),!0),E.header.timeSignatures.map(function(S){return f(S)}),!0)],E.tracks.map(function(S){return t(t(t([d(S.name),u(S)],r(S),!0),a(S),!0),l(S),!0)}),!0)};return x.tracks=x.tracks.map(function(S){S=S.sort(function(T,w){return T.absoluteTime-w.absoluteTime});var v=0;return S.forEach(function(T){T.deltaTime=T.absoluteTime-v,v=T.absoluteTime,delete T.absoluteTime}),S.push({deltaTime:0,meta:!0,type:"endOfTrack"}),S}),new Uint8Array((0,e.writeMidi)(x))}return ea.encode=b,ea}var qx;function OX(){return qx||(qx=1,function(t){var e=_o&&_o.__awaiter||function(d,h,f,p){function m(b){return b instanceof f?b:new f(function(E){E(b)})}return new(f||(f=Promise))(function(b,E){function x(T){try{v(p.next(T))}catch(w){E(w)}}function S(T){try{v(p.throw(T))}catch(w){E(w)}}function v(T){T.done?b(T.value):m(T.value).then(x,S)}v((p=p.apply(d,h||[])).next())})},n=_o&&_o.__generator||function(d,h){var f={label:0,sent:function(){if(b[0]&1)throw b[1];return b[1]},trys:[],ops:[]},p,m,b,E;return E={next:x(0),throw:x(1),return:x(2)},typeof Symbol=="function"&&(E[Symbol.iterator]=function(){return this}),E;function x(v){return function(T){return S([v,T])}}function S(v){if(p)throw new TypeError("Generator is already executing.");for(;f;)try{if(p=1,m&&(b=v[0]&2?m.return:v[0]?m.throw||((b=m.return)&&b.call(m),0):m.next)&&!(b=b.call(m,v[1])).done)return b;switch(m=0,b&&(v=[v[0]&2,b.value]),v[0]){case 0:case 1:b=v;break;case 4:return f.label++,{value:v[1],done:!1};case 5:f.label++,m=v[1],v=[0];continue;case 7:v=f.ops.pop(),f.trys.pop();continue;default:if(b=f.trys,!(b=b.length>0&&b[b.length-1])&&(v[0]===6||v[0]===2)){f=0;continue}if(v[0]===3&&(!b||v[1]>b[0]&&v[1]<b[3])){f.label=v[1];break}if(v[0]===6&&f.label<b[1]){f.label=b[1],b=v;break}if(b&&f.label<b[2]){f.label=b[2],f.ops.push(v);break}b[2]&&f.ops.pop(),f.trys.pop();continue}v=h.call(d,f)}catch(T){v=[6,T],m=0}finally{p=b=0}if(v[0]&5)throw v[1];return{value:v[0]?v[1]:void 0,done:!0}}};Object.defineProperty(t,"__esModule",{value:!0}),t.Header=t.Track=t.Midi=void 0;var i=Fy(),s=qg(),r=Xx(),o=DX(),a=function(){function d(h){var f=this,p=null;if(h){var m=h instanceof ArrayBuffer?new Uint8Array(h):h;p=(0,i.parseMidi)(m),p.tracks.forEach(function(b){var E=0;b.forEach(function(x){E+=x.deltaTime,x.absoluteTime=E})}),p.tracks=u(p.tracks)}this.header=new s.Header(p),this.tracks=[],h&&(this.tracks=p.tracks.map(function(b){return new r.Track(b,f.header)}),p.header.format===1&&this.tracks[0].duration===0&&this.tracks.shift())}return d.fromUrl=function(h){return e(this,void 0,void 0,function(){var f,p;return n(this,function(m){switch(m.label){case 0:return[4,fetch(h)];case 1:return f=m.sent(),f.ok?[4,f.arrayBuffer()]:[3,3];case 2:return p=m.sent(),[2,new d(p)];case 3:throw new Error("Could not load '".concat(h,"'"))}})})},Object.defineProperty(d.prototype,"name",{get:function(){return this.header.name},set:function(h){this.header.name=h},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,"duration",{get:function(){var h=this.tracks.map(function(f){return f.duration});return Math.max.apply(Math,h)},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,"durationTicks",{get:function(){var h=this.tracks.map(function(f){return f.durationTicks});return Math.max.apply(Math,h)},enumerable:!1,configurable:!0}),d.prototype.addTrack=function(){var h=new r.Track(void 0,this.header);return this.tracks.push(h),h},d.prototype.toArray=function(){return(0,o.encode)(this)},d.prototype.toJSON=function(){return{header:this.header.toJSON(),tracks:this.tracks.map(function(h){return h.toJSON()})}},d.prototype.fromJSON=function(h){var f=this;this.header=new s.Header,this.header.fromJSON(h.header),this.tracks=h.tracks.map(function(p){var m=new r.Track(void 0,f.header);return m.fromJSON(p),m})},d.prototype.clone=function(){var h=new d;return h.fromJSON(this.toJSON()),h},d}();t.Midi=a;var c=Xx();Object.defineProperty(t,"Track",{enumerable:!0,get:function(){return c.Track}});var l=qg();Object.defineProperty(t,"Header",{enumerable:!0,get:function(){return l.Header}});function u(d){for(var h=[],f=0;f<d.length;f++)for(var p=h.length,m=new Map,b=Array(16).fill(0),E=0,x=d[f];E<x.length;E++){var S=x[E],v=p,T=S.channel;if(T!==void 0){S.type==="programChange"&&(b[T]=S.programNumber);var w=b[T],D="".concat(w," ").concat(T);m.has(D)?v=m.get(D):(v=p+m.size,m.set(D,v))}h[v]||h.push([]),h[v].push(S)}return h}}(_o)),_o}var PX=OX();const IX={key:0},RX=Ue({__name:"subirmidi",props:{cancion:{}},setup(t){const e=J(""),n=J(null),i=J([]),s=new My;function r(){var c;e.value="iniciando",(c=n.value)==null||c.click()}const o=J(null);function a(c){var h;const l=c.target,u=(h=l.files)==null?void 0:h[0];if(!u)return;if(!u.name.toLowerCase().endsWith(".midi")&&!u.name.toLowerCase().endsWith(".mid")){alert("Por favor selecciona un archivo MIDI válido"),e.value="error extension archivo";return}const d=new FileReader;d.onload=f=>{var p;try{const m=(p=f.target)==null?void 0:p.result,b=new PX.Midi(m);e.value="MIDI Ok",o.value=b,i.value=s.MidiToPentagramas(b),e.value="Pentagramas cargados"}catch(m){console.error("Error al procesar el archivo MIDI:",m),e.value="error al procesar MIDI"}},d.readAsArrayBuffer(u),l.value=""}return(c,l)=>(R(),B(be,null,[N("span",{onClick:r},"[Subir Midi] "+ce(e.value),1),N("input",{ref_key:"fileInput",ref:n,type:"file",accept:".midi,.mid",style:{display:"none"},onChange:a},null,544),i.value.length>0?(R(),B("div",IX,ce(i.value),1)):G("",!0)],64))}}),LX=["value"],MX=Ue({__name:"editarpentagrama",props:{cancion:{}},emits:["cerrar","actualizoPentagrama"],setup(t,{emit:e}){const n=t,i=e,s=J(0);function r(){i("cerrar")}function o(){const c=new YE;c.instrumento="Nuevo Instrumento",n.cancion.pentagramas.push(c)}function a(){const c=new TA;n.cancion.pentagramas[s.value]=c.creaPentagrama(n.cancion),i("actualizoPentagrama")}return(c,l)=>(R(),B(be,null,[N("div",null,[N("span",{onClick:r},"[Cancelar]"),Qe(RX,{cancion:c.cancion},null,8,["cancion"])]),N("div",null,[l[0]||(l[0]=mt(" Pentagramas ")),N("select",null,[(R(!0),B(be,null,We(n.cancion.pentagramas,(u,d)=>(R(),B("option",{key:d,value:u},ce(u.instrumento),9,LX))),128))]),N("span",{onClick:o},"[Agregar]")]),N("div",null,[N("span",{onClick:a},"[Generar Pentagrama]")])],64))}}),BX=Ue({__name:"editar",setup(t){const e=new Lo,n=J(-1);function i(b){n.value=b}const s=He();class r{constructor(){W(this,"viendo","inicio");W(this,"viendoacordes",!0);W(this,"verEditandoMetricaEs",!0);W(this,"verEditandoAcordes",!0)}}const o=J(new r);function a(){return{width:e.getAnchoPantalla()+"px",height:e.getAltoPantalla()+"px"}}function c(){return o.value.viendo=="editartexto"?"width: 100%; height: 100%":`width: ${e.getConfiguracionPantalla().anchoPrincipal}%; height: 100%`}function l(){return o.value.viendo=="editartexto"?"width: 0%; height: 100%":`width: ${100-e.getConfiguracionPantalla().anchoPrincipal}%;`}const u=J(),d=J(),h=J();function f(b){o.value.viendo=b,localStorage.setItem("viendo_vista_editando",b)}function p(){f("inicio")}function m(){u.value?(u.value.Actualizar(),d.value.Actualizar()):h.value.Actualizar()}return gt(()=>s.editandocancion.escala,()=>{u.value&&u.value.Actualizar()}),gt(()=>s.editandocancion,()=>{u.value&&u.value.Actualizar()}),(b,E)=>(R(),B(be,null,[Qe(OH,{cancion:ie(s).editandocancion,origen:ie(s).origenEditando,onEditarPentagramas:E[0]||(E[0]=x=>f("pentagramas"))},null,8,["cancion","origen"]),N("div",{style:vt([{display:"flex"},a()]),class:"relativo"},[N("div",{style:vt([{width:"70%"},c()])},[o.value.viendo==="inicio"?(R(),B("div",{key:0,style:{position:"relative",left:"96%"},onClick:E[1]||(E[1]=x=>f("editartexto"))}," 🔄 ")):G("",!0),o.value.viendo==="pentagramas"?(R(),dt(CA,{key:1,cancion:ie(s).editandocancion,compas:n.value,onClickCompas:i,ref_key:"ctrlTocarPentagrama",ref:h},null,8,["cancion","compas"])):G("",!0),o.value.viendo!="editartexto"&&o.value.viendo!="pentagramas"?(R(),dt($w,{key:2,cancion:ie(s).editandocancion,compas:n.value,ref_key:"ctrlEditarTexto",ref:u,onClickCompas:i},null,8,["cancion","compas"])):G("",!0),o.value.viendo=="editartexto"?(R(),dt(vX,{key:3,onCerrar:p,cancion:ie(s).editandocancion,onActualizoPentagrama:m,compas:ie(s).compas,"ver-acordes":o.value.verEditandoAcordes,"ver-metrica-es":o.value.verEditandoMetricaEs},null,8,["cancion","compas","ver-acordes","ver-metrica-es"])):G("",!0)],4),o.value.viendo==="pentagramas"?(R(),B("div",{key:0,style:vt(l())},[Qe(MX,{onCerrar:p,onActualizoPentagrama:m,cancion:ie(s).editandocancion},null,8,["cancion"])],4)):G("",!0),o.value.viendo!=="pentagramas"?(R(),B("div",{key:1,style:vt(l())},[o.value.viendo!=="editconsolaacordes"&&o.value.viendo!=="editaracordes"?(R(),dt(fX,{key:0,cancion:ie(s).editandocancion,compas:ie(s).compas,onCambioCompas:i,onActualizarCancion:m},null,8,["cancion","compas"])):G("",!0),o.value.viendo=="editaracordes"?(R(),dt(KH,{key:1,cancion:ie(s).editandocancion,compas:ie(s).compas},null,8,["cancion","compas"])):G("",!0),o.value.viendo=="editconsolaacordes"?(R(),dt(_H,{key:2,onCerrar:p,cancion:ie(s).editandocancion,compas:ie(s).compas},null,8,["cancion","compas"])):G("",!0),o.value.viendo==="inicio"?(R(),B("div",{key:3,style:{position:"relative",left:"96%"},onClick:E[2]||(E[2]=x=>f("editconsolaacordes"))}," 🔄 ")):G("",!0),o.value.viendo!=="editconsolaacordes"&&o.value.viendo!=="editaracordes"?(R(),dt(uX,{key:4,ref_key:"ctrlSecuencia",ref:d,cancion:ie(s).editandocancion,compas:ie(s).compas,onCambioCompas:i},null,8,["cancion","compas"])):G("",!0)],4)):G("",!0)],4)],64))}}),FX=nt(BX,[["__scopeId","data-v-b7f535da"]]),UX={};function VX(t,e){return"Listas aun no disponibles"}const WX=nt(UX,[["render",VX],["__scopeId","data-v-920c45c2"]]),HX={class:"configSesion"},XX={key:0,style:{"margin-top":"5px"}},jX=["disabled"],qX={key:0,style:{"margin-top":"1em"}},zX={key:0,style:{width:"100%"}},YX=["src"],JX={key:1,class:"nuevaSesion"},ZX={key:2},KX=["onClick"],QX=Ue({__name:"configSesion",setup(t){const e=J(new kE("default",0,"",0,0)),n=J("");n.value=localStorage.getItem("sesionDefault")||"";function i(){localStorage.setItem("sesionDefault",e.value.nombre),n.value=e.value.nombre}function s(){o.aplicacion.cargarSesiones()}const r=J(""),o=He();function a(){o.aplicacion.CrearSesion(e.value.nombre)}function c(h){o.aplicacion.MensajeASesion(h)}function l(h){o.aplicacion.UnirmeSesion(h)}function u(){o.aplicacion.SalirSesion()}gt(()=>o.estadoSesion,h=>{h==="conectado"&&d()}),gt(()=>o.rolSesion,h=>{h==="conectado"&&d()});function d(){o.aplicacion.CargarUsuariosSesion()}return o.estadoSesion==="conectado"&&d(),(h,f)=>(R(),B("div",HX,[ie(o).estadoSesion==="conectado"?(R(),B("div",XX,[N("div",null,[f[3]||(f[3]=N("h1",null,"Sesion",-1)),ie(o).estadoSesion=="conectado"?(R(),B("button",{key:0,onClick:u}," Salir de Sesión ")):G("",!0),ie(o).estadoSesion=="conectado"?(R(),B("button",{key:1,onClick:i,disabled:e.value.nombre===n.value}," Set Default ",8,jX)):G("",!0)]),N("div",null,[N("div",null,[N("form",{onSubmit:f[1]||(f[1]=iw(p=>c(r.value),["prevent"]))},[lt(N("input",{type:"text","onUpdate:modelValue":f[0]||(f[0]=p=>r.value=p),placeholder:"Escribe un mensaje",required:""},null,512),[[At,r.value]]),f[4]||(f[4]=N("button",{type:"submit"},"Enviar",-1))],32),ie(o).mensajes&&ie(o).mensajes.length?(R(),B("div",qX,[(R(!0),B(be,null,We(ie(o).mensajes,(p,m)=>(R(),B("div",{key:m,style:{"margin-bottom":"0.5em"}},ce(p),1))),128))])):G("",!0)]),N("div",null,[N("div",{style:{display:"flex"}},[f[5]||(f[5]=N("h3",null,"Usuarios en la sesión",-1)),N("button",{onClick:d},"Actualizar Usuarios")]),ie(o).usuariosSesion.length?(R(),B("table",zX,[f[6]||(f[6]=N("thead",null,[N("tr",null,[N("th",null,"Usuario"),N("th",null,"Perfil"),N("th",null,"Rol")])],-1)),N("tbody",null,[(R(!0),B(be,null,We(ie(o).usuariosSesion,(p,m)=>(R(),B("tr",{key:m},[N("td",null,ce(p.ID)+" , "+ce(p.Usuario),1),N("td",null,[p.PerfilUsr&&p.PerfilUsr.imagen?(R(),B("img",{key:0,src:p.PerfilUsr.imagen,alt:"Profile image",class:"profile-image"},null,8,YX)):G("",!0),mt(" "+ce(p.PerfilUsr.nombre),1)]),N("td",null,ce(p.RolSesion),1)]))),128))])])):G("",!0)])])])):G("",!0),ie(o).estadoSesion!="conectado"?(R(),B("div",JX,[f[7]||(f[7]=N("h1",null,"Sesiones",-1)),f[8]||(f[8]=N("label",{for:"nombre"},"Nombre de la sesión:",-1)),lt(N("input",{id:"nombre","onUpdate:modelValue":f[2]||(f[2]=p=>e.value.nombre=p),required:""},null,512),[[At,e.value.nombre]]),ie(o).estadoSesion!="conectado"?(R(),B("button",{key:0,onClick:a}," Iniciar Sesión ")):G("",!0),N("button",{onClick:s},"Actualizar Sesiones"),mt(" "+ce(ie(o).estadoSesion)+" - "+ce(ie(o).rolSesion),1)])):G("",!0),ie(o).sesiones.length?(R(),B("table",ZX,[f[9]||(f[9]=N("thead",null,[N("tr",null,[N("th",null,"Nombre"),N("th",null,"Usuarios"),N("th",null,"Estado"),N("th")])],-1)),N("tbody",null,[(R(!0),B(be,null,We(ie(o).sesiones,(p,m)=>(R(),B("tr",{key:m},[N("td",null,ce(p.nombre),1),N("td",null,ce(p.usuarios),1),N("td",null,ce(p.estado),1),N("td",null,[ie(o).estadoSesion!="conectado"?(R(),B("button",{key:0,onClick:b=>l(p.nombre)}," Unirse ",8,KX)):G("",!0)])]))),128))])])):G("",!0)]))}}),GX=nt(QX,[["__scopeId","data-v-2326f748"]]),_X={};var zg=null;function $X(t){try{return crypto.getRandomValues(new Uint8Array(t))}catch{}try{return _X.randomBytes(t)}catch{}if(!zg)throw Error("Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative");return zg(t)}function ej(t){zg=t}function ov(t,e){if(t=t||av,typeof t!="number")throw Error("Illegal arguments: "+typeof t+", "+typeof e);t<4?t=4:t>31&&(t=31);var n=[];return n.push("$2b$"),t<10&&n.push("0"),n.push(t.toString()),n.push("$"),n.push(zh($X(Eu),Eu)),n.join("")}function Hy(t,e,n){if(typeof e=="function"&&(n=e,e=void 0),typeof t=="function"&&(n=t,t=void 0),typeof t>"u")t=av;else if(typeof t!="number")throw Error("illegal arguments: "+typeof t);function i(s){ks(function(){try{s(null,ov(t))}catch(r){s(r)}})}if(n){if(typeof n!="function")throw Error("Illegal callback: "+typeof n);i(n)}else return new Promise(function(s,r){i(function(o,a){if(o){r(o);return}s(a)})})}function Xy(t,e){if(typeof e>"u"&&(e=av),typeof e=="number"&&(e=ov(e)),typeof t!="string"||typeof e!="string")throw Error("Illegal arguments: "+typeof t+", "+typeof e);return Yg(t,e)}function jy(t,e,n,i){function s(r){typeof t=="string"&&typeof e=="number"?Hy(e,function(o,a){Yg(t,a,r,i)}):typeof t=="string"&&typeof e=="string"?Yg(t,e,r,i):ks(r.bind(this,Error("Illegal arguments: "+typeof t+", "+typeof e)))}if(n){if(typeof n!="function")throw Error("Illegal callback: "+typeof n);s(n)}else return new Promise(function(r,o){s(function(a,c){if(a){o(a);return}r(c)})})}function qy(t,e){for(var n=t.length^e.length,i=0;i<t.length;++i)n|=t.charCodeAt(i)^e.charCodeAt(i);return n===0}function tj(t,e){if(typeof t!="string"||typeof e!="string")throw Error("Illegal arguments: "+typeof t+", "+typeof e);return e.length!==60?!1:qy(Xy(t,e.substring(0,e.length-31)),e)}function nj(t,e,n,i){function s(r){if(typeof t!="string"||typeof e!="string"){ks(r.bind(this,Error("Illegal arguments: "+typeof t+", "+typeof e)));return}if(e.length!==60){ks(r.bind(this,null,!1));return}jy(t,e.substring(0,29),function(o,a){o?r(o):r(null,qy(a,e))},i)}if(n){if(typeof n!="function")throw Error("Illegal callback: "+typeof n);s(n)}else return new Promise(function(r,o){s(function(a,c){if(a){o(a);return}r(c)})})}function ij(t){if(typeof t!="string")throw Error("Illegal arguments: "+typeof t);return parseInt(t.split("$")[2],10)}function sj(t){if(typeof t!="string")throw Error("Illegal arguments: "+typeof t);if(t.length!==60)throw Error("Illegal hash length: "+t.length+" != 60");return t.substring(0,29)}function rj(t){if(typeof t!="string")throw Error("Illegal arguments: "+typeof t);return zy(t)>72}var ks=typeof process<"u"&&process&&typeof process.nextTick=="function"?typeof setImmediate=="function"?setImmediate:process.nextTick:setTimeout;function zy(t){for(var e=0,n=0,i=0;i<t.length;++i)n=t.charCodeAt(i),n<128?e+=1:n<2048?e+=2:(n&64512)===55296&&(t.charCodeAt(i+1)&64512)===56320?(++i,e+=4):e+=3;return e}function oj(t){for(var e=0,n,i,s=new Array(zy(t)),r=0,o=t.length;r<o;++r)n=t.charCodeAt(r),n<128?s[e++]=n:n<2048?(s[e++]=n>>6|192,s[e++]=n&63|128):(n&64512)===55296&&((i=t.charCodeAt(r+1))&64512)===56320?(n=65536+((n&1023)<<10)+(i&1023),++r,s[e++]=n>>18|240,s[e++]=n>>12&63|128,s[e++]=n>>6&63|128,s[e++]=n&63|128):(s[e++]=n>>12|224,s[e++]=n>>6&63|128,s[e++]=n&63|128);return s}var _a="./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),eo=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,54,55,56,57,58,59,60,61,62,63,-1,-1,-1,-1,-1,-1,-1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,-1,-1,-1,-1,-1,-1,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,-1,-1,-1,-1,-1];function zh(t,e){var n=0,i=[],s,r;if(e<=0||e>t.length)throw Error("Illegal len: "+e);for(;n<e;){if(s=t[n++]&255,i.push(_a[s>>2&63]),s=(s&3)<<4,n>=e){i.push(_a[s&63]);break}if(r=t[n++]&255,s|=r>>4&15,i.push(_a[s&63]),s=(r&15)<<2,n>=e){i.push(_a[s&63]);break}r=t[n++]&255,s|=r>>6&3,i.push(_a[s&63]),i.push(_a[r&63])}return i.join("")}function Yy(t,e){var n=0,i=t.length,s=0,r=[],o,a,c,l,u,d;if(e<=0)throw Error("Illegal len: "+e);for(;n<i-1&&s<e&&(d=t.charCodeAt(n++),o=d<eo.length?eo[d]:-1,d=t.charCodeAt(n++),a=d<eo.length?eo[d]:-1,!(o==-1||a==-1||(u=o<<2>>>0,u|=(a&48)>>4,r.push(String.fromCharCode(u)),++s>=e||n>=i)||(d=t.charCodeAt(n++),c=d<eo.length?eo[d]:-1,c==-1)||(u=(a&15)<<4>>>0,u|=(c&60)>>2,r.push(String.fromCharCode(u)),++s>=e||n>=i)));)d=t.charCodeAt(n++),l=d<eo.length?eo[d]:-1,u=(c&3)<<6>>>0,u|=l,r.push(String.fromCharCode(u)),++s;var h=[];for(n=0;n<s;n++)h.push(r[n].charCodeAt(0));return h}var Eu=16,av=10,aj=16,cj=100,zx=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],Yx=[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946,1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055,3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504,976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462],Jy=[1332899944,1700884034,1701343084,1684370003,1668446532,1869963892];function vu(t,e,n,i){var s,r=t[e],o=t[e+1];return r^=n[0],s=i[r>>>24],s+=i[256|r>>16&255],s^=i[512|r>>8&255],s+=i[768|r&255],o^=s^n[1],s=i[o>>>24],s+=i[256|o>>16&255],s^=i[512|o>>8&255],s+=i[768|o&255],r^=s^n[2],s=i[r>>>24],s+=i[256|r>>16&255],s^=i[512|r>>8&255],s+=i[768|r&255],o^=s^n[3],s=i[o>>>24],s+=i[256|o>>16&255],s^=i[512|o>>8&255],s+=i[768|o&255],r^=s^n[4],s=i[r>>>24],s+=i[256|r>>16&255],s^=i[512|r>>8&255],s+=i[768|r&255],o^=s^n[5],s=i[o>>>24],s+=i[256|o>>16&255],s^=i[512|o>>8&255],s+=i[768|o&255],r^=s^n[6],s=i[r>>>24],s+=i[256|r>>16&255],s^=i[512|r>>8&255],s+=i[768|r&255],o^=s^n[7],s=i[o>>>24],s+=i[256|o>>16&255],s^=i[512|o>>8&255],s+=i[768|o&255],r^=s^n[8],s=i[r>>>24],s+=i[256|r>>16&255],s^=i[512|r>>8&255],s+=i[768|r&255],o^=s^n[9],s=i[o>>>24],s+=i[256|o>>16&255],s^=i[512|o>>8&255],s+=i[768|o&255],r^=s^n[10],s=i[r>>>24],s+=i[256|r>>16&255],s^=i[512|r>>8&255],s+=i[768|r&255],o^=s^n[11],s=i[o>>>24],s+=i[256|o>>16&255],s^=i[512|o>>8&255],s+=i[768|o&255],r^=s^n[12],s=i[r>>>24],s+=i[256|r>>16&255],s^=i[512|r>>8&255],s+=i[768|r&255],o^=s^n[13],s=i[o>>>24],s+=i[256|o>>16&255],s^=i[512|o>>8&255],s+=i[768|o&255],r^=s^n[14],s=i[r>>>24],s+=i[256|r>>16&255],s^=i[512|r>>8&255],s+=i[768|r&255],o^=s^n[15],s=i[o>>>24],s+=i[256|o>>16&255],s^=i[512|o>>8&255],s+=i[768|o&255],r^=s^n[16],t[e]=o^n[aj+1],t[e+1]=r,t}function sc(t,e){for(var n=0,i=0;n<4;++n)i=i<<8|t[e]&255,e=(e+1)%t.length;return{key:i,offp:e}}function Jx(t,e,n){for(var i=0,s=[0,0],r=e.length,o=n.length,a,c=0;c<r;c++)a=sc(t,i),i=a.offp,e[c]=e[c]^a.key;for(c=0;c<r;c+=2)s=vu(s,0,e,n),e[c]=s[0],e[c+1]=s[1];for(c=0;c<o;c+=2)s=vu(s,0,e,n),n[c]=s[0],n[c+1]=s[1]}function lj(t,e,n,i){for(var s=0,r=[0,0],o=n.length,a=i.length,c,l=0;l<o;l++)c=sc(e,s),s=c.offp,n[l]=n[l]^c.key;for(s=0,l=0;l<o;l+=2)c=sc(t,s),s=c.offp,r[0]^=c.key,c=sc(t,s),s=c.offp,r[1]^=c.key,r=vu(r,0,n,i),n[l]=r[0],n[l+1]=r[1];for(l=0;l<a;l+=2)c=sc(t,s),s=c.offp,r[0]^=c.key,c=sc(t,s),s=c.offp,r[1]^=c.key,r=vu(r,0,n,i),i[l]=r[0],i[l+1]=r[1]}function Zx(t,e,n,i,s){var r=Jy.slice(),o=r.length,a;if(n<4||n>31)if(a=Error("Illegal number of rounds (4-31): "+n),i){ks(i.bind(this,a));return}else throw a;if(e.length!==Eu)if(a=Error("Illegal salt length: "+e.length+" != "+Eu),i){ks(i.bind(this,a));return}else throw a;n=1<<n>>>0;var c,l,u=0,d;typeof Int32Array=="function"?(c=new Int32Array(zx),l=new Int32Array(Yx)):(c=zx.slice(),l=Yx.slice()),lj(e,t,c,l);function h(){if(s&&s(u/n),u<n)for(var p=Date.now();u<n&&(u=u+1,Jx(t,c,l),Jx(e,c,l),!(Date.now()-p>cj)););else{for(u=0;u<64;u++)for(d=0;d<o>>1;d++)vu(r,d<<1,c,l);var m=[];for(u=0;u<o;u++)m.push((r[u]>>24&255)>>>0),m.push((r[u]>>16&255)>>>0),m.push((r[u]>>8&255)>>>0),m.push((r[u]&255)>>>0);if(i){i(null,m);return}else return m}i&&ks(h)}if(typeof i<"u")h();else for(var f;;)if(typeof(f=h())<"u")return f||[]}function Yg(t,e,n,i){var s;if(typeof t!="string"||typeof e!="string")if(s=Error("Invalid string / salt: Not a string"),n){ks(n.bind(this,s));return}else throw s;var r,o;if(e.charAt(0)!=="$"||e.charAt(1)!=="2")if(s=Error("Invalid salt version: "+e.substring(0,2)),n){ks(n.bind(this,s));return}else throw s;if(e.charAt(2)==="$")r="\0",o=3;else{if(r=e.charAt(2),r!=="a"&&r!=="b"&&r!=="y"||e.charAt(3)!=="$")if(s=Error("Invalid salt revision: "+e.substring(2,4)),n){ks(n.bind(this,s));return}else throw s;o=4}if(e.charAt(o+2)>"$")if(s=Error("Missing salt rounds"),n){ks(n.bind(this,s));return}else throw s;var a=parseInt(e.substring(o,o+1),10)*10,c=parseInt(e.substring(o+1,o+2),10),l=a+c,u=e.substring(o+3,o+25);t+=r>="a"?"\0":"";var d=oj(t),h=Yy(u,Eu);function f(p){var m=[];return m.push("$2"),r>="a"&&m.push(r),m.push("$"),l<10&&m.push("0"),m.push(l.toString()),m.push("$"),m.push(zh(h,h.length)),m.push(zh(p,Jy.length*4-1)),m.join("")}if(typeof n>"u")return f(Zx(d,h,l));Zx(d,h,l,function(p,m){p?n(p,null):n(null,f(m))},i)}function uj(t,e){return zh(t,e)}function dj(t,e){return Yy(t,e)}const hj={setRandomFallback:ej,genSaltSync:ov,genSalt:Hy,hashSync:Xy,hash:jy,compareSync:tj,compare:nj,getRounds:ij,getSalt:sj,truncates:rj,encodeBase64:uj,decodeBase64:dj};var Yc={library:"https://accounts.google.com/gsi/client",defaultButtonConfig:{theme:"outline",size:"large"},scopes:"email profile openid",ssrError:"vue3-google-login cannot be executed on the server side. See here for more info https://devbaji.github.io/vue3-google-login/#no-ssr-support"};const ri=Po({clientId:null,popupType:"CODE",prompt:!1,autoLogin:!1,idConfiguration:null,buttonConfig:Yc.defaultButtonConfig,callback:()=>{},error:null}),bc=Po({apiLoaded:!1,apiLoadIntitited:!1}),Zy=()=>new Promise((t,e)=>{if(typeof window<"u"){if(!bc.apiLoadIntitited){const n=document.createElement("script");bc.apiLoadIntitited=!0,n.addEventListener("load",()=>{bc.apiLoaded=!0,t(window.google)}),n.addEventListener("error",()=>{e("Failed to load the Google 3P Authorization JavaScript Library.")}),n.src=Yc.library,n.async=!0,n.defer=!0,document.head.appendChild(n)}}else e(Yc.ssrError)}),hp=t=>{bc.apiLoadIntitited?bc.apiLoaded?t(window.google):gt(()=>bc.apiLoaded,e=>{e&&t(window.google)}):Zy().then(e=>{t(e)})},fj=(t,e,n,i)=>{if(!t.client_id)throw new Error("Prop client id required since plugin is not initialized with a client id");hp(()=>{((s,r,o,a,c)=>{if(c){const u=s.callback;s.callback=d=>{d.credential?u&&u(d):c(d)}}window.google.accounts.id.initialize(s);const l=r.value;l&&!a&&window.google.accounts.id.renderButton(l,o)})(t,e,n.buttonConfig,i,n.error),n.prompt&&gj({clientId:n.clientId,callback:n.callback,error:n.error,autoLogin:n.autoLogin})})},pj=t=>new Promise((e,n)=>{hp(i=>{if(!(t&&t.clientId||ri.clientId))throw new Error("clientId is required since the plugin is not initialized with a Client Id");i.accounts.oauth2.initCodeClient({client_id:t&&t.clientId||ri.clientId||"",scope:Yc.scopes,ux_mode:"popup",callback:s=>{s.code?e(s):n(s)},error_callback:s=>{n(s)}}).requestCode()})}),mj=t=>new Promise((e,n)=>{hp(i=>{if(!(t&&t.clientId||ri.clientId))throw new Error("clientId is required since the plugin is not initialized with a Client Id");i.accounts.oauth2.initTokenClient({client_id:t&&t.clientId||ri.clientId||"",scope:Yc.scopes,callback:s=>{s.access_token?e(s):n(s)},error_callback:s=>{n(s)}}).requestAccessToken()})}),gj=t=>{if(!t&&(t={}),!t.clientId&&!ri.clientId)throw new Error("clientId is required");const e={use_fedcm_for_prompt:!0};return t.clientId&&(e.client_id=t.clientId),!t.clientId&&ri.clientId&&(e.client_id=ri.clientId),t.context&&(e.context=t.context),t.autoLogin!=null&&(e.auto_select=t.autoLogin),t.cancelOnTapOutside!=null&&(e.cancel_on_tap_outside=t.cancelOnTapOutside),new Promise((n,i)=>{e.callback=s=>{t&&t.callback&&t.callback(s),s.credential?n(s):i(s)},hp(s=>{s.accounts.id.initialize(e),s.accounts.id.prompt()})})};var Yh=Ue({__name:"GoogleLogin",props:{clientId:{type:String,required:!1},prompt:{type:Boolean,required:!1,default:!1},autoLogin:{type:Boolean,required:!1,default:!1},popupType:{type:String,required:!1},idConfiguration:{type:Object,required:!1},buttonConfig:{type:Object,required:!1},callback:{type:Function,required:!1},error:{type:Function,required:!1}},setup(t){if(!(typeof window<"u"))throw new Error(Yc.ssrError);const e=!!sC().default,n=t,i=((o,a)=>{const c={...o};for(const l in a)a[l]!==void 0&&a[l]!==null&&(c[l]=a[l]);return c})(ri,n),s={client_id:i.clientId||null,auto_select:i.autoLogin||!1,callback:i.callback,...i.idConfiguration},r=J();return bn(()=>{fj(s,r,i,e),n.popupType&&!e&&console.warn("Option 'popupType' is ignored since a slot which act as a custom login button was not found!!!")}),(o,a)=>(R(),B("div",{class:"g-btn-wrapper",onClick:a[0]||(a[0]=c=>ie(e)&&void(ie(i).popupType==="TOKEN"?mj({clientId:i.clientId}).then(l=>{i.callback&&i.callback(l)}).catch(l=>{i.error&&i.error(l)}):pj({clientId:i.clientId}).then(l=>{i.callback&&i.callback(l)}).catch(l=>{i.error&&i.error(l)})))},[ie(e)?G("v-if",!0):(R(),B("span",{key:0,ref_key:"buttonRef",ref:r,class:"g-btn"},null,512)),iC(o.$slots,"default")]))}});(function(t,e){e===void 0&&(e={});var n=e.insertAt;if(typeof document<"u"){var i=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.type="text/css",n==="top"&&i.firstChild?i.insertBefore(s,i.firstChild):i.appendChild(s),s.styleSheet?s.styleSheet.cssText=t:s.appendChild(document.createTextNode(t))}})(`
.g-btn-wrapper[data-v-5e610566] {
  display: inline-block;
}
`),Yh.__scopeId="data-v-5e610566",Yh.__file="src/plugin/GoogleLogin.vue";var Ej={install:(t,e)=>{e&&(n=>{n.clientId&&(ri.clientId=n.clientId),n.popupType&&(ri.popupType=n.popupType),n.prompt!=null&&(ri.prompt=n.prompt),n.autoLogin!=null&&(ri.autoLogin=n.autoLogin),n.idConfiguration&&(ri.idConfiguration=n.idConfiguration),n.buttonConfig&&(ri.buttonConfig=n.buttonConfig),n.callback&&(ri.callback=n.callback)})(e),Zy().then(()=>{if(e.clientId){const n={client_id:e.clientId,auto_select:e.autoLogin===!0,callback:e.callback,use_fedcm_for_prompt:!0,...e.idConfiguration};window.google.accounts.id.initialize(n),e.prompt&&window.google.accounts.id.prompt()}}),t.component("GoogleLogin",Yh)}};const vj={class:"config-login"},bj={key:0,style:{"font-size":"20px",color:"red"}},Sj={class:"login-form"},xj={class:"form-group"},Tj={class:"form-group"},Cj={class:"form-group"},wj={class:"buttons"},Aj={key:2},Nj={class:"google-login"},yj=Ue({__name:"configLogin",setup(t){async function e(){const u=await hj.hash(i.value,12);return new Ow("USERPASS",n.value,u,s.value)}const n=J(""),i=J(""),s=J(!1);bn(()=>{const u=Os.getInstance();u.loginDefault&&u.loginDefault.mantenerseLogeado&&(n.value=u.loginDefault.usuario,s.value=u.loginDefault.mantenerseLogeado)});const r=He();function o(){if(n.value.trim()===""||i.value.trim()===""){r.estadoLogin="error";return}e().then(u=>{r.aplicacion.login(u);const d=Os.getInstance();s.value?(d.loginDefault=u,d.loginDefault.mantenerseLogeado=!0):d.loginDefault=null,d.guardarEnLocalStorage()}).catch(u=>{console.error("Error al crear el login seguro:",u),r.estadoLogin="error"})}function a(u){console.log("Token recibido:",u)}function c(u){console.error("Error en el inicio de sesión con Google:",u)}function l(){s.value=!1;const u=Os.getInstance();u.loginDefault&&(u.loginDefault.mantenerseLogeado=!1,u.guardarEnLocalStorage()),r.aplicacion.logout()}return(u,d)=>(R(),B("div",vj,[d[7]||(d[7]=N("h2",null,"Login",-1)),ie(r).estadoLogin=="error"?(R(),B("span",bj,"Hay errores")):G("",!0),N("div",Sj,[N("div",xj,[d[3]||(d[3]=N("label",{for:"username"},"Usuario:",-1)),lt(N("input",{id:"username","onUpdate:modelValue":d[0]||(d[0]=h=>n.value=h),type:"text",placeholder:"Ingrese su usuario"},null,512),[[At,n.value]])]),N("div",Tj,[d[4]||(d[4]=N("label",{for:"password"},"Contraseña:",-1)),lt(N("input",{id:"password","onUpdate:modelValue":d[1]||(d[1]=h=>i.value=h),type:"password",placeholder:"Ingrese su contraseña"},null,512),[[At,i.value]])]),N("div",Cj,[lt(N("input",{id:"mantenerseLogeado","onUpdate:modelValue":d[2]||(d[2]=h=>s.value=h),type:"checkbox"},null,512),[[yu,s.value]]),d[5]||(d[5]=N("label",{for:"mantenerseLogeado"},"Mantenerse logeado",-1))]),N("div",wj,[ie(r).estadoLogin==""||ie(r).estadoLogin=="error"?(R(),B("button",{key:0,onClick:o}," Login ")):G("",!0),ie(r).estadoLogin=="logueado"?(R(),B("button",{key:1,onClick:l}," Salir ")):G("",!0),ie(r).estadoLogin=="init-login"?(R(),B("span",Aj,"Iniciando...")):G("",!0)])]),N("div",Nj,[d[6]||(d[6]=N("p",null,"O inicia sesión con:",-1)),Qe(ie(Yh),{onSuccess:a,onError:c})])]))}}),kj=nt(yj,[["__scopeId","data-v-bd426672"]]),Dj="/img/usuariofantasma.png",Oj={class:"controlPerfil"},Pj={style:{display:"flex","flex-direction":"column","align-items":"center"}},Ij=["src"],Rj={key:1,alt:"Profile Image",src:Dj,style:{"max-width":"200px","max-height":"200px"}},Lj=Ue({__name:"configPerfil",setup(t){const e=He(),n=J(new iu("","","","","")),i=J(""),s=Os.getInstance();function r(){n.value.imagen=i.value,e.aplicacion.enviarPerfil(n.value)}function o(){s.perfil=n.value,s.perfil.imagen=i.value,s.guardarEnLocalStorage(),e.perfil=n.value,r()}function a(c){var u;const l=(u=c.target.files)==null?void 0:u[0];if(l){const d=new FileReader;d.onload=()=>{i.value=d.result},d.readAsDataURL(l)}}return bn(()=>{s.perfil!=null&&(n.value=s.perfil),i.value=n.value.imagen}),(c,l)=>(R(),B("div",null,[l[6]||(l[6]=N("h1",null,"Perfil",-1)),N("div",null,[N("div",Oj,[N("div",null,[N("div",Pj,[i.value!==""?(R(),B("img",{key:0,src:i.value,alt:"Profile Image",style:{"max-width":"200px","max-height":"200px"}},null,8,Ij)):G("",!0),i.value===""?(R(),B("img",Rj)):G("",!0),N("input",{type:"file",accept:".jpg,.jpeg,.png,.bmp",id:"image",class:"fileUp",onChange:a},null,32)])]),N("div",null,[N("div",null,[l[3]||(l[3]=N("label",{for:"username"},"Nombre:",-1)),lt(N("input",{type:"text",id:"username","onUpdate:modelValue":l[0]||(l[0]=u=>n.value.nombre=u)},null,512),[[At,n.value.nombre]])]),N("div",null,[l[4]||(l[4]=N("label",{for:"description"},"Descripcion:",-1)),lt(N("textarea",{id:"description","onUpdate:modelValue":l[1]||(l[1]=u=>n.value.descripcion=u)},null,512),[[At,n.value.descripcion]])]),N("div",null,[l[5]||(l[5]=N("label",{for:"instrument"},"Instrumento:",-1)),lt(N("input",{type:"text",id:"instrument","onUpdate:modelValue":l[2]||(l[2]=u=>n.value.instrumento=u)},null,512),[[At,n.value.instrumento]])])])]),N("div",{class:"classBotonera"},[N("button",{onClick:o},"Actualizar")])])]))}}),Mj=nt(Lj,[["__scopeId","data-v-4da7ab3d"]]),Bj={class:"config-sesion"},Fj={key:0,value:"",disabled:""},Uj=["value"],Vj={class:"buttons"},Wj={class:"respuestas"},Hj={class:"admin-servidores"},Xj=["onClick","disabled"],jj=["onClick"],qj=Ue({__name:"configServidores",setup(t){const e=Os.getInstance(),n=J(e.servidores),i=J(e.conectarServerDefault),s=J(""),r=J([]),o=J(!1),a=J(""),c=J("");bn(()=>{n.value=e.servidores,i.value=e.conectarServerDefault;const m=n.value.find(b=>b.nombre===i.value);m?s.value=m.direccion:n.value.length>0?s.value=n.value[0].direccion:s.value="http://localhost:8080/"}),gt(n,m=>{const b=m.find(x=>x.direccion===s.value),E=m.find(x=>x.nombre===i.value);E&&s.value!==E.direccion||b||(E?s.value=E.direccion:m.length>0?s.value=m[0].direccion:s.value="")},{deep:!0}),gt(()=>e.conectarServerDefault,m=>{i.value=m;const b=n.value.find(E=>E.nombre===m);b&&(s.value=b.direccion)});function l(){if(s.value.trim()===""){r.value.push("Por favor ingrese un nombre de servidor.");return}He().aplicacion.conectar(s.value),o.value=!0,r.value.push(`Intenta conectar: ${s.value}`)}function u(m){if(!o.value){r.value.push("Debe conectarse primero.");return}r.value.push(`Mensaje ${m} enviando al servidor ${s.value}`)}function d(){if(a.value.trim()!==""&&c.value.trim()!==""){const m=new Dl(a.value,c.value);if(n.value.some(b=>b.nombre===m.nombre||b.direccion===m.direccion)){r.value.push("Ya existe un servidor con ese nombre o dirección.");return}e.servidores.push(m),n.value=[...e.servidores],(n.value.length===1||!i.value)&&f(m.nombre),e.guardarEnLocalStorage(),n.value.length===1&&(s.value=m.direccion),a.value="",c.value=""}}function h(m){const b=n.value[m];e.servidores.splice(m,1),n.value=[...e.servidores],i.value===b.nombre&&(n.value.length>0?f(n.value[0].nombre):f("")),e.guardarEnLocalStorage()}function f(m){e.conectarServerDefault=m,i.value=m,e.guardarEnLocalStorage()}const p=di(()=>m=>i.value===m);return(m,b)=>(R(),B("div",Bj,[b[7]||(b[7]=N("label",{for:"serverSelect"},"Servidor:",-1)),lt(N("select",{id:"serverSelect","onUpdate:modelValue":b[0]||(b[0]=E=>s.value=E)},[n.value.length===0?(R(),B("option",Fj," No hay servidores configurados ")):G("",!0),(R(!0),B(be,null,We(n.value,E=>(R(),B("option",{key:E.direccion,value:E.direccion},ce(E.nombre)+" ("+ce(E.direccion)+") "+ce(p.value(E.nombre)?"[Default]":""),9,Uj))),128))],512),[[Ro,s.value]]),N("div",Vj,[N("button",{onClick:l},"Conectar"),N("button",{onClick:b[1]||(b[1]=E=>u("A"))},"Mandar mensaje A"),N("button",{onClick:b[2]||(b[2]=E=>u("B"))},"Mandar mensaje B")]),N("div",Wj,[b[5]||(b[5]=N("h3",null,"Respuestas:",-1)),(R(!0),B(be,null,We(r.value,(E,x)=>(R(),B("div",{key:x},ce(E),1))),128))]),N("div",Hj,[b[6]||(b[6]=N("h3",null,"Administrar Servidores",-1)),N("div",null,[lt(N("input",{"onUpdate:modelValue":b[3]||(b[3]=E=>a.value=E),placeholder:"Nombre del servidor"},null,512),[[At,a.value]]),lt(N("input",{"onUpdate:modelValue":b[4]||(b[4]=E=>c.value=E),placeholder:"Dirección del servidor"},null,512),[[At,c.value]]),N("button",{onClick:d},"Agregar Servidor")]),N("ul",null,[(R(!0),B(be,null,We(n.value,(E,x)=>(R(),B("li",{key:x},[mt(ce(E.nombre)+" ("+ce(E.direccion)+") ",1),N("button",{onClick:S=>f(E.nombre),disabled:p.value(E.nombre)},ce(p.value(E.nombre)?"Predeterminado":"Conectar por default"),9,Xj),N("button",{onClick:S=>h(x)},"Eliminar",8,jj)]))),128))])])]))}}),zj=nt(qj,[["__scopeId","data-v-602af423"]]),Yj=Ue({__name:"configAcercaDe",setup(t){return(e,n)=>{const i=wu("A");return R(),B("div",null,[n[1]||(n[1]=N("h1",null,"Acerca de",-1)),n[2]||(n[2]=N("div",null," Soy Luis Waldman y desarrolle esta aplicacion para todos los musicos o aspirantes. Para las orquestas, los karaokes los principiantes. ",-1)),n[3]||(n[3]=N("div",null,"Y, mas vale, para aprobar mi Trabajo Profesional en la FIUBA",-1)),Qe(i,{href:"https://fi.uba.ar/"},{default:Tu(()=>n[0]||(n[0]=[N("img",{src:"https://fi.uba.ar/images/logo-fiuba.png"},null,-1)])),_:1,__:[0]}),n[4]||(n[4]=N("p",null,"github:",-1)),n[5]||(n[5]=N("ul",null,[N("li",null,[N("a",{href:"https://github.com/LuisWaldman/fogon-cliente",target:"_blank",rel:"noopener"},"Cliente")]),N("li",null,[N("a",{href:"https://github.com/LuisWaldman/fogon-servidor",target:"_blank",rel:"noopener"},"Servidor")])],-1))])}}}),Jj=nt(Yj,[["__scopeId","data-v-3bb02b57"]]),Zj={class:"divReloj"},Kj={class:"contenido-reloj"},Qj=Ue({__name:"VReloj",props:{fecha:{}},setup(t){const e=t,n=di(()=>Math.floor(e.fecha/6e4)/60*100);return(i,s)=>(R(),B("div",Zj,[N("div",{class:"progreso-fondo",style:vt({width:n.value+"%"})},null,4),N("div",Kj,[N("div",null,ce(Math.floor(i.fecha%6e4/1e3))+"s",1),N("div",null,ce(Math.floor(i.fecha%1e3).toString().padStart(3,"0"))+"ms ",1)])]))}}),Zm=nt(Qj,[["__scopeId","data-v-93012668"]]),Gj={class:"divRelojes"},_j={style:{display:"flex"}},$j={style:{display:"flex"}},eq={style:{display:"flex"}},tq={key:0},nq={key:1,style:{display:"flex"}},iq={key:2,style:{border:"1px solid"}},sq={style:{display:"flex"}},rq={key:3,style:{display:"flex"}},oq={key:4},aq=Ue({__name:"verRelojes",props:{mostrarCerrar:{type:Boolean,default:!1}},emits:["cerrar"],setup(t,{emit:e}){const n=e,i=He(),s=Ks.getInstance(),r=J(0),o=J(0),a=J(!1),c=J(s.delayReloj),l=J(s.ErrorReloj),u=J(0),d=new mw;d.duracionIntervalo=1e3,d.setIniciaHandler(()=>{r.value=s.MomentoLocal(),o.value=s.MomentoSincro()}),d.setIniciaCicloHandler(()=>{r.value=s.MomentoLocal(),h()});function h(){r.value=s.MomentoLocal(),o.value=s.MomentoSincro(),c.value=s.delayReloj,l.value=s.ErrorReloj;const v=o.value%1e3;u.value=1e3-v,d.setDelay(u.value)}function f(){a.value=!0,d.iniciar()}function p(){a.value=!1,d.pausar()}const m=J([]),b=J(!1);function E(){if(b.value=!b.value,b.value){const v=Ks.getInstance();m.value=v.GetDetalleCalculo()}}function x(){const v=Ks.getInstance();v.ActualizarDelayReloj(),m.value=v.GetDetalleCalculo()}function S(){d.pausar(),n("cerrar")}return(v,T)=>(R(),B("div",Gj,[T[3]||(T[3]=N("div",{style:{display:"flex","justify-content":"space-between","align-items":"center"}},null,-1)),N("div",_j,[N("div",null,[N("div",$j,[T[0]||(T[0]=mt(" Local ")),Qe(Zm,{fecha:r.value},null,8,["fecha"]),T[1]||(T[1]=mt(" Sincro ")),Qe(Zm,{fecha:o.value},null,8,["fecha"])])]),N("div",null,[N("div",eq,[N("div",null,[a.value?(R(),B("button",{key:1,onClick:p},"⏸️")):(R(),B("button",{key:0,onClick:f}," ⌛ "))]),N("div",null,[N("button",{onClick:x},"🔄")]),N("div",null,[N("button",{onClick:E},"🔍")])]),N("div",null,[N("div",null," Delay en Sincro: "+ce(Math.floor(c.value/1e3))+"s "+ce((c.value%1e3).toFixed(0))+"ms +/- "+ce(l.value.toFixed(2))+"ms ",1),N("div",null," Delay actualizando: "+ce(Math.floor(u.value/1e3))+"s "+ce((u.value%1e3).toFixed(0))+"ms ",1)])])]),b.value?(R(),B("div",tq,[(R(!0),B(be,null,We(m.value,(w,D)=>(R(),B("div",{key:D},[N("div",{class:Dt({highlight:w.Seleccionada})}," Delay en Sincro: "+ce(w.Delay)+" RTT: "+ce(w.Tardo),3)]))),128))])):G("",!0),ie(i).sesSincroCancion.duracionGolpe!=0?(R(),B("div",nq)):G("",!0),ie(i).sesSincroCancion.duracionGolpe!=0?(R(),B("div",iq,[T[2]||(T[2]=N("div",null,"Inicio Cancion",-1)),N("div",sq,[N("div",null,[Qe(Zm,{fecha:ie(i).sesSincroCancion.timeInicio},null,8,["fecha"]),mt(" Desde: "+ce(ie(i).sesSincroCancion.desdeCompas),1)]),N("div",null," Duracion Compas : "+ce(ie(i).sesSincroCancion.duracionGolpe.toFixed(2))+" ms x "+ce(ie(i).sesSincroCancion.golpesxcompas)+" golpes = "+ce((ie(i).sesSincroCancion.duracionGolpe*ie(i).sesSincroCancion.golpesxcompas).toFixed(2))+" ms ",1)])])):G("",!0),ie(i).sesSincroCancion.duracionGolpe!=0?(R(),B("div",rq," Golpe: "+ce(ie(i).EstadoSincro.compas)+" , "+ce(ie(i).EstadoSincro.golpeEnCompas)+", estado: "+ce(ie(i).EstadoSincro.estado)+" Delay: "+ce(ie(i).EstadoSincro.delay.toFixed(2))+" ms ",1)):G("",!0),t.mostrarCerrar?(R(),B("div",oq,[N("button",{onClick:S},"Cerrar")])):G("",!0)]))}}),cq=nt(aq,[["__scopeId","data-v-995c68d0"]]);class lq{constructor(){W(this,"permissionState",null);W(this,"permissionStatus",null)}async getEstadoMic(){try{return this.permissionStatus=await navigator.permissions.query({name:"microphone"}),this.permissionState=this.permissionStatus.state,this.permissionState}catch(e){return console.error("Error al verificar el permiso del micrófono:",e),"denied"}}async requestMicAccess(){if(this.permissionState==="denied")return console.warn("Acceso al micrófono denegado por el usuario."),null;try{return await navigator.mediaDevices.getUserMedia({audio:!0})}catch(e){return console.error("Error al solicitar acceso al micrófono:",e),null}}async monitorPermissionChanges(e){this.permissionStatus||await this.getEstadoMic(),this.permissionStatus&&(this.permissionStatus.onchange=()=>{this.permissionState=this.permissionStatus.state,e(this.permissionState)})}}class $a{constructor(e,n,i){W(this,"nombre");W(this,"nota");W(this,"frecuencia");this.nombre=e,this.nota=n,this.frecuencia=i}}const uq={class:"clsFrecuencia",id:"contenedorFrecuenciometro"},dq=["onClick"],hq=Ue({__name:"frecuenciometro",props:{notasSonido:{},frecuencia:{},ancho:{}},emits:["verfrecuencia"],setup(t,{emit:e}){const n=e,i=J(0),s=t;gt(()=>s.frecuencia,c=>{if(c>0){const l=a(c);i.value=l;const u=document.getElementById("contenedorFrecuenciometro");if(u){let d=l*50-300;d<0&&(d=0),u.scrollLeft=d}}});function r(c){n("verfrecuencia",c)}i.value=a(s.frecuencia);function o(c){let l=18,u="white",d="black";c.nota.includes("#")&&(u="black",d="white");const h=50;return{"font-size":l+"px","background-color":u,color:d,width:h+"px","min-width":h+"px","max-width":h+"px",overflow:"hidden","text-overflow":"ellipsis","white-space":"nowrap","padding-top":"-12px"}}function a(c){const l=s.notasSonido.map(u=>u.frecuencia);for(let u=0;u<l.length;u++)if(c<l[u])return u==0?u:Math.abs(c-l[u-1])<Math.abs(c-l[u])?u-1:u;return 0}return(c,l)=>(R(),B("div",uq,[(R(!0),B(be,null,We(c.notasSonido,(u,d)=>(R(),B("div",{onClick:h=>r(u),key:d,style:vt(o(u)),class:Dt({notaMostrada:i.value===d,clsNota:!0})},[N("div",null,ce(u.frecuencia.toFixed(0)),1),N("div",null,ce(u.nota),1)],14,dq))),128))]))}}),fq=nt(hq,[["__scopeId","data-v-1101fb7e"]]),pq={style:{position:"relative"}},mq={class:"circulodiv",style:{display:"flex",width:"800px"}},Kx=500,Wd=100,Qx=350,Gx=230,gq=Ue({__name:"circulo",props:{notasSonido:{},clasenotasSonido:{},frecuencia:{}},setup(t){const e=J(7),n=J(4),i=t,s=J({nota:"",frecuencia:0,octava:0});gt(()=>i.frecuencia,a=>{a>0&&(s.value.frecuencia=a)});function r(a){const c=Wd+(Kx-Wd)/(e.value-1)*(a-1),l=Qx-c/2,u=Gx-c/2;return{width:c+"px",top:u+"px",left:l+"px",height:c+"px",borderRadius:"50%"}}function o(a){let c="white",l="black";a.nota.includes("#")&&(c="black",l="white");let u=Math.floor(Math.log2(a.frecuencia/440))+n.value;const d=440*Math.pow(2,Math.floor(Math.log2(a.frecuencia/440))),h=(a.frecuencia-d)/d;u<0&&(u=0);const f=Wd+(Kx-Wd)/(e.value-1)*(u-1),p=Qx+Math.cos(h*2*Math.PI)*(f/2);return{top:Gx+Math.sin(h*2*Math.PI)*(f/2)+"px",left:p+"px","background-color":c,color:l}}return(a,c)=>(R(),B("div",pq,[N("div",mq,[(R(!0),B(be,null,We(e.value,l=>(R(),B("div",{key:l},[N("div",{style:vt(r(l)),class:"circuloOctava"},null,4)]))),128)),(R(!0),B(be,null,We(a.notasSonido,(l,u)=>(R(),B("div",{key:u,class:Dt(["frecuencia",a.clasenotasSonido[u]]),style:vt(o(l))},[N("div",null,ce(l.nota),1)],6))),128)),Number(s.value.frecuencia)>0?(R(),B("div",{key:0,style:vt(o(s.value)),class:"frecuencia viendoFrecuencia"},ce(s.value.frecuencia.toFixed(0)),5)):G("",!0)])]))}}),Eq=nt(gq,[["__scopeId","data-v-d2aa51aa"]]);class vq{constructor(e,n,i){W(this,"frecuencia");W(this,"nota");W(this,"octava");this.frecuencia=e,this.nota=n,this.octava=i}}class bq{static GetNotas(e,n,i){const s=[],r=e/8,o=1;for(let a=0;a<n*8;a++){const c=r*Math.pow(2,a/n);s.push(new vq(c,i[a%n],o+Math.floor(a/n)))}return s}}const Sq={style:{display:"flex"}},xq={style:{"font-size":"xx-large","white-space":"nowrap",overflow:"hidden","text-overflow":"ellipsis"}},Tq={style:{display:"flex"}},Cq=["value"],wq=Ue({__name:"configAfinador",setup(t){const e=new Lo,n=e.getAnchoPantalla()*.7,i=e.getAltoPantalla(),s=J(440),r=J(12),o=new lq,a=J(""),c=J(null),l=J([]);l.value.push(new $a("Sexta Cuerda","E2",82.41)),l.value.push(new $a("Quinta Cuerda","A2",110)),l.value.push(new $a("Cuarta Cuerda","D3",146.83)),l.value.push(new $a("Tercera Cuerda","G3",196)),l.value.push(new $a("Segunda Cuerda","B3",246.94)),l.value.push(new $a("Primera Cuerda","E4",329.63));const u=J(null),d=J(null),h=J(null),f=new Float32Array(2048),p=["A","A#","B","C","C#","D","D#","E","F","F#","G","G#"],m=J([]),b=J([]),E=J(!1),x=J(!1),S=J(0);let v={};v.mayor=[2,2,1,2,2,2,1],v.menor=[2,1,2,2,1,2,1];function T(){b.value=bq.GetNotas(s.value,r.value,p);for(var K=0;K<b.value.length;K++)m.value[K]=""}function w(){for(var K=0;K<b.value.length;K++)m.value[K]="";if(!E.value)return;const Y=x.value?"menor":"mayor";let _=S.value;for(let q=0;_<b.value.length;q++)console.log(`Calculando nota ${q} en modo ${Y} con notaCont ${_}`),m.value[_]="clsEscala",_+=v[Y][q%v[Y].length]}gt(c,K=>{K&&(u.value=new AudioContext,h.value=u.value.createMediaStreamSource(K),d.value=u.value.createAnalyser(),d.value.fftSize=2048,h.value.connect(d.value),y())});function D(K,Y){const _=K.length;let q=0;for(let Ae=0;Ae<_;Ae++)q+=K[Ae]*K[Ae];if(q=Math.sqrt(q/_),q<.01)return-1;const ee=new Array(_).fill(0);for(let Ae=0;Ae<_;Ae++)for(let De=0;De<_-Ae;De++)ee[Ae]+=K[De]*K[De+Ae];let j=0;for(;ee[j]>ee[j+1];)j++;let he=-1,le=-1;for(let Ae=j;Ae<_;Ae++)ee[Ae]>he&&(he=ee[Ae],le=Ae);return Y/le}const A=J(0),y=()=>{d.value&&(d.value.getFloatTimeDomainData(f),A.value=D(f,u.value.sampleRate),A.value!==-1&&console.log(`🎯 Frecuencia detectada: ${A.value.toFixed(2)} Hz`),requestAnimationFrame(y))};o.getEstadoMic().then(K=>{a.value=K}).catch(K=>{console.error("Error al obtener el estado del micrófono:",K),a.value="Error"});const O=J(!1);function L(){c.value&&(c.value.getTracks().forEach(K=>{K.stop()}),c.value=null),h.value&&(h.value.disconnect(),h.value=null),d.value&&(d.value.disconnect(),d.value=null),u.value&&u.value.state!=="closed"&&(u.value.close(),u.value=null),O.value=!1}function P(){O.value=!0,o.requestMicAccess().then(K=>{c.value=K}).catch(K=>{console.error("Error al solicitar permiso del micrófono:",K),a.value="Error"})}function U(){return{height:i+"px",width:n+"px"}}bn(()=>{P(),T()}),Io(()=>{L()});function X(K,Y=5,_=2){K<0&&(K=0);const q=K.toFixed(_),[ee,j]=q.split(".");return`${ee.padStart(Y,"0")},${j}`}return(K,Y)=>(R(),B("div",{style:vt(U()),class:"divAfinador",id:"divAfinador"},[N("div",Sq,[N("div",null,[Y[2]||(Y[2]=N("div",null,"FRECUENCIA",-1)),N("div",xq,ce(X(A.value))+" Hz ",1)]),Qe(fq,{notasSonido:b.value,frecuencia:A.value,ancho:n},null,8,["notasSonido","frecuencia"])]),N("div",Tq,[N("div",null,[N("div",null,[lt(N("input",{type:"checkbox","onUpdate:modelValue":Y[0]||(Y[0]=_=>E.value=_),onChange:w},null,544),[[yu,E.value]]),Y[3]||(Y[3]=N("span",null,"Mostrar Escala",-1)),E.value?lt((R(),B("select",{key:0,"onUpdate:modelValue":Y[1]||(Y[1]=_=>S.value=_),onChange:w},[(R(),B(be,null,We(p,(_,q)=>N("option",{key:q,value:q},ce(_),9,Cq)),64))],544)),[[Ro,S.value]]):G("",!0)])]),Qe(Eq,{notasSonido:b.value,clasenotasSonido:m.value,frecuencia:A.value},null,8,["notasSonido","clasenotasSonido","frecuencia"])])],4))}}),Aq=nt(wq,[["__scopeId","data-v-1e7e75c1"]]),Nq={style:{width:"100%"}},yq={class:"config-menu"},kq={class:"config-menu-group"},Dq={class:"innerConfig"},Oq=Ue({__name:"configurar",setup(t){const e=He(),n=J("perfil");function i(s){n.value=s}return(s,r)=>(R(),B("div",Nq,[N("div",null,[N("div",null,[N("div",yq,[N("div",kq,[N("div",{onClick:r[0]||(r[0]=o=>i("perfil")),class:"config-menu-item"},[N("a",{href:"#",class:Dt(["nav-link text-white",{activo:n.value==="perfil"}])}," Perfil ",2)]),ie(e).estado==="conectado"||ie(e).estado==="logueado"?(R(),B("div",{key:0,onClick:r[1]||(r[1]=o=>i("login")),class:"config-menu-item"},[N("a",{href:"#",class:Dt(["nav-link text-white",{activo:n.value==="login"}])}," Login ",2)])):G("",!0),ie(e).estado=="conectado"?(R(),B("div",{key:1,onClick:r[2]||(r[2]=o=>i("sesion")),class:"config-menu-item"},[N("a",{href:"#",class:Dt(["nav-link text-white",{activo:n.value==="sesion"}])}," Sesion ",2)])):G("",!0),N("div",{onClick:r[3]||(r[3]=o=>i("servidores")),class:"config-menu-item"},[N("a",{href:"#",class:Dt(["nav-link text-white",{activo:n.value==="servidores"}])}," Servidores ",2)]),N("div",{onClick:r[4]||(r[4]=o=>i("relojes")),class:"config-menu-item"},[N("a",{href:"#",class:Dt(["nav-link text-white",{activo:n.value==="relojes"}])}," Relojes ",2)]),N("div",{onClick:r[5]||(r[5]=o=>i("Afinar")),class:"config-menu-item"},[N("a",{href:"#",class:Dt(["nav-link text-white",{activo:n.value==="Afinar"}])}," Afinar ",2)]),N("div",{onClick:r[6]||(r[6]=o=>i("acercade")),class:"config-menu-item"},[N("a",{href:"#",class:Dt(["nav-link text-white",{activo:n.value==="acercade"}])}," Acerca de ... ",2)])])])]),N("div",Dq,[n.value=="login"?(R(),dt(kj,{key:0})):G("",!0),n.value=="perfil"?(R(),dt(Mj,{key:1})):G("",!0),n.value=="sesion"?(R(),dt(GX,{key:2})):G("",!0),n.value=="servidores"?(R(),dt(zj,{key:3})):G("",!0),n.value=="acercade"?(R(),dt(Jj,{key:4})):G("",!0),n.value=="Afinar"?(R(),dt(Aq,{key:5})):G("",!0),n.value=="relojes"?(R(),dt(cq,{key:6})):G("",!0)])])]))}}),Pq=nt(Oq,[["__scopeId","data-v-73b499d5"]]),Iq=[{path:"/",component:XM},{path:"/editar",component:FX},{path:"/tocar",component:ZW,props:!0},{path:"/listas",component:WX},{path:"/buscar",component:GW},{path:"/configurar",component:Pq}],Rq=L3({history:l3(),routes:Iq});var rh={exports:{}};/*!
  * Bootstrap v5.3.6 (https://getbootstrap.com/)
  * Copyright 2011-2025 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */var Lq=rh.exports,_x;function Mq(){return _x||(_x=1,function(t,e){(function(n,i){t.exports=i()})(Lq,function(){const n=new Map,i={set(k,g,C){n.has(k)||n.set(k,new Map);const I=n.get(k);I.has(g)||I.size===0?I.set(g,C):console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(I.keys())[0]}.`)},get:(k,g)=>n.has(k)&&n.get(k).get(g)||null,remove(k,g){if(!n.has(k))return;const C=n.get(k);C.delete(g),C.size===0&&n.delete(k)}},s="transitionend",r=k=>(k&&window.CSS&&window.CSS.escape&&(k=k.replace(/#([^\s"#']+)/g,(g,C)=>`#${CSS.escape(C)}`)),k),o=k=>{k.dispatchEvent(new Event(s))},a=k=>!(!k||typeof k!="object")&&(k.jquery!==void 0&&(k=k[0]),k.nodeType!==void 0),c=k=>a(k)?k.jquery?k[0]:k:typeof k=="string"&&k.length>0?document.querySelector(r(k)):null,l=k=>{if(!a(k)||k.getClientRects().length===0)return!1;const g=getComputedStyle(k).getPropertyValue("visibility")==="visible",C=k.closest("details:not([open])");if(!C)return g;if(C!==k){const I=k.closest("summary");if(I&&I.parentNode!==C||I===null)return!1}return g},u=k=>!k||k.nodeType!==Node.ELEMENT_NODE||!!k.classList.contains("disabled")||(k.disabled!==void 0?k.disabled:k.hasAttribute("disabled")&&k.getAttribute("disabled")!=="false"),d=k=>{if(!document.documentElement.attachShadow)return null;if(typeof k.getRootNode=="function"){const g=k.getRootNode();return g instanceof ShadowRoot?g:null}return k instanceof ShadowRoot?k:k.parentNode?d(k.parentNode):null},h=()=>{},f=k=>{k.offsetHeight},p=()=>window.jQuery&&!document.body.hasAttribute("data-bs-no-jquery")?window.jQuery:null,m=[],b=()=>document.documentElement.dir==="rtl",E=k=>{var g;g=()=>{const C=p();if(C){const I=k.NAME,Z=C.fn[I];C.fn[I]=k.jQueryInterface,C.fn[I].Constructor=k,C.fn[I].noConflict=()=>(C.fn[I]=Z,k.jQueryInterface)}},document.readyState==="loading"?(m.length||document.addEventListener("DOMContentLoaded",()=>{for(const C of m)C()}),m.push(g)):g()},x=(k,g=[],C=k)=>typeof k=="function"?k.call(...g):C,S=(k,g,C=!0)=>{if(!C)return void x(k);const I=(se=>{if(!se)return 0;let{transitionDuration:fe,transitionDelay:Te}=window.getComputedStyle(se);const Pe=Number.parseFloat(fe),Ie=Number.parseFloat(Te);return Pe||Ie?(fe=fe.split(",")[0],Te=Te.split(",")[0],1e3*(Number.parseFloat(fe)+Number.parseFloat(Te))):0})(g)+5;let Z=!1;const Q=({target:se})=>{se===g&&(Z=!0,g.removeEventListener(s,Q),x(k))};g.addEventListener(s,Q),setTimeout(()=>{Z||o(g)},I)},v=(k,g,C,I)=>{const Z=k.length;let Q=k.indexOf(g);return Q===-1?!C&&I?k[Z-1]:k[0]:(Q+=C?1:-1,I&&(Q=(Q+Z)%Z),k[Math.max(0,Math.min(Q,Z-1))])},T=/[^.]*(?=\..*)\.|.*/,w=/\..*/,D=/::\d+$/,A={};let y=1;const O={mouseenter:"mouseover",mouseleave:"mouseout"},L=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function P(k,g){return g&&`${g}::${y++}`||k.uidEvent||y++}function U(k){const g=P(k);return k.uidEvent=g,A[g]=A[g]||{},A[g]}function X(k,g,C=null){return Object.values(k).find(I=>I.callable===g&&I.delegationSelector===C)}function K(k,g,C){const I=typeof g=="string",Z=I?C:g||C;let Q=ee(k);return L.has(Q)||(Q=k),[I,Z,Q]}function Y(k,g,C,I,Z){if(typeof g!="string"||!k)return;let[Q,se,fe]=K(g,C,I);g in O&&(se=(_e=>function(Je){if(!Je.relatedTarget||Je.relatedTarget!==Je.delegateTarget&&!Je.delegateTarget.contains(Je.relatedTarget))return _e.call(this,Je)})(se));const Te=U(k),Pe=Te[fe]||(Te[fe]={}),Ie=X(Pe,se,Q?C:null);if(Ie)return void(Ie.oneOff=Ie.oneOff&&Z);const ke=P(se,g.replace(T,"")),it=Q?function(je,_e,Je){return function $e(Ht){const Zt=je.querySelectorAll(_e);for(let{target:pt}=Ht;pt&&pt!==this;pt=pt.parentNode)for(const Pt of Zt)if(Pt===pt)return he(Ht,{delegateTarget:pt}),$e.oneOff&&j.off(je,Ht.type,_e,Je),Je.apply(pt,[Ht])}}(k,C,se):function(je,_e){return function Je($e){return he($e,{delegateTarget:je}),Je.oneOff&&j.off(je,$e.type,_e),_e.apply(je,[$e])}}(k,se);it.delegationSelector=Q?C:null,it.callable=se,it.oneOff=Z,it.uidEvent=ke,Pe[ke]=it,k.addEventListener(fe,it,Q)}function _(k,g,C,I,Z){const Q=X(g[C],I,Z);Q&&(k.removeEventListener(C,Q,!!Z),delete g[C][Q.uidEvent])}function q(k,g,C,I){const Z=g[C]||{};for(const[Q,se]of Object.entries(Z))Q.includes(I)&&_(k,g,C,se.callable,se.delegationSelector)}function ee(k){return k=k.replace(w,""),O[k]||k}const j={on(k,g,C,I){Y(k,g,C,I,!1)},one(k,g,C,I){Y(k,g,C,I,!0)},off(k,g,C,I){if(typeof g!="string"||!k)return;const[Z,Q,se]=K(g,C,I),fe=se!==g,Te=U(k),Pe=Te[se]||{},Ie=g.startsWith(".");if(Q===void 0){if(Ie)for(const ke of Object.keys(Te))q(k,Te,ke,g.slice(1));for(const[ke,it]of Object.entries(Pe)){const je=ke.replace(D,"");fe&&!g.includes(je)||_(k,Te,se,it.callable,it.delegationSelector)}}else{if(!Object.keys(Pe).length)return;_(k,Te,se,Q,Z?C:null)}},trigger(k,g,C){if(typeof g!="string"||!k)return null;const I=p();let Z=null,Q=!0,se=!0,fe=!1;g!==ee(g)&&I&&(Z=I.Event(g,C),I(k).trigger(Z),Q=!Z.isPropagationStopped(),se=!Z.isImmediatePropagationStopped(),fe=Z.isDefaultPrevented());const Te=he(new Event(g,{bubbles:Q,cancelable:!0}),C);return fe&&Te.preventDefault(),se&&k.dispatchEvent(Te),Te.defaultPrevented&&Z&&Z.preventDefault(),Te}};function he(k,g={}){for(const[C,I]of Object.entries(g))try{k[C]=I}catch{Object.defineProperty(k,C,{configurable:!0,get:()=>I})}return k}function le(k){if(k==="true")return!0;if(k==="false")return!1;if(k===Number(k).toString())return Number(k);if(k===""||k==="null")return null;if(typeof k!="string")return k;try{return JSON.parse(decodeURIComponent(k))}catch{return k}}function Le(k){return k.replace(/[A-Z]/g,g=>`-${g.toLowerCase()}`)}const Ae={setDataAttribute(k,g,C){k.setAttribute(`data-bs-${Le(g)}`,C)},removeDataAttribute(k,g){k.removeAttribute(`data-bs-${Le(g)}`)},getDataAttributes(k){if(!k)return{};const g={},C=Object.keys(k.dataset).filter(I=>I.startsWith("bs")&&!I.startsWith("bsConfig"));for(const I of C){let Z=I.replace(/^bs/,"");Z=Z.charAt(0).toLowerCase()+Z.slice(1),g[Z]=le(k.dataset[I])}return g},getDataAttribute:(k,g)=>le(k.getAttribute(`data-bs-${Le(g)}`))};class De{static get Default(){return{}}static get DefaultType(){return{}}static get NAME(){throw new Error('You have to implement the static method "NAME", for each component!')}_getConfig(g){return g=this._mergeConfigObj(g),g=this._configAfterMerge(g),this._typeCheckConfig(g),g}_configAfterMerge(g){return g}_mergeConfigObj(g,C){const I=a(C)?Ae.getDataAttribute(C,"config"):{};return{...this.constructor.Default,...typeof I=="object"?I:{},...a(C)?Ae.getDataAttributes(C):{},...typeof g=="object"?g:{}}}_typeCheckConfig(g,C=this.constructor.DefaultType){for(const[Z,Q]of Object.entries(C)){const se=g[Z],fe=a(se)?"element":(I=se)==null?`${I}`:Object.prototype.toString.call(I).match(/\s([a-z]+)/i)[1].toLowerCase();if(!new RegExp(Q).test(fe))throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${Z}" provided type "${fe}" but expected type "${Q}".`)}var I}}class Me extends De{constructor(g,C){super(),(g=c(g))&&(this._element=g,this._config=this._getConfig(C),i.set(this._element,this.constructor.DATA_KEY,this))}dispose(){i.remove(this._element,this.constructor.DATA_KEY),j.off(this._element,this.constructor.EVENT_KEY);for(const g of Object.getOwnPropertyNames(this))this[g]=null}_queueCallback(g,C,I=!0){S(g,C,I)}_getConfig(g){return g=this._mergeConfigObj(g,this._element),g=this._configAfterMerge(g),this._typeCheckConfig(g),g}static getInstance(g){return i.get(c(g),this.DATA_KEY)}static getOrCreateInstance(g,C={}){return this.getInstance(g)||new this(g,typeof C=="object"?C:null)}static get VERSION(){return"5.3.6"}static get DATA_KEY(){return`bs.${this.NAME}`}static get EVENT_KEY(){return`.${this.DATA_KEY}`}static eventName(g){return`${g}${this.EVENT_KEY}`}}const te=k=>{let g=k.getAttribute("data-bs-target");if(!g||g==="#"){let C=k.getAttribute("href");if(!C||!C.includes("#")&&!C.startsWith("."))return null;C.includes("#")&&!C.startsWith("#")&&(C=`#${C.split("#")[1]}`),g=C&&C!=="#"?C.trim():null}return g?g.split(",").map(C=>r(C)).join(","):null},z={find:(k,g=document.documentElement)=>[].concat(...Element.prototype.querySelectorAll.call(g,k)),findOne:(k,g=document.documentElement)=>Element.prototype.querySelector.call(g,k),children:(k,g)=>[].concat(...k.children).filter(C=>C.matches(g)),parents(k,g){const C=[];let I=k.parentNode.closest(g);for(;I;)C.push(I),I=I.parentNode.closest(g);return C},prev(k,g){let C=k.previousElementSibling;for(;C;){if(C.matches(g))return[C];C=C.previousElementSibling}return[]},next(k,g){let C=k.nextElementSibling;for(;C;){if(C.matches(g))return[C];C=C.nextElementSibling}return[]},focusableChildren(k){const g=["a","button","input","textarea","select","details","[tabindex]",'[contenteditable="true"]'].map(C=>`${C}:not([tabindex^="-"])`).join(",");return this.find(g,k).filter(C=>!u(C)&&l(C))},getSelectorFromElement(k){const g=te(k);return g&&z.findOne(g)?g:null},getElementFromSelector(k){const g=te(k);return g?z.findOne(g):null},getMultipleElementsFromSelector(k){const g=te(k);return g?z.find(g):[]}},me=(k,g="hide")=>{const C=`click.dismiss${k.EVENT_KEY}`,I=k.NAME;j.on(document,C,`[data-bs-dismiss="${I}"]`,function(Z){if(["A","AREA"].includes(this.tagName)&&Z.preventDefault(),u(this))return;const Q=z.getElementFromSelector(this)||this.closest(`.${I}`);k.getOrCreateInstance(Q)[g]()})},xe=".bs.alert",qe=`close${xe}`,ut=`closed${xe}`;class F extends Me{static get NAME(){return"alert"}close(){if(j.trigger(this._element,qe).defaultPrevented)return;this._element.classList.remove("show");const g=this._element.classList.contains("fade");this._queueCallback(()=>this._destroyElement(),this._element,g)}_destroyElement(){this._element.remove(),j.trigger(this._element,ut),this.dispose()}static jQueryInterface(g){return this.each(function(){const C=F.getOrCreateInstance(this);if(typeof g=="string"){if(C[g]===void 0||g.startsWith("_")||g==="constructor")throw new TypeError(`No method named "${g}"`);C[g](this)}})}}me(F,"close"),E(F);const V='[data-bs-toggle="button"]';class H extends Me{static get NAME(){return"button"}toggle(){this._element.setAttribute("aria-pressed",this._element.classList.toggle("active"))}static jQueryInterface(g){return this.each(function(){const C=H.getOrCreateInstance(this);g==="toggle"&&C[g]()})}}j.on(document,"click.bs.button.data-api",V,k=>{k.preventDefault();const g=k.target.closest(V);H.getOrCreateInstance(g).toggle()}),E(H);const $=".bs.swipe",ne=`touchstart${$}`,ae=`touchmove${$}`,ue=`touchend${$}`,pe=`pointerdown${$}`,Ee=`pointerup${$}`,de={endCallback:null,leftCallback:null,rightCallback:null},Be={endCallback:"(function|null)",leftCallback:"(function|null)",rightCallback:"(function|null)"};class Se extends De{constructor(g,C){super(),this._element=g,g&&Se.isSupported()&&(this._config=this._getConfig(C),this._deltaX=0,this._supportPointerEvents=!!window.PointerEvent,this._initEvents())}static get Default(){return de}static get DefaultType(){return Be}static get NAME(){return"swipe"}dispose(){j.off(this._element,$)}_start(g){this._supportPointerEvents?this._eventIsPointerPenTouch(g)&&(this._deltaX=g.clientX):this._deltaX=g.touches[0].clientX}_end(g){this._eventIsPointerPenTouch(g)&&(this._deltaX=g.clientX-this._deltaX),this._handleSwipe(),x(this._config.endCallback)}_move(g){this._deltaX=g.touches&&g.touches.length>1?0:g.touches[0].clientX-this._deltaX}_handleSwipe(){const g=Math.abs(this._deltaX);if(g<=40)return;const C=g/this._deltaX;this._deltaX=0,C&&x(C>0?this._config.rightCallback:this._config.leftCallback)}_initEvents(){this._supportPointerEvents?(j.on(this._element,pe,g=>this._start(g)),j.on(this._element,Ee,g=>this._end(g)),this._element.classList.add("pointer-event")):(j.on(this._element,ne,g=>this._start(g)),j.on(this._element,ae,g=>this._move(g)),j.on(this._element,ue,g=>this._end(g)))}_eventIsPointerPenTouch(g){return this._supportPointerEvents&&(g.pointerType==="pen"||g.pointerType==="touch")}static isSupported(){return"ontouchstart"in document.documentElement||navigator.maxTouchPoints>0}}const ye=".bs.carousel",Ve=".data-api",ft="ArrowLeft",Ot="ArrowRight",Et="next",zt="prev",Lt="left",xn="right",Oe=`slide${ye}`,we=`slid${ye}`,Ze=`keydown${ye}`,Fe=`mouseenter${ye}`,Ge=`mouseleave${ye}`,mn=`dragstart${ye}`,cs=`load${ye}${Ve}`,Hi=`click${ye}${Ve}`,ls="carousel",lr="active",us=".active",ds=".carousel-item",Fs=us+ds,Uo={[ft]:xn,[Ot]:Lt},Ia={interval:5e3,keyboard:!0,pause:"hover",ride:!1,touch:!0,wrap:!0},pp={interval:"(number|boolean)",keyboard:"boolean",pause:"(string|boolean)",ride:"(boolean|string)",touch:"boolean",wrap:"boolean"};class Ra extends Me{constructor(g,C){super(g,C),this._interval=null,this._activeElement=null,this._isSliding=!1,this.touchTimeout=null,this._swipeHelper=null,this._indicatorsElement=z.findOne(".carousel-indicators",this._element),this._addEventListeners(),this._config.ride===ls&&this.cycle()}static get Default(){return Ia}static get DefaultType(){return pp}static get NAME(){return"carousel"}next(){this._slide(Et)}nextWhenVisible(){!document.hidden&&l(this._element)&&this.next()}prev(){this._slide(zt)}pause(){this._isSliding&&o(this._element),this._clearInterval()}cycle(){this._clearInterval(),this._updateInterval(),this._interval=setInterval(()=>this.nextWhenVisible(),this._config.interval)}_maybeEnableCycle(){this._config.ride&&(this._isSliding?j.one(this._element,we,()=>this.cycle()):this.cycle())}to(g){const C=this._getItems();if(g>C.length-1||g<0)return;if(this._isSliding)return void j.one(this._element,we,()=>this.to(g));const I=this._getItemIndex(this._getActive());if(I===g)return;const Z=g>I?Et:zt;this._slide(Z,C[g])}dispose(){this._swipeHelper&&this._swipeHelper.dispose(),super.dispose()}_configAfterMerge(g){return g.defaultInterval=g.interval,g}_addEventListeners(){this._config.keyboard&&j.on(this._element,Ze,g=>this._keydown(g)),this._config.pause==="hover"&&(j.on(this._element,Fe,()=>this.pause()),j.on(this._element,Ge,()=>this._maybeEnableCycle())),this._config.touch&&Se.isSupported()&&this._addTouchEventListeners()}_addTouchEventListeners(){for(const C of z.find(".carousel-item img",this._element))j.on(C,mn,I=>I.preventDefault());const g={leftCallback:()=>this._slide(this._directionToOrder(Lt)),rightCallback:()=>this._slide(this._directionToOrder(xn)),endCallback:()=>{this._config.pause==="hover"&&(this.pause(),this.touchTimeout&&clearTimeout(this.touchTimeout),this.touchTimeout=setTimeout(()=>this._maybeEnableCycle(),500+this._config.interval))}};this._swipeHelper=new Se(this._element,g)}_keydown(g){if(/input|textarea/i.test(g.target.tagName))return;const C=Uo[g.key];C&&(g.preventDefault(),this._slide(this._directionToOrder(C)))}_getItemIndex(g){return this._getItems().indexOf(g)}_setActiveIndicatorElement(g){if(!this._indicatorsElement)return;const C=z.findOne(us,this._indicatorsElement);C.classList.remove(lr),C.removeAttribute("aria-current");const I=z.findOne(`[data-bs-slide-to="${g}"]`,this._indicatorsElement);I&&(I.classList.add(lr),I.setAttribute("aria-current","true"))}_updateInterval(){const g=this._activeElement||this._getActive();if(!g)return;const C=Number.parseInt(g.getAttribute("data-bs-interval"),10);this._config.interval=C||this._config.defaultInterval}_slide(g,C=null){if(this._isSliding)return;const I=this._getActive(),Z=g===Et,Q=C||v(this._getItems(),I,Z,this._config.wrap);if(Q===I)return;const se=this._getItemIndex(Q),fe=ke=>j.trigger(this._element,ke,{relatedTarget:Q,direction:this._orderToDirection(g),from:this._getItemIndex(I),to:se});if(fe(Oe).defaultPrevented||!I||!Q)return;const Te=!!this._interval;this.pause(),this._isSliding=!0,this._setActiveIndicatorElement(se),this._activeElement=Q;const Pe=Z?"carousel-item-start":"carousel-item-end",Ie=Z?"carousel-item-next":"carousel-item-prev";Q.classList.add(Ie),f(Q),I.classList.add(Pe),Q.classList.add(Pe),this._queueCallback(()=>{Q.classList.remove(Pe,Ie),Q.classList.add(lr),I.classList.remove(lr,Ie,Pe),this._isSliding=!1,fe(we)},I,this._isAnimated()),Te&&this.cycle()}_isAnimated(){return this._element.classList.contains("slide")}_getActive(){return z.findOne(Fs,this._element)}_getItems(){return z.find(ds,this._element)}_clearInterval(){this._interval&&(clearInterval(this._interval),this._interval=null)}_directionToOrder(g){return b()?g===Lt?zt:Et:g===Lt?Et:zt}_orderToDirection(g){return b()?g===zt?Lt:xn:g===zt?xn:Lt}static jQueryInterface(g){return this.each(function(){const C=Ra.getOrCreateInstance(this,g);if(typeof g!="number"){if(typeof g=="string"){if(C[g]===void 0||g.startsWith("_")||g==="constructor")throw new TypeError(`No method named "${g}"`);C[g]()}}else C.to(g)})}}j.on(document,Hi,"[data-bs-slide], [data-bs-slide-to]",function(k){const g=z.getElementFromSelector(this);if(!g||!g.classList.contains(ls))return;k.preventDefault();const C=Ra.getOrCreateInstance(g),I=this.getAttribute("data-bs-slide-to");return I?(C.to(I),void C._maybeEnableCycle()):Ae.getDataAttribute(this,"slide")==="next"?(C.next(),void C._maybeEnableCycle()):(C.prev(),void C._maybeEnableCycle())}),j.on(window,cs,()=>{const k=z.find('[data-bs-ride="carousel"]');for(const g of k)Ra.getOrCreateInstance(g)}),E(Ra);const cl=".bs.collapse",Ky=`show${cl}`,Qy=`shown${cl}`,Gy=`hide${cl}`,_y=`hidden${cl}`,$y=`click${cl}.data-api`,mp="show",La="collapse",Qu="collapsing",e2=`:scope .${La} .${La}`,gp='[data-bs-toggle="collapse"]',t2={parent:null,toggle:!0},n2={parent:"(null|element)",toggle:"boolean"};class Ma extends Me{constructor(g,C){super(g,C),this._isTransitioning=!1,this._triggerArray=[];const I=z.find(gp);for(const Z of I){const Q=z.getSelectorFromElement(Z),se=z.find(Q).filter(fe=>fe===this._element);Q!==null&&se.length&&this._triggerArray.push(Z)}this._initializeChildren(),this._config.parent||this._addAriaAndCollapsedClass(this._triggerArray,this._isShown()),this._config.toggle&&this.toggle()}static get Default(){return t2}static get DefaultType(){return n2}static get NAME(){return"collapse"}toggle(){this._isShown()?this.hide():this.show()}show(){if(this._isTransitioning||this._isShown())return;let g=[];if(this._config.parent&&(g=this._getFirstLevelChildren(".collapse.show, .collapse.collapsing").filter(Z=>Z!==this._element).map(Z=>Ma.getOrCreateInstance(Z,{toggle:!1}))),g.length&&g[0]._isTransitioning||j.trigger(this._element,Ky).defaultPrevented)return;for(const Z of g)Z.hide();const C=this._getDimension();this._element.classList.remove(La),this._element.classList.add(Qu),this._element.style[C]=0,this._addAriaAndCollapsedClass(this._triggerArray,!0),this._isTransitioning=!0;const I=`scroll${C[0].toUpperCase()+C.slice(1)}`;this._queueCallback(()=>{this._isTransitioning=!1,this._element.classList.remove(Qu),this._element.classList.add(La,mp),this._element.style[C]="",j.trigger(this._element,Qy)},this._element,!0),this._element.style[C]=`${this._element[I]}px`}hide(){if(this._isTransitioning||!this._isShown()||j.trigger(this._element,Gy).defaultPrevented)return;const g=this._getDimension();this._element.style[g]=`${this._element.getBoundingClientRect()[g]}px`,f(this._element),this._element.classList.add(Qu),this._element.classList.remove(La,mp);for(const C of this._triggerArray){const I=z.getElementFromSelector(C);I&&!this._isShown(I)&&this._addAriaAndCollapsedClass([C],!1)}this._isTransitioning=!0,this._element.style[g]="",this._queueCallback(()=>{this._isTransitioning=!1,this._element.classList.remove(Qu),this._element.classList.add(La),j.trigger(this._element,_y)},this._element,!0)}_isShown(g=this._element){return g.classList.contains(mp)}_configAfterMerge(g){return g.toggle=!!g.toggle,g.parent=c(g.parent),g}_getDimension(){return this._element.classList.contains("collapse-horizontal")?"width":"height"}_initializeChildren(){if(!this._config.parent)return;const g=this._getFirstLevelChildren(gp);for(const C of g){const I=z.getElementFromSelector(C);I&&this._addAriaAndCollapsedClass([C],this._isShown(I))}}_getFirstLevelChildren(g){const C=z.find(e2,this._config.parent);return z.find(g,this._config.parent).filter(I=>!C.includes(I))}_addAriaAndCollapsedClass(g,C){if(g.length)for(const I of g)I.classList.toggle("collapsed",!C),I.setAttribute("aria-expanded",C)}static jQueryInterface(g){const C={};return typeof g=="string"&&/show|hide/.test(g)&&(C.toggle=!1),this.each(function(){const I=Ma.getOrCreateInstance(this,C);if(typeof g=="string"){if(I[g]===void 0)throw new TypeError(`No method named "${g}"`);I[g]()}})}}j.on(document,$y,gp,function(k){(k.target.tagName==="A"||k.delegateTarget&&k.delegateTarget.tagName==="A")&&k.preventDefault();for(const g of z.getMultipleElementsFromSelector(this))Ma.getOrCreateInstance(g,{toggle:!1}).toggle()}),E(Ma);var ei="top",yi="bottom",ki="right",ti="left",Gu="auto",Ba=[ei,yi,ki,ti],Vo="start",Fa="end",cv="clippingParents",Ep="viewport",Ua="popper",lv="reference",vp=Ba.reduce(function(k,g){return k.concat([g+"-"+Vo,g+"-"+Fa])},[]),bp=[].concat(Ba,[Gu]).reduce(function(k,g){return k.concat([g,g+"-"+Vo,g+"-"+Fa])},[]),uv="beforeRead",dv="read",hv="afterRead",fv="beforeMain",pv="main",mv="afterMain",gv="beforeWrite",Ev="write",vv="afterWrite",bv=[uv,dv,hv,fv,pv,mv,gv,Ev,vv];function Us(k){return k?(k.nodeName||"").toLowerCase():null}function Di(k){if(k==null)return window;if(k.toString()!=="[object Window]"){var g=k.ownerDocument;return g&&g.defaultView||window}return k}function Wo(k){return k instanceof Di(k).Element||k instanceof Element}function Xi(k){return k instanceof Di(k).HTMLElement||k instanceof HTMLElement}function Sp(k){return typeof ShadowRoot<"u"&&(k instanceof Di(k).ShadowRoot||k instanceof ShadowRoot)}const xp={name:"applyStyles",enabled:!0,phase:"write",fn:function(k){var g=k.state;Object.keys(g.elements).forEach(function(C){var I=g.styles[C]||{},Z=g.attributes[C]||{},Q=g.elements[C];Xi(Q)&&Us(Q)&&(Object.assign(Q.style,I),Object.keys(Z).forEach(function(se){var fe=Z[se];fe===!1?Q.removeAttribute(se):Q.setAttribute(se,fe===!0?"":fe)}))})},effect:function(k){var g=k.state,C={popper:{position:g.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(g.elements.popper.style,C.popper),g.styles=C,g.elements.arrow&&Object.assign(g.elements.arrow.style,C.arrow),function(){Object.keys(g.elements).forEach(function(I){var Z=g.elements[I],Q=g.attributes[I]||{},se=Object.keys(g.styles.hasOwnProperty(I)?g.styles[I]:C[I]).reduce(function(fe,Te){return fe[Te]="",fe},{});Xi(Z)&&Us(Z)&&(Object.assign(Z.style,se),Object.keys(Q).forEach(function(fe){Z.removeAttribute(fe)}))})}},requires:["computeStyles"]};function Vs(k){return k.split("-")[0]}var Ho=Math.max,_u=Math.min,Va=Math.round;function Tp(){var k=navigator.userAgentData;return k!=null&&k.brands&&Array.isArray(k.brands)?k.brands.map(function(g){return g.brand+"/"+g.version}).join(" "):navigator.userAgent}function Sv(){return!/^((?!chrome|android).)*safari/i.test(Tp())}function Wa(k,g,C){g===void 0&&(g=!1),C===void 0&&(C=!1);var I=k.getBoundingClientRect(),Z=1,Q=1;g&&Xi(k)&&(Z=k.offsetWidth>0&&Va(I.width)/k.offsetWidth||1,Q=k.offsetHeight>0&&Va(I.height)/k.offsetHeight||1);var se=(Wo(k)?Di(k):window).visualViewport,fe=!Sv()&&C,Te=(I.left+(fe&&se?se.offsetLeft:0))/Z,Pe=(I.top+(fe&&se?se.offsetTop:0))/Q,Ie=I.width/Z,ke=I.height/Q;return{width:Ie,height:ke,top:Pe,right:Te+Ie,bottom:Pe+ke,left:Te,x:Te,y:Pe}}function Cp(k){var g=Wa(k),C=k.offsetWidth,I=k.offsetHeight;return Math.abs(g.width-C)<=1&&(C=g.width),Math.abs(g.height-I)<=1&&(I=g.height),{x:k.offsetLeft,y:k.offsetTop,width:C,height:I}}function xv(k,g){var C=g.getRootNode&&g.getRootNode();if(k.contains(g))return!0;if(C&&Sp(C)){var I=g;do{if(I&&k.isSameNode(I))return!0;I=I.parentNode||I.host}while(I)}return!1}function ur(k){return Di(k).getComputedStyle(k)}function i2(k){return["table","td","th"].indexOf(Us(k))>=0}function Yr(k){return((Wo(k)?k.ownerDocument:k.document)||window.document).documentElement}function $u(k){return Us(k)==="html"?k:k.assignedSlot||k.parentNode||(Sp(k)?k.host:null)||Yr(k)}function Tv(k){return Xi(k)&&ur(k).position!=="fixed"?k.offsetParent:null}function ll(k){for(var g=Di(k),C=Tv(k);C&&i2(C)&&ur(C).position==="static";)C=Tv(C);return C&&(Us(C)==="html"||Us(C)==="body"&&ur(C).position==="static")?g:C||function(I){var Z=/firefox/i.test(Tp());if(/Trident/i.test(Tp())&&Xi(I)&&ur(I).position==="fixed")return null;var Q=$u(I);for(Sp(Q)&&(Q=Q.host);Xi(Q)&&["html","body"].indexOf(Us(Q))<0;){var se=ur(Q);if(se.transform!=="none"||se.perspective!=="none"||se.contain==="paint"||["transform","perspective"].indexOf(se.willChange)!==-1||Z&&se.willChange==="filter"||Z&&se.filter&&se.filter!=="none")return Q;Q=Q.parentNode}return null}(k)||g}function wp(k){return["top","bottom"].indexOf(k)>=0?"x":"y"}function ul(k,g,C){return Ho(k,_u(g,C))}function Cv(k){return Object.assign({},{top:0,right:0,bottom:0,left:0},k)}function wv(k,g){return g.reduce(function(C,I){return C[I]=k,C},{})}const Av={name:"arrow",enabled:!0,phase:"main",fn:function(k){var g,C=k.state,I=k.name,Z=k.options,Q=C.elements.arrow,se=C.modifiersData.popperOffsets,fe=Vs(C.placement),Te=wp(fe),Pe=[ti,ki].indexOf(fe)>=0?"height":"width";if(Q&&se){var Ie=function(Xt,Ft){return Cv(typeof(Xt=typeof Xt=="function"?Xt(Object.assign({},Ft.rects,{placement:Ft.placement})):Xt)!="number"?Xt:wv(Xt,Ba))}(Z.padding,C),ke=Cp(Q),it=Te==="y"?ei:ti,je=Te==="y"?yi:ki,_e=C.rects.reference[Pe]+C.rects.reference[Te]-se[Te]-C.rects.popper[Pe],Je=se[Te]-C.rects.reference[Te],$e=ll(Q),Ht=$e?Te==="y"?$e.clientHeight||0:$e.clientWidth||0:0,Zt=_e/2-Je/2,pt=Ie[it],Pt=Ht-ke[Pe]-Ie[je],st=Ht/2-ke[Pe]/2+Zt,Tt=ul(pt,st,Pt),Bt=Te;C.modifiersData[I]=((g={})[Bt]=Tt,g.centerOffset=Tt-st,g)}},effect:function(k){var g=k.state,C=k.options.element,I=C===void 0?"[data-popper-arrow]":C;I!=null&&(typeof I!="string"||(I=g.elements.popper.querySelector(I)))&&xv(g.elements.popper,I)&&(g.elements.arrow=I)},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function Ha(k){return k.split("-")[1]}var s2={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Nv(k){var g,C=k.popper,I=k.popperRect,Z=k.placement,Q=k.variation,se=k.offsets,fe=k.position,Te=k.gpuAcceleration,Pe=k.adaptive,Ie=k.roundOffsets,ke=k.isFixed,it=se.x,je=it===void 0?0:it,_e=se.y,Je=_e===void 0?0:_e,$e=typeof Ie=="function"?Ie({x:je,y:Je}):{x:je,y:Je};je=$e.x,Je=$e.y;var Ht=se.hasOwnProperty("x"),Zt=se.hasOwnProperty("y"),pt=ti,Pt=ei,st=window;if(Pe){var Tt=ll(C),Bt="clientHeight",Xt="clientWidth";Tt===Di(C)&&ur(Tt=Yr(C)).position!=="static"&&fe==="absolute"&&(Bt="scrollHeight",Xt="scrollWidth"),(Z===ei||(Z===ti||Z===ki)&&Q===Fa)&&(Pt=yi,Je-=(ke&&Tt===st&&st.visualViewport?st.visualViewport.height:Tt[Bt])-I.height,Je*=Te?1:-1),Z!==ti&&(Z!==ei&&Z!==yi||Q!==Fa)||(pt=ki,je-=(ke&&Tt===st&&st.visualViewport?st.visualViewport.width:Tt[Xt])-I.width,je*=Te?1:-1)}var Ft,gn=Object.assign({position:fe},Pe&&s2),Oi=Ie===!0?function(fs,ni){var qi=fs.x,zi=fs.y,ln=ni.devicePixelRatio||1;return{x:Va(qi*ln)/ln||0,y:Va(zi*ln)/ln||0}}({x:je,y:Je},Di(C)):{x:je,y:Je};return je=Oi.x,Je=Oi.y,Te?Object.assign({},gn,((Ft={})[Pt]=Zt?"0":"",Ft[pt]=Ht?"0":"",Ft.transform=(st.devicePixelRatio||1)<=1?"translate("+je+"px, "+Je+"px)":"translate3d("+je+"px, "+Je+"px, 0)",Ft)):Object.assign({},gn,((g={})[Pt]=Zt?Je+"px":"",g[pt]=Ht?je+"px":"",g.transform="",g))}const Ap={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(k){var g=k.state,C=k.options,I=C.gpuAcceleration,Z=I===void 0||I,Q=C.adaptive,se=Q===void 0||Q,fe=C.roundOffsets,Te=fe===void 0||fe,Pe={placement:Vs(g.placement),variation:Ha(g.placement),popper:g.elements.popper,popperRect:g.rects.popper,gpuAcceleration:Z,isFixed:g.options.strategy==="fixed"};g.modifiersData.popperOffsets!=null&&(g.styles.popper=Object.assign({},g.styles.popper,Nv(Object.assign({},Pe,{offsets:g.modifiersData.popperOffsets,position:g.options.strategy,adaptive:se,roundOffsets:Te})))),g.modifiersData.arrow!=null&&(g.styles.arrow=Object.assign({},g.styles.arrow,Nv(Object.assign({},Pe,{offsets:g.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:Te})))),g.attributes.popper=Object.assign({},g.attributes.popper,{"data-popper-placement":g.placement})},data:{}};var ed={passive:!0};const Np={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(k){var g=k.state,C=k.instance,I=k.options,Z=I.scroll,Q=Z===void 0||Z,se=I.resize,fe=se===void 0||se,Te=Di(g.elements.popper),Pe=[].concat(g.scrollParents.reference,g.scrollParents.popper);return Q&&Pe.forEach(function(Ie){Ie.addEventListener("scroll",C.update,ed)}),fe&&Te.addEventListener("resize",C.update,ed),function(){Q&&Pe.forEach(function(Ie){Ie.removeEventListener("scroll",C.update,ed)}),fe&&Te.removeEventListener("resize",C.update,ed)}},data:{}};var r2={left:"right",right:"left",bottom:"top",top:"bottom"};function td(k){return k.replace(/left|right|bottom|top/g,function(g){return r2[g]})}var o2={start:"end",end:"start"};function yv(k){return k.replace(/start|end/g,function(g){return o2[g]})}function yp(k){var g=Di(k);return{scrollLeft:g.pageXOffset,scrollTop:g.pageYOffset}}function kp(k){return Wa(Yr(k)).left+yp(k).scrollLeft}function Dp(k){var g=ur(k),C=g.overflow,I=g.overflowX,Z=g.overflowY;return/auto|scroll|overlay|hidden/.test(C+Z+I)}function kv(k){return["html","body","#document"].indexOf(Us(k))>=0?k.ownerDocument.body:Xi(k)&&Dp(k)?k:kv($u(k))}function dl(k,g){var C;g===void 0&&(g=[]);var I=kv(k),Z=I===((C=k.ownerDocument)==null?void 0:C.body),Q=Di(I),se=Z?[Q].concat(Q.visualViewport||[],Dp(I)?I:[]):I,fe=g.concat(se);return Z?fe:fe.concat(dl($u(se)))}function Op(k){return Object.assign({},k,{left:k.x,top:k.y,right:k.x+k.width,bottom:k.y+k.height})}function Dv(k,g,C){return g===Ep?Op(function(I,Z){var Q=Di(I),se=Yr(I),fe=Q.visualViewport,Te=se.clientWidth,Pe=se.clientHeight,Ie=0,ke=0;if(fe){Te=fe.width,Pe=fe.height;var it=Sv();(it||!it&&Z==="fixed")&&(Ie=fe.offsetLeft,ke=fe.offsetTop)}return{width:Te,height:Pe,x:Ie+kp(I),y:ke}}(k,C)):Wo(g)?function(I,Z){var Q=Wa(I,!1,Z==="fixed");return Q.top=Q.top+I.clientTop,Q.left=Q.left+I.clientLeft,Q.bottom=Q.top+I.clientHeight,Q.right=Q.left+I.clientWidth,Q.width=I.clientWidth,Q.height=I.clientHeight,Q.x=Q.left,Q.y=Q.top,Q}(g,C):Op(function(I){var Z,Q=Yr(I),se=yp(I),fe=(Z=I.ownerDocument)==null?void 0:Z.body,Te=Ho(Q.scrollWidth,Q.clientWidth,fe?fe.scrollWidth:0,fe?fe.clientWidth:0),Pe=Ho(Q.scrollHeight,Q.clientHeight,fe?fe.scrollHeight:0,fe?fe.clientHeight:0),Ie=-se.scrollLeft+kp(I),ke=-se.scrollTop;return ur(fe||Q).direction==="rtl"&&(Ie+=Ho(Q.clientWidth,fe?fe.clientWidth:0)-Te),{width:Te,height:Pe,x:Ie,y:ke}}(Yr(k)))}function Ov(k){var g,C=k.reference,I=k.element,Z=k.placement,Q=Z?Vs(Z):null,se=Z?Ha(Z):null,fe=C.x+C.width/2-I.width/2,Te=C.y+C.height/2-I.height/2;switch(Q){case ei:g={x:fe,y:C.y-I.height};break;case yi:g={x:fe,y:C.y+C.height};break;case ki:g={x:C.x+C.width,y:Te};break;case ti:g={x:C.x-I.width,y:Te};break;default:g={x:C.x,y:C.y}}var Pe=Q?wp(Q):null;if(Pe!=null){var Ie=Pe==="y"?"height":"width";switch(se){case Vo:g[Pe]=g[Pe]-(C[Ie]/2-I[Ie]/2);break;case Fa:g[Pe]=g[Pe]+(C[Ie]/2-I[Ie]/2)}}return g}function Xa(k,g){g===void 0&&(g={});var C=g,I=C.placement,Z=I===void 0?k.placement:I,Q=C.strategy,se=Q===void 0?k.strategy:Q,fe=C.boundary,Te=fe===void 0?cv:fe,Pe=C.rootBoundary,Ie=Pe===void 0?Ep:Pe,ke=C.elementContext,it=ke===void 0?Ua:ke,je=C.altBoundary,_e=je!==void 0&&je,Je=C.padding,$e=Je===void 0?0:Je,Ht=Cv(typeof $e!="number"?$e:wv($e,Ba)),Zt=it===Ua?lv:Ua,pt=k.rects.popper,Pt=k.elements[_e?Zt:it],st=function(ni,qi,zi,ln){var Ws=qi==="clippingParents"?function(Yt){var ii=dl($u(Yt)),Yi=["absolute","fixed"].indexOf(ur(Yt).position)>=0&&Xi(Yt)?ll(Yt):Yt;return Wo(Yi)?ii.filter(function(Zr){return Wo(Zr)&&xv(Zr,Yi)&&Us(Zr)!=="body"}):[]}(ni):[].concat(qi),Hs=[].concat(Ws,[zi]),za=Hs[0],Ln=Hs.reduce(function(Yt,ii){var Yi=Dv(ni,ii,ln);return Yt.top=Ho(Yi.top,Yt.top),Yt.right=_u(Yi.right,Yt.right),Yt.bottom=_u(Yi.bottom,Yt.bottom),Yt.left=Ho(Yi.left,Yt.left),Yt},Dv(ni,za,ln));return Ln.width=Ln.right-Ln.left,Ln.height=Ln.bottom-Ln.top,Ln.x=Ln.left,Ln.y=Ln.top,Ln}(Wo(Pt)?Pt:Pt.contextElement||Yr(k.elements.popper),Te,Ie,se),Tt=Wa(k.elements.reference),Bt=Ov({reference:Tt,element:pt,placement:Z}),Xt=Op(Object.assign({},pt,Bt)),Ft=it===Ua?Xt:Tt,gn={top:st.top-Ft.top+Ht.top,bottom:Ft.bottom-st.bottom+Ht.bottom,left:st.left-Ft.left+Ht.left,right:Ft.right-st.right+Ht.right},Oi=k.modifiersData.offset;if(it===Ua&&Oi){var fs=Oi[Z];Object.keys(gn).forEach(function(ni){var qi=[ki,yi].indexOf(ni)>=0?1:-1,zi=[ei,yi].indexOf(ni)>=0?"y":"x";gn[ni]+=fs[zi]*qi})}return gn}function a2(k,g){g===void 0&&(g={});var C=g,I=C.placement,Z=C.boundary,Q=C.rootBoundary,se=C.padding,fe=C.flipVariations,Te=C.allowedAutoPlacements,Pe=Te===void 0?bp:Te,Ie=Ha(I),ke=Ie?fe?vp:vp.filter(function(_e){return Ha(_e)===Ie}):Ba,it=ke.filter(function(_e){return Pe.indexOf(_e)>=0});it.length===0&&(it=ke);var je=it.reduce(function(_e,Je){return _e[Je]=Xa(k,{placement:Je,boundary:Z,rootBoundary:Q,padding:se})[Vs(Je)],_e},{});return Object.keys(je).sort(function(_e,Je){return je[_e]-je[Je]})}const Pv={name:"flip",enabled:!0,phase:"main",fn:function(k){var g=k.state,C=k.options,I=k.name;if(!g.modifiersData[I]._skip){for(var Z=C.mainAxis,Q=Z===void 0||Z,se=C.altAxis,fe=se===void 0||se,Te=C.fallbackPlacements,Pe=C.padding,Ie=C.boundary,ke=C.rootBoundary,it=C.altBoundary,je=C.flipVariations,_e=je===void 0||je,Je=C.allowedAutoPlacements,$e=g.options.placement,Ht=Vs($e),Zt=Te||(Ht!==$e&&_e?function(Yt){if(Vs(Yt)===Gu)return[];var ii=td(Yt);return[yv(Yt),ii,yv(ii)]}($e):[td($e)]),pt=[$e].concat(Zt).reduce(function(Yt,ii){return Yt.concat(Vs(ii)===Gu?a2(g,{placement:ii,boundary:Ie,rootBoundary:ke,padding:Pe,flipVariations:_e,allowedAutoPlacements:Je}):ii)},[]),Pt=g.rects.reference,st=g.rects.popper,Tt=new Map,Bt=!0,Xt=pt[0],Ft=0;Ft<pt.length;Ft++){var gn=pt[Ft],Oi=Vs(gn),fs=Ha(gn)===Vo,ni=[ei,yi].indexOf(Oi)>=0,qi=ni?"width":"height",zi=Xa(g,{placement:gn,boundary:Ie,rootBoundary:ke,altBoundary:it,padding:Pe}),ln=ni?fs?ki:ti:fs?yi:ei;Pt[qi]>st[qi]&&(ln=td(ln));var Ws=td(ln),Hs=[];if(Q&&Hs.push(zi[Oi]<=0),fe&&Hs.push(zi[ln]<=0,zi[Ws]<=0),Hs.every(function(Yt){return Yt})){Xt=gn,Bt=!1;break}Tt.set(gn,Hs)}if(Bt)for(var za=function(Yt){var ii=pt.find(function(Yi){var Zr=Tt.get(Yi);if(Zr)return Zr.slice(0,Yt).every(function(ud){return ud})});if(ii)return Xt=ii,"break"},Ln=_e?3:1;Ln>0&&za(Ln)!=="break";Ln--);g.placement!==Xt&&(g.modifiersData[I]._skip=!0,g.placement=Xt,g.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}};function Iv(k,g,C){return C===void 0&&(C={x:0,y:0}),{top:k.top-g.height-C.y,right:k.right-g.width+C.x,bottom:k.bottom-g.height+C.y,left:k.left-g.width-C.x}}function Rv(k){return[ei,ki,yi,ti].some(function(g){return k[g]>=0})}const Lv={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(k){var g=k.state,C=k.name,I=g.rects.reference,Z=g.rects.popper,Q=g.modifiersData.preventOverflow,se=Xa(g,{elementContext:"reference"}),fe=Xa(g,{altBoundary:!0}),Te=Iv(se,I),Pe=Iv(fe,Z,Q),Ie=Rv(Te),ke=Rv(Pe);g.modifiersData[C]={referenceClippingOffsets:Te,popperEscapeOffsets:Pe,isReferenceHidden:Ie,hasPopperEscaped:ke},g.attributes.popper=Object.assign({},g.attributes.popper,{"data-popper-reference-hidden":Ie,"data-popper-escaped":ke})}},Mv={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(k){var g=k.state,C=k.options,I=k.name,Z=C.offset,Q=Z===void 0?[0,0]:Z,se=bp.reduce(function(Ie,ke){return Ie[ke]=function(it,je,_e){var Je=Vs(it),$e=[ti,ei].indexOf(Je)>=0?-1:1,Ht=typeof _e=="function"?_e(Object.assign({},je,{placement:it})):_e,Zt=Ht[0],pt=Ht[1];return Zt=Zt||0,pt=(pt||0)*$e,[ti,ki].indexOf(Je)>=0?{x:pt,y:Zt}:{x:Zt,y:pt}}(ke,g.rects,Q),Ie},{}),fe=se[g.placement],Te=fe.x,Pe=fe.y;g.modifiersData.popperOffsets!=null&&(g.modifiersData.popperOffsets.x+=Te,g.modifiersData.popperOffsets.y+=Pe),g.modifiersData[I]=se}},Pp={name:"popperOffsets",enabled:!0,phase:"read",fn:function(k){var g=k.state,C=k.name;g.modifiersData[C]=Ov({reference:g.rects.reference,element:g.rects.popper,placement:g.placement})},data:{}},Bv={name:"preventOverflow",enabled:!0,phase:"main",fn:function(k){var g=k.state,C=k.options,I=k.name,Z=C.mainAxis,Q=Z===void 0||Z,se=C.altAxis,fe=se!==void 0&&se,Te=C.boundary,Pe=C.rootBoundary,Ie=C.altBoundary,ke=C.padding,it=C.tether,je=it===void 0||it,_e=C.tetherOffset,Je=_e===void 0?0:_e,$e=Xa(g,{boundary:Te,rootBoundary:Pe,padding:ke,altBoundary:Ie}),Ht=Vs(g.placement),Zt=Ha(g.placement),pt=!Zt,Pt=wp(Ht),st=Pt==="x"?"y":"x",Tt=g.modifiersData.popperOffsets,Bt=g.rects.reference,Xt=g.rects.popper,Ft=typeof Je=="function"?Je(Object.assign({},g.rects,{placement:g.placement})):Je,gn=typeof Ft=="number"?{mainAxis:Ft,altAxis:Ft}:Object.assign({mainAxis:0,altAxis:0},Ft),Oi=g.modifiersData.offset?g.modifiersData.offset[g.placement]:null,fs={x:0,y:0};if(Tt){if(Q){var ni,qi=Pt==="y"?ei:ti,zi=Pt==="y"?yi:ki,ln=Pt==="y"?"height":"width",Ws=Tt[Pt],Hs=Ws+$e[qi],za=Ws-$e[zi],Ln=je?-Xt[ln]/2:0,Yt=Zt===Vo?Bt[ln]:Xt[ln],ii=Zt===Vo?-Xt[ln]:-Bt[ln],Yi=g.elements.arrow,Zr=je&&Yi?Cp(Yi):{width:0,height:0},ud=g.modifiersData["arrow#persistent"]?g.modifiersData["arrow#persistent"].padding:{top:0,right:0,bottom:0,left:0},Tb=ud[qi],Cb=ud[zi],dd=ul(0,Bt[ln],Zr[ln]),Vk=pt?Bt[ln]/2-Ln-dd-Tb-gn.mainAxis:Yt-dd-Tb-gn.mainAxis,Wk=pt?-Bt[ln]/2+Ln+dd+Cb+gn.mainAxis:ii+dd+Cb+gn.mainAxis,qp=g.elements.arrow&&ll(g.elements.arrow),Hk=qp?Pt==="y"?qp.clientTop||0:qp.clientLeft||0:0,wb=(ni=Oi==null?void 0:Oi[Pt])!=null?ni:0,Xk=Ws+Wk-wb,Ab=ul(je?_u(Hs,Ws+Vk-wb-Hk):Hs,Ws,je?Ho(za,Xk):za);Tt[Pt]=Ab,fs[Pt]=Ab-Ws}if(fe){var Nb,jk=Pt==="x"?ei:ti,qk=Pt==="x"?yi:ki,Ko=Tt[st],hd=st==="y"?"height":"width",yb=Ko+$e[jk],kb=Ko-$e[qk],zp=[ei,ti].indexOf(Ht)!==-1,Db=(Nb=Oi==null?void 0:Oi[st])!=null?Nb:0,Ob=zp?yb:Ko-Bt[hd]-Xt[hd]-Db+gn.altAxis,Pb=zp?Ko+Bt[hd]+Xt[hd]-Db-gn.altAxis:kb,Ib=je&&zp?function(zk,Yk,Yp){var Rb=ul(zk,Yk,Yp);return Rb>Yp?Yp:Rb}(Ob,Ko,Pb):ul(je?Ob:yb,Ko,je?Pb:kb);Tt[st]=Ib,fs[st]=Ib-Ko}g.modifiersData[I]=fs}},requiresIfExists:["offset"]};function c2(k,g,C){C===void 0&&(C=!1);var I,Z,Q=Xi(g),se=Xi(g)&&function(ke){var it=ke.getBoundingClientRect(),je=Va(it.width)/ke.offsetWidth||1,_e=Va(it.height)/ke.offsetHeight||1;return je!==1||_e!==1}(g),fe=Yr(g),Te=Wa(k,se,C),Pe={scrollLeft:0,scrollTop:0},Ie={x:0,y:0};return(Q||!Q&&!C)&&((Us(g)!=="body"||Dp(fe))&&(Pe=(I=g)!==Di(I)&&Xi(I)?{scrollLeft:(Z=I).scrollLeft,scrollTop:Z.scrollTop}:yp(I)),Xi(g)?((Ie=Wa(g,!0)).x+=g.clientLeft,Ie.y+=g.clientTop):fe&&(Ie.x=kp(fe))),{x:Te.left+Pe.scrollLeft-Ie.x,y:Te.top+Pe.scrollTop-Ie.y,width:Te.width,height:Te.height}}function l2(k){var g=new Map,C=new Set,I=[];function Z(Q){C.add(Q.name),[].concat(Q.requires||[],Q.requiresIfExists||[]).forEach(function(se){if(!C.has(se)){var fe=g.get(se);fe&&Z(fe)}}),I.push(Q)}return k.forEach(function(Q){g.set(Q.name,Q)}),k.forEach(function(Q){C.has(Q.name)||Z(Q)}),I}var Fv={placement:"bottom",modifiers:[],strategy:"absolute"};function Uv(){for(var k=arguments.length,g=new Array(k),C=0;C<k;C++)g[C]=arguments[C];return!g.some(function(I){return!(I&&typeof I.getBoundingClientRect=="function")})}function nd(k){k===void 0&&(k={});var g=k,C=g.defaultModifiers,I=C===void 0?[]:C,Z=g.defaultOptions,Q=Z===void 0?Fv:Z;return function(se,fe,Te){Te===void 0&&(Te=Q);var Pe,Ie,ke={placement:"bottom",orderedModifiers:[],options:Object.assign({},Fv,Q),modifiersData:{},elements:{reference:se,popper:fe},attributes:{},styles:{}},it=[],je=!1,_e={state:ke,setOptions:function($e){var Ht=typeof $e=="function"?$e(ke.options):$e;Je(),ke.options=Object.assign({},Q,ke.options,Ht),ke.scrollParents={reference:Wo(se)?dl(se):se.contextElement?dl(se.contextElement):[],popper:dl(fe)};var Zt,pt,Pt=function(st){var Tt=l2(st);return bv.reduce(function(Bt,Xt){return Bt.concat(Tt.filter(function(Ft){return Ft.phase===Xt}))},[])}((Zt=[].concat(I,ke.options.modifiers),pt=Zt.reduce(function(st,Tt){var Bt=st[Tt.name];return st[Tt.name]=Bt?Object.assign({},Bt,Tt,{options:Object.assign({},Bt.options,Tt.options),data:Object.assign({},Bt.data,Tt.data)}):Tt,st},{}),Object.keys(pt).map(function(st){return pt[st]})));return ke.orderedModifiers=Pt.filter(function(st){return st.enabled}),ke.orderedModifiers.forEach(function(st){var Tt=st.name,Bt=st.options,Xt=Bt===void 0?{}:Bt,Ft=st.effect;if(typeof Ft=="function"){var gn=Ft({state:ke,name:Tt,instance:_e,options:Xt});it.push(gn||function(){})}}),_e.update()},forceUpdate:function(){if(!je){var $e=ke.elements,Ht=$e.reference,Zt=$e.popper;if(Uv(Ht,Zt)){ke.rects={reference:c2(Ht,ll(Zt),ke.options.strategy==="fixed"),popper:Cp(Zt)},ke.reset=!1,ke.placement=ke.options.placement,ke.orderedModifiers.forEach(function(Ft){return ke.modifiersData[Ft.name]=Object.assign({},Ft.data)});for(var pt=0;pt<ke.orderedModifiers.length;pt++)if(ke.reset!==!0){var Pt=ke.orderedModifiers[pt],st=Pt.fn,Tt=Pt.options,Bt=Tt===void 0?{}:Tt,Xt=Pt.name;typeof st=="function"&&(ke=st({state:ke,options:Bt,name:Xt,instance:_e})||ke)}else ke.reset=!1,pt=-1}}},update:(Pe=function(){return new Promise(function($e){_e.forceUpdate(),$e(ke)})},function(){return Ie||(Ie=new Promise(function($e){Promise.resolve().then(function(){Ie=void 0,$e(Pe())})})),Ie}),destroy:function(){Je(),je=!0}};if(!Uv(se,fe))return _e;function Je(){it.forEach(function($e){return $e()}),it=[]}return _e.setOptions(Te).then(function($e){!je&&Te.onFirstUpdate&&Te.onFirstUpdate($e)}),_e}}var u2=nd(),d2=nd({defaultModifiers:[Np,Pp,Ap,xp]}),Ip=nd({defaultModifiers:[Np,Pp,Ap,xp,Mv,Pv,Bv,Av,Lv]});const Vv=Object.freeze(Object.defineProperty({__proto__:null,afterMain:mv,afterRead:hv,afterWrite:vv,applyStyles:xp,arrow:Av,auto:Gu,basePlacements:Ba,beforeMain:fv,beforeRead:uv,beforeWrite:gv,bottom:yi,clippingParents:cv,computeStyles:Ap,createPopper:Ip,createPopperBase:u2,createPopperLite:d2,detectOverflow:Xa,end:Fa,eventListeners:Np,flip:Pv,hide:Lv,left:ti,main:pv,modifierPhases:bv,offset:Mv,placements:bp,popper:Ua,popperGenerator:nd,popperOffsets:Pp,preventOverflow:Bv,read:dv,reference:lv,right:ki,start:Vo,top:ei,variationPlacements:vp,viewport:Ep,write:Ev},Symbol.toStringTag,{value:"Module"})),Wv="dropdown",Xo=".bs.dropdown",Rp=".data-api",h2="ArrowUp",Hv="ArrowDown",f2=`hide${Xo}`,p2=`hidden${Xo}`,m2=`show${Xo}`,g2=`shown${Xo}`,Xv=`click${Xo}${Rp}`,jv=`keydown${Xo}${Rp}`,E2=`keyup${Xo}${Rp}`,ja="show",jo='[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled)',v2=`${jo}.${ja}`,id=".dropdown-menu",b2=b()?"top-end":"top-start",S2=b()?"top-start":"top-end",x2=b()?"bottom-end":"bottom-start",T2=b()?"bottom-start":"bottom-end",C2=b()?"left-start":"right-start",w2=b()?"right-start":"left-start",A2={autoClose:!0,boundary:"clippingParents",display:"dynamic",offset:[0,2],popperConfig:null,reference:"toggle"},N2={autoClose:"(boolean|string)",boundary:"(string|element)",display:"string",offset:"(array|string|function)",popperConfig:"(null|object|function)",reference:"(string|element|object)"};class hs extends Me{constructor(g,C){super(g,C),this._popper=null,this._parent=this._element.parentNode,this._menu=z.next(this._element,id)[0]||z.prev(this._element,id)[0]||z.findOne(id,this._parent),this._inNavbar=this._detectNavbar()}static get Default(){return A2}static get DefaultType(){return N2}static get NAME(){return Wv}toggle(){return this._isShown()?this.hide():this.show()}show(){if(u(this._element)||this._isShown())return;const g={relatedTarget:this._element};if(!j.trigger(this._element,m2,g).defaultPrevented){if(this._createPopper(),"ontouchstart"in document.documentElement&&!this._parent.closest(".navbar-nav"))for(const C of[].concat(...document.body.children))j.on(C,"mouseover",h);this._element.focus(),this._element.setAttribute("aria-expanded",!0),this._menu.classList.add(ja),this._element.classList.add(ja),j.trigger(this._element,g2,g)}}hide(){if(u(this._element)||!this._isShown())return;const g={relatedTarget:this._element};this._completeHide(g)}dispose(){this._popper&&this._popper.destroy(),super.dispose()}update(){this._inNavbar=this._detectNavbar(),this._popper&&this._popper.update()}_completeHide(g){if(!j.trigger(this._element,f2,g).defaultPrevented){if("ontouchstart"in document.documentElement)for(const C of[].concat(...document.body.children))j.off(C,"mouseover",h);this._popper&&this._popper.destroy(),this._menu.classList.remove(ja),this._element.classList.remove(ja),this._element.setAttribute("aria-expanded","false"),Ae.removeDataAttribute(this._menu,"popper"),j.trigger(this._element,p2,g),this._element.focus()}}_getConfig(g){if(typeof(g=super._getConfig(g)).reference=="object"&&!a(g.reference)&&typeof g.reference.getBoundingClientRect!="function")throw new TypeError(`${Wv.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);return g}_createPopper(){if(Vv===void 0)throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org/docs/v2/)");let g=this._element;this._config.reference==="parent"?g=this._parent:a(this._config.reference)?g=c(this._config.reference):typeof this._config.reference=="object"&&(g=this._config.reference);const C=this._getPopperConfig();this._popper=Ip(g,this._menu,C)}_isShown(){return this._menu.classList.contains(ja)}_getPlacement(){const g=this._parent;if(g.classList.contains("dropend"))return C2;if(g.classList.contains("dropstart"))return w2;if(g.classList.contains("dropup-center"))return"top";if(g.classList.contains("dropdown-center"))return"bottom";const C=getComputedStyle(this._menu).getPropertyValue("--bs-position").trim()==="end";return g.classList.contains("dropup")?C?S2:b2:C?T2:x2}_detectNavbar(){return this._element.closest(".navbar")!==null}_getOffset(){const{offset:g}=this._config;return typeof g=="string"?g.split(",").map(C=>Number.parseInt(C,10)):typeof g=="function"?C=>g(C,this._element):g}_getPopperConfig(){const g={placement:this._getPlacement(),modifiers:[{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"offset",options:{offset:this._getOffset()}}]};return(this._inNavbar||this._config.display==="static")&&(Ae.setDataAttribute(this._menu,"popper","static"),g.modifiers=[{name:"applyStyles",enabled:!1}]),{...g,...x(this._config.popperConfig,[void 0,g])}}_selectMenuItem({key:g,target:C}){const I=z.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",this._menu).filter(Z=>l(Z));I.length&&v(I,C,g===Hv,!I.includes(C)).focus()}static jQueryInterface(g){return this.each(function(){const C=hs.getOrCreateInstance(this,g);if(typeof g=="string"){if(C[g]===void 0)throw new TypeError(`No method named "${g}"`);C[g]()}})}static clearMenus(g){if(g.button===2||g.type==="keyup"&&g.key!=="Tab")return;const C=z.find(v2);for(const I of C){const Z=hs.getInstance(I);if(!Z||Z._config.autoClose===!1)continue;const Q=g.composedPath(),se=Q.includes(Z._menu);if(Q.includes(Z._element)||Z._config.autoClose==="inside"&&!se||Z._config.autoClose==="outside"&&se||Z._menu.contains(g.target)&&(g.type==="keyup"&&g.key==="Tab"||/input|select|option|textarea|form/i.test(g.target.tagName)))continue;const fe={relatedTarget:Z._element};g.type==="click"&&(fe.clickEvent=g),Z._completeHide(fe)}}static dataApiKeydownHandler(g){const C=/input|textarea/i.test(g.target.tagName),I=g.key==="Escape",Z=[h2,Hv].includes(g.key);if(!Z&&!I||C&&!I)return;g.preventDefault();const Q=this.matches(jo)?this:z.prev(this,jo)[0]||z.next(this,jo)[0]||z.findOne(jo,g.delegateTarget.parentNode),se=hs.getOrCreateInstance(Q);if(Z)return g.stopPropagation(),se.show(),void se._selectMenuItem(g);se._isShown()&&(g.stopPropagation(),se.hide(),Q.focus())}}j.on(document,jv,jo,hs.dataApiKeydownHandler),j.on(document,jv,id,hs.dataApiKeydownHandler),j.on(document,Xv,hs.clearMenus),j.on(document,E2,hs.clearMenus),j.on(document,Xv,jo,function(k){k.preventDefault(),hs.getOrCreateInstance(this).toggle()}),E(hs);const qv="backdrop",zv="show",Yv=`mousedown.bs.${qv}`,y2={className:"modal-backdrop",clickCallback:null,isAnimated:!1,isVisible:!0,rootElement:"body"},k2={className:"string",clickCallback:"(function|null)",isAnimated:"boolean",isVisible:"boolean",rootElement:"(element|string)"};class Jv extends De{constructor(g){super(),this._config=this._getConfig(g),this._isAppended=!1,this._element=null}static get Default(){return y2}static get DefaultType(){return k2}static get NAME(){return qv}show(g){if(!this._config.isVisible)return void x(g);this._append();const C=this._getElement();this._config.isAnimated&&f(C),C.classList.add(zv),this._emulateAnimation(()=>{x(g)})}hide(g){this._config.isVisible?(this._getElement().classList.remove(zv),this._emulateAnimation(()=>{this.dispose(),x(g)})):x(g)}dispose(){this._isAppended&&(j.off(this._element,Yv),this._element.remove(),this._isAppended=!1)}_getElement(){if(!this._element){const g=document.createElement("div");g.className=this._config.className,this._config.isAnimated&&g.classList.add("fade"),this._element=g}return this._element}_configAfterMerge(g){return g.rootElement=c(g.rootElement),g}_append(){if(this._isAppended)return;const g=this._getElement();this._config.rootElement.append(g),j.on(g,Yv,()=>{x(this._config.clickCallback)}),this._isAppended=!0}_emulateAnimation(g){S(g,this._getElement(),this._config.isAnimated)}}const sd=".bs.focustrap",D2=`focusin${sd}`,O2=`keydown.tab${sd}`,Zv="backward",P2={autofocus:!0,trapElement:null},I2={autofocus:"boolean",trapElement:"element"};class Kv extends De{constructor(g){super(),this._config=this._getConfig(g),this._isActive=!1,this._lastTabNavDirection=null}static get Default(){return P2}static get DefaultType(){return I2}static get NAME(){return"focustrap"}activate(){this._isActive||(this._config.autofocus&&this._config.trapElement.focus(),j.off(document,sd),j.on(document,D2,g=>this._handleFocusin(g)),j.on(document,O2,g=>this._handleKeydown(g)),this._isActive=!0)}deactivate(){this._isActive&&(this._isActive=!1,j.off(document,sd))}_handleFocusin(g){const{trapElement:C}=this._config;if(g.target===document||g.target===C||C.contains(g.target))return;const I=z.focusableChildren(C);I.length===0?C.focus():this._lastTabNavDirection===Zv?I[I.length-1].focus():I[0].focus()}_handleKeydown(g){g.key==="Tab"&&(this._lastTabNavDirection=g.shiftKey?Zv:"forward")}}const Qv=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",Gv=".sticky-top",rd="padding-right",_v="margin-right";class Lp{constructor(){this._element=document.body}getWidth(){const g=document.documentElement.clientWidth;return Math.abs(window.innerWidth-g)}hide(){const g=this.getWidth();this._disableOverFlow(),this._setElementAttributes(this._element,rd,C=>C+g),this._setElementAttributes(Qv,rd,C=>C+g),this._setElementAttributes(Gv,_v,C=>C-g)}reset(){this._resetElementAttributes(this._element,"overflow"),this._resetElementAttributes(this._element,rd),this._resetElementAttributes(Qv,rd),this._resetElementAttributes(Gv,_v)}isOverflowing(){return this.getWidth()>0}_disableOverFlow(){this._saveInitialAttribute(this._element,"overflow"),this._element.style.overflow="hidden"}_setElementAttributes(g,C,I){const Z=this.getWidth();this._applyManipulationCallback(g,Q=>{if(Q!==this._element&&window.innerWidth>Q.clientWidth+Z)return;this._saveInitialAttribute(Q,C);const se=window.getComputedStyle(Q).getPropertyValue(C);Q.style.setProperty(C,`${I(Number.parseFloat(se))}px`)})}_saveInitialAttribute(g,C){const I=g.style.getPropertyValue(C);I&&Ae.setDataAttribute(g,C,I)}_resetElementAttributes(g,C){this._applyManipulationCallback(g,I=>{const Z=Ae.getDataAttribute(I,C);Z!==null?(Ae.removeDataAttribute(I,C),I.style.setProperty(C,Z)):I.style.removeProperty(C)})}_applyManipulationCallback(g,C){if(a(g))C(g);else for(const I of z.find(g,this._element))C(I)}}const ji=".bs.modal",R2=`hide${ji}`,L2=`hidePrevented${ji}`,$v=`hidden${ji}`,eb=`show${ji}`,M2=`shown${ji}`,B2=`resize${ji}`,F2=`click.dismiss${ji}`,U2=`mousedown.dismiss${ji}`,V2=`keydown.dismiss${ji}`,W2=`click${ji}.data-api`,tb="modal-open",nb="show",Mp="modal-static",H2={backdrop:!0,focus:!0,keyboard:!0},X2={backdrop:"(boolean|string)",focus:"boolean",keyboard:"boolean"};class qo extends Me{constructor(g,C){super(g,C),this._dialog=z.findOne(".modal-dialog",this._element),this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._isShown=!1,this._isTransitioning=!1,this._scrollBar=new Lp,this._addEventListeners()}static get Default(){return H2}static get DefaultType(){return X2}static get NAME(){return"modal"}toggle(g){return this._isShown?this.hide():this.show(g)}show(g){this._isShown||this._isTransitioning||j.trigger(this._element,eb,{relatedTarget:g}).defaultPrevented||(this._isShown=!0,this._isTransitioning=!0,this._scrollBar.hide(),document.body.classList.add(tb),this._adjustDialog(),this._backdrop.show(()=>this._showElement(g)))}hide(){this._isShown&&!this._isTransitioning&&(j.trigger(this._element,R2).defaultPrevented||(this._isShown=!1,this._isTransitioning=!0,this._focustrap.deactivate(),this._element.classList.remove(nb),this._queueCallback(()=>this._hideModal(),this._element,this._isAnimated())))}dispose(){j.off(window,ji),j.off(this._dialog,ji),this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}handleUpdate(){this._adjustDialog()}_initializeBackDrop(){return new Jv({isVisible:!!this._config.backdrop,isAnimated:this._isAnimated()})}_initializeFocusTrap(){return new Kv({trapElement:this._element})}_showElement(g){document.body.contains(this._element)||document.body.append(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.scrollTop=0;const C=z.findOne(".modal-body",this._dialog);C&&(C.scrollTop=0),f(this._element),this._element.classList.add(nb),this._queueCallback(()=>{this._config.focus&&this._focustrap.activate(),this._isTransitioning=!1,j.trigger(this._element,M2,{relatedTarget:g})},this._dialog,this._isAnimated())}_addEventListeners(){j.on(this._element,V2,g=>{g.key==="Escape"&&(this._config.keyboard?this.hide():this._triggerBackdropTransition())}),j.on(window,B2,()=>{this._isShown&&!this._isTransitioning&&this._adjustDialog()}),j.on(this._element,U2,g=>{j.one(this._element,F2,C=>{this._element===g.target&&this._element===C.target&&(this._config.backdrop!=="static"?this._config.backdrop&&this.hide():this._triggerBackdropTransition())})})}_hideModal(){this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._backdrop.hide(()=>{document.body.classList.remove(tb),this._resetAdjustments(),this._scrollBar.reset(),j.trigger(this._element,$v)})}_isAnimated(){return this._element.classList.contains("fade")}_triggerBackdropTransition(){if(j.trigger(this._element,L2).defaultPrevented)return;const g=this._element.scrollHeight>document.documentElement.clientHeight,C=this._element.style.overflowY;C==="hidden"||this._element.classList.contains(Mp)||(g||(this._element.style.overflowY="hidden"),this._element.classList.add(Mp),this._queueCallback(()=>{this._element.classList.remove(Mp),this._queueCallback(()=>{this._element.style.overflowY=C},this._dialog)},this._dialog),this._element.focus())}_adjustDialog(){const g=this._element.scrollHeight>document.documentElement.clientHeight,C=this._scrollBar.getWidth(),I=C>0;if(I&&!g){const Z=b()?"paddingLeft":"paddingRight";this._element.style[Z]=`${C}px`}if(!I&&g){const Z=b()?"paddingRight":"paddingLeft";this._element.style[Z]=`${C}px`}}_resetAdjustments(){this._element.style.paddingLeft="",this._element.style.paddingRight=""}static jQueryInterface(g,C){return this.each(function(){const I=qo.getOrCreateInstance(this,g);if(typeof g=="string"){if(I[g]===void 0)throw new TypeError(`No method named "${g}"`);I[g](C)}})}}j.on(document,W2,'[data-bs-toggle="modal"]',function(k){const g=z.getElementFromSelector(this);["A","AREA"].includes(this.tagName)&&k.preventDefault(),j.one(g,eb,I=>{I.defaultPrevented||j.one(g,$v,()=>{l(this)&&this.focus()})});const C=z.findOne(".modal.show");C&&qo.getInstance(C).hide(),qo.getOrCreateInstance(g).toggle(this)}),me(qo),E(qo);const dr=".bs.offcanvas",ib=".data-api",j2=`load${dr}${ib}`,sb="show",rb="showing",ob="hiding",ab=".offcanvas.show",q2=`show${dr}`,z2=`shown${dr}`,Y2=`hide${dr}`,cb=`hidePrevented${dr}`,lb=`hidden${dr}`,J2=`resize${dr}`,Z2=`click${dr}${ib}`,K2=`keydown.dismiss${dr}`,Q2={backdrop:!0,keyboard:!0,scroll:!1},G2={backdrop:"(boolean|string)",keyboard:"boolean",scroll:"boolean"};class hr extends Me{constructor(g,C){super(g,C),this._isShown=!1,this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._addEventListeners()}static get Default(){return Q2}static get DefaultType(){return G2}static get NAME(){return"offcanvas"}toggle(g){return this._isShown?this.hide():this.show(g)}show(g){this._isShown||j.trigger(this._element,q2,{relatedTarget:g}).defaultPrevented||(this._isShown=!0,this._backdrop.show(),this._config.scroll||new Lp().hide(),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.classList.add(rb),this._queueCallback(()=>{this._config.scroll&&!this._config.backdrop||this._focustrap.activate(),this._element.classList.add(sb),this._element.classList.remove(rb),j.trigger(this._element,z2,{relatedTarget:g})},this._element,!0))}hide(){this._isShown&&(j.trigger(this._element,Y2).defaultPrevented||(this._focustrap.deactivate(),this._element.blur(),this._isShown=!1,this._element.classList.add(ob),this._backdrop.hide(),this._queueCallback(()=>{this._element.classList.remove(sb,ob),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._config.scroll||new Lp().reset(),j.trigger(this._element,lb)},this._element,!0)))}dispose(){this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}_initializeBackDrop(){const g=!!this._config.backdrop;return new Jv({className:"offcanvas-backdrop",isVisible:g,isAnimated:!0,rootElement:this._element.parentNode,clickCallback:g?()=>{this._config.backdrop!=="static"?this.hide():j.trigger(this._element,cb)}:null})}_initializeFocusTrap(){return new Kv({trapElement:this._element})}_addEventListeners(){j.on(this._element,K2,g=>{g.key==="Escape"&&(this._config.keyboard?this.hide():j.trigger(this._element,cb))})}static jQueryInterface(g){return this.each(function(){const C=hr.getOrCreateInstance(this,g);if(typeof g=="string"){if(C[g]===void 0||g.startsWith("_")||g==="constructor")throw new TypeError(`No method named "${g}"`);C[g](this)}})}}j.on(document,Z2,'[data-bs-toggle="offcanvas"]',function(k){const g=z.getElementFromSelector(this);if(["A","AREA"].includes(this.tagName)&&k.preventDefault(),u(this))return;j.one(g,lb,()=>{l(this)&&this.focus()});const C=z.findOne(ab);C&&C!==g&&hr.getInstance(C).hide(),hr.getOrCreateInstance(g).toggle(this)}),j.on(window,j2,()=>{for(const k of z.find(ab))hr.getOrCreateInstance(k).show()}),j.on(window,J2,()=>{for(const k of z.find("[aria-modal][class*=show][class*=offcanvas-]"))getComputedStyle(k).position!=="fixed"&&hr.getOrCreateInstance(k).hide()}),me(hr),E(hr);const ub={"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],dd:[],div:[],dl:[],dt:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},_2=new Set(["background","cite","href","itemtype","longdesc","poster","src","xlink:href"]),$2=/^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i,ek=(k,g)=>{const C=k.nodeName.toLowerCase();return g.includes(C)?!_2.has(C)||!!$2.test(k.nodeValue):g.filter(I=>I instanceof RegExp).some(I=>I.test(C))},tk={allowList:ub,content:{},extraClass:"",html:!1,sanitize:!0,sanitizeFn:null,template:"<div></div>"},nk={allowList:"object",content:"object",extraClass:"(string|function)",html:"boolean",sanitize:"boolean",sanitizeFn:"(null|function)",template:"string"},ik={entry:"(string|element|function|null)",selector:"(string|element)"};class sk extends De{constructor(g){super(),this._config=this._getConfig(g)}static get Default(){return tk}static get DefaultType(){return nk}static get NAME(){return"TemplateFactory"}getContent(){return Object.values(this._config.content).map(g=>this._resolvePossibleFunction(g)).filter(Boolean)}hasContent(){return this.getContent().length>0}changeContent(g){return this._checkContent(g),this._config.content={...this._config.content,...g},this}toHtml(){const g=document.createElement("div");g.innerHTML=this._maybeSanitize(this._config.template);for(const[Z,Q]of Object.entries(this._config.content))this._setContent(g,Q,Z);const C=g.children[0],I=this._resolvePossibleFunction(this._config.extraClass);return I&&C.classList.add(...I.split(" ")),C}_typeCheckConfig(g){super._typeCheckConfig(g),this._checkContent(g.content)}_checkContent(g){for(const[C,I]of Object.entries(g))super._typeCheckConfig({selector:C,entry:I},ik)}_setContent(g,C,I){const Z=z.findOne(I,g);Z&&((C=this._resolvePossibleFunction(C))?a(C)?this._putElementInTemplate(c(C),Z):this._config.html?Z.innerHTML=this._maybeSanitize(C):Z.textContent=C:Z.remove())}_maybeSanitize(g){return this._config.sanitize?function(C,I,Z){if(!C.length)return C;if(Z&&typeof Z=="function")return Z(C);const Q=new window.DOMParser().parseFromString(C,"text/html"),se=[].concat(...Q.body.querySelectorAll("*"));for(const fe of se){const Te=fe.nodeName.toLowerCase();if(!Object.keys(I).includes(Te)){fe.remove();continue}const Pe=[].concat(...fe.attributes),Ie=[].concat(I["*"]||[],I[Te]||[]);for(const ke of Pe)ek(ke,Ie)||fe.removeAttribute(ke.nodeName)}return Q.body.innerHTML}(g,this._config.allowList,this._config.sanitizeFn):g}_resolvePossibleFunction(g){return x(g,[void 0,this])}_putElementInTemplate(g,C){if(this._config.html)return C.innerHTML="",void C.append(g);C.textContent=g.textContent}}const rk=new Set(["sanitize","allowList","sanitizeFn"]),Bp="fade",od="show",ok=".tooltip-inner",db=".modal",hb="hide.bs.modal",hl="hover",Fp="focus",ak={AUTO:"auto",TOP:"top",RIGHT:b()?"left":"right",BOTTOM:"bottom",LEFT:b()?"right":"left"},ck={allowList:ub,animation:!0,boundary:"clippingParents",container:!1,customClass:"",delay:0,fallbackPlacements:["top","right","bottom","left"],html:!1,offset:[0,6],placement:"top",popperConfig:null,sanitize:!0,sanitizeFn:null,selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',title:"",trigger:"hover focus"},lk={allowList:"object",animation:"boolean",boundary:"(string|element)",container:"(string|element|boolean)",customClass:"(string|function)",delay:"(number|object)",fallbackPlacements:"array",html:"boolean",offset:"(array|string|function)",placement:"(string|function)",popperConfig:"(null|object|function)",sanitize:"boolean",sanitizeFn:"(null|function)",selector:"(string|boolean)",template:"string",title:"(string|element|function)",trigger:"string"};class zo extends Me{constructor(g,C){if(Vv===void 0)throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org/docs/v2/)");super(g,C),this._isEnabled=!0,this._timeout=0,this._isHovered=null,this._activeTrigger={},this._popper=null,this._templateFactory=null,this._newContent=null,this.tip=null,this._setListeners(),this._config.selector||this._fixTitle()}static get Default(){return ck}static get DefaultType(){return lk}static get NAME(){return"tooltip"}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}toggleEnabled(){this._isEnabled=!this._isEnabled}toggle(){this._isEnabled&&(this._isShown()?this._leave():this._enter())}dispose(){clearTimeout(this._timeout),j.off(this._element.closest(db),hb,this._hideModalHandler),this._element.getAttribute("data-bs-original-title")&&this._element.setAttribute("title",this._element.getAttribute("data-bs-original-title")),this._disposePopper(),super.dispose()}show(){if(this._element.style.display==="none")throw new Error("Please use show on visible elements");if(!this._isWithContent()||!this._isEnabled)return;const g=j.trigger(this._element,this.constructor.eventName("show")),C=(d(this._element)||this._element.ownerDocument.documentElement).contains(this._element);if(g.defaultPrevented||!C)return;this._disposePopper();const I=this._getTipElement();this._element.setAttribute("aria-describedby",I.getAttribute("id"));const{container:Z}=this._config;if(this._element.ownerDocument.documentElement.contains(this.tip)||(Z.append(I),j.trigger(this._element,this.constructor.eventName("inserted"))),this._popper=this._createPopper(I),I.classList.add(od),"ontouchstart"in document.documentElement)for(const Q of[].concat(...document.body.children))j.on(Q,"mouseover",h);this._queueCallback(()=>{j.trigger(this._element,this.constructor.eventName("shown")),this._isHovered===!1&&this._leave(),this._isHovered=!1},this.tip,this._isAnimated())}hide(){if(this._isShown()&&!j.trigger(this._element,this.constructor.eventName("hide")).defaultPrevented){if(this._getTipElement().classList.remove(od),"ontouchstart"in document.documentElement)for(const g of[].concat(...document.body.children))j.off(g,"mouseover",h);this._activeTrigger.click=!1,this._activeTrigger[Fp]=!1,this._activeTrigger[hl]=!1,this._isHovered=null,this._queueCallback(()=>{this._isWithActiveTrigger()||(this._isHovered||this._disposePopper(),this._element.removeAttribute("aria-describedby"),j.trigger(this._element,this.constructor.eventName("hidden")))},this.tip,this._isAnimated())}}update(){this._popper&&this._popper.update()}_isWithContent(){return!!this._getTitle()}_getTipElement(){return this.tip||(this.tip=this._createTipElement(this._newContent||this._getContentForTemplate())),this.tip}_createTipElement(g){const C=this._getTemplateFactory(g).toHtml();if(!C)return null;C.classList.remove(Bp,od),C.classList.add(`bs-${this.constructor.NAME}-auto`);const I=(Z=>{do Z+=Math.floor(1e6*Math.random());while(document.getElementById(Z));return Z})(this.constructor.NAME).toString();return C.setAttribute("id",I),this._isAnimated()&&C.classList.add(Bp),C}setContent(g){this._newContent=g,this._isShown()&&(this._disposePopper(),this.show())}_getTemplateFactory(g){return this._templateFactory?this._templateFactory.changeContent(g):this._templateFactory=new sk({...this._config,content:g,extraClass:this._resolvePossibleFunction(this._config.customClass)}),this._templateFactory}_getContentForTemplate(){return{[ok]:this._getTitle()}}_getTitle(){return this._resolvePossibleFunction(this._config.title)||this._element.getAttribute("data-bs-original-title")}_initializeOnDelegatedTarget(g){return this.constructor.getOrCreateInstance(g.delegateTarget,this._getDelegateConfig())}_isAnimated(){return this._config.animation||this.tip&&this.tip.classList.contains(Bp)}_isShown(){return this.tip&&this.tip.classList.contains(od)}_createPopper(g){const C=x(this._config.placement,[this,g,this._element]),I=ak[C.toUpperCase()];return Ip(this._element,g,this._getPopperConfig(I))}_getOffset(){const{offset:g}=this._config;return typeof g=="string"?g.split(",").map(C=>Number.parseInt(C,10)):typeof g=="function"?C=>g(C,this._element):g}_resolvePossibleFunction(g){return x(g,[this._element,this._element])}_getPopperConfig(g){const C={placement:g,modifiers:[{name:"flip",options:{fallbackPlacements:this._config.fallbackPlacements}},{name:"offset",options:{offset:this._getOffset()}},{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"arrow",options:{element:`.${this.constructor.NAME}-arrow`}},{name:"preSetPlacement",enabled:!0,phase:"beforeMain",fn:I=>{this._getTipElement().setAttribute("data-popper-placement",I.state.placement)}}]};return{...C,...x(this._config.popperConfig,[void 0,C])}}_setListeners(){const g=this._config.trigger.split(" ");for(const C of g)if(C==="click")j.on(this._element,this.constructor.eventName("click"),this._config.selector,I=>{this._initializeOnDelegatedTarget(I).toggle()});else if(C!=="manual"){const I=C===hl?this.constructor.eventName("mouseenter"):this.constructor.eventName("focusin"),Z=C===hl?this.constructor.eventName("mouseleave"):this.constructor.eventName("focusout");j.on(this._element,I,this._config.selector,Q=>{const se=this._initializeOnDelegatedTarget(Q);se._activeTrigger[Q.type==="focusin"?Fp:hl]=!0,se._enter()}),j.on(this._element,Z,this._config.selector,Q=>{const se=this._initializeOnDelegatedTarget(Q);se._activeTrigger[Q.type==="focusout"?Fp:hl]=se._element.contains(Q.relatedTarget),se._leave()})}this._hideModalHandler=()=>{this._element&&this.hide()},j.on(this._element.closest(db),hb,this._hideModalHandler)}_fixTitle(){const g=this._element.getAttribute("title");g&&(this._element.getAttribute("aria-label")||this._element.textContent.trim()||this._element.setAttribute("aria-label",g),this._element.setAttribute("data-bs-original-title",g),this._element.removeAttribute("title"))}_enter(){this._isShown()||this._isHovered?this._isHovered=!0:(this._isHovered=!0,this._setTimeout(()=>{this._isHovered&&this.show()},this._config.delay.show))}_leave(){this._isWithActiveTrigger()||(this._isHovered=!1,this._setTimeout(()=>{this._isHovered||this.hide()},this._config.delay.hide))}_setTimeout(g,C){clearTimeout(this._timeout),this._timeout=setTimeout(g,C)}_isWithActiveTrigger(){return Object.values(this._activeTrigger).includes(!0)}_getConfig(g){const C=Ae.getDataAttributes(this._element);for(const I of Object.keys(C))rk.has(I)&&delete C[I];return g={...C,...typeof g=="object"&&g?g:{}},g=this._mergeConfigObj(g),g=this._configAfterMerge(g),this._typeCheckConfig(g),g}_configAfterMerge(g){return g.container=g.container===!1?document.body:c(g.container),typeof g.delay=="number"&&(g.delay={show:g.delay,hide:g.delay}),typeof g.title=="number"&&(g.title=g.title.toString()),typeof g.content=="number"&&(g.content=g.content.toString()),g}_getDelegateConfig(){const g={};for(const[C,I]of Object.entries(this._config))this.constructor.Default[C]!==I&&(g[C]=I);return g.selector=!1,g.trigger="manual",g}_disposePopper(){this._popper&&(this._popper.destroy(),this._popper=null),this.tip&&(this.tip.remove(),this.tip=null)}static jQueryInterface(g){return this.each(function(){const C=zo.getOrCreateInstance(this,g);if(typeof g=="string"){if(C[g]===void 0)throw new TypeError(`No method named "${g}"`);C[g]()}})}}E(zo);const uk=".popover-header",dk=".popover-body",hk={...zo.Default,content:"",offset:[0,8],placement:"right",template:'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',trigger:"click"},fk={...zo.DefaultType,content:"(null|string|element|function)"};class ad extends zo{static get Default(){return hk}static get DefaultType(){return fk}static get NAME(){return"popover"}_isWithContent(){return this._getTitle()||this._getContent()}_getContentForTemplate(){return{[uk]:this._getTitle(),[dk]:this._getContent()}}_getContent(){return this._resolvePossibleFunction(this._config.content)}static jQueryInterface(g){return this.each(function(){const C=ad.getOrCreateInstance(this,g);if(typeof g=="string"){if(C[g]===void 0)throw new TypeError(`No method named "${g}"`);C[g]()}})}}E(ad);const Up=".bs.scrollspy",pk=`activate${Up}`,fb=`click${Up}`,mk=`load${Up}.data-api`,qa="active",Vp="[href]",pb=".nav-link",gk=`${pb}, .nav-item > ${pb}, .list-group-item`,Ek={offset:null,rootMargin:"0px 0px -25%",smoothScroll:!1,target:null,threshold:[.1,.5,1]},vk={offset:"(number|null)",rootMargin:"string",smoothScroll:"boolean",target:"element",threshold:"array"};class fl extends Me{constructor(g,C){super(g,C),this._targetLinks=new Map,this._observableSections=new Map,this._rootElement=getComputedStyle(this._element).overflowY==="visible"?null:this._element,this._activeTarget=null,this._observer=null,this._previousScrollData={visibleEntryTop:0,parentScrollTop:0},this.refresh()}static get Default(){return Ek}static get DefaultType(){return vk}static get NAME(){return"scrollspy"}refresh(){this._initializeTargetsAndObservables(),this._maybeEnableSmoothScroll(),this._observer?this._observer.disconnect():this._observer=this._getNewObserver();for(const g of this._observableSections.values())this._observer.observe(g)}dispose(){this._observer.disconnect(),super.dispose()}_configAfterMerge(g){return g.target=c(g.target)||document.body,g.rootMargin=g.offset?`${g.offset}px 0px -30%`:g.rootMargin,typeof g.threshold=="string"&&(g.threshold=g.threshold.split(",").map(C=>Number.parseFloat(C))),g}_maybeEnableSmoothScroll(){this._config.smoothScroll&&(j.off(this._config.target,fb),j.on(this._config.target,fb,Vp,g=>{const C=this._observableSections.get(g.target.hash);if(C){g.preventDefault();const I=this._rootElement||window,Z=C.offsetTop-this._element.offsetTop;if(I.scrollTo)return void I.scrollTo({top:Z,behavior:"smooth"});I.scrollTop=Z}}))}_getNewObserver(){const g={root:this._rootElement,threshold:this._config.threshold,rootMargin:this._config.rootMargin};return new IntersectionObserver(C=>this._observerCallback(C),g)}_observerCallback(g){const C=se=>this._targetLinks.get(`#${se.target.id}`),I=se=>{this._previousScrollData.visibleEntryTop=se.target.offsetTop,this._process(C(se))},Z=(this._rootElement||document.documentElement).scrollTop,Q=Z>=this._previousScrollData.parentScrollTop;this._previousScrollData.parentScrollTop=Z;for(const se of g){if(!se.isIntersecting){this._activeTarget=null,this._clearActiveClass(C(se));continue}const fe=se.target.offsetTop>=this._previousScrollData.visibleEntryTop;if(Q&&fe){if(I(se),!Z)return}else Q||fe||I(se)}}_initializeTargetsAndObservables(){this._targetLinks=new Map,this._observableSections=new Map;const g=z.find(Vp,this._config.target);for(const C of g){if(!C.hash||u(C))continue;const I=z.findOne(decodeURI(C.hash),this._element);l(I)&&(this._targetLinks.set(decodeURI(C.hash),C),this._observableSections.set(C.hash,I))}}_process(g){this._activeTarget!==g&&(this._clearActiveClass(this._config.target),this._activeTarget=g,g.classList.add(qa),this._activateParents(g),j.trigger(this._element,pk,{relatedTarget:g}))}_activateParents(g){if(g.classList.contains("dropdown-item"))z.findOne(".dropdown-toggle",g.closest(".dropdown")).classList.add(qa);else for(const C of z.parents(g,".nav, .list-group"))for(const I of z.prev(C,gk))I.classList.add(qa)}_clearActiveClass(g){g.classList.remove(qa);const C=z.find(`${Vp}.${qa}`,g);for(const I of C)I.classList.remove(qa)}static jQueryInterface(g){return this.each(function(){const C=fl.getOrCreateInstance(this,g);if(typeof g=="string"){if(C[g]===void 0||g.startsWith("_")||g==="constructor")throw new TypeError(`No method named "${g}"`);C[g]()}})}}j.on(window,mk,()=>{for(const k of z.find('[data-bs-spy="scroll"]'))fl.getOrCreateInstance(k)}),E(fl);const Yo=".bs.tab",bk=`hide${Yo}`,Sk=`hidden${Yo}`,xk=`show${Yo}`,Tk=`shown${Yo}`,Ck=`click${Yo}`,wk=`keydown${Yo}`,Ak=`load${Yo}`,Nk="ArrowLeft",mb="ArrowRight",yk="ArrowUp",gb="ArrowDown",Wp="Home",Eb="End",Jo="active",vb="fade",Hp="show",bb=".dropdown-toggle",Xp=`:not(${bb})`,Sb='[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]',jp=`.nav-link${Xp}, .list-group-item${Xp}, [role="tab"]${Xp}, ${Sb}`,kk=`.${Jo}[data-bs-toggle="tab"], .${Jo}[data-bs-toggle="pill"], .${Jo}[data-bs-toggle="list"]`;class Zo extends Me{constructor(g){super(g),this._parent=this._element.closest('.list-group, .nav, [role="tablist"]'),this._parent&&(this._setInitialAttributes(this._parent,this._getChildren()),j.on(this._element,wk,C=>this._keydown(C)))}static get NAME(){return"tab"}show(){const g=this._element;if(this._elemIsActive(g))return;const C=this._getActiveElem(),I=C?j.trigger(C,bk,{relatedTarget:g}):null;j.trigger(g,xk,{relatedTarget:C}).defaultPrevented||I&&I.defaultPrevented||(this._deactivate(C,g),this._activate(g,C))}_activate(g,C){g&&(g.classList.add(Jo),this._activate(z.getElementFromSelector(g)),this._queueCallback(()=>{g.getAttribute("role")==="tab"?(g.removeAttribute("tabindex"),g.setAttribute("aria-selected",!0),this._toggleDropDown(g,!0),j.trigger(g,Tk,{relatedTarget:C})):g.classList.add(Hp)},g,g.classList.contains(vb)))}_deactivate(g,C){g&&(g.classList.remove(Jo),g.blur(),this._deactivate(z.getElementFromSelector(g)),this._queueCallback(()=>{g.getAttribute("role")==="tab"?(g.setAttribute("aria-selected",!1),g.setAttribute("tabindex","-1"),this._toggleDropDown(g,!1),j.trigger(g,Sk,{relatedTarget:C})):g.classList.remove(Hp)},g,g.classList.contains(vb)))}_keydown(g){if(![Nk,mb,yk,gb,Wp,Eb].includes(g.key))return;g.stopPropagation(),g.preventDefault();const C=this._getChildren().filter(Z=>!u(Z));let I;if([Wp,Eb].includes(g.key))I=C[g.key===Wp?0:C.length-1];else{const Z=[mb,gb].includes(g.key);I=v(C,g.target,Z,!0)}I&&(I.focus({preventScroll:!0}),Zo.getOrCreateInstance(I).show())}_getChildren(){return z.find(jp,this._parent)}_getActiveElem(){return this._getChildren().find(g=>this._elemIsActive(g))||null}_setInitialAttributes(g,C){this._setAttributeIfNotExists(g,"role","tablist");for(const I of C)this._setInitialAttributesOnChild(I)}_setInitialAttributesOnChild(g){g=this._getInnerElement(g);const C=this._elemIsActive(g),I=this._getOuterElement(g);g.setAttribute("aria-selected",C),I!==g&&this._setAttributeIfNotExists(I,"role","presentation"),C||g.setAttribute("tabindex","-1"),this._setAttributeIfNotExists(g,"role","tab"),this._setInitialAttributesOnTargetPanel(g)}_setInitialAttributesOnTargetPanel(g){const C=z.getElementFromSelector(g);C&&(this._setAttributeIfNotExists(C,"role","tabpanel"),g.id&&this._setAttributeIfNotExists(C,"aria-labelledby",`${g.id}`))}_toggleDropDown(g,C){const I=this._getOuterElement(g);if(!I.classList.contains("dropdown"))return;const Z=(Q,se)=>{const fe=z.findOne(Q,I);fe&&fe.classList.toggle(se,C)};Z(bb,Jo),Z(".dropdown-menu",Hp),I.setAttribute("aria-expanded",C)}_setAttributeIfNotExists(g,C,I){g.hasAttribute(C)||g.setAttribute(C,I)}_elemIsActive(g){return g.classList.contains(Jo)}_getInnerElement(g){return g.matches(jp)?g:z.findOne(jp,g)}_getOuterElement(g){return g.closest(".nav-item, .list-group-item")||g}static jQueryInterface(g){return this.each(function(){const C=Zo.getOrCreateInstance(this);if(typeof g=="string"){if(C[g]===void 0||g.startsWith("_")||g==="constructor")throw new TypeError(`No method named "${g}"`);C[g]()}})}}j.on(document,Ck,Sb,function(k){["A","AREA"].includes(this.tagName)&&k.preventDefault(),u(this)||Zo.getOrCreateInstance(this).show()}),j.on(window,Ak,()=>{for(const k of z.find(kk))Zo.getOrCreateInstance(k)}),E(Zo);const Jr=".bs.toast",Dk=`mouseover${Jr}`,Ok=`mouseout${Jr}`,Pk=`focusin${Jr}`,Ik=`focusout${Jr}`,Rk=`hide${Jr}`,Lk=`hidden${Jr}`,Mk=`show${Jr}`,Bk=`shown${Jr}`,xb="hide",cd="show",ld="showing",Fk={animation:"boolean",autohide:"boolean",delay:"number"},Uk={animation:!0,autohide:!0,delay:5e3};class pl extends Me{constructor(g,C){super(g,C),this._timeout=null,this._hasMouseInteraction=!1,this._hasKeyboardInteraction=!1,this._setListeners()}static get Default(){return Uk}static get DefaultType(){return Fk}static get NAME(){return"toast"}show(){j.trigger(this._element,Mk).defaultPrevented||(this._clearTimeout(),this._config.animation&&this._element.classList.add("fade"),this._element.classList.remove(xb),f(this._element),this._element.classList.add(cd,ld),this._queueCallback(()=>{this._element.classList.remove(ld),j.trigger(this._element,Bk),this._maybeScheduleHide()},this._element,this._config.animation))}hide(){this.isShown()&&(j.trigger(this._element,Rk).defaultPrevented||(this._element.classList.add(ld),this._queueCallback(()=>{this._element.classList.add(xb),this._element.classList.remove(ld,cd),j.trigger(this._element,Lk)},this._element,this._config.animation)))}dispose(){this._clearTimeout(),this.isShown()&&this._element.classList.remove(cd),super.dispose()}isShown(){return this._element.classList.contains(cd)}_maybeScheduleHide(){this._config.autohide&&(this._hasMouseInteraction||this._hasKeyboardInteraction||(this._timeout=setTimeout(()=>{this.hide()},this._config.delay)))}_onInteraction(g,C){switch(g.type){case"mouseover":case"mouseout":this._hasMouseInteraction=C;break;case"focusin":case"focusout":this._hasKeyboardInteraction=C}if(C)return void this._clearTimeout();const I=g.relatedTarget;this._element===I||this._element.contains(I)||this._maybeScheduleHide()}_setListeners(){j.on(this._element,Dk,g=>this._onInteraction(g,!0)),j.on(this._element,Ok,g=>this._onInteraction(g,!1)),j.on(this._element,Pk,g=>this._onInteraction(g,!0)),j.on(this._element,Ik,g=>this._onInteraction(g,!1))}_clearTimeout(){clearTimeout(this._timeout),this._timeout=null}static jQueryInterface(g){return this.each(function(){const C=pl.getOrCreateInstance(this,g);if(typeof g=="string"){if(C[g]===void 0)throw new TypeError(`No method named "${g}"`);C[g](this)}})}}return me(pl),E(pl),{Alert:F,Button:H,Carousel:Ra,Collapse:Ma,Dropdown:hs,Modal:qo,Offcanvas:hr,Popover:ad,ScrollSpy:fl,Tab:Zo,Toast:pl,Tooltip:zo}})}(rh)),rh.exports}Mq();const fp=bh(EM),Bq="187897456683-j9oaks1v1tkd9pde73g65871fgj7k8sn.apps.googleusercontent.com",Fq=JI();fp.use(Ej,{clientId:Bq});fp.use(Fq);fp.use(Rq);fp.mount("#app");
